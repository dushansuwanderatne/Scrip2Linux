// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SCRIPAU.Automation.Reporting
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ESSReportingGold")]
    public partial class ESSReportingGoldFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ESSReportingGold.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ESSReportingGold", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Employee_Extract_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESS_EmployeeExtractReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42419")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "", "99999999999", "N", "N", "N", "N", "N", "S", ",", "Y", "", "A", null)]
        public virtual void ESS_Employee_Extract_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string selcls1, 
                    string selcls2, 
                    string selgrp1, 
                    string selgrp2, 
                    string exd1, 
                    string unitBalanceFrom, 
                    string unitBalanceTO, 
                    string holderTotalsOnly, 
                    string classCode, 
                    string registerCode, 
                    string registerType, 
                    string awardDate, 
                    string select, 
                    string fieldSeparator, 
                    string textDelimiterReq, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESS_EmployeeExtractReport_Gold",
                    "CPU_AUTO_R",
                    "42419"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Employee_Extract_Report_Goldcopy", @__tags);
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
  testRunner.And("In ERS00100 I click on: \"employee extract report\" within the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table1.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 13
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table1, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table2.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 16
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table3.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 19
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table4.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 22
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table5.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 25
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table5, "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table6.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 28
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table6, "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selcls1",
                        "Selcls2",
                        "Selgrp1",
                        "Selgrp2",
                        "Exd1",
                        "UnitBalanceFrom",
                        "UnitBalanceTO",
                        "HolderTotalsOnly"});
            table7.AddRow(new string[] {
                        string.Format("{0}", selcls1),
                        string.Format("{0}", selcls2),
                        string.Format("{0}", selgrp1),
                        string.Format("{0}", selgrp2),
                        string.Format("{0}", exd1),
                        string.Format("{0}", unitBalanceFrom),
                        string.Format("{0}", unitBalanceTO),
                        string.Format("{0}", holderTotalsOnly)});
#line 31
  testRunner.And("In ERS01013 I continue with the following details:", ((string)(null)), table7, "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClassCode",
                        "RegisterCode",
                        "RegisterType",
                        "AwardDate"});
            table8.AddRow(new string[] {
                        string.Format("{0}", classCode),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", registerType),
                        string.Format("{0}", awardDate)});
#line 34
  testRunner.And("In ERS01016 I continue with the following details:", ((string)(null)), table8, "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Select",
                        "FieldSeparator",
                        "TextDelimiterReq"});
            table9.AddRow(new string[] {
                        string.Format("{0}", select),
                        string.Format("{0}", fieldSeparator),
                        string.Format("{0}", textDelimiterReq)});
#line 37
  testRunner.And("In ERS01017 I continue with the following details:", ((string)(null)), table9, "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table10.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 40
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table10, "And ");
#line 43
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table11.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 44
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table11, "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table12.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 47
  testRunner.Then("I copy output files to local", ((string)(null)), table12, "Then ");
#line 50
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Purchase_Reconciliation_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESS_PurchaseReconciliationReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42420")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "DEP", "", "11A", "", "EP", "", "01/01/2010", "01/01/2015", "S", "B", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "N", "", "A", null)]
        public virtual void ESS_Purchase_Reconciliation_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string selcls1, 
                    string selcls2, 
                    string selreg1, 
                    string selreg2, 
                    string regType1, 
                    string regType2, 
                    string dateFrom, 
                    string dateTO, 
                    string summaryDetailInd, 
                    string contributionTypeInd, 
                    string contractedSvgsInd, 
                    string svgsContribDiffInd, 
                    string dispResidualsInd, 
                    string dispUnitBalanceInd, 
                    string dispSharePriceInd, 
                    string dispShareCostInd, 
                    string dispUnitsAllocInd, 
                    string ers01004RecContribDetsInd, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESS_PurchaseReconciliationReport_Gold",
                    "CPU_AUTO_R",
                    "42420"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Purchase_Reconciliation_Report_Goldcopy", @__tags);
#line 63
this.ScenarioSetup(scenarioInfo);
#line 64
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 65
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 66
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
  testRunner.And("In ERS00100 I click on: \"purchase reconciliation report\" within the ESS Reporting" +
                    " Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table13.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 69
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table13, "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table14.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 72
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table14, "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table15.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 75
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table15, "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table16.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 78
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table16, "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table17.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 81
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table17, "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table18.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 84
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table18, "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selcls1",
                        "Selcls2",
                        "Selreg1",
                        "Selreg2",
                        "RegType1",
                        "RegType2",
                        "DateFrom",
                        "DateTO",
                        "SummaryDetailInd",
                        "ContributionTypeInd",
                        "ContractedSvgsInd",
                        "SvgsContribDiffInd",
                        "DispResidualsInd",
                        "DispUnitBalanceInd",
                        "DispSharePriceInd",
                        "DispShareCostInd",
                        "DispUnitsAllocInd",
                        "Ers01004RecContribDetsInd"});
            table19.AddRow(new string[] {
                        string.Format("{0}", selcls1),
                        string.Format("{0}", selcls2),
                        string.Format("{0}", selreg1),
                        string.Format("{0}", selreg2),
                        string.Format("{0}", regType1),
                        string.Format("{0}", regType2),
                        string.Format("{0}", dateFrom),
                        string.Format("{0}", dateTO),
                        string.Format("{0}", summaryDetailInd),
                        string.Format("{0}", contributionTypeInd),
                        string.Format("{0}", contractedSvgsInd),
                        string.Format("{0}", svgsContribDiffInd),
                        string.Format("{0}", dispResidualsInd),
                        string.Format("{0}", dispUnitBalanceInd),
                        string.Format("{0}", dispSharePriceInd),
                        string.Format("{0}", dispShareCostInd),
                        string.Format("{0}", dispUnitsAllocInd),
                        string.Format("{0}", ers01004RecContribDetsInd)});
#line 87
  testRunner.And("In ERS01004 I continue with the following details:", ((string)(null)), table19, "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table20.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 90
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table20, "And ");
#line 93
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table21.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 94
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table21, "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table22.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 97
  testRunner.Then("I copy output files to local", ((string)(null)), table22, "Then ");
#line 100
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 101
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Contribution_File_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESS_ContributionFileReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42418")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "DEP", "", "", "", "", "A", "", "A", null)]
        public virtual void ESS_Contribution_File_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string selcls, 
                    string selreg1, 
                    string selreg2, 
                    string regType1, 
                    string regType2, 
                    string participants, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESS_ContributionFileReport_Gold",
                    "CPU_AUTO_R",
                    "42418"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Contribution_File_Report_Goldcopy", @__tags);
#line 114
this.ScenarioSetup(scenarioInfo);
#line 115
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 116
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 117
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 118
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 119
  testRunner.And("In ERS00100 I click on: \"contribution file report\" within the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table23.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 120
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table23, "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table24.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 123
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table24, "And ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table25.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 126
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table25, "And ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table26.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 129
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table26, "And ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table27.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 132
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table27, "And ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table28.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 135
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table28, "And ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selcls",
                        "Selreg1",
                        "Selreg2",
                        "RegType1",
                        "RegType2",
                        "Participants"});
            table29.AddRow(new string[] {
                        string.Format("{0}", selcls),
                        string.Format("{0}", selreg1),
                        string.Format("{0}", selreg2),
                        string.Format("{0}", regType1),
                        string.Format("{0}", regType2),
                        string.Format("{0}", participants)});
#line 138
  testRunner.And("In ERS01009 I continue with the following details:", ((string)(null)), table29, "And ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table30.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 141
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table30, "And ");
#line 144
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table31.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 145
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table31, "And ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table32.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 148
  testRunner.Then("I copy output files to local", ((string)(null)), table32, "Then ");
#line 151
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 152
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Loan_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSLoanReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42421")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "", "R", "4400", "4405", "", "", "N", "N", "", "A", null)]
        public virtual void ESS_Loan_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string class1, 
                    string class2, 
                    string ers01005Selgrp1, 
                    string ers01005Selgrp2, 
                    string reg1, 
                    string reg2, 
                    string runORDateRange, 
                    string runRangeFrom, 
                    string runRangeTO, 
                    string transDateFrom, 
                    string transDateTO, 
                    string lapseDate, 
                    string totalsOnly, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSLoanReport_Gold",
                    "CPU_AUTO_R",
                    "42421"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Loan_Report_Goldcopy", @__tags);
#line 163
this.ScenarioSetup(scenarioInfo);
#line 164
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 165
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 166
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 167
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 168
  testRunner.And("In ERS00100 I click on: \"loan report\" within the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table33.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 169
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table33, "And ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table34.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 172
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table34, "And ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table35.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 175
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table35, "And ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table36.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 178
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table36, "And ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table37.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 181
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table37, "And ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table38.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 184
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table38, "And ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Class1",
                        "Class2",
                        "Ers01005Selgrp1",
                        "Ers01005Selgrp2",
                        "Reg1",
                        "Reg2",
                        "RunORDateRange",
                        "RunRangeFrom",
                        "RunRangeTO",
                        "TransDateFrom",
                        "TransDateTO",
                        "LapseDate",
                        "TotalsOnly"});
            table39.AddRow(new string[] {
                        string.Format("{0}", class1),
                        string.Format("{0}", class2),
                        string.Format("{0}", ers01005Selgrp1),
                        string.Format("{0}", ers01005Selgrp2),
                        string.Format("{0}", reg1),
                        string.Format("{0}", reg2),
                        string.Format("{0}", runORDateRange),
                        string.Format("{0}", runRangeFrom),
                        string.Format("{0}", runRangeTO),
                        string.Format("{0}", transDateFrom),
                        string.Format("{0}", transDateTO),
                        string.Format("{0}", lapseDate),
                        string.Format("{0}", totalsOnly)});
#line 187
  testRunner.And("In ERS01005 I continue with the following details:", ((string)(null)), table39, "And ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table40.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 190
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table40, "And ");
#line 193
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table41.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 194
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table41, "And ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table42.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 197
  testRunner.Then("I copy output files to local", ((string)(null)), table42, "Then ");
#line 200
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 201
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Transaction_Movement_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSTransactionMovementReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42422")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "", "", "", "R", "4400", "4405", "", "", "", "", "A", null)]
        public virtual void ESS_Transaction_Movement_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string selcls1, 
                    string selcls2, 
                    string selgrp1, 
                    string selgrp2, 
                    string selreg1, 
                    string selreg2, 
                    string regType1, 
                    string regType2, 
                    string runORDateRange, 
                    string runRangeFrom, 
                    string runRangeTO, 
                    string transDateFrom, 
                    string transDateTO, 
                    string summaryReportCsvInd, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSTransactionMovementReport_Gold",
                    "CPU_AUTO_R",
                    "42422"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Transaction_Movement_Report_Goldcopy", @__tags);
#line 212
this.ScenarioSetup(scenarioInfo);
#line 213
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 214
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 215
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 216
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 217
  testRunner.And("In ERS00100 I click on: \"transaction movement report\" within the ESS Reporting Me" +
                    "nu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table43.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 218
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table43, "And ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table44.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 221
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table44, "And ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table45.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 224
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table45, "And ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table46.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 227
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table46, "And ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table47.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 230
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table47, "And ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table48.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 233
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table48, "And ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selcls1",
                        "Selcls2",
                        "Selgrp1",
                        "Selgrp2",
                        "Selreg1",
                        "Selreg2",
                        "RegType1",
                        "RegType2",
                        "RunORDateRange",
                        "RunRangeFrom",
                        "RunRangeTO",
                        "TransDateFrom",
                        "TransDateTO",
                        "SummaryReportCsvInd"});
            table49.AddRow(new string[] {
                        string.Format("{0}", selcls1),
                        string.Format("{0}", selcls2),
                        string.Format("{0}", selgrp1),
                        string.Format("{0}", selgrp2),
                        string.Format("{0}", selreg1),
                        string.Format("{0}", selreg2),
                        string.Format("{0}", regType1),
                        string.Format("{0}", regType2),
                        string.Format("{0}", runORDateRange),
                        string.Format("{0}", runRangeFrom),
                        string.Format("{0}", runRangeTO),
                        string.Format("{0}", transDateFrom),
                        string.Format("{0}", transDateTO),
                        string.Format("{0}", summaryReportCsvInd)});
#line 236
  testRunner.And("In ERS01008 I continue with the following details:", ((string)(null)), table49, "And ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table50.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 239
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table50, "And ");
#line 242
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table51.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 243
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table51, "And ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table52.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 246
  testRunner.Then("I copy output files to local", ((string)(null)), table52, "Then ");
#line 249
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 250
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Unprocessed_Leaver_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSUnprocessedLeaverReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42423")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "", "", "A", null)]
        public virtual void ESS_Unprocessed_Leaver_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string clsCode1, 
                    string clsCode2, 
                    string clsGrp1, 
                    string clsGrp2, 
                    string regCode1, 
                    string regCode2, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSUnprocessedLeaverReport_Gold",
                    "CPU_AUTO_R",
                    "42423"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Unprocessed_Leaver_Report_Goldcopy", @__tags);
#line 263
this.ScenarioSetup(scenarioInfo);
#line 264
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 265
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 266
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 267
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 268
  testRunner.And("In ERS00100 I click on: \"unprocessed leaver report\" within the ESS Reporting Menu" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table53.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 269
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table53, "And ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table54.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 272
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table54, "And ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table55.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 275
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table55, "And ");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table56.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 278
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table56, "And ");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table57.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 281
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table57, "And ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table58.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 284
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table58, "And ");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClsCode1",
                        "ClsCode2",
                        "ClsGrp1",
                        "ClsGrp2",
                        "RegCode1",
                        "RegCode2"});
            table59.AddRow(new string[] {
                        string.Format("{0}", clsCode1),
                        string.Format("{0}", clsCode2),
                        string.Format("{0}", clsGrp1),
                        string.Format("{0}", clsGrp2),
                        string.Format("{0}", regCode1),
                        string.Format("{0}", regCode2)});
#line 287
  testRunner.And("In ERS01041 I continue with the following details:", ((string)(null)), table59, "And ");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table60.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 290
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table60, "And ");
#line 293
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table61.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 294
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table61, "And ");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table62.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 297
  testRunner.Then("I copy output files to local", ((string)(null)), table62, "Then ");
#line 300
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 301
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Grant_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSGrantReport_Gold")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42434")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "", "R", "7862", "", "D", "Y", "", "A", null)]
        public virtual void ESS_Grant_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string clsCode1, 
                    string clsCode2, 
                    string clsGrp1, 
                    string clsGrp2, 
                    string regCode1, 
                    string regCode2, 
                    string aSATRunDateInd, 
                    string aSATRunNum, 
                    string aSATDate, 
                    string summaryDetailInd, 
                    string nilHoldingsInd, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSGrantReport_Gold",
                    "NAB2_AUTO_R",
                    "42434"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Grant_Report_Goldcopy", @__tags);
#line 313
this.ScenarioSetup(scenarioInfo);
#line 314
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 315
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 316
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 317
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 318
  testRunner.And("In ERS00100 I click on: \"grant report\" within the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table63.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 319
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table63, "And ");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table64.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 322
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table64, "And ");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table65.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 325
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table65, "And ");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table66.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 328
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table66, "And ");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table67.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 331
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table67, "And ");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table68.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 334
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table68, "And ");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClsCode1",
                        "ClsCode2",
                        "ClsGrp1",
                        "ClsGrp2",
                        "RegCode1",
                        "RegCode2",
                        "ASATRunDateInd",
                        "ASATRunNum",
                        "ASATDate",
                        "SummaryDetailInd",
                        "NilHoldingsInd"});
            table69.AddRow(new string[] {
                        string.Format("{0}", clsCode1),
                        string.Format("{0}", clsCode2),
                        string.Format("{0}", clsGrp1),
                        string.Format("{0}", clsGrp2),
                        string.Format("{0}", regCode1),
                        string.Format("{0}", regCode2),
                        string.Format("{0}", aSATRunDateInd),
                        string.Format("{0}", aSATRunNum),
                        string.Format("{0}", aSATDate),
                        string.Format("{0}", summaryDetailInd),
                        string.Format("{0}", nilHoldingsInd)});
#line 337
  testRunner.And("In ERS01039 I continue with the following details:", ((string)(null)), table69, "And ");
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table70.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 340
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table70, "And ");
#line 343
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table71.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 344
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table71, "And ");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table72.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 347
  testRunner.Then("I copy output files to local", ((string)(null)), table72, "Then ");
#line 350
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 351
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Vesting_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSVestingReport_Gold")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42435")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "", "01/01/2012", "01/01/2015", "D", "Y", "", "A", null)]
        public virtual void ESS_Vesting_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string clsCode1, 
                    string clsCode2, 
                    string clsGrp1, 
                    string clsGrp2, 
                    string regCode1, 
                    string regCode2, 
                    string vestingDateFrom, 
                    string vestingDateTO, 
                    string summaryDetailInd, 
                    string totalsReportInd, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSVestingReport_Gold",
                    "NAB2_AUTO_R",
                    "42435"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Vesting_Report_Goldcopy", @__tags);
#line 363
this.ScenarioSetup(scenarioInfo);
#line 364
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 365
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 366
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 367
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 368
  testRunner.And("In ERS00100 I click on: \"vesting report\" within the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table73.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 369
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table73, "And ");
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table74.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 372
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table74, "And ");
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table75.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 375
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table75, "And ");
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table76.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 378
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table76, "And ");
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table77.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 381
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table77, "And ");
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table78.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 384
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table78, "And ");
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClsCode1",
                        "ClsCode2",
                        "ClsGrp1",
                        "ClsGrp2",
                        "RegCode1",
                        "RegCode2",
                        "VestingDateFrom",
                        "VestingDateTO",
                        "SummaryDetailInd",
                        "TotalsReportInd"});
            table79.AddRow(new string[] {
                        string.Format("{0}", clsCode1),
                        string.Format("{0}", clsCode2),
                        string.Format("{0}", clsGrp1),
                        string.Format("{0}", clsGrp2),
                        string.Format("{0}", regCode1),
                        string.Format("{0}", regCode2),
                        string.Format("{0}", vestingDateFrom),
                        string.Format("{0}", vestingDateTO),
                        string.Format("{0}", summaryDetailInd),
                        string.Format("{0}", totalsReportInd)});
#line 387
  testRunner.And("In ERS01040 I continue with the following details:", ((string)(null)), table79, "And ");
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table80.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 390
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table80, "And ");
#line 393
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table81.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 394
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table81, "And ");
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table82.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 397
  testRunner.Then("I copy output files to local", ((string)(null)), table82, "Then ");
#line 400
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 401
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Exercise_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSExerciseReport_Gold")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42436")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "", "R", "7850", "7862", "", "", "D", "B", "", "A", null)]
        public virtual void ESS_Exercise_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string clsCode1, 
                    string clsCode2, 
                    string clsGrp1, 
                    string clsGrp2, 
                    string regCode1, 
                    string regCode2, 
                    string runDateRangeInd, 
                    string runRangeFrom, 
                    string runRangeTO, 
                    string tranDateFrom, 
                    string tranDateTO, 
                    string summaryDetailInd, 
                    string exerciseStatusInd, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSExerciseReport_Gold",
                    "NAB2_AUTO_R",
                    "42436"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Exercise_Report_Goldcopy", @__tags);
#line 412
this.ScenarioSetup(scenarioInfo);
#line 413
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 414
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 415
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 416
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 417
  testRunner.And("In ERS00100 I click on: \"exercise report\" within the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table83.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 418
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table83, "And ");
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table84.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 421
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table84, "And ");
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table85.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 424
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table85, "And ");
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table86.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 427
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table86, "And ");
#line hidden
            TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table87.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 430
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table87, "And ");
#line hidden
            TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table88.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 433
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table88, "And ");
#line hidden
            TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClsCode1",
                        "ClsCode2",
                        "ClsGrp1",
                        "ClsGrp2",
                        "RegCode1",
                        "RegCode2",
                        "RunDateRangeInd",
                        "RunRangeFrom",
                        "RunRangeTO",
                        "TranDateFrom",
                        "TranDateTO",
                        "SummaryDetailInd",
                        "ExerciseStatusInd"});
            table89.AddRow(new string[] {
                        string.Format("{0}", clsCode1),
                        string.Format("{0}", clsCode2),
                        string.Format("{0}", clsGrp1),
                        string.Format("{0}", clsGrp2),
                        string.Format("{0}", regCode1),
                        string.Format("{0}", regCode2),
                        string.Format("{0}", runDateRangeInd),
                        string.Format("{0}", runRangeFrom),
                        string.Format("{0}", runRangeTO),
                        string.Format("{0}", tranDateFrom),
                        string.Format("{0}", tranDateTO),
                        string.Format("{0}", summaryDetailInd),
                        string.Format("{0}", exerciseStatusInd)});
#line 436
  testRunner.And("In ERS01046 I continue with the following details:", ((string)(null)), table89, "And ");
#line hidden
            TechTalk.SpecFlow.Table table90 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table90.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 439
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table90, "And ");
#line 442
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table91 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table91.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 443
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table91, "And ");
#line hidden
            TechTalk.SpecFlow.Table table92 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table92.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 446
  testRunner.Then("I copy output files to local", ((string)(null)), table92, "Then ");
#line 449
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 450
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Cancellation_Expiry_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSCancellationExpiryReport_Gold")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42438")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "", "R", "7850", "7862", "", "", "D", "B", "", "A", null)]
        public virtual void ESS_Cancellation_Expiry_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string clsCode1, 
                    string clsCode2, 
                    string clsGrp1, 
                    string clsGrp2, 
                    string regCode1, 
                    string regCode2, 
                    string runDateRangeInd, 
                    string runRangeFrom, 
                    string runRangeTO, 
                    string tranDateFrom, 
                    string tranDateTO, 
                    string summaryDetailInd, 
                    string canExpTypeInd, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSCancellationExpiryReport_Gold",
                    "NAB2_AUTO_R",
                    "42438"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Cancellation_Expiry_Report_Goldcopy", @__tags);
#line 462
this.ScenarioSetup(scenarioInfo);
#line 463
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 464
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 465
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 466
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 467
  testRunner.And("In ERS00100 I click on: \"cancellation expiry report\" within the ESS Reporting Men" +
                    "u", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table93 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table93.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 468
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table93, "And ");
#line hidden
            TechTalk.SpecFlow.Table table94 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table94.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 471
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table94, "And ");
#line hidden
            TechTalk.SpecFlow.Table table95 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table95.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 474
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table95, "And ");
#line hidden
            TechTalk.SpecFlow.Table table96 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table96.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 477
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table96, "And ");
#line hidden
            TechTalk.SpecFlow.Table table97 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table97.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 480
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table97, "And ");
#line hidden
            TechTalk.SpecFlow.Table table98 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table98.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 483
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table98, "And ");
#line hidden
            TechTalk.SpecFlow.Table table99 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClsCode1",
                        "ClsCode2",
                        "ClsGrp1",
                        "ClsGrp2",
                        "RegCode1",
                        "RegCode2",
                        "RunDateRangeInd",
                        "RunRangeFrom",
                        "RunRangeTO",
                        "TranDateFrom",
                        "TranDateTO",
                        "CanExpTypeInd",
                        "SummaryDetailInd"});
            table99.AddRow(new string[] {
                        string.Format("{0}", clsCode1),
                        string.Format("{0}", clsCode2),
                        string.Format("{0}", clsGrp1),
                        string.Format("{0}", clsGrp2),
                        string.Format("{0}", regCode1),
                        string.Format("{0}", regCode2),
                        string.Format("{0}", runDateRangeInd),
                        string.Format("{0}", runRangeFrom),
                        string.Format("{0}", runRangeTO),
                        string.Format("{0}", tranDateFrom),
                        string.Format("{0}", tranDateTO),
                        string.Format("{0}", canExpTypeInd),
                        string.Format("{0}", summaryDetailInd)});
#line 486
  testRunner.And("In ERS01042 I continue with the following details:", ((string)(null)), table99, "And ");
#line hidden
            TechTalk.SpecFlow.Table table100 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table100.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 489
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table100, "And ");
#line 492
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table101 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table101.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 493
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table101, "And ");
#line hidden
            TechTalk.SpecFlow.Table table102 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table102.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 496
  testRunner.Then("I copy output files to local", ((string)(null)), table102, "Then ");
#line 499
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 500
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Plan_Contributions_Purchases_Allocations_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSPlanContributionsPurchasesAllocationsReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42440")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "", "01/01/2014", "01/01/2015", "", "A", null)]
        public virtual void ESS_Plan_Contributions_Purchases_Allocations_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string clsCode1, 
                    string clsCode2, 
                    string clsGrp1, 
                    string clsGrp2, 
                    string regCode1, 
                    string regCode2, 
                    string tranDateFrom, 
                    string tranDateTO, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSPlanContributionsPurchasesAllocationsReport_Gold",
                    "CPU_AUTO_R",
                    "42440"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Plan_Contributions_Purchases_Allocations_Report_Goldcopy", @__tags);
#line 513
this.ScenarioSetup(scenarioInfo);
#line 514
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 515
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 516
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 517
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 518
  testRunner.And("In ERS00100 I click on: \"plan contributions purchases allocations report\" within " +
                    "the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table103 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table103.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 519
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table103, "And ");
#line hidden
            TechTalk.SpecFlow.Table table104 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table104.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 522
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table104, "And ");
#line hidden
            TechTalk.SpecFlow.Table table105 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table105.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 525
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table105, "And ");
#line hidden
            TechTalk.SpecFlow.Table table106 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table106.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 528
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table106, "And ");
#line hidden
            TechTalk.SpecFlow.Table table107 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table107.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 531
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table107, "And ");
#line hidden
            TechTalk.SpecFlow.Table table108 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table108.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 534
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table108, "And ");
#line hidden
            TechTalk.SpecFlow.Table table109 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClsCode1",
                        "ClsCode2",
                        "ClsGrp1",
                        "ClsGrp2",
                        "RegCode1",
                        "RegCode2",
                        "TranDateFrom",
                        "TranDateTO"});
            table109.AddRow(new string[] {
                        string.Format("{0}", clsCode1),
                        string.Format("{0}", clsCode2),
                        string.Format("{0}", clsGrp1),
                        string.Format("{0}", clsGrp2),
                        string.Format("{0}", regCode1),
                        string.Format("{0}", regCode2),
                        string.Format("{0}", tranDateFrom),
                        string.Format("{0}", tranDateTO)});
#line 537
  testRunner.And("In ERS01023 I continue with the following details:", ((string)(null)), table109, "And ");
#line hidden
            TechTalk.SpecFlow.Table table110 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table110.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 540
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table110, "And ");
#line 543
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table111 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table111.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 544
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table111, "And ");
#line hidden
            TechTalk.SpecFlow.Table table112 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table112.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 547
  testRunner.Then("I copy output files to local", ((string)(null)), table112, "Then ");
#line 550
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 551
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Plan_Withdrawals_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSPlanWithdrawalsReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42441")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "01/01/2014", "01/01/2015", "", "A", null)]
        public virtual void ESS_Plan_Withdrawals_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string clsCode1, 
                    string clsCode2, 
                    string clsGrp1, 
                    string clsGrp2, 
                    string tranDateFrom, 
                    string tranDateTO, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSPlanWithdrawalsReport_Gold",
                    "CPU_AUTO_R",
                    "42441"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Plan_Withdrawals_Report_Goldcopy", @__tags);
#line 563
this.ScenarioSetup(scenarioInfo);
#line 564
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 565
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 566
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 567
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 568
  testRunner.And("In ERS00100 I click on: \"plan withdrawals report\" within the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table113 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table113.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 569
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table113, "And ");
#line hidden
            TechTalk.SpecFlow.Table table114 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table114.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 572
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table114, "And ");
#line hidden
            TechTalk.SpecFlow.Table table115 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table115.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 575
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table115, "And ");
#line hidden
            TechTalk.SpecFlow.Table table116 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table116.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 578
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table116, "And ");
#line hidden
            TechTalk.SpecFlow.Table table117 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table117.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 581
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table117, "And ");
#line hidden
            TechTalk.SpecFlow.Table table118 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table118.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 584
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table118, "And ");
#line hidden
            TechTalk.SpecFlow.Table table119 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClsCode1",
                        "ClsCode2",
                        "ClsGrp1",
                        "ClsGrp2",
                        "TranDateFrom",
                        "TranDateTO"});
            table119.AddRow(new string[] {
                        string.Format("{0}", clsCode1),
                        string.Format("{0}", clsCode2),
                        string.Format("{0}", clsGrp1),
                        string.Format("{0}", clsGrp2),
                        string.Format("{0}", tranDateFrom),
                        string.Format("{0}", tranDateTO)});
#line 587
  testRunner.And("In ERS01024 I continue with the following details:", ((string)(null)), table119, "And ");
#line hidden
            TechTalk.SpecFlow.Table table120 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table120.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 590
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table120, "And ");
#line 593
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table121 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table121.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 594
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table121, "And ");
#line hidden
            TechTalk.SpecFlow.Table table122 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table122.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 597
  testRunner.Then("I copy output files to local", ((string)(null)), table122, "Then ");
#line 600
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 601
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Dividend_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSDividendReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42442")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "ORDTS", "", "", "01/01/2010", "01/04/2015", "", "A", null)]
        public virtual void ESS_Dividend_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string clsCode1, 
                    string clsCode2, 
                    string clsGrp1, 
                    string clsGrp2, 
                    string payAcct1, 
                    string payAcct2, 
                    string oneClassPerCatInd1, 
                    string transDateFrom, 
                    string transDateTO, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSDividendReport_Gold",
                    "CPU_AUTO_R",
                    "42442"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Dividend_Report_Goldcopy", @__tags);
#line 613
this.ScenarioSetup(scenarioInfo);
#line 614
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 615
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 616
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 617
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 618
  testRunner.And("In ERS00100 I click on: \"dividend report\" within the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table123 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table123.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 619
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table123, "And ");
#line hidden
            TechTalk.SpecFlow.Table table124 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table124.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 622
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table124, "And ");
#line hidden
            TechTalk.SpecFlow.Table table125 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table125.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 625
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table125, "And ");
#line hidden
            TechTalk.SpecFlow.Table table126 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table126.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 628
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table126, "And ");
#line hidden
            TechTalk.SpecFlow.Table table127 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table127.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 631
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table127, "And ");
#line hidden
            TechTalk.SpecFlow.Table table128 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table128.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 634
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table128, "And ");
#line hidden
            TechTalk.SpecFlow.Table table129 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClsCode1",
                        "ClsCode2",
                        "ClsGrp1",
                        "ClsGrp2",
                        "PayAcct1",
                        "PayAcct2",
                        "OneClassPerCatInd1",
                        "TransDateFrom",
                        "TransDateTO"});
            table129.AddRow(new string[] {
                        string.Format("{0}", clsCode1),
                        string.Format("{0}", clsCode2),
                        string.Format("{0}", clsGrp1),
                        string.Format("{0}", clsGrp2),
                        string.Format("{0}", payAcct1),
                        string.Format("{0}", payAcct2),
                        string.Format("{0}", oneClassPerCatInd1),
                        string.Format("{0}", transDateFrom),
                        string.Format("{0}", transDateTO)});
#line 637
  testRunner.And("In ERS01025 I continue with the following details:", ((string)(null)), table129, "And ");
#line hidden
            TechTalk.SpecFlow.Table table130 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table130.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 640
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table130, "And ");
#line 643
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table131 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table131.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 644
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table131, "And ");
#line hidden
            TechTalk.SpecFlow.Table table132 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table132.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 647
  testRunner.Then("I copy output files to local", ((string)(null)), table132, "Then ");
#line 650
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 651
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Unallocated_Reconciliation_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSUnallocatedReconciliationReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42443")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "DEP", "", "", "", "01/01/2014", "01/01/2015", "S", "", "A", null)]
        public virtual void ESS_Unallocated_Reconciliation_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string clsCode1, 
                    string clsCode2, 
                    string clsGrp1, 
                    string clsGrp2, 
                    string transDateFrom, 
                    string transDateTO, 
                    string nfxdnSelection, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSUnallocatedReconciliationReport_Gold",
                    "CPU_AUTO_R",
                    "42443"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Unallocated_Reconciliation_Report_Goldcopy", @__tags);
#line 663
this.ScenarioSetup(scenarioInfo);
#line 664
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 665
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 666
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 667
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 668
  testRunner.And("In ERS00100 I click on: \"unallocated reconciliation report\" within the ESS Report" +
                    "ing Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table133 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table133.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 669
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table133, "And ");
#line hidden
            TechTalk.SpecFlow.Table table134 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table134.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 672
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table134, "And ");
#line hidden
            TechTalk.SpecFlow.Table table135 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table135.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 675
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table135, "And ");
#line hidden
            TechTalk.SpecFlow.Table table136 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table136.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 678
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table136, "And ");
#line hidden
            TechTalk.SpecFlow.Table table137 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table137.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 681
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table137, "And ");
#line hidden
            TechTalk.SpecFlow.Table table138 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClsCode1",
                        "ClsCode2",
                        "ClsGrp1",
                        "ClsGrp2",
                        "TransDateFrom",
                        "TransDateTO",
                        "NfxdnSelection"});
            table138.AddRow(new string[] {
                        string.Format("{0}", clsCode1),
                        string.Format("{0}", clsCode2),
                        string.Format("{0}", clsGrp1),
                        string.Format("{0}", clsGrp2),
                        string.Format("{0}", transDateFrom),
                        string.Format("{0}", transDateTO),
                        string.Format("{0}", nfxdnSelection)});
#line 684
  testRunner.And("In ERS01026 I continue with the following details:", ((string)(null)), table138, "And ");
#line 687
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table139 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table139.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 688
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table139, "And ");
#line hidden
            TechTalk.SpecFlow.Table table140 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table140.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 691
  testRunner.Then("I copy output files to local", ((string)(null)), table140, "Then ");
#line 694
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 695
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Trustee_Reconciliation_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSTrusteeReconciliationReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42444")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "EXA", "DEP", "", "", "01/01/2014", "01/01/2015", "S", null)]
        public virtual void ESS_Trustee_Reconciliation_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string clsCode1, 
                    string clsCode2, 
                    string clsGrp1, 
                    string clsGrp2, 
                    string transDateFrom, 
                    string transDateTO, 
                    string nfxupSelection, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSTrusteeReconciliationReport_Gold",
                    "CPU_AUTO_R",
                    "42444"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Trustee_Reconciliation_Report_Goldcopy", @__tags);
#line 707
this.ScenarioSetup(scenarioInfo);
#line 708
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 709
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 710
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 711
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 712
  testRunner.And("In ERS00100 I click on: \"trustee reconciliation report\" within the ESS Reporting " +
                    "Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table141 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table141.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 713
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table141, "And ");
#line hidden
            TechTalk.SpecFlow.Table table142 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table142.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 716
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table142, "And ");
#line hidden
            TechTalk.SpecFlow.Table table143 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table143.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 719
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table143, "And ");
#line hidden
            TechTalk.SpecFlow.Table table144 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table144.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 722
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table144, "And ");
#line hidden
            TechTalk.SpecFlow.Table table145 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table145.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 725
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table145, "And ");
#line hidden
            TechTalk.SpecFlow.Table table146 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClsCode1",
                        "ClsCode2",
                        "ClsGrp1",
                        "ClsGrp2",
                        "TransDateFrom",
                        "TransDateTO",
                        "NfxupSelection"});
            table146.AddRow(new string[] {
                        string.Format("{0}", clsCode1),
                        string.Format("{0}", clsCode2),
                        string.Format("{0}", clsGrp1),
                        string.Format("{0}", clsGrp2),
                        string.Format("{0}", transDateFrom),
                        string.Format("{0}", transDateTO),
                        string.Format("{0}", nfxupSelection)});
#line 728
  testRunner.And("In ERS01029 I continue with the following details:", ((string)(null)), table146, "And ");
#line 731
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table147 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table147.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 732
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table147, "And ");
#line hidden
            TechTalk.SpecFlow.Table table148 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table148.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 735
  testRunner.Then("I copy output files to local", ((string)(null)), table148, "Then ");
#line 738
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 739
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Static_Withholding_Details_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSStaticWithholdingDetailsReport_Gold")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42578")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "N", "N", "N", "N", "N", "N", "N", "", "A", null)]
        public virtual void ESS_Static_Withholding_Details_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string eventType, 
                    string eventCode1, 
                    string eventCode2, 
                    string reportDateFrom, 
                    string reportDateTO, 
                    string eventCode, 
                    string eventType1, 
                    string eventDate, 
                    string withholdingTaxRate, 
                    string withholdingTaxDesc, 
                    string marketValueType, 
                    string complexHolderCode, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSStaticWithholdingDetailsReport_Gold",
                    "NAB2_AUTO_R",
                    "42578"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Static_Withholding_Details_Report_Goldcopy", @__tags);
#line 750
this.ScenarioSetup(scenarioInfo);
#line 751
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 752
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 753
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 754
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 755
  testRunner.And("In ERS00100 I click on: \"static withholding details report\" within the ESS Report" +
                    "ing Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table149 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table149.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 756
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table149, "And ");
#line hidden
            TechTalk.SpecFlow.Table table150 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table150.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 759
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table150, "And ");
#line hidden
            TechTalk.SpecFlow.Table table151 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table151.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 762
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table151, "And ");
#line hidden
            TechTalk.SpecFlow.Table table152 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table152.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 765
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table152, "And ");
#line hidden
            TechTalk.SpecFlow.Table table153 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table153.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 768
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table153, "And ");
#line hidden
            TechTalk.SpecFlow.Table table154 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table154.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 771
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table154, "And ");
#line hidden
            TechTalk.SpecFlow.Table table155 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventType",
                        "EventCode1",
                        "EventCode2",
                        "ReportDateFrom",
                        "ReportDateTO"});
            table155.AddRow(new string[] {
                        string.Format("{0}", eventType),
                        string.Format("{0}", eventCode1),
                        string.Format("{0}", eventCode2),
                        string.Format("{0}", reportDateFrom),
                        string.Format("{0}", reportDateTO)});
#line 774
  testRunner.And("In ERS01056 I continue with the following details:", ((string)(null)), table155, "And ");
#line hidden
            TechTalk.SpecFlow.Table table156 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventCode",
                        "EventType1",
                        "EventDate",
                        "WithholdingTaxRate",
                        "WithholdingTaxDesc",
                        "MarketValueType",
                        "ComplexHolderCode"});
            table156.AddRow(new string[] {
                        string.Format("{0}", eventCode),
                        string.Format("{0}", eventType1),
                        string.Format("{0}", eventDate),
                        string.Format("{0}", withholdingTaxRate),
                        string.Format("{0}", withholdingTaxDesc),
                        string.Format("{0}", marketValueType),
                        string.Format("{0}", complexHolderCode)});
#line 777
  testRunner.And("In ERS01057 I continue with the following details:", ((string)(null)), table156, "And ");
#line hidden
            TechTalk.SpecFlow.Table table157 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table157.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 780
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table157, "And ");
#line 783
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table158 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table158.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 784
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table158, "And ");
#line hidden
            TechTalk.SpecFlow.Table table159 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table159.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 787
  testRunner.Then("I copy output files to local", ((string)(null)), table159, "Then ");
#line 790
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 791
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Withholding_Assessment_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSWithholdingAssessmentReport_Gold")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42579")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "1", "10", "", "A", null)]
        public virtual void ESS_Withholding_Assessment_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string selection, 
                    string mktValPrice, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSWithholdingAssessmentReport_Gold",
                    "NAB2_AUTO_R",
                    "42579"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Withholding_Assessment_Report_Goldcopy", @__tags);
#line 803
this.ScenarioSetup(scenarioInfo);
#line 804
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 805
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 806
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 807
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 808
  testRunner.And("In ERS00100 I click on: \"withholding assessment report\" within the ESS Reporting " +
                    "Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table160 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table160.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 809
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table160, "And ");
#line hidden
            TechTalk.SpecFlow.Table table161 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table161.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 812
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table161, "And ");
#line hidden
            TechTalk.SpecFlow.Table table162 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table162.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 815
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table162, "And ");
#line hidden
            TechTalk.SpecFlow.Table table163 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table163.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 818
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table163, "And ");
#line hidden
            TechTalk.SpecFlow.Table table164 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table164.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 821
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table164, "And ");
#line hidden
            TechTalk.SpecFlow.Table table165 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table165.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 824
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table165, "And ");
#line hidden
            TechTalk.SpecFlow.Table table166 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table166.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 827
  testRunner.And("In ERS01058 I continue with the following details:", ((string)(null)), table166, "And ");
#line hidden
            TechTalk.SpecFlow.Table table167 = new TechTalk.SpecFlow.Table(new string[] {
                        "MktValPrice"});
            table167.AddRow(new string[] {
                        string.Format("{0}", mktValPrice)});
#line 830
  testRunner.And("In ERS01059 I continue with the following details:", ((string)(null)), table167, "And ");
#line hidden
            TechTalk.SpecFlow.Table table168 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table168.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 833
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table168, "And ");
#line 836
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table169 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table169.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 837
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table169, "And ");
#line hidden
            TechTalk.SpecFlow.Table table170 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table170.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 840
  testRunner.Then("I copy output files to local", ((string)(null)), table170, "Then ");
#line 843
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 844
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Event_Notification_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSEventNotificationReport_Gold")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42580")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "V", "DS5", "01/01/2020", "Y", "Y", "Y", "Y", "", "A", null)]
        public virtual void ESS_Event_Notification_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string eventType, 
                    string eventCode, 
                    string eventDate, 
                    string eventTotals, 
                    string registerTotals, 
                    string registerTypeTotals, 
                    string certificateBalances, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSEventNotificationReport_Gold",
                    "NAB2_AUTO_R",
                    "42580"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Event_Notification_Report_Goldcopy", @__tags);
#line 856
this.ScenarioSetup(scenarioInfo);
#line 857
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 858
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 859
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 860
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 861
  testRunner.And("In ERS00100 I click on: \"event notification report\" within the ESS Reporting Menu" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table171 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table171.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 862
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table171, "And ");
#line hidden
            TechTalk.SpecFlow.Table table172 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table172.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 865
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table172, "And ");
#line hidden
            TechTalk.SpecFlow.Table table173 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table173.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 868
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table173, "And ");
#line hidden
            TechTalk.SpecFlow.Table table174 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table174.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 871
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table174, "And ");
#line hidden
            TechTalk.SpecFlow.Table table175 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table175.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 874
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table175, "And ");
#line hidden
            TechTalk.SpecFlow.Table table176 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table176.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 877
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table176, "And ");
#line hidden
            TechTalk.SpecFlow.Table table177 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventType",
                        "EventCode",
                        "EventDate",
                        "EventTotals",
                        "RegisterTotals",
                        "RegisterTypeTotals",
                        "CertificateBalances"});
            table177.AddRow(new string[] {
                        string.Format("{0}", eventType),
                        string.Format("{0}", eventCode),
                        string.Format("{0}", eventDate),
                        string.Format("{0}", eventTotals),
                        string.Format("{0}", registerTotals),
                        string.Format("{0}", registerTypeTotals),
                        string.Format("{0}", certificateBalances)});
#line 880
  testRunner.And("In ERS01054 I continue with the following details:", ((string)(null)), table177, "And ");
#line hidden
            TechTalk.SpecFlow.Table table178 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table178.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 883
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table178, "And ");
#line 886
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table179 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table179.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 887
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table179, "And ");
#line hidden
            TechTalk.SpecFlow.Table table180 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table180.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 890
  testRunner.Then("I copy output files to local", ((string)(null)), table180, "Then ");
#line 893
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 894
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Event_Reconciliation_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSEventReconciliationReport_Gold")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42581")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "V", "", "", "01/01/2015", "01/01/2020", "", "N", "", "A", null)]
        public virtual void ESS_Event_Reconciliation_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string eventType, 
                    string eventCode1, 
                    string eventCode2, 
                    string reportDateFrom, 
                    string reportDateTO, 
                    string modelPrice, 
                    string totalsOnly, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSEventReconciliationReport_Gold",
                    "NAB2_AUTO_R",
                    "42581"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Event_Reconciliation_Report_Goldcopy", @__tags);
#line 907
this.ScenarioSetup(scenarioInfo);
#line 908
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 909
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 910
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 911
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 912
  testRunner.And("In ERS00100 I click on: \"event reconciliation report\" within the ESS Reporting Me" +
                    "nu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table181 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table181.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 913
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table181, "And ");
#line hidden
            TechTalk.SpecFlow.Table table182 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table182.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 916
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table182, "And ");
#line hidden
            TechTalk.SpecFlow.Table table183 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table183.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 919
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table183, "And ");
#line hidden
            TechTalk.SpecFlow.Table table184 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table184.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 922
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table184, "And ");
#line hidden
            TechTalk.SpecFlow.Table table185 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table185.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 925
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table185, "And ");
#line hidden
            TechTalk.SpecFlow.Table table186 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table186.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 928
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table186, "And ");
#line hidden
            TechTalk.SpecFlow.Table table187 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventType",
                        "EventCode1",
                        "EventCode2",
                        "ReportDateFrom",
                        "ReportDateTO",
                        "ModelPrice",
                        "TotalsOnly"});
            table187.AddRow(new string[] {
                        string.Format("{0}", eventType),
                        string.Format("{0}", eventCode1),
                        string.Format("{0}", eventCode2),
                        string.Format("{0}", reportDateFrom),
                        string.Format("{0}", reportDateTO),
                        string.Format("{0}", modelPrice),
                        string.Format("{0}", totalsOnly)});
#line 931
  testRunner.And("In ERS01055 I continue with the following details:", ((string)(null)), table187, "And ");
#line hidden
            TechTalk.SpecFlow.Table table188 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table188.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 934
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table188, "And ");
#line 937
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table189 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table189.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 938
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table189, "And ");
#line hidden
            TechTalk.SpecFlow.Table table190 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table190.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 941
  testRunner.Then("I copy output files to local", ((string)(null)), table190, "Then ");
#line 944
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 945
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_VWAP_Report_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSVWAPReport_Gold")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42582")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", null)]
        public virtual void ESS_VWAP_Report_Report_Goldcopy(string reportHeading, string preload, string wildString, string finalSecurity, string vwapDateFrom, string vwapDateTO, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSVWAPReport_Gold",
                    "NAB2_AUTO_R",
                    "42582"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_VWAP_Report_Report_Goldcopy", @__tags);
#line 957
this.ScenarioSetup(scenarioInfo);
#line 958
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 959
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 960
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 961
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 962
  testRunner.And("In ERS00100 I click on: \"vwap report\" within the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table191 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table191.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 963
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table191, "And ");
#line hidden
            TechTalk.SpecFlow.Table table192 = new TechTalk.SpecFlow.Table(new string[] {
                        "FinalSecurity",
                        "VwapDateFrom",
                        "VwapDateTO"});
            table192.AddRow(new string[] {
                        string.Format("{0}", finalSecurity),
                        string.Format("{0}", vwapDateFrom),
                        string.Format("{0}", vwapDateTO)});
#line 966
  testRunner.And("In ERS01030 I continue with the following details:", ((string)(null)), table192, "And ");
#line 969
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table193 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table193.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 970
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table193, "And ");
#line hidden
            TechTalk.SpecFlow.Table table194 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table194.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 973
  testRunner.Then("I copy output files to local", ((string)(null)), table194, "Then ");
#line 976
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 977
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Housekeeping_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSHousekeepingReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42583")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "", "", "", "", "", "", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "", "", "", "", null)]
        public virtual void ESS_Housekeeping_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string clsCode1, 
                    string clsCode2, 
                    string clsGrp1, 
                    string clsGrp2, 
                    string regCode1, 
                    string regCode2, 
                    string regType1, 
                    string regType2, 
                    string selectedPlanType, 
                    string selectedTaxType, 
                    string currUnitBal, 
                    string nbrCurrCerts, 
                    string nbrNilCerts, 
                    string holderID, 
                    string holderName, 
                    string planCode, 
                    string planDesc, 
                    string planTypeInd, 
                    string div13AInd, 
                    string finalSecurity, 
                    string cntryOFTax, 
                    string norTrustInd, 
                    string marketValueInd, 
                    string cntlAcct, 
                    string unawAcct, 
                    string paymtOptionInd, 
                    string paymtCreatnInd, 
                    string blkoutPeriodInd, 
                    string blkoutCode, 
                    string leaverPackInd, 
                    string thirdPrtyPayee, 
                    string coyPayee, 
                    string comments, 
                    string taxTypeInd, 
                    string usePoolInd, 
                    string forfType, 
                    string autoForfInd, 
                    string autoRemvlBulkCode, 
                    string autoRemvlFromInd, 
                    string matchWorkgCls, 
                    string planMtchgLimit, 
                    string planMtchgLimitPerd, 
                    string autoPhntmTransfr, 
                    string retirementAge, 
                    string fromOptionClass, 
                    string vsaXfrJurisdictCode, 
                    string singleCertNbr, 
                    string divReinvestInd, 
                    string divPlanCat, 
                    string divPlanConcept, 
                    string lapseDays, 
                    string nilCostOptionInd, 
                    string phantomOptionInd, 
                    string expiryNoticeINUrr, 
                    string nbrDaysBefExpiry, 
                    string vestingNoticeINUrr, 
                    string nbrDaysBeforeVest, 
                    string oNMktPurchaseInd, 
                    string vsaXfrAllowed, 
                    string vsaJurisdictionCodes, 
                    string vsaClassCodes, 
                    string loanLapseExcepts, 
                    string loanLimitMax, 
                    string loanLimitTypeInd, 
                    string loanPaymntTypes, 
                    string loanDivOption, 
                    string allowWebTrfInd, 
                    string registerCode, 
                    string registerType, 
                    string registerDesc, 
                    string comments1, 
                    string holdingEndDate, 
                    string taxEndDate, 
                    string firstAwardDate, 
                    string individualDatesInd, 
                    string floatingInd, 
                    string expiresAfter, 
                    string unitRoundingInd, 
                    string releaseTypes, 
                    string autoRemoveDays, 
                    string aessLimitType, 
                    string limitMinimum, 
                    string limitMaximum, 
                    string paymentsCarrierInd, 
                    string moneyRoundingInd, 
                    string residualsInd, 
                    string maximumNbrRestarts, 
                    string paymentAcct, 
                    string baseCurrency, 
                    string awardPayFreqDtls, 
                    string calcTaxInd, 
                    string forfeitureType, 
                    string proRataMethod, 
                    string forfeitureEndDate, 
                    string nonForfeitureStatus, 
                    string usingMtchgInd, 
                    string usingUnmatchedInd, 
                    string mtchgUpfrontInd, 
                    string futrMtchgEndDate, 
                    string mtchgRatio, 
                    string awdMtchgLimitPerd, 
                    string awdMtchgLimit, 
                    string loanBonusPerdDtls, 
                    string recoursePlanInd, 
                    string futureFloat, 
                    string forfeitureFloat, 
                    string leaverSchedule, 
                    string usingVestingInd, 
                    string taxStmtTypeInd, 
                    string taxReportableInd, 
                    string finRptExp, 
                    string awardDate, 
                    string acqstnSharePrice, 
                    string awardExchgRate, 
                    string ifrsFmv, 
                    string expiryDate, 
                    string vestingCode, 
                    string vestingStartDate, 
                    string performanceHurdles, 
                    string performanceCode, 
                    string ctlPayFreqDtls, 
                    string hlthIntgrtyModeInd, 
                    string enabledStatusInd, 
                    string priceUpdatedInd, 
                    string comments2, 
                    string displayONWeb, 
                    string paymntFreq, 
                    string accumnPeriod, 
                    string accumnStaDate, 
                    string accumnEndDate, 
                    string maxNbrPaymnts, 
                    string trancheNbr, 
                    string testNbr, 
                    string vstDesc, 
                    string vstTerm, 
                    string unitRnd, 
                    string vstComments, 
                    string periodFRVstStart, 
                    string vestPerc, 
                    string vestDate, 
                    string performanceDesc, 
                    string testDate, 
                    string testPerc, 
                    string cancUnvest, 
                    string leaverSchedDesc, 
                    string leaverCode, 
                    string leaverCodeDesc, 
                    string employeeStatus, 
                    string employeeStatusDesc, 
                    string leaverEffectInd, 
                    string maintainRestrctInd, 
                    string phantomLvrTypeInd, 
                    string overrideExpiry, 
                    string overridePeriod, 
                    string overrideFromDate, 
                    string unvNOChgInd, 
                    string unvCancelImm, 
                    string unvAccelVst, 
                    string unvAccelPeriod, 
                    string unvAccelFrmDate, 
                    string vstNOChgInd, 
                    string vstCancelImm, 
                    string vstIgnoreBlackout, 
                    string comments3, 
                    string clntCode1, 
                    string clntCode2, 
                    string coyCode1, 
                    string coyCode2, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSHousekeepingReport_Gold",
                    "CPU_AUTO_R",
                    "42583"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Housekeeping_Report_Goldcopy", @__tags);
#line 989
this.ScenarioSetup(scenarioInfo);
#line 990
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 991
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 992
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 993
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 994
  testRunner.And("In ERS00100 I click on: \"ess housekeeping report\" within the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table195 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table195.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 995
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table195, "And ");
#line hidden
            TechTalk.SpecFlow.Table table196 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClntCode1",
                        "ClntCode2",
                        "CoyCode1",
                        "CoyCode2",
                        "ClsCode1",
                        "ClsCode2",
                        "ClsGrp1",
                        "ClsGrp2",
                        "RegCode1",
                        "RegCode2",
                        "RegType1",
                        "RegType2",
                        "SelectedPlanType",
                        "SelectedTaxType"});
            table196.AddRow(new string[] {
                        string.Format("{0}", clntCode1),
                        string.Format("{0}", clntCode2),
                        string.Format("{0}", coyCode1),
                        string.Format("{0}", coyCode2),
                        string.Format("{0}", clsCode1),
                        string.Format("{0}", clsCode2),
                        string.Format("{0}", clsGrp1),
                        string.Format("{0}", clsGrp2),
                        string.Format("{0}", regCode1),
                        string.Format("{0}", regCode2),
                        string.Format("{0}", regType1),
                        string.Format("{0}", regType2),
                        string.Format("{0}", selectedPlanType),
                        string.Format("{0}", selectedTaxType)});
#line 998
  testRunner.And("In ERS01031 I continue with the following details:", ((string)(null)), table196, "And ");
#line hidden
            TechTalk.SpecFlow.Table table197 = new TechTalk.SpecFlow.Table(new string[] {
                        "CurrUnitBal",
                        "NbrCurrCerts",
                        "NbrNilCerts",
                        "HolderID",
                        "HolderName"});
            table197.AddRow(new string[] {
                        string.Format("{0}", currUnitBal),
                        string.Format("{0}", nbrCurrCerts),
                        string.Format("{0}", nbrNilCerts),
                        string.Format("{0}", holderID),
                        string.Format("{0}", holderName)});
#line 1001
  testRunner.And("In ERS01036 I continue with the following details:", ((string)(null)), table197, "And ");
#line hidden
            TechTalk.SpecFlow.Table table198 = new TechTalk.SpecFlow.Table(new string[] {
                        "PlanCode",
                        "PlanDesc",
                        "PlanTypeInd",
                        "Div13aInd",
                        "FinalSecurity",
                        "CntryOFTax",
                        "NorTrustInd",
                        "MarketValueInd",
                        "CntlAcct",
                        "UnawAcct",
                        "PaymtOptionInd",
                        "PaymtCreatnInd",
                        "BlkoutPeriodInd",
                        "BlkoutCode",
                        "LeaverPackInd",
                        "ThirdPrtyPayee",
                        "CoyPayee",
                        "Comments",
                        "TaxTypeInd",
                        "UsePoolInd",
                        "ForfType",
                        "AutoForfInd",
                        "AutoRemvlBulkCode",
                        "AutoRemvlFromInd",
                        "MatchWorkgCls",
                        "PlanMtchgLimit",
                        "PlanMtchgLimitPerd",
                        "AutoPhntmTransfr",
                        "RetirementAge",
                        "FromOptionClass",
                        "VsaXfrJurisdictCode",
                        "SingleCertNbr",
                        "DivReinvestInd",
                        "DivPlanCat",
                        "DivPlanConcept",
                        "LapseDays",
                        "NilCostOptionInd",
                        "PhantomOptionInd",
                        "ExpiryNoticeINUrr",
                        "NbrDaysBefExpiry",
                        "VestingNoticeINUrr",
                        "NbrDaysBeforeVest",
                        "ONMktPurchaseInd",
                        "VsaXfrAllowed",
                        "VsaJurisdictionCodes",
                        "VsaClassCodes",
                        "LoanLapseExcepts",
                        "LoanLimitMax",
                        "LoanLimitTypeInd",
                        "LoanPaymntTypes",
                        "LoanDivOption",
                        "AllowWebTrfInd"});
            table198.AddRow(new string[] {
                        string.Format("{0}", planCode),
                        string.Format("{0}", planDesc),
                        string.Format("{0}", planTypeInd),
                        string.Format("{0}", div13AInd),
                        string.Format("{0}", finalSecurity),
                        string.Format("{0}", cntryOFTax),
                        string.Format("{0}", norTrustInd),
                        string.Format("{0}", marketValueInd),
                        string.Format("{0}", cntlAcct),
                        string.Format("{0}", unawAcct),
                        string.Format("{0}", paymtOptionInd),
                        string.Format("{0}", paymtCreatnInd),
                        string.Format("{0}", blkoutPeriodInd),
                        string.Format("{0}", blkoutCode),
                        string.Format("{0}", leaverPackInd),
                        string.Format("{0}", thirdPrtyPayee),
                        string.Format("{0}", coyPayee),
                        string.Format("{0}", comments),
                        string.Format("{0}", taxTypeInd),
                        string.Format("{0}", usePoolInd),
                        string.Format("{0}", forfType),
                        string.Format("{0}", autoForfInd),
                        string.Format("{0}", autoRemvlBulkCode),
                        string.Format("{0}", autoRemvlFromInd),
                        string.Format("{0}", matchWorkgCls),
                        string.Format("{0}", planMtchgLimit),
                        string.Format("{0}", planMtchgLimitPerd),
                        string.Format("{0}", autoPhntmTransfr),
                        string.Format("{0}", retirementAge),
                        string.Format("{0}", fromOptionClass),
                        string.Format("{0}", vsaXfrJurisdictCode),
                        string.Format("{0}", singleCertNbr),
                        string.Format("{0}", divReinvestInd),
                        string.Format("{0}", divPlanCat),
                        string.Format("{0}", divPlanConcept),
                        string.Format("{0}", lapseDays),
                        string.Format("{0}", nilCostOptionInd),
                        string.Format("{0}", phantomOptionInd),
                        string.Format("{0}", expiryNoticeINUrr),
                        string.Format("{0}", nbrDaysBefExpiry),
                        string.Format("{0}", vestingNoticeINUrr),
                        string.Format("{0}", nbrDaysBeforeVest),
                        string.Format("{0}", oNMktPurchaseInd),
                        string.Format("{0}", vsaXfrAllowed),
                        string.Format("{0}", vsaJurisdictionCodes),
                        string.Format("{0}", vsaClassCodes),
                        string.Format("{0}", loanLapseExcepts),
                        string.Format("{0}", loanLimitMax),
                        string.Format("{0}", loanLimitTypeInd),
                        string.Format("{0}", loanPaymntTypes),
                        string.Format("{0}", loanDivOption),
                        string.Format("{0}", allowWebTrfInd)});
#line 1004
  testRunner.And("In ERS01032 I continue with the following details:", ((string)(null)), table198, "And ");
#line hidden
            TechTalk.SpecFlow.Table table199 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode",
                        "RegisterType",
                        "RegisterDesc",
                        "Comments1",
                        "HoldingEndDate",
                        "TaxEndDate",
                        "FirstAwardDate",
                        "IndividualDatesInd",
                        "FloatingInd",
                        "ExpiresAfter",
                        "UnitRoundingInd",
                        "ReleaseTypes",
                        "AutoRemoveDays",
                        "AessLimitType",
                        "LimitMinimum",
                        "LimitMaximum",
                        "PaymentsCarrierInd",
                        "MoneyRoundingInd",
                        "ResidualsInd",
                        "MaximumNbrRestarts",
                        "PaymentAcct",
                        "BaseCurrency",
                        "AwardPayFreqDtls",
                        "CalcTaxInd",
                        "ForfeitureType",
                        "ProRataMethod",
                        "ForfeitureEndDate",
                        "NonForfeitureStatus",
                        "UsingMtchgInd",
                        "UsingUnmatchedInd",
                        "MtchgUpfrontInd",
                        "FutrMtchgEndDate",
                        "MtchgRatio",
                        "AwdMtchgLimitPerd",
                        "AwdMtchgLimit",
                        "LoanBonusPerdDtls",
                        "RecoursePlanInd",
                        "FutureFloat",
                        "ForfeitureFloat",
                        "LeaverSchedule",
                        "UsingVestingInd",
                        "TaxStmtTypeInd",
                        "TaxReportableInd",
                        "FinRptExp"});
            table199.AddRow(new string[] {
                        string.Format("{0}", registerCode),
                        string.Format("{0}", registerType),
                        string.Format("{0}", registerDesc),
                        string.Format("{0}", comments1),
                        string.Format("{0}", holdingEndDate),
                        string.Format("{0}", taxEndDate),
                        string.Format("{0}", firstAwardDate),
                        string.Format("{0}", individualDatesInd),
                        string.Format("{0}", floatingInd),
                        string.Format("{0}", expiresAfter),
                        string.Format("{0}", unitRoundingInd),
                        string.Format("{0}", releaseTypes),
                        string.Format("{0}", autoRemoveDays),
                        string.Format("{0}", aessLimitType),
                        string.Format("{0}", limitMinimum),
                        string.Format("{0}", limitMaximum),
                        string.Format("{0}", paymentsCarrierInd),
                        string.Format("{0}", moneyRoundingInd),
                        string.Format("{0}", residualsInd),
                        string.Format("{0}", maximumNbrRestarts),
                        string.Format("{0}", paymentAcct),
                        string.Format("{0}", baseCurrency),
                        string.Format("{0}", awardPayFreqDtls),
                        string.Format("{0}", calcTaxInd),
                        string.Format("{0}", forfeitureType),
                        string.Format("{0}", proRataMethod),
                        string.Format("{0}", forfeitureEndDate),
                        string.Format("{0}", nonForfeitureStatus),
                        string.Format("{0}", usingMtchgInd),
                        string.Format("{0}", usingUnmatchedInd),
                        string.Format("{0}", mtchgUpfrontInd),
                        string.Format("{0}", futrMtchgEndDate),
                        string.Format("{0}", mtchgRatio),
                        string.Format("{0}", awdMtchgLimitPerd),
                        string.Format("{0}", awdMtchgLimit),
                        string.Format("{0}", loanBonusPerdDtls),
                        string.Format("{0}", recoursePlanInd),
                        string.Format("{0}", futureFloat),
                        string.Format("{0}", forfeitureFloat),
                        string.Format("{0}", leaverSchedule),
                        string.Format("{0}", usingVestingInd),
                        string.Format("{0}", taxStmtTypeInd),
                        string.Format("{0}", taxReportableInd),
                        string.Format("{0}", finRptExp)});
#line 1007
  testRunner.And("In ERS01033 I continue with the following details:", ((string)(null)), table199, "And ");
#line hidden
            TechTalk.SpecFlow.Table table200 = new TechTalk.SpecFlow.Table(new string[] {
                        "AwardDate",
                        "AcqstnSharePrice",
                        "AwardExchgRate",
                        "IfrsFmv",
                        "ExpiryDate",
                        "VestingCode",
                        "VestingStartDate",
                        "PerformanceHurdles",
                        "PerformanceCode",
                        "CtlPayFreqDtls",
                        "HlthIntgrtyModeInd",
                        "EnabledStatusInd",
                        "PriceUpdatedInd",
                        "Comments2",
                        "DisplayONWeb"});
            table200.AddRow(new string[] {
                        string.Format("{0}", awardDate),
                        string.Format("{0}", acqstnSharePrice),
                        string.Format("{0}", awardExchgRate),
                        string.Format("{0}", ifrsFmv),
                        string.Format("{0}", expiryDate),
                        string.Format("{0}", vestingCode),
                        string.Format("{0}", vestingStartDate),
                        string.Format("{0}", performanceHurdles),
                        string.Format("{0}", performanceCode),
                        string.Format("{0}", ctlPayFreqDtls),
                        string.Format("{0}", hlthIntgrtyModeInd),
                        string.Format("{0}", enabledStatusInd),
                        string.Format("{0}", priceUpdatedInd),
                        string.Format("{0}", comments2),
                        string.Format("{0}", displayONWeb)});
#line 1010
  testRunner.And("In ERS01034 I continue with the following details:", ((string)(null)), table200, "And ");
#line hidden
            TechTalk.SpecFlow.Table table201 = new TechTalk.SpecFlow.Table(new string[] {
                        "PaymntFreq",
                        "AccumnPeriod",
                        "AccumnStaDate",
                        "AccumnEndDate",
                        "MaxNbrPaymnts"});
            table201.AddRow(new string[] {
                        string.Format("{0}", paymntFreq),
                        string.Format("{0}", accumnPeriod),
                        string.Format("{0}", accumnStaDate),
                        string.Format("{0}", accumnEndDate),
                        string.Format("{0}", maxNbrPaymnts)});
#line 1013
  testRunner.And("In ERS01035 I continue with the following details:", ((string)(null)), table201, "And ");
#line hidden
            TechTalk.SpecFlow.Table table202 = new TechTalk.SpecFlow.Table(new string[] {
                        "TrancheNbr",
                        "TestNbr",
                        "VstDesc",
                        "VstTerm",
                        "UnitRnd",
                        "VstComments",
                        "PeriodFRVstStart",
                        "VestPerc",
                        "VestDate",
                        "PerformanceDesc",
                        "TestDate",
                        "TestPerc",
                        "CancUnvest"});
            table202.AddRow(new string[] {
                        string.Format("{0}", trancheNbr),
                        string.Format("{0}", testNbr),
                        string.Format("{0}", vstDesc),
                        string.Format("{0}", vstTerm),
                        string.Format("{0}", unitRnd),
                        string.Format("{0}", vstComments),
                        string.Format("{0}", periodFRVstStart),
                        string.Format("{0}", vestPerc),
                        string.Format("{0}", vestDate),
                        string.Format("{0}", performanceDesc),
                        string.Format("{0}", testDate),
                        string.Format("{0}", testPerc),
                        string.Format("{0}", cancUnvest)});
#line 1016
  testRunner.And("In ERS01037 I continue with the following details:", ((string)(null)), table202, "And ");
#line hidden
            TechTalk.SpecFlow.Table table203 = new TechTalk.SpecFlow.Table(new string[] {
                        "LeaverSchedDesc",
                        "LeaverCode",
                        "LeaverCodeDesc",
                        "EmployeeStatus",
                        "EmployeeStatusDesc",
                        "LeaverEffectInd",
                        "MaintainRestrctInd",
                        "PhantomLvrTypeInd",
                        "OverrideExpiry",
                        "OverridePeriod",
                        "OverrideFromDate",
                        "UnvNOChgInd",
                        "UnvCancelImm",
                        "UnvAccelVst",
                        "UnvAccelPeriod",
                        "UnvAccelFrmDate",
                        "VstNOChgInd",
                        "VstCancelImm",
                        "VstIgnoreBlackout",
                        "Comments3"});
            table203.AddRow(new string[] {
                        string.Format("{0}", leaverSchedDesc),
                        string.Format("{0}", leaverCode),
                        string.Format("{0}", leaverCodeDesc),
                        string.Format("{0}", employeeStatus),
                        string.Format("{0}", employeeStatusDesc),
                        string.Format("{0}", leaverEffectInd),
                        string.Format("{0}", maintainRestrctInd),
                        string.Format("{0}", phantomLvrTypeInd),
                        string.Format("{0}", overrideExpiry),
                        string.Format("{0}", overridePeriod),
                        string.Format("{0}", overrideFromDate),
                        string.Format("{0}", unvNOChgInd),
                        string.Format("{0}", unvCancelImm),
                        string.Format("{0}", unvAccelVst),
                        string.Format("{0}", unvAccelPeriod),
                        string.Format("{0}", unvAccelFrmDate),
                        string.Format("{0}", vstNOChgInd),
                        string.Format("{0}", vstCancelImm),
                        string.Format("{0}", vstIgnoreBlackout),
                        string.Format("{0}", comments3)});
#line 1019
  testRunner.And("In ERS01038 I continue with the following details:", ((string)(null)), table203, "And ");
#line 1022
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table204 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table204.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 1023
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table204, "And ");
#line hidden
            TechTalk.SpecFlow.Table table205 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table205.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 1026
  testRunner.Then("I copy output files to local", ((string)(null)), table205, "Then ");
#line 1029
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1030
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Contribution_File_Report_Detail_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESS_ContributionFileReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42418")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "Y", "Y", "Y", "M", "Y", "Y", "M", "Y", "Y", "M", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "M", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "", "N", "", "Y", "Y", "Y", "Y", "Y", "DEP", "", "", "", "", "A", "", "A", null)]
        public virtual void ESS_Contribution_File_Report_Detail_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string holderCat, 
                    string holderNumber, 
                    string regAddress, 
                    string regAddrCase, 
                    string holderName, 
                    string fullnames, 
                    string caseFull, 
                    string formattedFull, 
                    string nameDetailed, 
                    string caseDetailed, 
                    string surname, 
                    string firstName, 
                    string secondName, 
                    string thirdName, 
                    string title, 
                    string initials, 
                    string designator, 
                    string nameKey, 
                    string nameType, 
                    string holderAddress, 
                    string holderAddressCase, 
                    string includePcode, 
                    string pcodeDomicile, 
                    string dpid, 
                    string barcode, 
                    string alternateID, 
                    string ers01010PersonalUrl, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string workPhone, 
                    string faxNumber, 
                    string mobilePhone, 
                    string returnedEmail, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string variableFlags, 
                    string variableField, 
                    string tfnDescription, 
                    string dates, 
                    string mailUnclaimedDate, 
                    string holderONDate, 
                    string holderOffDate, 
                    string holderAddedDate, 
                    string planDetails, 
                    string drpDetails, 
                    string drpPlanDesc, 
                    string bspDetails, 
                    string bspPlanDesc, 
                    string directCredit, 
                    string bankID, 
                    string bankNamadd, 
                    string bankAccountNbr, 
                    string bankAccountName, 
                    string selcls, 
                    string selreg1, 
                    string selreg2, 
                    string regType1, 
                    string regType2, 
                    string participants, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESS_ContributionFileReport_Gold",
                    "CPU_AUTO_R",
                    "42418"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Contribution_File_Report_Detail_Goldcopy", @__tags);
#line 1042
this.ScenarioSetup(scenarioInfo);
#line 1043
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1044
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1045
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1046
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1047
  testRunner.And("In ERS00100 I click on: \"contribution file report\" within the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table206 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table206.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 1048
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table206, "And ");
#line hidden
            TechTalk.SpecFlow.Table table207 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table207.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 1051
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table207, "And ");
#line hidden
            TechTalk.SpecFlow.Table table208 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier",
                        "HolderCat",
                        "HolderNumber",
                        "RegAddress",
                        "RegAddrCase",
                        "HolderName",
                        "Fullnames",
                        "CaseFull",
                        "FormattedFull",
                        "NameDetailed",
                        "CaseDetailed",
                        "Surname",
                        "FirstName",
                        "SecondName",
                        "ThirdName",
                        "Title",
                        "Initials",
                        "Designator",
                        "NameKey",
                        "NameType",
                        "HolderAddress",
                        "HolderAddressCase",
                        "IncludePcode",
                        "PcodeDomicile",
                        "Dpid",
                        "Barcode",
                        "AlternateID",
                        "Ers01010PersonalUrl"});
            table208.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier),
                        string.Format("{0}", holderCat),
                        string.Format("{0}", holderNumber),
                        string.Format("{0}", regAddress),
                        string.Format("{0}", regAddrCase),
                        string.Format("{0}", holderName),
                        string.Format("{0}", fullnames),
                        string.Format("{0}", caseFull),
                        string.Format("{0}", formattedFull),
                        string.Format("{0}", nameDetailed),
                        string.Format("{0}", caseDetailed),
                        string.Format("{0}", surname),
                        string.Format("{0}", firstName),
                        string.Format("{0}", secondName),
                        string.Format("{0}", thirdName),
                        string.Format("{0}", title),
                        string.Format("{0}", initials),
                        string.Format("{0}", designator),
                        string.Format("{0}", nameKey),
                        string.Format("{0}", nameType),
                        string.Format("{0}", holderAddress),
                        string.Format("{0}", holderAddressCase),
                        string.Format("{0}", includePcode),
                        string.Format("{0}", pcodeDomicile),
                        string.Format("{0}", dpid),
                        string.Format("{0}", barcode),
                        string.Format("{0}", alternateID),
                        string.Format("{0}", ers01010PersonalUrl)});
#line 1054
  testRunner.And("In ERS01010 I continue with the following values:", ((string)(null)), table208, "And ");
#line hidden
            TechTalk.SpecFlow.Table table209 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table209.AddRow(new string[] {
                        "<StaticDetails>"});
#line 1057
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table209, "And ");
#line hidden
            TechTalk.SpecFlow.Table table210 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "WorkPhone",
                        "FaxNumber",
                        "MobilePhone",
                        "EmailAddress",
                        "ReturnedEmail"});
            table210.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", workPhone),
                        string.Format("{0}", faxNumber),
                        string.Format("{0}", mobilePhone),
                        string.Format("{0}", emailAddress),
                        string.Format("{0}", returnedEmail)});
#line 1060
  testRunner.And("In ERS01012 I continue with the following Values:", ((string)(null)), table210, "And ");
#line hidden
            TechTalk.SpecFlow.Table table211 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag",
                        "VariableFlags",
                        "VariableField",
                        "TfnDescription",
                        "Dates",
                        "MailUnclaimedDate",
                        "HolderONDate",
                        "HolderOffDate",
                        "HolderAddedDate",
                        "PlanDetails",
                        "DrpDetails",
                        "DrpPlanDesc",
                        "BspDetails",
                        "BspPlanDesc",
                        "DirectCredit",
                        "BankID",
                        "BankNamadd",
                        "BankAccountNbr",
                        "BankAccountName"});
            table211.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag),
                        string.Format("{0}", variableFlags),
                        string.Format("{0}", variableField),
                        string.Format("{0}", tfnDescription),
                        string.Format("{0}", dates),
                        string.Format("{0}", mailUnclaimedDate),
                        string.Format("{0}", holderONDate),
                        string.Format("{0}", holderOffDate),
                        string.Format("{0}", holderAddedDate),
                        string.Format("{0}", planDetails),
                        string.Format("{0}", drpDetails),
                        string.Format("{0}", drpPlanDesc),
                        string.Format("{0}", bspDetails),
                        string.Format("{0}", bspPlanDesc),
                        string.Format("{0}", directCredit),
                        string.Format("{0}", bankID),
                        string.Format("{0}", bankNamadd),
                        string.Format("{0}", bankAccountNbr),
                        string.Format("{0}", bankAccountName)});
#line 1063
  testRunner.And("In ERS01028 I continue with the following Values:", ((string)(null)), table211, "And ");
#line hidden
            TechTalk.SpecFlow.Table table212 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selcls",
                        "Selreg1",
                        "Selreg2",
                        "RegType1",
                        "RegType2",
                        "Participants"});
            table212.AddRow(new string[] {
                        string.Format("{0}", selcls),
                        string.Format("{0}", selreg1),
                        string.Format("{0}", selreg2),
                        string.Format("{0}", regType1),
                        string.Format("{0}", regType2),
                        string.Format("{0}", participants)});
#line 1066
  testRunner.And("In ERS01009 I continue with the following details:", ((string)(null)), table212, "And ");
#line hidden
            TechTalk.SpecFlow.Table table213 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table213.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 1069
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table213, "And ");
#line 1072
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table214 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table214.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 1073
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table214, "And ");
#line hidden
            TechTalk.SpecFlow.Table table215 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table215.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 1076
  testRunner.Then("I copy output files to local", ((string)(null)), table215, "Then ");
#line 1079
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1080
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Employee_Loan_Plan_Statement_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSEmployeeLoanPlanStatement_Gold")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42717")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "", "", "", "", "7862", "", "30", "01/01/2014", "", "01/07/2013", "30/06/2014", "", "A", null)]
        public virtual void ESS_Employee_Loan_Plan_Statement_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string class1, 
                    string class2, 
                    string selgrp1, 
                    string selgrp2, 
                    string runRangeTO, 
                    string statementRunFrom, 
                    string marketValuePrice, 
                    string marketValueDate, 
                    string foreignExchangeRate, 
                    string stmtDsplayDateFrom, 
                    string stmtDsplayDateTO, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSEmployeeLoanPlanStatement_Gold",
                    "NAB2_AUTO_R",
                    "42717"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Employee_Loan_Plan_Statement_Goldcopy", @__tags);
#line 1091
this.ScenarioSetup(scenarioInfo);
#line 1092
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1093
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1094
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1095
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1096
  testRunner.And("In ERS00100 I click on: \"employee loan plan statement\" within the ESS Reporting M" +
                    "enu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table216 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table216.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 1097
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table216, "And ");
#line hidden
            TechTalk.SpecFlow.Table table217 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table217.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 1100
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table217, "And ");
#line hidden
            TechTalk.SpecFlow.Table table218 = new TechTalk.SpecFlow.Table(new string[] {
                        "Class1",
                        "Class2",
                        "Selgrp1",
                        "Selgrp2",
                        "RunRangeTO",
                        "StatementRunFrom",
                        "MarketValuePrice",
                        "MarketValueDate",
                        "ForeignExchangeRate",
                        "StmtDsplayDateFrom",
                        "StmtDsplayDateTO"});
            table218.AddRow(new string[] {
                        string.Format("{0}", class1),
                        string.Format("{0}", class2),
                        string.Format("{0}", selgrp1),
                        string.Format("{0}", selgrp2),
                        string.Format("{0}", runRangeTO),
                        string.Format("{0}", statementRunFrom),
                        string.Format("{0}", marketValuePrice),
                        string.Format("{0}", marketValueDate),
                        string.Format("{0}", foreignExchangeRate),
                        string.Format("{0}", stmtDsplayDateFrom),
                        string.Format("{0}", stmtDsplayDateTO)});
#line 1103
  testRunner.And("In ERS01020 I continue with the following details:", ((string)(null)), table218, "And ");
#line hidden
            TechTalk.SpecFlow.Table table219 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table219.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 1106
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table219, "And ");
#line 1109
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table220 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table220.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1110
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table220, "And ");
#line hidden
            TechTalk.SpecFlow.Table table221 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table221.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 1113
  testRunner.Then("I copy output files to local", ((string)(null)), table221, "Then ");
#line 1116
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1117
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Employee_AESS_Plan_Statement_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSEmployeeAESSPlanStatement_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42718")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "", "", "", "", "", "", "4405", "", "C", "C", "C", "10", "01/01/2014", "", "01/07/2013", "30/06/2014", "", "A", null)]
        public virtual void ESS_Employee_AESS_Plan_Statement_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string class1, 
                    string class2, 
                    string selgrp1, 
                    string selgrp2, 
                    string reg1, 
                    string reg2, 
                    string runRangeTO, 
                    string statementRunFrom, 
                    string bFBalanceInd, 
                    string statementDisplayInd, 
                    string ers01021PymtTranInd, 
                    string marketValuePrice, 
                    string marketValueDate, 
                    string foreignExchangeRate, 
                    string stmtDsplayDateFrom, 
                    string stmtDsplayDateTO, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSEmployeeAESSPlanStatement_Gold",
                    "CPU_AUTO_R",
                    "42718"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Employee_AESS_Plan_Statement_Goldcopy", @__tags);
#line 1130
this.ScenarioSetup(scenarioInfo);
#line 1131
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1132
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1133
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1134
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1135
  testRunner.And("In ERS00100 I click on: \"employee aess plan statement\" within the ESS Reporting M" +
                    "enu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table222 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table222.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 1136
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table222, "And ");
#line hidden
            TechTalk.SpecFlow.Table table223 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table223.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 1139
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table223, "And ");
#line hidden
            TechTalk.SpecFlow.Table table224 = new TechTalk.SpecFlow.Table(new string[] {
                        "Class1",
                        "Class2",
                        "Selgrp1",
                        "Selgrp2",
                        "Reg1",
                        "Reg2",
                        "RunRangeTO",
                        "StatementRunFrom",
                        "BFBalanceInd",
                        "StatementDisplayInd",
                        "Ers01021PymtTranInd",
                        "MarketValuePrice",
                        "MarketValueDate",
                        "ForeignExchangeRate",
                        "StmtDsplayDateFrom",
                        "StmtDsplayDateTO"});
            table224.AddRow(new string[] {
                        string.Format("{0}", class1),
                        string.Format("{0}", class2),
                        string.Format("{0}", selgrp1),
                        string.Format("{0}", selgrp2),
                        string.Format("{0}", reg1),
                        string.Format("{0}", reg2),
                        string.Format("{0}", runRangeTO),
                        string.Format("{0}", statementRunFrom),
                        string.Format("{0}", bFBalanceInd),
                        string.Format("{0}", statementDisplayInd),
                        string.Format("{0}", ers01021PymtTranInd),
                        string.Format("{0}", marketValuePrice),
                        string.Format("{0}", marketValueDate),
                        string.Format("{0}", foreignExchangeRate),
                        string.Format("{0}", stmtDsplayDateFrom),
                        string.Format("{0}", stmtDsplayDateTO)});
#line 1142
  testRunner.And("In ERS01021 I continue with the following details:", ((string)(null)), table224, "And ");
#line hidden
            TechTalk.SpecFlow.Table table225 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table225.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 1145
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table225, "And ");
#line 1148
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table226 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table226.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1149
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table226, "And ");
#line hidden
            TechTalk.SpecFlow.Table table227 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table227.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 1152
  testRunner.Then("I copy output files to local", ((string)(null)), table227, "Then ");
#line 1155
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1156
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Employee_Option_Plan_Statement_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSEmployeeOptionPlanStatement_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42719")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "", "", "", "", "", "", "G", "4405", "", "", "", "10", "01/01/2014", "01/07/2013", "30/06/2014", "Y", "", "A", "", null)]
        public virtual void ESS_Employee_Option_Plan_Statement_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string class1, 
                    string class2, 
                    string selgrp1, 
                    string selgrp2, 
                    string reg1, 
                    string reg2, 
                    string statementType, 
                    string runRangeTO, 
                    string statementRunFrom, 
                    string transDateFrom, 
                    string transDateTO, 
                    string marketValuePrice, 
                    string marketValueDate, 
                    string stmtDsplayDateFrom, 
                    string stmtDsplayDateTO, 
                    string nilHoldingsInd, 
                    string reportDate, 
                    string reportSeq, 
                    string confirm, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSEmployeeOptionPlanStatement_Gold",
                    "CPU_AUTO_R",
                    "42719"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Employee_Option_Plan_Statement_Goldcopy", @__tags);
#line 1167
this.ScenarioSetup(scenarioInfo);
#line 1169
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1170
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1171
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1172
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1173
  testRunner.And("In ERS00100 I click on: \"employee option plan statement\" within the ESS Reporting" +
                    " Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table228 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table228.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 1174
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table228, "And ");
#line hidden
            TechTalk.SpecFlow.Table table229 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table229.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 1177
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table229, "And ");
#line hidden
            TechTalk.SpecFlow.Table table230 = new TechTalk.SpecFlow.Table(new string[] {
                        "Class1",
                        "Class2",
                        "Selgrp1",
                        "Selgrp2",
                        "Reg1",
                        "Reg2",
                        "StatementType",
                        "RunRangeTO",
                        "StatementRunFrom",
                        "TransDateFrom",
                        "TransDateTO",
                        "MarketValuePrice",
                        "MarketValueDate",
                        "StmtDsplayDateFrom",
                        "StmtDsplayDateTO",
                        "NilHoldingsInd"});
            table230.AddRow(new string[] {
                        string.Format("{0}", class1),
                        string.Format("{0}", class2),
                        string.Format("{0}", selgrp1),
                        string.Format("{0}", selgrp2),
                        string.Format("{0}", reg1),
                        string.Format("{0}", reg2),
                        string.Format("{0}", statementType),
                        string.Format("{0}", runRangeTO),
                        string.Format("{0}", statementRunFrom),
                        string.Format("{0}", transDateFrom),
                        string.Format("{0}", transDateTO),
                        string.Format("{0}", marketValuePrice),
                        string.Format("{0}", marketValueDate),
                        string.Format("{0}", stmtDsplayDateFrom),
                        string.Format("{0}", stmtDsplayDateTO),
                        string.Format("{0}", nilHoldingsInd)});
#line 1180
  testRunner.And("In ERS01043 I continue with the following details:", ((string)(null)), table230, "And ");
#line hidden
            TechTalk.SpecFlow.Table table231 = new TechTalk.SpecFlow.Table(new string[] {
                        "Confirm"});
            table231.AddRow(new string[] {
                        string.Format("{0}", confirm)});
#line 1183
  testRunner.And("In ERS01044 I continue with the following details:", ((string)(null)), table231, "And ");
#line hidden
            TechTalk.SpecFlow.Table table232 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table232.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 1186
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table232, "And ");
#line 1189
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table233 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table233.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1190
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table233, "And ");
#line hidden
            TechTalk.SpecFlow.Table table234 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table234.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 1193
  testRunner.Then("I copy output files to local", ((string)(null)), table234, "Then ");
#line 1196
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1197
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Pre2010_Employee_Tax_Statements_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSPre2010EmployeeTaxStatements_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42720")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "DEP", "", "", "", "", "N", "", "", "4406", "", "01/01/2007", "30/06/2008", "", "Y", "", "A", null)]
        public virtual void ESS_Pre2010_Employee_Tax_Statements_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string class1, 
                    string payAcct1, 
                    string payAcct2, 
                    string classPerCatInd11, 
                    string classPerCatInd12, 
                    string useHistClassesInd, 
                    string histClass1, 
                    string histClass2, 
                    string runRangeTO, 
                    string statementRunFrom, 
                    string transDateFrom, 
                    string transDateTO, 
                    string loanDiscountPrice, 
                    string generateCsvInd, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSPre2010EmployeeTaxStatements_Gold",
                    "CPU_AUTO_R",
                    "42720"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Pre2010_Employee_Tax_Statements_Goldcopy", @__tags);
#line 1212
this.ScenarioSetup(scenarioInfo);
#line 1213
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1214
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1215
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1216
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1217
  testRunner.And("In ERS00100 I click on: \"pre 2010 employee tax statements\" within the ESS Reporti" +
                    "ng Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table235 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table235.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 1218
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table235, "And ");
#line hidden
            TechTalk.SpecFlow.Table table236 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2",
                        "UseHistClassesInd",
                        "HistClass1",
                        "HistClass2"});
            table236.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2),
                        string.Format("{0}", useHistClassesInd),
                        string.Format("{0}", histClass1),
                        string.Format("{0}", histClass2)});
#line 1221
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table236, "And ");
#line hidden
            TechTalk.SpecFlow.Table table237 = new TechTalk.SpecFlow.Table(new string[] {
                        "Class1",
                        "PayAcct1",
                        "PayAcct2",
                        "ClassPerCatInd11",
                        "ClassPerCatInd12",
                        "UseHistClassesInd",
                        "HistClass1",
                        "HistClass2",
                        "RunRangeTO",
                        "StatementRunFrom",
                        "TransDateFrom",
                        "TransDateTO",
                        "LoanDiscountPrice",
                        "GenerateCsvInd"});
            table237.AddRow(new string[] {
                        string.Format("{0}", class1),
                        string.Format("{0}", payAcct1),
                        string.Format("{0}", payAcct2),
                        string.Format("{0}", classPerCatInd11),
                        string.Format("{0}", classPerCatInd12),
                        "N",
                        string.Format("{0}", histClass1),
                        string.Format("{0}", histClass2),
                        string.Format("{0}", runRangeTO),
                        string.Format("{0}", statementRunFrom),
                        string.Format("{0}", transDateFrom),
                        string.Format("{0}", transDateTO),
                        string.Format("{0}", loanDiscountPrice),
                        string.Format("{0}", generateCsvInd)});
#line 1224
  testRunner.And("In ERS01062 I continue with the following details:", ((string)(null)), table237, "And ");
#line hidden
            TechTalk.SpecFlow.Table table238 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table238.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 1227
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table238, "And ");
#line 1230
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table239 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table239.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1231
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table239, "And ");
#line hidden
            TechTalk.SpecFlow.Table table240 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table240.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 1234
  testRunner.Then("I copy output files to local", ((string)(null)), table240, "Then ");
#line 1237
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1238
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Employee_Tax_Statements_Goldcopy")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSEmployeeTaxStatements_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42761")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "DEP", "", "", "", "", "", "", "", "N", "01/07/2013", "30/06/2014", "", "O", "", "Y", "", "A", null)]
        public virtual void ESS_Employee_Tax_Statements_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string class1, 
                    string payAcct1, 
                    string payAcct2, 
                    string classPerCatInd1, 
                    string classPerCatInd2, 
                    string useHistClassesInd, 
                    string histClass1, 
                    string histClass2, 
                    string reportCgtInd, 
                    string transDateFrom, 
                    string transDateTO, 
                    string loanDiscountPrice, 
                    string amendmentInd, 
                    string ers01022AmendTfnReqInd, 
                    string confirm, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ignore",
                    "ReportGoldcopyESS",
                    "ESSEmployeeTaxStatements_Gold",
                    "CPU_AUTO_R",
                    "42761"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Employee_Tax_Statements_Goldcopy", @__tags);
#line 1251
this.ScenarioSetup(scenarioInfo);
#line 1252
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1253
 testRunner.When("In SELCOY01 I select the company: \"CPU_A_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1254
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1255
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1256
  testRunner.And("In ERS00100 I click on: \"ess tax reporting\" within the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1257
  testRunner.And("In ERS00110 I click on: \"employee tax statements(standard)\" within the ESS Tax Re" +
                    "porting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table241 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table241.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 1258
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table241, "And ");
#line hidden
            TechTalk.SpecFlow.Table table242 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2",
                        "UseHistClassesInd",
                        "HistClass1",
                        "HistClass2"});
            table242.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2),
                        string.Format("{0}", useHistClassesInd),
                        string.Format("{0}", histClass1),
                        string.Format("{0}", histClass2)});
#line 1261
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table242, "And ");
#line hidden
            TechTalk.SpecFlow.Table table243 = new TechTalk.SpecFlow.Table(new string[] {
                        "Class1",
                        "PayAcct1",
                        "PayAcct2",
                        "ClassPerCatInd1",
                        "ClassPerCatInd2",
                        "UseHistClassesInd",
                        "HistClass1",
                        "HistClass2",
                        "ReportCgtInd",
                        "TransDateFrom",
                        "TransDateTO",
                        "LoanDiscountPrice",
                        "AmendmentInd",
                        "Ers01022AmendTfnReqInd"});
            table243.AddRow(new string[] {
                        string.Format("{0}", class1),
                        string.Format("{0}", payAcct1),
                        string.Format("{0}", payAcct2),
                        string.Format("{0}", classPerCatInd1),
                        string.Format("{0}", classPerCatInd2),
                        string.Format("{0}", useHistClassesInd),
                        string.Format("{0}", histClass1),
                        string.Format("{0}", histClass2),
                        string.Format("{0}", reportCgtInd),
                        string.Format("{0}", transDateFrom),
                        string.Format("{0}", transDateTO),
                        string.Format("{0}", loanDiscountPrice),
                        string.Format("{0}", amendmentInd),
                        string.Format("{0}", ers01022AmendTfnReqInd)});
#line 1264
  testRunner.And("In ERS01022 I continue with the following details:", ((string)(null)), table243, "And ");
#line hidden
            TechTalk.SpecFlow.Table table244 = new TechTalk.SpecFlow.Table(new string[] {
                        "Confirm"});
            table244.AddRow(new string[] {
                        string.Format("{0}", confirm)});
#line 1267
  testRunner.And("In ERS01064 I continue with the following details:", ((string)(null)), table244, "And ");
#line hidden
            TechTalk.SpecFlow.Table table245 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table245.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 1270
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table245, "And ");
#line 1273
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table246 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table246.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1274
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table246, "And ");
#line hidden
            TechTalk.SpecFlow.Table table247 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table247.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 1277
  testRunner.Then("I copy output files to local", ((string)(null)), table247, "Then ");
#line 1280
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1281
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Tax_Reporting_Status_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSTaxReportingStatusReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42763")]
        [NUnit.Framework.TestCaseAttribute("Test2", "N", "", "CPU_AUTO_R", "", "", "2014", "", "", "", "", "A", null)]
        public virtual void ESS_Tax_Reporting_Status_Report_Goldcopy(string reportHeading, string preload, string wildString, string coyCode151, string coyCode152, string coyCode153, string finYear, string taxStatus1, string taxStatus2, string taxStatus3, string reportDate, string reportSeq, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSTaxReportingStatusReport_Gold",
                    "CPU_AUTO_R",
                    "42763"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Tax_Reporting_Status_Report_Goldcopy", @__tags);
#line 1293
this.ScenarioSetup(scenarioInfo);
#line 1294
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1295
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1296
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1297
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1298
  testRunner.And("In ERS00100 I click on: \"ess tax reporting\" within the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1299
  testRunner.And("In ERS00110 I click on: \"ess tax reporting status report\" within the ESS Tax Repo" +
                    "rting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table248 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table248.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 1300
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table248, "And ");
#line hidden
            TechTalk.SpecFlow.Table table249 = new TechTalk.SpecFlow.Table(new string[] {
                        "CoyCode151",
                        "CoyCode152",
                        "CoyCode153",
                        "FinYear",
                        "TaxStatus1",
                        "TaxStatus2",
                        "TaxStatus3"});
            table249.AddRow(new string[] {
                        string.Format("{0}", coyCode151),
                        string.Format("{0}", coyCode152),
                        string.Format("{0}", coyCode153),
                        string.Format("{0}", finYear),
                        string.Format("{0}", taxStatus1),
                        string.Format("{0}", taxStatus2),
                        string.Format("{0}", taxStatus3)});
#line 1303
  testRunner.And("In ERS01050 I continue with the following details:", ((string)(null)), table249, "And ");
#line hidden
            TechTalk.SpecFlow.Table table250 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table250.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 1306
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table250, "And ");
#line 1309
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table251 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table251.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1310
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table251, "And ");
#line hidden
            TechTalk.SpecFlow.Table table252 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table252.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 1313
  testRunner.Then("I copy output files to local", ((string)(null)), table252, "Then ");
#line 1316
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1317
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_ATO_Provider_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSATOProviderReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42764")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "A", null)]
        public virtual void ESS_ATO_Provider_Report_Goldcopy(string reportHeading, string preload, string wildString, string coyCode151, string coyCode152, string coyCode153, string reportDate, string reportSeq, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSATOProviderReport_Gold",
                    "CPU_AUTO_R",
                    "42764"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_ATO_Provider_Report_Goldcopy", @__tags);
#line 1329
this.ScenarioSetup(scenarioInfo);
#line 1330
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1331
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1332
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1333
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1334
  testRunner.And("In ERS00100 I click on: \"ess tax reporting\" within the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1335
  testRunner.And("In ERS00110 I click on: \"ess ato provider report\" within the ESS Tax Reporting Me" +
                    "nu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table253 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table253.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 1336
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table253, "And ");
#line hidden
            TechTalk.SpecFlow.Table table254 = new TechTalk.SpecFlow.Table(new string[] {
                        "CoyCode151",
                        "CoyCode152",
                        "CoyCode153"});
            table254.AddRow(new string[] {
                        string.Format("{0}", coyCode151),
                        string.Format("{0}", coyCode152),
                        string.Format("{0}", coyCode153)});
#line 1339
  testRunner.And("In ERS01051 I continue with the following details:", ((string)(null)), table254, "And ");
#line hidden
            TechTalk.SpecFlow.Table table255 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table255.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 1342
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table255, "And ");
#line 1345
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table256 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table256.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1346
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table256, "And ");
#line hidden
            TechTalk.SpecFlow.Table table257 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table257.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 1349
  testRunner.Then("I copy output files to local", ((string)(null)), table257, "Then ");
#line 1352
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1353
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_TFN_Withholding_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSTFNWithholdingReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42765")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "DEP", "2014", "", "A", null)]
        public virtual void ESS_TFN_Withholding_Report_Goldcopy(string reportHeading, string preload, string wildString, string empStatus1, string empStatus2, string leaverCode1, string leaverCode2, string @class, string financialYear, string reportDate, string reportSeq, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSTFNWithholdingReport_Gold",
                    "CPU_AUTO_R",
                    "42765"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_TFN_Withholding_Report_Goldcopy", @__tags);
#line 1365
this.ScenarioSetup(scenarioInfo);
#line 1367
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1368
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1369
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1370
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1371
  testRunner.And("In ERS00100 I click on: \"ess tax reporting\" within the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1372
  testRunner.And("In ERS00110 I click on: \"ess tfn withholding report\" within the ESS Tax Reporting" +
                    " Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table258 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table258.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 1373
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table258, "And ");
#line hidden
            TechTalk.SpecFlow.Table table259 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table259.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 1376
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table259, "And ");
#line hidden
            TechTalk.SpecFlow.Table table260 = new TechTalk.SpecFlow.Table(new string[] {
                        "Class",
                        "FinancialYear"});
            table260.AddRow(new string[] {
                        string.Format("{0}", @class),
                        string.Format("{0}", financialYear)});
#line 1379
  testRunner.And("In ERS01052 I continue with the following details:", ((string)(null)), table260, "And ");
#line hidden
            TechTalk.SpecFlow.Table table261 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table261.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 1382
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table261, "And ");
#line 1385
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table262 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table262.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1386
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table262, "And ");
#line hidden
            TechTalk.SpecFlow.Table table263 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table263.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 1389
  testRunner.Then("I copy output files to local", ((string)(null)), table263, "Then ");
#line 1392
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1393
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
