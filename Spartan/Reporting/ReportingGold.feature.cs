// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SCRIPAU.Automation.Reporting
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ReportingGold")]
    public partial class ReportingGoldFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ReportingGold.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ReportingGold", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Top_Holders_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("TopHoldersReport_Gold")]
        [NUnit.Framework.CategoryAttribute("QBE_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("25592")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyOther")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        public virtual void Top_Holders_Report_Goldcopy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Top_Holders_Report_Goldcopy", new string[] {
                        "TopHoldersReport_Gold",
                        "QBE_AUTO_R",
                        "25592",
                        "ReportGoldcopyOther",
                        "ReportingGold"});
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
 testRunner.And("In SELCOY01 I select the company: \"QBE_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
 testRunner.And("In RSS00101 I click on: \"top holders list\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ASATRun"});
            table1.AddRow(new string[] {
                        "20/07/2015",
                        "5190"});
#line 13
 testRunner.And("In RSS02010 I continue with the following details:", ((string)(null)), table1, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Cls1",
                        "Cls2",
                        "Cls3",
                        "Cls4",
                        "Cls5",
                        "Cls6",
                        "Cls7",
                        "Cls8",
                        "Cls9",
                        "Cls10",
                        "ClgCon",
                        "GroupIDX",
                        "TopSHLimit",
                        "ReportType",
                        "ReportRun1",
                        "ReportRun1",
                        "UseGroupCodes",
                        "PrintGrpDetails",
                        "HolderIDTOPrint",
                        "NameAddressTOPrint",
                        "HtcFlag",
                        "HT",
                        "SystemInfoFree6",
                        "SystemInfoFree4",
                        "SystemInfoFree7",
                        "SystemInfoFree5"});
            table2.AddRow(new string[] {
                        "DCP",
                        "DMZ",
                        "EDL",
                        "EMP",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "5",
                        "",
                        "100",
                        "S",
                        "",
                        "",
                        "Y",
                        "",
                        "Y",
                        "F",
                        "A",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 16
 testRunner.And("In RSS02020 I continue with the following details:", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClsgrpOutputOption"});
            table3.AddRow(new string[] {
                        "A"});
#line 19
 testRunner.And("In RSS10060 I continue with the following details:", ((string)(null)), table3, "And ");
#line 22
 testRunner.When("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table4.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 23
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table5.AddRow(new string[] {
                        "Filtered",
                        ""});
#line 26
  testRunner.Then("I copy output files to local", ((string)(null)), table5, "Then ");
#line 29
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Like_Holders_Summary_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("LikeHoldersSummaryReport_Gold")]
        [NUnit.Framework.CategoryAttribute("QBE_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("28503")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyOther")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        public virtual void Like_Holders_Summary_Report_Goldcopy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Like_Holders_Summary_Report_Goldcopy", new string[] {
                        "LikeHoldersSummaryReport_Gold",
                        "QBE_AUTO_R",
                        "28503",
                        "ReportGoldcopyOther",
                        "ReportingGold"});
#line 37
this.ScenarioSetup(scenarioInfo);
#line 38
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 39
 testRunner.And("In SELCOY01 I select the company: \"QBE_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.And("In RSS00101 I click on: \"like holders summary\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection",
                        "Cls1",
                        "Match",
                        "UseInputFile"});
            table6.AddRow(new string[] {
                        "B",
                        "DCV",
                        "A",
                        "N"});
#line 42
 testRunner.And("In RSS05500 I continue with the following details:", ((string)(null)), table6, "And ");
#line 45
 testRunner.When("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table7.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 46
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table7, "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table8.AddRow(new string[] {
                        "Filtered",
                        ""});
#line 49
  testRunner.Then("I copy output files to local", ((string)(null)), table8, "Then ");
#line 52
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Significant_Trade_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("SignificantTradeReport_Gold")]
        [NUnit.Framework.CategoryAttribute("QBE_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("28977")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyOther")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        public virtual void Significant_Trade_Report_Goldcopy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Significant_Trade_Report_Goldcopy", new string[] {
                        "SignificantTradeReport_Gold",
                        "QBE_AUTO_R",
                        "28977",
                        "ReportGoldcopyOther",
                        "ReportingGold"});
#line 62
this.ScenarioSetup(scenarioInfo);
#line 63
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 64
 testRunner.And("In SELCOY01 I select the company: \"QBE_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
 testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 66
 testRunner.And("In RSS00101 I click on: \"shareholder movement reporting\" within the Reporting Sys" +
                    "tem Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
 testRunner.And("In RSS18010 I click on: \"significant trade report\" within the Shareholder Movemen" +
                    "t Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "PreloadDefaults"});
            table9.AddRow(new string[] {
                        "N"});
#line 68
 testRunner.And("In RSS18000 I continue with the following details:", ((string)(null)), table9, "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "Cls1",
                        "Cls2",
                        "Cls3",
                        "NadTOPrint",
                        "MovementLevel",
                        "HolderLimit",
                        "ReportType"});
            table10.AddRow(new string[] {
                        "Significant Trade Report",
                        "DEA",
                        "DCP",
                        "ENT",
                        "N",
                        "150",
                        "100",
                        "D"});
#line 71
 testRunner.And("In RSS18001 I continue with the following details:", ((string)(null)), table10, "And ");
#line 74
 testRunner.When("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table11.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 75
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table11, "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table12.AddRow(new string[] {
                        "Filtered",
                        ""});
#line 78
  testRunner.Then("I copy output files to local", ((string)(null)), table12, "Then ");
#line 81
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Plan_Detail_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("PlanDetailReport_Gold")]
        [NUnit.Framework.CategoryAttribute("QBE_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("28979")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyOther")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        public virtual void Plan_Detail_Report_Goldcopy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Plan_Detail_Report_Goldcopy", new string[] {
                        "PlanDetailReport_Gold",
                        "QBE_AUTO_R",
                        "28979",
                        "ReportGoldcopyOther",
                        "ReportingGold"});
#line 89
this.ScenarioSetup(scenarioInfo);
#line 90
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 91
 testRunner.And("In SELCOY01 I select the company: \"QBE_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
 testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
 testRunner.And("In RSS00101 I click on: \"plan reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table13.AddRow(new string[] {
                        "PD"});
#line 94
 testRunner.And("In RSS07001 I continue with the following details:", ((string)(null)), table13, "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "PlanSelection1",
                        "PlanSelection2",
                        "PlanPartType",
                        "BalanceSelection",
                        "ReportType"});
            table14.AddRow(new string[] {
                        "BSP1",
                        "DRP1",
                        "P",
                        "W",
                        "F"});
#line 97
 testRunner.And("In RSS07500 I continue with the following details:", ((string)(null)), table14, "And ");
#line 100
 testRunner.When("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table15.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 101
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table15, "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table16.AddRow(new string[] {
                        "Filtered",
                        ""});
#line 104
  testRunner.Then("I copy output files to local", ((string)(null)), table16, "Then ");
#line 107
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 108
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Broker_Application_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("BrokerApplicationReport_Gold")]
        [NUnit.Framework.CategoryAttribute("QBE_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("28981")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyOther")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Iteration1", "3/09/2015", "", "", "", "", "", "ENT", "", "", "", "1", "5208", "c", "Y", "F", "Y", "N", "1", "10", "60", "", "1/1/2000", "2", null)]
        public virtual void Broker_Application_Report_Goldcopy(
                    string reportHeading, 
                    string repDate, 
                    string brokerCode1, 
                    string brokerCode2, 
                    string brokercode3, 
                    string brokerCode4, 
                    string brokerCode5, 
                    string cls1, 
                    string cls2, 
                    string cls3, 
                    string clgCon, 
                    string runFrom, 
                    string runTO, 
                    string brokerReportSeq, 
                    string printUnknown, 
                    string reportType, 
                    string printHin, 
                    string brokerCommission, 
                    string commissionFrom1, 
                    string commissionTo1, 
                    string commPerc, 
                    string chequesRequired, 
                    string chequeDate, 
                    string chequeFormat, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "BrokerApplicationReport_Gold",
                    "QBE_AUTO_R",
                    "28981",
                    "ReportGoldcopyOther",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Broker_Application_Report_Goldcopy", @__tags);
#line 116
this.ScenarioSetup(scenarioInfo);
#line 117
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 118
 testRunner.And("In SELCOY01 I select the company: \"QBE_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 119
 testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 120
 testRunner.And("In RSS00101 I click on: \"broker reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 121
 testRunner.And("In RSS09000 I click on: \"broker application report\" within the Broker Analysis Me" +
                    "nu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "RepDate",
                        "BrokerCode1",
                        "BrokerCode2",
                        "Brokercode3",
                        "BrokerCode4",
                        "BrokerCode5",
                        "Cls1",
                        "Cls2",
                        "Cls3",
                        "ClgCon",
                        "RunFrom",
                        "RunTO",
                        "BrokerReportSeq",
                        "PrintUnknown",
                        "ReportType",
                        "PrintHin",
                        "BrokerCommission",
                        "CommissionFrom1",
                        "CommissionTo1",
                        "CommPerc",
                        "ChequesRequired",
                        "ChequeDate",
                        "ChequeFormat"});
            table17.AddRow(new string[] {
                        string.Format("{0}", repDate),
                        string.Format("{0}", brokerCode1),
                        string.Format("{0}", brokerCode2),
                        string.Format("{0}", brokercode3),
                        string.Format("{0}", brokerCode4),
                        string.Format("{0}", brokerCode5),
                        string.Format("{0}", cls1),
                        string.Format("{0}", cls2),
                        string.Format("{0}", cls3),
                        string.Format("{0}", clgCon),
                        string.Format("{0}", runFrom),
                        string.Format("{0}", runTO),
                        string.Format("{0}", brokerReportSeq),
                        string.Format("{0}", printUnknown),
                        string.Format("{0}", reportType),
                        string.Format("{0}", printHin),
                        string.Format("{0}", brokerCommission),
                        string.Format("{0}", commissionFrom1),
                        string.Format("{0}", commissionTo1),
                        string.Format("{0}", commPerc),
                        string.Format("{0}", chequesRequired),
                        string.Format("{0}", chequeDate),
                        string.Format("{0}", chequeFormat)});
#line 122
 testRunner.And("In RSS09002 I continue with the following details:", ((string)(null)), table17, "And ");
#line 125
 testRunner.When("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table18.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 126
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table18, "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table19.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 129
  testRunner.Then("I copy output files to local", ((string)(null)), table19, "Then ");
#line 132
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 133
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Transaction_Activity_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("TransactionActivityReport_Gold")]
        [NUnit.Framework.CategoryAttribute("QBE_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("28980")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyOther")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("ReportTypeS", "S", "NACHG", "ESCVP", null)]
        public virtual void Transaction_Activity_Report_Goldcopy(string reportHeading, string reportType, string transCode1, string transCode2, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TransactionActivityReport_Gold",
                    "QBE_AUTO_R",
                    "28980",
                    "ReportGoldcopyOther",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Transaction_Activity_Report_Goldcopy", @__tags);
#line 150
this.ScenarioSetup(scenarioInfo);
#line 151
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 152
 testRunner.And("In SELCOY01 I select the company: \"QBE_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 153
 testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 154
 testRunner.And("In RSS00101 I click on: \"control reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 155
 testRunner.And("In RSS13000 I click on: \"transaction activity reporting\" within the Control Repor" +
                    "ting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Client",
                        "Company",
                        "UserName",
                        "StartDate",
                        "EndDate",
                        "OrigSystem",
                        "ServProvider",
                        "ServCode",
                        "Department",
                        "Branch",
                        "TransCode1",
                        "TransCode2",
                        "BrokerCode",
                        "AccessCode",
                        "ReportType"});
            table20.AddRow(new string[] {
                        "CRS",
                        "QBE_AUTO_R",
                        "",
                        "01/07/2011",
                        "25/08/2011",
                        "TEST",
                        "",
                        "",
                        "SCRPDV",
                        "",
                        string.Format("{0}", transCode1),
                        string.Format("{0}", transCode2),
                        "",
                        "",
                        string.Format("{0}", reportType)});
#line 156
 testRunner.And("In RSS23001 I continue with the following details:", ((string)(null)), table20, "And ");
#line 159
 testRunner.When("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table21.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 160
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table21, "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table22.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 163
  testRunner.Then("I copy output files to local", ((string)(null)), table22, "Then ");
#line 166
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 167
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Shareholder_Movement_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ShareholderMovementReport_Gold")]
        [NUnit.Framework.CategoryAttribute("QBE_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("29320")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyOther")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        public virtual void Shareholder_Movement_Report_Goldcopy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Shareholder_Movement_Report_Goldcopy", new string[] {
                        "ShareholderMovementReport_Gold",
                        "QBE_AUTO_R",
                        "29320",
                        "ReportGoldcopyOther",
                        "ReportingGold"});
#line 180
this.ScenarioSetup(scenarioInfo);
#line 181
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 182
 testRunner.And("In SELCOY01 I select the company: \"QBE_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 183
 testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 184
 testRunner.And("In RSS00101 I click on: \"shareholder movement reporting\" within the Reporting Sys" +
                    "tem Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 185
 testRunner.And("In RSS18010 I click on: \"shareholder movement report\" within the Shareholder Move" +
                    "ment Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "PreloadDefaults"});
            table23.AddRow(new string[] {
                        "N"});
#line 186
 testRunner.And("In RSS19000 I continue with the following details:", ((string)(null)), table23, "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Cls1",
                        "Cls2",
                        "Cls3",
                        "Clg",
                        "Htc",
                        "BalanceLimit",
                        "RunFrom",
                        "RunTO"});
            table24.AddRow(new string[] {
                        "EBS",
                        "LNN",
                        "DEA",
                        "1",
                        "",
                        "5000",
                        "1",
                        "5206"});
#line 189
 testRunner.And("In RSS19001 I continue with the following details:", ((string)(null)), table24, "And ");
#line 192
 testRunner.When("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table25.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 193
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table25, "And ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table26.AddRow(new string[] {
                        "Filtered",
                        ""});
#line 196
  testRunner.Then("I copy output files to local", ((string)(null)), table26, "Then ");
#line 199
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 200
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Broker_Trading_Analysis_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("BrokerTradingAnalysisReport_Gold")]
        [NUnit.Framework.CategoryAttribute("QBE_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("29873")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyOther")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Iteration1", "", "", "", "", "500", "A", "", "S", "1", "5208", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Iteration2", "DCP", "DEA", "EBR", "ENT", "200", "D", "62571", "A", "5144", "5170", "1", "5", null)]
        public virtual void Broker_Trading_Analysis_Report_Goldcopy(string reportHeading, string cls1, string cls2, string cls3, string cls4, string level, string sequence, string brokerCode, string selection, string runFrom, string runTO, string transGroupFrom, string transGroupTO, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "BrokerTradingAnalysisReport_Gold",
                    "QBE_AUTO_R",
                    "29873",
                    "ReportGoldcopyOther",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Broker_Trading_Analysis_Report_Goldcopy", @__tags);
#line 207
this.ScenarioSetup(scenarioInfo);
#line 208
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 209
 testRunner.And("In SELCOY01 I select the company: \"QBE_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 210
 testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 211
 testRunner.And("In RSS00101 I click on: \"broker reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 212
 testRunner.And("In RSS09000 I click on: \"broker trading analysis\" within the Broker Analysis Menu" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Cls1",
                        "Cls2",
                        "Cls3",
                        "Cls4",
                        "Level",
                        "Sequence",
                        "BrokerCode",
                        "Selection",
                        "RunFrom",
                        "RunTO",
                        "TransGroupFrom",
                        "TransGroupTO"});
            table27.AddRow(new string[] {
                        string.Format("{0}", cls1),
                        string.Format("{0}", cls2),
                        string.Format("{0}", cls3),
                        string.Format("{0}", cls4),
                        string.Format("{0}", level),
                        string.Format("{0}", sequence),
                        string.Format("{0}", brokerCode),
                        string.Format("{0}", selection),
                        string.Format("{0}", runFrom),
                        string.Format("{0}", runTO),
                        string.Format("{0}", transGroupFrom),
                        string.Format("{0}", transGroupTO)});
#line 213
 testRunner.And("In RSS09001 I continue with the following details:", ((string)(null)), table27, "And ");
#line 216
 testRunner.When("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table28.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 217
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table28, "And ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table29.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 220
  testRunner.Then("I copy output files to local", ((string)(null)), table29, "Then ");
#line 223
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 224
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Transaction_Summary_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("TransactionSummaryReport_Gold")]
        [NUnit.Framework.CategoryAttribute("QBE_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("28489")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyOther")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("ReportTypeC", "C", "F", "0111", "0416", null)]
        [NUnit.Framework.TestCaseAttribute("ReportTypeA", "A", "T", "1214", "0215", null)]
        public virtual void Transaction_Summary_Report_Goldcopy(string reportHeading, string reportType, string outputFormat, string dateFrom, string dateTO, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TransactionSummaryReport_Gold",
                    "QBE_AUTO_R",
                    "28489",
                    "ReportGoldcopyOther",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Transaction_Summary_Report_Goldcopy", @__tags);
#line 238
this.ScenarioSetup(scenarioInfo);
#line 239
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 240
 testRunner.And("In SELCOY01 I select the company: \"QBE_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 241
 testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 242
 testRunner.And("In RSS00101 I click on: \"control reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 243
 testRunner.And("In RSS13000 I click on: \"transaction summary reporting\" within the Control Report" +
                    "ing Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Companies",
                        "OutputFormat",
                        "DateFrom",
                        "DateTO"});
            table30.AddRow(new string[] {
                        string.Format("{0}", reportType),
                        string.Format("{0}", outputFormat),
                        string.Format("{0}", dateFrom),
                        string.Format("{0}", dateTO)});
#line 244
 testRunner.And("In RSS13003 I continue with the following details:", ((string)(null)), table30, "And ");
#line 247
 testRunner.When("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table31.AddRow(new string[] {
                        "completion",
                        "1200",
                        "error"});
#line 248
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table31, "And ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table32.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 251
  testRunner.Then("I copy output files to local", ((string)(null)), table32, "Then ");
#line 254
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 255
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Significant_Holder_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("SignificantHolderReport_Gold")]
        [NUnit.Framework.CategoryAttribute("QBE_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("30546")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyOther")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Broad", "", "", "", "", "1", "M", "N", "", "N", "500", "R", "5208", "5132", "F", "A", "Y", "Y", "A", "Y", "Y", "S", null)]
        [NUnit.Framework.TestCaseAttribute("Filtered", "ASA", "DEA", "DCV", "DCP", "", "H", "", "500", "", "", "M", "", "", "F", "D", "Y", "N", "B", "Y", "", "A", null)]
        public virtual void Significant_Holder_Report_Goldcopy(
                    string reportHeading, 
                    string cls1, 
                    string cls2, 
                    string cls3, 
                    string cls4, 
                    string clgCon, 
                    string selection, 
                    string groupEssTrustees, 
                    string highestBalanceLevel, 
                    string movementSelection, 
                    string movementLevel, 
                    string reportingPeriod, 
                    string runTO, 
                    string runFrom, 
                    string nameAddressTOPrint, 
                    string sequence, 
                    string holderLimit, 
                    string holderIDTOPrint, 
                    string order, 
                    string incEntrepot, 
                    string printGrpDetails, 
                    string clsgrpOutputOption, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SignificantHolderReport_Gold",
                    "QBE_AUTO_R",
                    "30546",
                    "ReportGoldcopyOther",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Significant_Holder_Report_Goldcopy", @__tags);
#line 268
this.ScenarioSetup(scenarioInfo);
#line 270
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 271
 testRunner.And("In SELCOY01 I select the company: \"QBE_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 272
 testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 273
 testRunner.And("In RSS00101 I click on: \"shareholder movement reporting\" within the Reporting Sys" +
                    "tem Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 274
 testRunner.And("In RSS18010 I click on: \"significant holder report\" within the Shareholder Moveme" +
                    "nt Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "PreloadDefaults"});
            table33.AddRow(new string[] {
                        "N"});
#line 275
 testRunner.And("In RSS01500 I continue with the following details:", ((string)(null)), table33, "And ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Cls1",
                        "Cls2",
                        "Cls3",
                        "Cls4",
                        "ClgCon",
                        "Selection",
                        "GroupEssTrustees",
                        "HighestBalanceLevel",
                        "MovementSelection",
                        "MovementLevel",
                        "ReportingPeriod",
                        "RunFrom",
                        "RunTO",
                        "NameAddressTOPrint",
                        "Sequence",
                        "HolderLimit",
                        "HolderIDTOPrint",
                        "Order",
                        "IncEntrepot",
                        "PrintGrpDetails"});
            table34.AddRow(new string[] {
                        string.Format("{0}", cls1),
                        string.Format("{0}", cls2),
                        string.Format("{0}", cls3),
                        string.Format("{0}", cls4),
                        string.Format("{0}", clgCon),
                        string.Format("{0}", selection),
                        string.Format("{0}", groupEssTrustees),
                        string.Format("{0}", highestBalanceLevel),
                        string.Format("{0}", movementSelection),
                        string.Format("{0}", movementLevel),
                        string.Format("{0}", reportingPeriod),
                        string.Format("{0}", runFrom),
                        string.Format("{0}", runTO),
                        string.Format("{0}", nameAddressTOPrint),
                        string.Format("{0}", sequence),
                        string.Format("{0}", holderLimit),
                        string.Format("{0}", holderIDTOPrint),
                        string.Format("{0}", order),
                        string.Format("{0}", incEntrepot),
                        string.Format("{0}", printGrpDetails)});
#line 278
 testRunner.And("In RSS01501 I continue with the following details:", ((string)(null)), table34, "And ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClsgrpOutputOption"});
            table35.AddRow(new string[] {
                        string.Format("{0}", clsgrpOutputOption)});
#line 281
 testRunner.And("In RSS10060 I continue with the following details:", ((string)(null)), table35, "And ");
#line 284
 testRunner.When("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table36.AddRow(new string[] {
                        "completion",
                        "800",
                        "error"});
#line 285
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table36, "And ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table37.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 288
  testRunner.Then("I copy output files to local", ((string)(null)), table37, "Then ");
#line 291
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 292
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Print_Master_Codes_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("PrintMasterCodesReport_Gold")]
        [NUnit.Framework.CategoryAttribute("QBE_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("30732")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyOther")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        public virtual void Print_Master_Codes_Report_Goldcopy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Print_Master_Codes_Report_Goldcopy", new string[] {
                        "PrintMasterCodesReport_Gold",
                        "QBE_AUTO_R",
                        "30732",
                        "ReportGoldcopyOther",
                        "ReportingGold"});
#line 307
this.ScenarioSetup(scenarioInfo);
#line 308
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 309
 testRunner.And("In SELCOY01 I select the company: \"QBE_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 310
 testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 311
 testRunner.And("In RSS00101 I click on: \"control reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 312
 testRunner.And("In RSS13000 I click on: \"print master codes\" within the Control Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 313
 testRunner.When("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table38.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 314
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table38, "And ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table39.AddRow(new string[] {
                        "Filtered",
                        ""});
#line 317
  testRunner.Then("I copy output files to local", ((string)(null)), table39, "Then ");
#line 320
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 321
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Holder_Type_Summary_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("HolderTypeSummaryReport_Gold")]
        [NUnit.Framework.CategoryAttribute("QBE_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("31339")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyOther")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Iteration1", "Holder Type Summary", "N", "", "", "", "N", "N", "ASA", "DCP", "DCV", "DEA", "EBL", "EBR", "EBS", "LNN", "EDR", "ENT", "", "", "", "", "", "", "", "", "", "A", "", "", "", "", "", "N", "", "", "A", "", "", "", "", "A", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Iteration2", "Holder Type Summary", "N", "", "", "", "N", "Y", "ASA", "DCP", "LNN", "", "", "", "", "", "", "", "1", "", "", "", "", "", "", "", "", "C", "COMBO1", "1000", "99999999999", "", "", "Y", "U", "10.00", "I", "3000", "3020", "", "", "A", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Iteration3", "Holder Type Summary", "N", "", "5195", "", "N", "Y", "", "", "", "", "", "", "", "", "", "", "5", "9", "", "", "", "", "nsw", "", "", "C", "COMBO2", "1", "99999999999", "", "", "Y", "R", "", "E", "", "", "", "", "E", "", "", "", "", null)]
        public virtual void Holder_Type_Summary_Report_Goldcopy(
                    string reportHeading, 
                    string reportDesc, 
                    string preload, 
                    string wildString, 
                    string aSATRun, 
                    string reportDate, 
                    string inputFile, 
                    string inputFilename, 
                    string cls1, 
                    string cls2, 
                    string cls3, 
                    string cls4, 
                    string cls5, 
                    string cls6, 
                    string cls7, 
                    string cls8, 
                    string cls9, 
                    string cls10, 
                    string clg1, 
                    string clg2, 
                    string clg3, 
                    string groupIDX1, 
                    string groupIDX2, 
                    string groupIDX3, 
                    string reg1, 
                    string reg2, 
                    string reg3, 
                    string clsgrpOutputOption, 
                    string comboDescription, 
                    string runits18From, 
                    string runits18TO, 
                    string runits916From, 
                    string runits916TO, 
                    string useClassPrice, 
                    string priceMethod, 
                    string classPriceA, 
                    string localFlag, 
                    string pCFrom1, 
                    string pCTo1, 
                    string pCFrom2, 
                    string pCTo2, 
                    string domcodeFlag, 
                    string dC1, 
                    string dC2, 
                    string reportingPeriod, 
                    string mandatoryDCInd, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "HolderTypeSummaryReport_Gold",
                    "QBE_AUTO_R",
                    "31339",
                    "ReportGoldcopyOther",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Holder_Type_Summary_Report_Goldcopy", @__tags);
#line 328
this.ScenarioSetup(scenarioInfo);
#line 329
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 330
 testRunner.And("In SELCOY01 I select the company: \"QBE_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 331
 testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 332
 testRunner.And("In RSS00101 I click on: \"summary reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 333
 testRunner.And("In RSS01010 I click on: \"holder type summary\" within the Summary Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table40.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 334
 testRunner.And("In RSS01015 I continue with the following details:", ((string)(null)), table40, "And ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDesc",
                        "ASATRun",
                        "ReportDate",
                        "InputFile",
                        "InputFilename"});
            table41.AddRow(new string[] {
                        string.Format("{0}", reportDesc),
                        string.Format("{0}", aSATRun),
                        string.Format("{0}", reportDate),
                        string.Format("{0}", inputFile),
                        string.Format("{0}", inputFilename)});
#line 337
 testRunner.And("In RSS01020 I continue with the following details:", ((string)(null)), table41, "And ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Cls1",
                        "Cls2",
                        "Cls3",
                        "Cls4",
                        "Cls5",
                        "Cls6",
                        "Cls7",
                        "Cls8",
                        "Cls9",
                        "Cls10",
                        "Clg1",
                        "Clg2",
                        "Clg3",
                        "GroupIDX1",
                        "GroupIDX2",
                        "GroupIDX3",
                        "Reg1",
                        "Reg2",
                        "Reg3",
                        "ReportingPeriod",
                        "MandatoryDCInd"});
            table42.AddRow(new string[] {
                        string.Format("{0}", cls1),
                        string.Format("{0}", cls2),
                        string.Format("{0}", cls3),
                        string.Format("{0}", cls4),
                        string.Format("{0}", cls5),
                        string.Format("{0}", cls6),
                        string.Format("{0}", cls7),
                        string.Format("{0}", cls8),
                        string.Format("{0}", cls9),
                        string.Format("{0}", cls10),
                        string.Format("{0}", clg1),
                        string.Format("{0}", clg2),
                        string.Format("{0}", clg3),
                        string.Format("{0}", groupIDX1),
                        string.Format("{0}", groupIDX2),
                        string.Format("{0}", groupIDX3),
                        string.Format("{0}", reg1),
                        string.Format("{0}", reg2),
                        string.Format("{0}", reg3),
                        string.Format("{0}", reportingPeriod),
                        string.Format("{0}", mandatoryDCInd)});
#line 340
 testRunner.And("In RSS01030 I continue with the following details:", ((string)(null)), table42, "And ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClsgrpOutputOption",
                        "ComboDescription"});
            table43.AddRow(new string[] {
                        string.Format("{0}", clsgrpOutputOption),
                        string.Format("{0}", comboDescription)});
#line 343
 testRunner.And("In RSS10060 I continue with the following details:", ((string)(null)), table43, "And ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Runits18From",
                        "Runits18TO",
                        "Runits916From",
                        "Runits916TO",
                        "UseClassPrice",
                        "PriceMethod",
                        "ClassPriceA"});
            table44.AddRow(new string[] {
                        string.Format("{0}", runits18From),
                        string.Format("{0}", runits18TO),
                        string.Format("{0}", runits916From),
                        string.Format("{0}", runits916TO),
                        string.Format("{0}", useClassPrice),
                        string.Format("{0}", priceMethod),
                        string.Format("{0}", classPriceA)});
#line 346
 testRunner.And("In RSS01040 I continue with the following details:", ((string)(null)), table44, "And ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "LocalFlag",
                        "PCFrom1",
                        "PCTo1",
                        "PCFrom2",
                        "PCTo2",
                        "DomcodeFlag",
                        "DC1",
                        "DC2"});
            table45.AddRow(new string[] {
                        string.Format("{0}", localFlag),
                        string.Format("{0}", pCFrom1),
                        string.Format("{0}", pCTo1),
                        string.Format("{0}", pCFrom1),
                        string.Format("{0}", pCTo1),
                        string.Format("{0}", domcodeFlag),
                        string.Format("{0}", dC1),
                        string.Format("{0}", dC2)});
#line 349
 testRunner.And("In RSS01050 I continue with the following details:", ((string)(null)), table45, "And ");
#line 352
 testRunner.When("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table46.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 353
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table46, "And ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table47.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 356
  testRunner.Then("I copy output files to local", ((string)(null)), table47, "Then ");
#line 359
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 360
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Local_Domicile_Summary_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("LocalDomicileSummaryReport_Gold")]
        [NUnit.Framework.CategoryAttribute("QBE_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("31592")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyOther")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Itereation1", "Local/Domicile Summary", "N", "", "", "", "N", "N", "DMZ", "E01", "E02", "E03", "EBS", "EC1", "EC2", "EL1", "ENT", "EVM", "", "", "", "", "", "", "", "", "", "A", "1000", "99999999999", "", "", "N", "A", "", "", "", "A", "A", "AUD", "", "", "", "", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Itereation2", "Local/Domicile Summary", "N", "", "", "", "N", "Y", "ASA", "DCP", "LNN", "", "", "", "", "", "", "", "1", "", "", "", "", "", "", "", "", "A", "100", "550", "551", "800", "Y", "E", "CNT", "DEC", "", "L", "D", "AUD", "", "", "", "", "10.00", "10.00", "10.00", "10.00", null)]
        [NUnit.Framework.TestCaseAttribute("Itereation3", "Local/Domicile Summary", "N", "", "5170", "", "N", "Y", "DCV", "ENT", "", "", "", "", "", "", "", "", "1", "5", "", "", "", "", "nsw", "", "", "A", "", "", "", "", "N", "I", "COY", "ESP", "JNT", "D", "A", "AUD", "", "", "", "", "", "", "", "", null)]
        public virtual void Local_Domicile_Summary_Report_Goldcopy(
                    string reportHeading, 
                    string reportDesc, 
                    string preload, 
                    string wildString, 
                    string aSATRun, 
                    string reportDate, 
                    string inputFile, 
                    string inputFilename, 
                    string cls1, 
                    string cls2, 
                    string cls3, 
                    string cls4, 
                    string cls5, 
                    string cls6, 
                    string cls7, 
                    string cls8, 
                    string cls9, 
                    string cls10, 
                    string clg1, 
                    string clg2, 
                    string clg3, 
                    string groupIDX1, 
                    string groupIDX2, 
                    string groupIDX3, 
                    string reg1, 
                    string reg2, 
                    string reg3, 
                    string clsgrpOutputOption, 
                    string runits18From, 
                    string runits18TO, 
                    string runits916From, 
                    string runits916TO, 
                    string useClassPrice, 
                    string htcFlag, 
                    string hT1, 
                    string hT2, 
                    string hT3, 
                    string localDomicileFlag, 
                    string domicileSequence, 
                    string localDomicile, 
                    string mandatoryDCInd, 
                    string reportingPeriod, 
                    string domcodeFlag, 
                    string priceMethod, 
                    string classPriceA, 
                    string classPriceB, 
                    string classPriceC, 
                    string classPriceD, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "LocalDomicileSummaryReport_Gold",
                    "QBE_AUTO_R",
                    "31592",
                    "ReportGoldcopyOther",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Local_Domicile_Summary_Report_Goldcopy", @__tags);
#line 374
this.ScenarioSetup(scenarioInfo);
#line 375
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 376
 testRunner.And("In SELCOY01 I select the company: \"QBE_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 377
 testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 378
 testRunner.And("In RSS00101 I click on: \"summary reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 379
 testRunner.And("In RSS01010 I click on: \"local domicile summary\" within the Summary Reporting Men" +
                    "u", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table48.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 380
 testRunner.And("In RSS01015 I continue with the following details:", ((string)(null)), table48, "And ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDesc",
                        "ASATRun",
                        "ReportDate",
                        "InputFile",
                        "InputFilename"});
            table49.AddRow(new string[] {
                        string.Format("{0}", reportDesc),
                        string.Format("{0}", aSATRun),
                        string.Format("{0}", reportDate),
                        string.Format("{0}", inputFile),
                        string.Format("{0}", inputFilename)});
#line 383
 testRunner.And("In RSS01020 I continue with the following details:", ((string)(null)), table49, "And ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "Cls1",
                        "Cls2",
                        "Cls3",
                        "Cls4",
                        "Cls5",
                        "Cls6",
                        "Cls7",
                        "Cls8",
                        "Cls9",
                        "Cls10",
                        "Clg1",
                        "Clg2",
                        "Clg3",
                        "GroupIDX1",
                        "GroupIDX2",
                        "GroupIDX3",
                        "Reg1",
                        "Reg2",
                        "Reg3",
                        "LocalDomicile",
                        "ReportingPeriod",
                        "MandatoryDCInd"});
            table50.AddRow(new string[] {
                        string.Format("{0}", cls1),
                        string.Format("{0}", cls2),
                        string.Format("{0}", cls3),
                        string.Format("{0}", cls4),
                        string.Format("{0}", cls5),
                        string.Format("{0}", cls6),
                        string.Format("{0}", cls7),
                        string.Format("{0}", cls8),
                        string.Format("{0}", cls9),
                        string.Format("{0}", cls10),
                        string.Format("{0}", clg1),
                        string.Format("{0}", clg2),
                        string.Format("{0}", clg3),
                        string.Format("{0}", groupIDX1),
                        string.Format("{0}", groupIDX2),
                        string.Format("{0}", groupIDX3),
                        string.Format("{0}", reg1),
                        string.Format("{0}", reg2),
                        string.Format("{0}", reg3),
                        string.Format("{0}", localDomicile),
                        string.Format("{0}", reportingPeriod),
                        string.Format("{0}", mandatoryDCInd)});
#line 386
 testRunner.And("In RSS01030 I continue with the following details:", ((string)(null)), table50, "And ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClsgrpOutputOption"});
            table51.AddRow(new string[] {
                        string.Format("{0}", clsgrpOutputOption)});
#line 389
 testRunner.And("In RSS10060 I continue with the following details:", ((string)(null)), table51, "And ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Runits18From",
                        "Runits18TO",
                        "Runits916From",
                        "Runits916TO",
                        "UseClassPrice",
                        "PriceMethod",
                        "ClassPriceA",
                        "ClassPriceB",
                        "ClassPriceC",
                        "ClassPriceD"});
            table52.AddRow(new string[] {
                        string.Format("{0}", runits18From),
                        string.Format("{0}", runits18TO),
                        string.Format("{0}", runits916From),
                        string.Format("{0}", runits916TO),
                        string.Format("{0}", useClassPrice),
                        string.Format("{0}", priceMethod),
                        string.Format("{0}", classPriceA),
                        string.Format("{0}", classPriceB),
                        string.Format("{0}", classPriceC),
                        string.Format("{0}", classPriceD)});
#line 392
 testRunner.And("In RSS01040 I continue with the following details:", ((string)(null)), table52, "And ");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "HtcFlag",
                        "HT1",
                        "HT2",
                        "HT3",
                        "LocalDomicileFlag",
                        "DomicileSequence",
                        "DomcodeFlag"});
            table53.AddRow(new string[] {
                        string.Format("{0}", htcFlag),
                        string.Format("{0}", hT1),
                        string.Format("{0}", hT2),
                        string.Format("{0}", hT3),
                        string.Format("{0}", localDomicileFlag),
                        string.Format("{0}", domicileSequence),
                        string.Format("{0}", domcodeFlag)});
#line 395
 testRunner.And("In RSS01050 I continue with the following details:", ((string)(null)), table53, "And ");
#line 398
 testRunner.When("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table54.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 399
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table54, "And ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table55.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 402
  testRunner.Then("I copy output files to local", ((string)(null)), table55, "Then ");
#line 405
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 406
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Range_Of_Units_Summary_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("RangeOfUnitsSummaryReport_Gold")]
        [NUnit.Framework.CategoryAttribute("QBE_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("31614")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyOther")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Itereation1", "Range of Units Summary", "N", "", "", "N", "LNN", "DCV", "ENT", "EBR", "OMT", "", "", "", "", "", "5", "", "", "", "", "", "", "", "", "A", "", "1000", "99999999999", "", "", "", "", "", "A", "", "", "", "A", "", "", "A", "", "", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Itereation2", "Range of Units Summary", "N", "5186", "12/08/2015", "N", "DCP", "", "", "", "", "", "", "", "", "", "", "", "", "0000106841", "", "", "", "", "", "C", "Combo1", "100", "550", "551", "99999999999", "", "", "Y", "E", "CNT", "DEC", "", "I", "3014", "3078", "E", "", "", "U", "13.50", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Itereation3", "Range of Units Summary", "N", "", "", "N", "DCV", "ENT", "", "", "", "", "", "", "", "", "1", "5", "", "", "", "", "", "", "", "C", "Combo3", "100", "550", "551", "800", "801", "99999999999", "", "I", "COY", "ESP", "JNT", "E", "", "", "I", "GBR", "", "", "", "", "", null)]
        public virtual void Range_Of_Units_Summary_Report_Goldcopy(
                    string reportHeading, 
                    string reportDesc, 
                    string preload, 
                    string aSATRun, 
                    string reportDate, 
                    string inputFile, 
                    string cls1, 
                    string cls2, 
                    string cls3, 
                    string cls4, 
                    string cls5, 
                    string cls6, 
                    string cls7, 
                    string cls8, 
                    string cls9, 
                    string cls10, 
                    string clg1, 
                    string clg2, 
                    string clg3, 
                    string groupIDX1, 
                    string groupIDX2, 
                    string groupIDX3, 
                    string reg1, 
                    string reg2, 
                    string reg3, 
                    string clsgrpOutputOption, 
                    string comboDescription, 
                    string runits18From, 
                    string runits18TO, 
                    string runits916From, 
                    string runits916TO, 
                    string runits916From2, 
                    string runits916TO2, 
                    string useClassPrice, 
                    string htcFlag, 
                    string hT1, 
                    string hT2, 
                    string hT3, 
                    string localFlag, 
                    string pCFrom1, 
                    string pCTo1, 
                    string domcodeFlag, 
                    string dC1, 
                    string dC2, 
                    string priceMethod, 
                    string classPriceA, 
                    string reportingPeriod, 
                    string mandatoryDCInd, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RangeOfUnitsSummaryReport_Gold",
                    "QBE_AUTO_R",
                    "31614",
                    "ReportGoldcopyOther",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Range_Of_Units_Summary_Report_Goldcopy", @__tags);
#line 419
this.ScenarioSetup(scenarioInfo);
#line 420
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 421
 testRunner.And("In SELCOY01 I select the company: \"QBE_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 422
 testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 423
 testRunner.And("In RSS00101 I click on: \"summary reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 424
 testRunner.And("In RSS01010 I click on: \"range of units summary\" within the Summary Reporting Men" +
                    "u", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table56.AddRow(new string[] {
                        string.Format("{0}", preload),
                        ""});
#line 425
 testRunner.And("In RSS01015 I continue with the following details:", ((string)(null)), table56, "And ");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDesc",
                        "ASATRun",
                        "ReportDate",
                        "InputFile"});
            table57.AddRow(new string[] {
                        string.Format("{0}", reportDesc),
                        string.Format("{0}", aSATRun),
                        string.Format("{0}", reportDate),
                        string.Format("{0}", inputFile)});
#line 428
    testRunner.And("In RSS01020 I continue with the following details:", ((string)(null)), table57, "And ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "Cls1",
                        "Cls2",
                        "Cls3",
                        "Cls4",
                        "Cls5",
                        "Cls6",
                        "Cls7",
                        "Cls8",
                        "Cls9",
                        "Cls10",
                        "Clg1",
                        "Clg2",
                        "Clg3",
                        "GroupIDX1",
                        "GroupIDX2",
                        "GroupIDX3",
                        "Reg1",
                        "Reg2",
                        "Reg3",
                        "ReportingPeriod",
                        "MandatoryDCInd"});
            table58.AddRow(new string[] {
                        string.Format("{0}", cls1),
                        string.Format("{0}", cls2),
                        string.Format("{0}", cls3),
                        string.Format("{0}", cls4),
                        string.Format("{0}", cls5),
                        string.Format("{0}", cls6),
                        string.Format("{0}", cls7),
                        string.Format("{0}", cls8),
                        string.Format("{0}", cls9),
                        string.Format("{0}", cls10),
                        string.Format("{0}", clg1),
                        string.Format("{0}", clg2),
                        string.Format("{0}", clg3),
                        string.Format("{0}", groupIDX1),
                        string.Format("{0}", groupIDX2),
                        string.Format("{0}", groupIDX3),
                        string.Format("{0}", reg1),
                        string.Format("{0}", reg2),
                        string.Format("{0}", reg3),
                        string.Format("{0}", reportingPeriod),
                        string.Format("{0}", mandatoryDCInd)});
#line 431
 testRunner.And("In RSS01030 I continue with the following details:", ((string)(null)), table58, "And ");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClsgrpOutputOption",
                        "ComboDescription"});
            table59.AddRow(new string[] {
                        string.Format("{0}", clsgrpOutputOption),
                        string.Format("{0}", comboDescription)});
#line 434
 testRunner.And("In RSS10060 I continue with the following details:", ((string)(null)), table59, "And ");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "Runits18From",
                        "Runits18TO",
                        "Runits916From",
                        "Runits916TO",
                        "Runits916From2",
                        "Runits916TO2",
                        "UseClassPrice",
                        "PriceMethod",
                        "ClassPriceA"});
            table60.AddRow(new string[] {
                        string.Format("{0}", runits18From),
                        string.Format("{0}", runits18TO),
                        string.Format("{0}", runits916From),
                        string.Format("{0}", runits916TO),
                        string.Format("{0}", runits916From2),
                        string.Format("{0}", runits916TO2),
                        string.Format("{0}", useClassPrice),
                        string.Format("{0}", priceMethod),
                        string.Format("{0}", classPriceA)});
#line 437
 testRunner.And("In RSS01040 I continue with the following details:", ((string)(null)), table60, "And ");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "HtcFlag",
                        "HT1",
                        "HT2",
                        "HT3",
                        "LocalFlag",
                        "DomcodeFlag",
                        "PCFrom1",
                        "PCTo1",
                        "DC1",
                        "DC2"});
            table61.AddRow(new string[] {
                        string.Format("{0}", htcFlag),
                        string.Format("{0}", hT1),
                        string.Format("{0}", hT2),
                        string.Format("{0}", hT3),
                        string.Format("{0}", localFlag),
                        string.Format("{0}", domcodeFlag),
                        string.Format("{0}", pCFrom1),
                        string.Format("{0}", pCTo1),
                        string.Format("{0}", dC1),
                        string.Format("{0}", dC2)});
#line 440
 testRunner.And("In RSS01050 I continue with the following details:", ((string)(null)), table61, "And ");
#line 443
 testRunner.When("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table62.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 444
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table62, "And ");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table63.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 447
  testRunner.Then("I copy output files to local", ((string)(null)), table63, "Then ");
#line 450
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 451
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Holder_Subscriptions_Summary_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("HoldersubscriptionsSummaryReport_Gold")]
        [NUnit.Framework.CategoryAttribute("QBE_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("31882")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyOther")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Itereation1", "Holder Subscriptions Summary", "N", "", "", "N", "EBS", "ASA", "DMY", "LTR", "", "", "", "", "", "", "", "", "", "", "", "", "R", "4500", "5212", "A", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Itereation3", "Holder Subscriptions Summary", "N", "", "03/03/2014", "N", "", "", "", "", "", "", "", "", "", "", "5", "7", "", "", "", "", "Q", "", "", "S", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Itereation4", "Holder Subscriptions Summary", "N", "4800", "", "N", "EBS", "LNN", "E01", "", "", "", "", "", "", "", "1", "5", "7", "0000106841", "", "", "D", "", "", "C", "Combination8", "", null)]
        public virtual void Holder_Subscriptions_Summary_Report_Goldcopy(
                    string reportHeading, 
                    string reportDesc, 
                    string preload, 
                    string aSATRun, 
                    string reportDate, 
                    string inputFile, 
                    string cls1, 
                    string cls2, 
                    string cls3, 
                    string cls4, 
                    string cls5, 
                    string cls6, 
                    string cls7, 
                    string cls8, 
                    string cls9, 
                    string cls10, 
                    string clg1, 
                    string clg2, 
                    string clg3, 
                    string groupIDX1, 
                    string groupIDX2, 
                    string groupIDX3, 
                    string reportingPeriod, 
                    string runFrom, 
                    string runTO, 
                    string clsgrpOutputOption, 
                    string comboDescription, 
                    string mandatoryDCInd, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "HoldersubscriptionsSummaryReport_Gold",
                    "QBE_AUTO_R",
                    "31882",
                    "ReportGoldcopyOther",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Holder_Subscriptions_Summary_Report_Goldcopy", @__tags);
#line 465
this.ScenarioSetup(scenarioInfo);
#line 466
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 467
 testRunner.And("In SELCOY01 I select the company: \"QBE_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 468
 testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 469
 testRunner.And("In RSS00101 I click on: \"summary reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 470
 testRunner.And("In RSS01010 I click on: \"holder subscriptions summary\" within the Summary Reporti" +
                    "ng Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table64.AddRow(new string[] {
                        string.Format("{0}", preload),
                        ""});
#line 471
 testRunner.And("In RSS01015 I continue with the following details:", ((string)(null)), table64, "And ");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDesc",
                        "ASATRun",
                        "ReportDate",
                        "InputFile"});
            table65.AddRow(new string[] {
                        string.Format("{0}", reportDesc),
                        string.Format("{0}", aSATRun),
                        string.Format("{0}", reportDate),
                        string.Format("{0}", inputFile)});
#line 474
    testRunner.And("In RSS01020 I continue with the following details:", ((string)(null)), table65, "And ");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "Cls1",
                        "Cls2",
                        "Cls3",
                        "Cls4",
                        "Cls5",
                        "Cls6",
                        "Cls7",
                        "Cls8",
                        "Cls9",
                        "Cls10",
                        "Clg1",
                        "Clg2",
                        "Clg3",
                        "GroupIDX1",
                        "GroupIDX2",
                        "GroupIDX3",
                        "ReportingPeriod",
                        "RunFrom",
                        "RunTO",
                        "MandatoryDCInd"});
            table66.AddRow(new string[] {
                        string.Format("{0}", cls1),
                        string.Format("{0}", cls2),
                        string.Format("{0}", cls3),
                        string.Format("{0}", cls4),
                        string.Format("{0}", cls5),
                        string.Format("{0}", cls6),
                        string.Format("{0}", cls7),
                        string.Format("{0}", cls8),
                        string.Format("{0}", cls9),
                        string.Format("{0}", cls10),
                        string.Format("{0}", clg1),
                        string.Format("{0}", clg2),
                        string.Format("{0}", clg3),
                        string.Format("{0}", groupIDX1),
                        string.Format("{0}", groupIDX2),
                        string.Format("{0}", groupIDX3),
                        string.Format("{0}", reportingPeriod),
                        string.Format("{0}", runFrom),
                        string.Format("{0}", runTO),
                        string.Format("{0}", mandatoryDCInd)});
#line 477
 testRunner.And("In RSS01030 I continue with the following details:", ((string)(null)), table66, "And ");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClsgrpOutputOption",
                        "ComboDescription"});
            table67.AddRow(new string[] {
                        string.Format("{0}", clsgrpOutputOption),
                        string.Format("{0}", comboDescription)});
#line 480
 testRunner.And("In RSS10060 I continue with the following details:", ((string)(null)), table67, "And ");
#line 483
 testRunner.When("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table68.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 484
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table68, "And ");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table69.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 487
  testRunner.Then("I copy output files to local", ((string)(null)), table69, "Then ");
#line 490
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 491
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Payment_Elections_Summary_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("PaymentElectionsSummaryReport_Gold")]
        [NUnit.Framework.CategoryAttribute("QBE_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("31067")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyOther")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Itereation1", "Payment Elections Summary", "N", "", "", "N", "CAS", "DM1", "DMZ", "E10", "E20", "EBS", "EC1", "EMS", "ET1", "LTL", "", "", "", "", "", "", "N", "", "", "", "A", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Itereation3", "Payment Elections Summary", "N", "", "", "N", "DSA", "LNN", "", "", "", "", "", "", "", "", "5", "1", "9", "0000106841", "", "", "Y", "GBR", "USA", "", "C", "COMBO1", "", null)]
        [NUnit.Framework.TestCaseAttribute("Itereation4", "Payment Elections Summary", "N", "5145", "", "N", "", "", "", "", "", "", "", "", "", "", "1", "5", "7", "0000106841", "", "", "Y", "NZL", "", "", "S", "", "", null)]
        public virtual void Payment_Elections_Summary_Report_Goldcopy(
                    string reportHeading, 
                    string reportDesc, 
                    string preload, 
                    string aSATRun, 
                    string reportDate, 
                    string inputFile, 
                    string cls1, 
                    string cls2, 
                    string cls3, 
                    string cls4, 
                    string cls5, 
                    string cls6, 
                    string cls7, 
                    string cls8, 
                    string cls9, 
                    string cls10, 
                    string clg1, 
                    string clg2, 
                    string clg3, 
                    string groupIDX1, 
                    string groupIDX2, 
                    string groupIDX3, 
                    string mandatoryDCInd, 
                    string mandDCDom1, 
                    string mandDCDom2, 
                    string mandDCDom3, 
                    string clsgrpOutputOption, 
                    string comboDescription, 
                    string reportingPeriod, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "PaymentElectionsSummaryReport_Gold",
                    "QBE_AUTO_R",
                    "31067",
                    "ReportGoldcopyOther",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Payment_Elections_Summary_Report_Goldcopy", @__tags);
#line 504
this.ScenarioSetup(scenarioInfo);
#line 505
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 506
 testRunner.And("In SELCOY01 I select the company: \"QBE_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 507
 testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 508
 testRunner.And("In RSS00101 I click on: \"summary reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 509
 testRunner.And("In RSS01010 I click on: \"payment elections summary\" within the Summary Reporting " +
                    "Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table70.AddRow(new string[] {
                        string.Format("{0}", preload),
                        ""});
#line 510
 testRunner.And("In RSS01015 I continue with the following details:", ((string)(null)), table70, "And ");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDesc",
                        "ASATRun",
                        "ReportDate",
                        "InputFile"});
            table71.AddRow(new string[] {
                        string.Format("{0}", reportDesc),
                        string.Format("{0}", aSATRun),
                        string.Format("{0}", reportDate),
                        string.Format("{0}", inputFile)});
#line 513
    testRunner.And("In RSS01020 I continue with the following details:", ((string)(null)), table71, "And ");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "Cls1",
                        "Cls2",
                        "Cls3",
                        "Cls4",
                        "Cls5",
                        "Cls6",
                        "Cls7",
                        "Cls8",
                        "Cls9",
                        "Cls10",
                        "Clg1",
                        "Clg2",
                        "Clg3",
                        "GroupIDX1",
                        "GroupIDX2",
                        "GroupIDX3",
                        "MandatoryDCInd",
                        "MandDCDom1",
                        "MandDCDom2",
                        "MandDCDom3",
                        "ReportingPeriod"});
            table72.AddRow(new string[] {
                        string.Format("{0}", cls1),
                        string.Format("{0}", cls2),
                        string.Format("{0}", cls3),
                        string.Format("{0}", cls4),
                        string.Format("{0}", cls5),
                        string.Format("{0}", cls6),
                        string.Format("{0}", cls7),
                        string.Format("{0}", cls8),
                        string.Format("{0}", cls9),
                        string.Format("{0}", cls10),
                        string.Format("{0}", clg1),
                        string.Format("{0}", clg2),
                        string.Format("{0}", clg3),
                        string.Format("{0}", groupIDX1),
                        string.Format("{0}", groupIDX2),
                        string.Format("{0}", groupIDX3),
                        string.Format("{0}", mandatoryDCInd),
                        string.Format("{0}", mandDCDom1),
                        string.Format("{0}", mandDCDom2),
                        string.Format("{0}", mandDCDom3),
                        string.Format("{0}", reportingPeriod)});
#line 516
 testRunner.And("In RSS01030 I continue with the following details:", ((string)(null)), table72, "And ");
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClsgrpOutputOption",
                        "ComboDescription"});
            table73.AddRow(new string[] {
                        string.Format("{0}", clsgrpOutputOption),
                        string.Format("{0}", comboDescription)});
#line 519
 testRunner.And("In RSS10060 I continue with the following details:", ((string)(null)), table73, "And ");
#line 522
 testRunner.When("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table74.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 523
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table74, "And ");
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table75.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 526
  testRunner.Then("I copy output files to local", ((string)(null)), table75, "Then ");
#line 529
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 530
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Cheque_Extract_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ChequeExtractReport_Gold")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("36949")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyOther")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Itereation1", "Cheque_Extract_Report", "N", "N", "N", "", "", "", "", "", "", "N", "", "", "N", "A", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "Y", "A", "", "", "", "Full", "Y", "Y", "Y", "Y", "C", null)]
        [NUnit.Framework.TestCaseAttribute("Itereation3", "Cheque_Extract_Report", "N", "N", "N", "", "D", "C", "", "", "", "Y", "", "", "N", "A", "", "", "", "DCRFA", "DCRFM", "DESCQ", "DFREV", "PAYAD", "PAYMV", "PRREV", "PRSNT", "RCHQR", "C", "D", "", "", "01/01/2000", "31/12/2014", "N", "R", "Z", "Y", "A", "", "", "", "Summary", "Y", "Y", "Y", "Y", "C", null)]
        [NUnit.Framework.TestCaseAttribute("Itereation4", "Cheque_Extract_Report", "N", "N", "N", "", "", "", "", "", "", "N", "5145", "", "N", "A", "", "P", "PE", "", "", "", "", "", "", "", "", "", "", "", "500000", "1105688", "", "", "", "", "", "Y", "S", "10", "20", "30", "TotalsOnly", "", "", "", "", "C", null)]
        [NUnit.Framework.TestCaseAttribute("Itereation6", "Cheque_Extract_Report", "N", "N", "N", "", "", "", "AUD", "1000.00", "3000.00", "N", "", "", "N", "L", "", "C", "", "", "", "", "", "", "", "", "", "", "C", "", "", "", "01/01/2002", "31/12/2005", "", "", "", "Y", "S", "10", "20", "20", "ResidentTaxListing", "Y", "Y", "Y", "Y", "A", null)]
        public virtual void Cheque_Extract_Report_Goldcopy(
                    string reportHeading, 
                    string reportDesc, 
                    string preload, 
                    string outstandingUnpres, 
                    string useInputFile, 
                    string payAccountNumber1, 
                    string dividendType1, 
                    string dividendType2, 
                    string paymentCurr1, 
                    string paymentAmountFrom, 
                    string paymentAmountTO, 
                    string taxSelectionYN, 
                    string aSATRun, 
                    string reportDate, 
                    string inputFile, 
                    string returnedMail, 
                    string paymentRangeInd, 
                    string paymentStatus1, 
                    string paymentStatus2, 
                    string paymentTransTypes1, 
                    string paymentTransTypes2, 
                    string paymentTransTypes3, 
                    string paymentTransTypes4, 
                    string paymentTransTypes5, 
                    string paymentTransTypes6, 
                    string paymentTransTypes7, 
                    string paymentTransTypes8, 
                    string paymentTransTypes9, 
                    string paymentMethod1, 
                    string paymentMethod2, 
                    string payRefNumberFrom, 
                    string payRefNumberTO, 
                    string presentedDateFrom, 
                    string presentedDateTO, 
                    string taxSelection1, 
                    string taxSelection2, 
                    string taxSelection3, 
                    string extractHoldersPI, 
                    string rptDirectCreditInd, 
                    string rptDirectCredit1, 
                    string rptDirectCredit2, 
                    string rptDirectCredit3, 
                    string menuOption, 
                    string printFlag1, 
                    string printFlag2, 
                    string printFlag3, 
                    string printFlag4, 
                    string sequence, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ChequeExtractReport_Gold",
                    "WES_AUTO_R",
                    "36949",
                    "ReportGoldcopyOther",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cheque_Extract_Report_Goldcopy", @__tags);
#line 544
this.ScenarioSetup(scenarioInfo);
#line 545
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 546
 testRunner.And("In SELCOY01 I select the company: \"WES_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 547
 testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 548
 testRunner.And("In RSS00101 I click on: \"cheque extract reporting\" within the Reporting System Me" +
                    "nu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload"});
            table76.AddRow(new string[] {
                        "N"});
#line 549
 testRunner.And("In RSS11000 I continue with the following details:", ((string)(null)), table76, "And ");
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "OutstandingUnpres",
                        "UseInputFile",
                        "PayAccountNumber1",
                        "PayAccountNumber2",
                        "PayAccountNumber3",
                        "PayAccountNumber4",
                        "PayAccountNumber5",
                        "PayAccountNumber6",
                        "DividendType1",
                        "DividendType2",
                        "PaymentCurr1",
                        "PaymentAmountFrom",
                        "PaymentAmountTO",
                        "TaxSelectionYN"});
            table77.AddRow(new string[] {
                        string.Format("{0}", outstandingUnpres),
                        string.Format("{0}", useInputFile),
                        string.Format("{0}", payAccountNumber1),
                        "<PayAccountNumber2>",
                        "<PayAccountNumber3>",
                        "<PayAccountNumber4>",
                        "<PayAccountNumber5>",
                        "<PayAccountNumber6>",
                        string.Format("{0}", dividendType1),
                        string.Format("{0}", dividendType2),
                        string.Format("{0}", paymentCurr1),
                        string.Format("{0}", paymentAmountFrom),
                        string.Format("{0}", paymentAmountTO),
                        string.Format("{0}", taxSelectionYN)});
#line 552
 testRunner.And("In RSS11001 I continue with the following details:", ((string)(null)), table77, "And ");
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReturnedMail",
                        "PaymentRangeInd",
                        "PaymentStatus1",
                        "PaymentStatus2",
                        "PaymentTransTypes1",
                        "PaymentTransTypes2",
                        "PaymentTransTypes3",
                        "PaymentTransTypes4",
                        "PaymentTransTypes5",
                        "PaymentTransTypes6",
                        "PaymentTransTypes7",
                        "PaymentTransTypes8",
                        "PaymentTransTypes9",
                        "PaymentMethod1",
                        "PaymentMethod2",
                        "PayRefNumberFrom",
                        "PayRefNumberTO",
                        "PresentedDateFrom",
                        "PresentedDateTO",
                        "TaxSelection1",
                        "TaxSelection2",
                        "TaxSelection3"});
            table78.AddRow(new string[] {
                        string.Format("{0}", returnedMail),
                        string.Format("{0}", paymentRangeInd),
                        string.Format("{0}", paymentStatus1),
                        string.Format("{0}", paymentStatus2),
                        string.Format("{0}", paymentTransTypes1),
                        string.Format("{0}", paymentTransTypes2),
                        string.Format("{0}", paymentTransTypes3),
                        string.Format("{0}", paymentTransTypes4),
                        string.Format("{0}", paymentTransTypes5),
                        string.Format("{0}", paymentTransTypes6),
                        string.Format("{0}", paymentTransTypes7),
                        string.Format("{0}", paymentTransTypes8),
                        string.Format("{0}", paymentTransTypes9),
                        string.Format("{0}", paymentMethod1),
                        string.Format("{0}", paymentMethod2),
                        string.Format("{0}", payRefNumberFrom),
                        string.Format("{0}", payRefNumberTO),
                        string.Format("{0}", presentedDateFrom),
                        string.Format("{0}", presentedDateTO),
                        string.Format("{0}", taxSelection1),
                        string.Format("{0}", taxSelection2),
                        string.Format("{0}", taxSelection3)});
#line 555
 testRunner.And("In RSS11010 I continue with the following details:", ((string)(null)), table78, "And ");
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtractHoldersPI",
                        "RptDirectCreditInd",
                        "RptDirectCredit1",
                        "RptDirectCredit2",
                        "RptDirectCredit3"});
            table79.AddRow(new string[] {
                        string.Format("{0}", extractHoldersPI),
                        string.Format("{0}", rptDirectCreditInd),
                        string.Format("{0}", rptDirectCredit1),
                        string.Format("{0}", rptDirectCredit2),
                        string.Format("{0}", rptDirectCredit3)});
#line 558
 testRunner.And("In RSS11006 I continue with the following details:", ((string)(null)), table79, "And ");
#line 561
 testRunner.And(string.Format("In RSS11002 I click on: \"{0}\" within the Cheque Extract Output Menu", menuOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        "PrintFlag1",
                        "PrintFlag2",
                        "PrintFlag3",
                        "PrintFlag4",
                        "Sequence"});
            table80.AddRow(new string[] {
                        string.Format("{0}", printFlag2),
                        string.Format("{0}", printFlag2),
                        string.Format("{0}", printFlag3),
                        string.Format("{0}", printFlag4),
                        string.Format("{0}", sequence)});
#line 562
 testRunner.And("In RSS11009 I continue with the following details:", ((string)(null)), table80, "And ");
#line 565
 testRunner.When("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table81.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 566
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table81, "And ");
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table82.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 569
  testRunner.Then("I copy output files to local", ((string)(null)), table82, "Then ");
#line 572
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 573
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Print_Control_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("PrintControlCodesReport_Gold")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("34416")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyOther")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        public virtual void Print_Control_Report_Goldcopy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Print_Control_Report_Goldcopy", new string[] {
                        "PrintControlCodesReport_Gold",
                        "WES_AUTO_R",
                        "34416",
                        "ReportGoldcopyOther",
                        "ReportingGold"});
#line 587
this.ScenarioSetup(scenarioInfo);
#line 589
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 590
 testRunner.And("In SELCOY01 I select the company: \"WES_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 591
 testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 592
 testRunner.And("In RSS00101 I click on: \"control reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 593
 testRunner.And("In RSS13000 I click on: \"print control codes\" within the Control Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 594
 testRunner.When("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table83.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 595
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table83, "And ");
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table84.AddRow(new string[] {
                        "Filtered",
                        ""});
#line 598
  testRunner.Then("I copy output files to local", ((string)(null)), table84, "Then ");
#line 601
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 602
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Other_Holder_Attributes_With_DE_Customised_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("OtherHolderAttributesWithDECustomisedReport_Gold")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("32005")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyOther")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Itereation1", "Other_Holder_Attributes_Report", "N", "", "", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "N", "N", "N", "H", "N", "Y", "N", "N", "N", "Y", "Y", "Y", "Y", "Y", "S", "H", "N", "N", "N", "N", null)]
        [NUnit.Framework.TestCaseAttribute("Itereation2", "Other_Holder_Attributes_Report", "N", "I", "", "N", "Y", "Y", "N", "N", "Y", "Y", "N", "N", "N", "Y", "Y", "N", "N", "H", "N", "Y", "Y", "N", "Y", "Y", "Y", "N", "Y", "Y", "S", "H", "N", "N", "N", "N", null)]
        [NUnit.Framework.TestCaseAttribute("Itereation3", "Other_Holder_Attributes_Report", "N", "I", "", "N", "Y", "Y", "N", "Y", "Y", "Y", "Y", "N", "N", "Y", "Y", "N", "N", "H", "N", "N", "", "", "", "", "", "", "", "", "S", "H", "N", "N", "N", "N", null)]
        public virtual void Other_Holder_Attributes_With_DE_Customised_Report_Goldcopy(
                    string reportHeading, 
                    string reportDesc, 
                    string preload, 
                    string shellHoldersOption, 
                    string shellCntrolOption, 
                    string regAddress, 
                    string holderCat, 
                    string holderIdentifier, 
                    string holderTypeCode, 
                    string holderOtherTaxCode, 
                    string tfnDesc, 
                    string extraIdentifier, 
                    string homePhone, 
                    string workPhone, 
                    string faxNumber, 
                    string mobilePhone, 
                    string commMethods, 
                    string balanceDetails, 
                    string planDetails, 
                    string detailRecordOutput, 
                    string webProxyMailing, 
                    string includeDetails, 
                    string empIDInd, 
                    string payIDInd, 
                    string employeeUniqueIDInd, 
                    string locCodesInd, 
                    string busUnitsInd, 
                    string jobBandsInd, 
                    string costCentreInd, 
                    string empCommMethodsInd, 
                    string fieldSeparator, 
                    string reportSeq, 
                    string foreignChequeInd, 
                    string payeeDetails, 
                    string residencyInd, 
                    string directCredit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "OtherHolderAttributesWithDECustomisedReport_Gold",
                    "WES_AUTO_R",
                    "32005",
                    "ReportGoldcopyOther",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Other_Holder_Attributes_With_DE_Customised_Report_Goldcopy", @__tags);
#line 610
this.ScenarioSetup(scenarioInfo);
#line 611
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 612
 testRunner.And("In SELCOY01 I select the company: \"WES_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 613
 testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 614
 testRunner.And("In RSS00101 I click on: \"extract reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload"});
            table85.AddRow(new string[] {
                        string.Format("{0}", preload)});
#line 615
 testRunner.And("In RSS10001 I continue with the following details:", ((string)(null)), table85, "And ");
#line 618
 testRunner.And("In RSS10010 I click on: \"other holder attributes\" within the Extract Reporting Me" +
                    "nu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        "ShellHoldersOption",
                        "ShellCntrolOption"});
            table86.AddRow(new string[] {
                        string.Format("{0}", shellHoldersOption),
                        string.Format("{0}", shellCntrolOption)});
#line 619
 testRunner.And("In RSS10042 I continue with the following details:", ((string)(null)), table86, "And ");
#line 622
 testRunner.And("In RSS10010 I click on: \"schedule job\" within the Extract Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 623
 testRunner.And("In RSS10097 I continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 624
 testRunner.And("In RSS10022 I click on: \"customised data extract\" within the Output Format Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegAddress",
                        "HolderCat",
                        "HolderIdentifier"});
            table87.AddRow(new string[] {
                        string.Format("{0}", regAddress),
                        string.Format("{0}", holderCat),
                        string.Format("{0}", holderIdentifier)});
#line 625
 testRunner.And("In RSS10034 I continue with the following details:", ((string)(null)), table87, "And ");
#line hidden
            TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderTypeCode",
                        "HolderOtherTaxCode",
                        "TfnDesc"});
            table88.AddRow(new string[] {
                        string.Format("{0}", holderTypeCode),
                        string.Format("{0}", holderOtherTaxCode),
                        string.Format("{0}", tfnDesc)});
#line 628
 testRunner.And("In RSS10035 I continue with the following details:", ((string)(null)), table88, "And ");
#line hidden
            TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "WorkPhone",
                        "FaxNumber",
                        "MobilePhone",
                        "CommMethods"});
            table89.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", workPhone),
                        string.Format("{0}", faxNumber),
                        string.Format("{0}", mobilePhone),
                        string.Format("{0}", commMethods)});
#line 631
 testRunner.And("In RSS10039 I continue with the following details:", ((string)(null)), table89, "And ");
#line hidden
            TechTalk.SpecFlow.Table table90 = new TechTalk.SpecFlow.Table(new string[] {
                        "BalanceDetails",
                        "ForeignChequeInd",
                        "PayeeDetails",
                        "ResidencyInd",
                        "DirectCredit",
                        "PlanDetails"});
            table90.AddRow(new string[] {
                        string.Format("{0}", balanceDetails),
                        string.Format("{0}", foreignChequeInd),
                        string.Format("{0}", payeeDetails),
                        string.Format("{0}", residencyInd),
                        string.Format("{0}", directCredit),
                        string.Format("{0}", planDetails)});
#line 634
 testRunner.And("In RSS10036 I continue with the following details:", ((string)(null)), table90, "And ");
#line hidden
            TechTalk.SpecFlow.Table table91 = new TechTalk.SpecFlow.Table(new string[] {
                        "DetailRecordOutput"});
            table91.AddRow(new string[] {
                        string.Format("{0}", detailRecordOutput)});
#line 637
 testRunner.And("In RSS10048 I continue with the following details:", ((string)(null)), table91, "And ");
#line hidden
            TechTalk.SpecFlow.Table table92 = new TechTalk.SpecFlow.Table(new string[] {
                        "WebProxyMailing"});
            table92.AddRow(new string[] {
                        string.Format("{0}", webProxyMailing)});
#line 640
 testRunner.And("In RSS10046 I continue with the following details:", ((string)(null)), table92, "And ");
#line hidden
            TechTalk.SpecFlow.Table table93 = new TechTalk.SpecFlow.Table(new string[] {
                        "IncludeDetails",
                        "EmpIDInd",
                        "PayIDInd",
                        "EmployeeUniqueIDInd",
                        "LocCodesInd",
                        "BusUnitsInd",
                        "JobBandsInd",
                        "CostCentreInd",
                        "EmpCommMethodsInd"});
            table93.AddRow(new string[] {
                        string.Format("{0}", includeDetails),
                        string.Format("{0}", empIDInd),
                        string.Format("{0}", payIDInd),
                        string.Format("{0}", employeeUniqueIDInd),
                        string.Format("{0}", locCodesInd),
                        string.Format("{0}", busUnitsInd),
                        string.Format("{0}", jobBandsInd),
                        string.Format("{0}", costCentreInd),
                        string.Format("{0}", empCommMethodsInd)});
#line 643
 testRunner.And("In RSS10041 I continue with the following details:", ((string)(null)), table93, "And ");
#line hidden
            TechTalk.SpecFlow.Table table94 = new TechTalk.SpecFlow.Table(new string[] {
                        "FieldSeparator"});
            table94.AddRow(new string[] {
                        string.Format("{0}", fieldSeparator)});
#line 646
 testRunner.And("In RSS10037 I continue with the following details:", ((string)(null)), table94, "And ");
#line hidden
            TechTalk.SpecFlow.Table table95 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportSeq"});
            table95.AddRow(new string[] {
                        string.Format("{0}", reportSeq)});
#line 649
 testRunner.And("In RSS10028 I continue with the following details:", ((string)(null)), table95, "And ");
#line 652
 testRunner.When("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table96 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table96.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 653
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table96, "And ");
#line hidden
            TechTalk.SpecFlow.Table table97 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table97.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 656
  testRunner.Then("I copy output files to local", ((string)(null)), table97, "Then ");
#line 659
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 660
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Payment_Instruction_With_DE_Customised_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("PaymentInstructionWithDECustomisedReport_Gold")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("32758")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyOther")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Itereation1", "Payment_Instruction_Extract_Report", "N", "A", "", "A", "", "A", "", "", "A", "", "", "", "", "", "N", "N", "Y", "Y", "", "N", "N", "N", "N", "N", "N", "N", "N", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "H", "N", "Y", "Y", "N", "Y", "Y", "Y", "N", "Y", "Y", "S", "H", "Y", "Y", "Y", "Y", "CLI", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Itereation2", "Payment_Instruction_Extract_Report", "N", "S", "99", "S", "10", "S", "NZD", "USD", "A", "I", "2000", "3000", "E", "GBR", "N", "N", "Y", "N", "", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "Y", "Y", "Y", "Y", "H", "N", "Y", "Y", "N", "Y", "Y", "Y", "N", "Y", "Y", "S", "H", "Y", "Y", "Y", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Itereation3", "Payment_Instruction_Extract_Report", "N", "A", "", "S", "10", "S", "NZD", "USD", "A", "E", "3100", "3500", "I", "NZL", "N", "N", "Y", "Y", "", "N", "N", "N", "N", "N", "N", "Y", "N", "Y", "N", "Y", "N", "N", "N", "N", "N", "N", "H", "N", "Y", "Y", "N", "Y", "Y", "Y", "N", "Y", "Y", "S", "H", "Y", "Y", "Y", "N", "", "G", "1", null)]
        public virtual void Payment_Instruction_With_DE_Customised_Report_Goldcopy(
                    string reportHeading, 
                    string reportDesc, 
                    string preload, 
                    string bulkPayInd, 
                    string bulkPay, 
                    string directCreditInd, 
                    string directCredit, 
                    string foreignChequeInd, 
                    string foreignCurrency1, 
                    string foreignCurrency2, 
                    string thirdPartyInd, 
                    string thirdPartyPCInd, 
                    string pCFrom1, 
                    string pCTo1, 
                    string thirdPartyDCInd, 
                    string domCodes1, 
                    string regAddress, 
                    string holderCat, 
                    string holderIdentifier, 
                    string balanceDetails, 
                    string wireInd, 
                    string extraIdentifier, 
                    string homePhone, 
                    string workPhone, 
                    string faxNumber, 
                    string mobilePhone, 
                    string commMethods, 
                    string groupTotals, 
                    string planDetails, 
                    string directCredits, 
                    string bankAccountNbr, 
                    string bankAccountName, 
                    string bankID, 
                    string bankNamadd, 
                    string payeeDetails, 
                    string payeeAddress, 
                    string payeePcodeDomicile, 
                    string foreignChequeInds, 
                    string detailRecordOutput, 
                    string webProxyMailing, 
                    string includeDetails, 
                    string empIDInd, 
                    string payIDInd, 
                    string employeeUniqueIDInd, 
                    string locCodesInd, 
                    string busUnitsInd, 
                    string jobBandsInd, 
                    string costCentreInd, 
                    string empCommMethodsInd, 
                    string fieldSeparator, 
                    string reportSeq, 
                    string holderTypeCode, 
                    string holderOtherTaxCode, 
                    string tfnDesc, 
                    string classTotals, 
                    string @class, 
                    string reportClassORGroup, 
                    string classGroup, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "PaymentInstructionWithDECustomisedReport_Gold",
                    "WES_AUTO_R",
                    "32758",
                    "ReportGoldcopyOther",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Payment_Instruction_With_DE_Customised_Report_Goldcopy", @__tags);
#line 674
this.ScenarioSetup(scenarioInfo);
#line 675
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 676
 testRunner.And("In SELCOY01 I select the company: \"WES_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 677
 testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 678
 testRunner.And("In RSS00101 I click on: \"extract reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table98 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload"});
            table98.AddRow(new string[] {
                        string.Format("{0}", preload)});
#line 679
 testRunner.And("In RSS10001 I continue with the following details:", ((string)(null)), table98, "And ");
#line 682
 testRunner.And("In RSS10010 I click on: \"payment instruction\" within the Extract Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table99 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkPayInd",
                        "BulkPay",
                        "DirectCreditInd",
                        "DirectCredit",
                        "ForeignChequeInd",
                        "ForeignCurrency1",
                        "ForeignCurrency2",
                        "ThirdPartyInd",
                        "ThirdPartyPCInd",
                        "PCFrom1",
                        "PCTo1",
                        "ThirdPartyDCInd",
                        "DomCodes1",
                        "WireInd"});
            table99.AddRow(new string[] {
                        string.Format("{0}", bulkPayInd),
                        string.Format("{0}", bulkPay),
                        string.Format("{0}", directCreditInd),
                        string.Format("{0}", directCredit),
                        string.Format("{0}", foreignChequeInd),
                        string.Format("{0}", foreignCurrency1),
                        string.Format("{0}", foreignCurrency2),
                        string.Format("{0}", thirdPartyInd),
                        string.Format("{0}", thirdPartyPCInd),
                        string.Format("{0}", pCFrom1),
                        string.Format("{0}", pCTo1),
                        string.Format("{0}", thirdPartyDCInd),
                        string.Format("{0}", domCodes1),
                        string.Format("{0}", wireInd)});
#line 683
 testRunner.And("In RSS10029 I continue with the following details:", ((string)(null)), table99, "And ");
#line 686
 testRunner.And("In RSS10010 I click on: \"schedule job\" within the Extract Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 687
 testRunner.And("In RSS10097 I continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 688
 testRunner.And("In RSS10022 I click on: \"customised data extract\" within the Output Format Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table100 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegAddress",
                        "HolderCat",
                        "HolderIdentifier"});
            table100.AddRow(new string[] {
                        string.Format("{0}", regAddress),
                        string.Format("{0}", holderCat),
                        string.Format("{0}", holderIdentifier)});
#line 689
 testRunner.And("In RSS10034 I continue with the following details:", ((string)(null)), table100, "And ");
#line hidden
            TechTalk.SpecFlow.Table table101 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderTypeCode",
                        "HolderOtherTaxCode",
                        "TfnDesc"});
            table101.AddRow(new string[] {
                        string.Format("{0}", holderTypeCode),
                        string.Format("{0}", holderOtherTaxCode),
                        string.Format("{0}", tfnDesc)});
#line 692
 testRunner.And("In RSS10035 I continue with the following details:", ((string)(null)), table101, "And ");
#line hidden
            TechTalk.SpecFlow.Table table102 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "WorkPhone",
                        "FaxNumber",
                        "MobilePhone",
                        "CommMethods"});
            table102.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", workPhone),
                        string.Format("{0}", faxNumber),
                        string.Format("{0}", mobilePhone),
                        string.Format("{0}", commMethods)});
#line 695
 testRunner.And("In RSS10039 I continue with the following details:", ((string)(null)), table102, "And ");
#line hidden
            TechTalk.SpecFlow.Table table103 = new TechTalk.SpecFlow.Table(new string[] {
                        "BalanceDetails",
                        "GroupTotals",
                        "ClassTotals",
                        "PlanDetails",
                        "DirectCredit",
                        "BankAccountNbr",
                        "BankAccountName",
                        "BankID",
                        "BankNamadd",
                        "PayeeDetails",
                        "PayeeAddress",
                        "PayeePcodeDomicile",
                        "ForeignChequeInd",
                        "ResidencyInd",
                        "Class",
                        "ReportClassORGroup",
                        "ClassGroup"});
            table103.AddRow(new string[] {
                        string.Format("{0}", balanceDetails),
                        string.Format("{0}", groupTotals),
                        string.Format("{0}", classTotals),
                        string.Format("{0}", planDetails),
                        string.Format("{0}", directCredits),
                        string.Format("{0}", bankAccountNbr),
                        string.Format("{0}", bankAccountName),
                        string.Format("{0}", bankID),
                        string.Format("{0}", bankNamadd),
                        string.Format("{0}", payeeDetails),
                        string.Format("{0}", payeeAddress),
                        string.Format("{0}", payeePcodeDomicile),
                        string.Format("{0}", foreignChequeInds),
                        "N",
                        string.Format("{0}", @class),
                        string.Format("{0}", reportClassORGroup),
                        string.Format("{0}", classGroup)});
#line 698
 testRunner.And("In RSS10036 I continue with the following details:", ((string)(null)), table103, "And ");
#line hidden
            TechTalk.SpecFlow.Table table104 = new TechTalk.SpecFlow.Table(new string[] {
                        "DetailRecordOutput"});
            table104.AddRow(new string[] {
                        string.Format("{0}", detailRecordOutput)});
#line 701
 testRunner.And("In RSS10048 I continue with the following details:", ((string)(null)), table104, "And ");
#line hidden
            TechTalk.SpecFlow.Table table105 = new TechTalk.SpecFlow.Table(new string[] {
                        "WebProxyMailing"});
            table105.AddRow(new string[] {
                        string.Format("{0}", webProxyMailing)});
#line 704
 testRunner.And("In RSS10046 I continue with the following details:", ((string)(null)), table105, "And ");
#line hidden
            TechTalk.SpecFlow.Table table106 = new TechTalk.SpecFlow.Table(new string[] {
                        "IncludeDetails",
                        "EmpIDInd",
                        "PayIDInd",
                        "EmployeeUniqueIDInd",
                        "LocCodesInd",
                        "BusUnitsInd",
                        "JobBandsInd",
                        "CostCentreInd",
                        "EmpCommMethodsInd"});
            table106.AddRow(new string[] {
                        string.Format("{0}", includeDetails),
                        string.Format("{0}", empIDInd),
                        string.Format("{0}", payIDInd),
                        string.Format("{0}", employeeUniqueIDInd),
                        string.Format("{0}", locCodesInd),
                        string.Format("{0}", busUnitsInd),
                        string.Format("{0}", jobBandsInd),
                        string.Format("{0}", costCentreInd),
                        string.Format("{0}", empCommMethodsInd)});
#line 707
 testRunner.And("In RSS10041 I continue with the following details:", ((string)(null)), table106, "And ");
#line hidden
            TechTalk.SpecFlow.Table table107 = new TechTalk.SpecFlow.Table(new string[] {
                        "FieldSeparator"});
            table107.AddRow(new string[] {
                        string.Format("{0}", fieldSeparator)});
#line 710
 testRunner.And("In RSS10037 I continue with the following details:", ((string)(null)), table107, "And ");
#line hidden
            TechTalk.SpecFlow.Table table108 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportSeq"});
            table108.AddRow(new string[] {
                        string.Format("{0}", reportSeq)});
#line 713
 testRunner.And("In RSS10028 I continue with the following details:", ((string)(null)), table108, "And ");
#line 716
 testRunner.When("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table109 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table109.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 717
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table109, "And ");
#line hidden
            TechTalk.SpecFlow.Table table110 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table110.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 720
  testRunner.Then("I copy output files to local", ((string)(null)), table110, "Then ");
#line 723
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 724
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Tax_selection_With_DE_Customised_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("TaxSelectionWithDECustomisedReport_Gold")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("35325")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyOther")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Itereation1", "Tax_Selection_Extract_Report", "N", "", "N", "N", "Q", "A", "", "", "I", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "N", "N", "Y", "Y", "N", "N", "N", "N", "N", "N", "N", "N", "N", "Y", "Y", "N", "Y", "Y", "Y", "Y", "Y", "N", "H", "N", "Y", "Y", "N", "Y", "Y", "H", "N", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "N", "G", "H", null)]
        [NUnit.Framework.TestCaseAttribute("Itereation2", "Tax_Selection_Extract_Report", "N", "", "N", "N", "", "", "", "", "", "E", "Q", "S", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "N", "N", "Y", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "Y", "Y", "Y", "N", "H", "N", "Y", "Y", "N", "Y", "Y", "H", "N", "Y", "Y", "Y", "N", "Y", "Y", "Y", "N", "N", "G", "H", null)]
        [NUnit.Framework.TestCaseAttribute("Itereation3", "Tax_Selection_Extract_Report", "N", "", "N", "N", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "S", "IRL", "AUS", "", "S", "IND", "N", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "N", "N", "Y", "Y", "N", "N", "N", "N", "N", "N", "N", "Y", "N", "Y", "N", "N", "N", "N", "N", "N", "N", "N", "H", "N", "Y", "Y", "N", "Y", "Y", "H", "N", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "N", "N", "G", "H", null)]
        [NUnit.Framework.TestCaseAttribute("Itereation4", "Tax_Selection_Extract_Report", "N", "", "N", "N", "", "", "", "", "", "", "", "", "", "", "", "", "B", "", "N", "A", "", "A", "", "", "", "", "", "Q", "", "", "", "", "", "CRT", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "N", "N", "Y", "Y", "N", "N", "N", "N", "N", "N", "N", "Y", "N", "Y", "N", "N", "N", "N", "N", "N", "N", "N", "H", "N", "Y", "Y", "N", "Y", "Y", "H", "N", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "N", "N", "G", "H", null)]
        [NUnit.Framework.TestCaseAttribute("Itereation5", "Tax_Selection_Extract_Report", "N", "", "N", "N", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "S", "AGF", "ZAF", "AUS", "A", "", "", "", "Q", "", "", "", "", "", "", "", "N", "N", "Y", "Y", "N", "N", "N", "N", "N", "N", "N", "Y", "N", "Y", "N", "N", "N", "N", "N", "N", "N", "N", "H", "N", "Y", "Y", "N", "Y", "Y", "H", "N", "Y", "Y", "Y", "N", "Y", "Y", "Y", "N", "N", "G", "H", null)]
        [NUnit.Framework.TestCaseAttribute("Itereation6", "Tax_Selection_Extract_Report", "N", "", "N", "N", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "B", "", "", "B", "", "S", "ZAF", "", "", "S", "T", "I", "B", "", "", "", "B", "", "", "", "CRT", "N", "N", "Y", "Y", "N", "N", "N", "N", "N", "N", "N", "Y", "N", "Y", "N", "N", "N", "N", "N", "N", "N", "N", "H", "N", "Y", "Y", "N", "Y", "Y", "H", "N", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "N", "N", "G", "H", null)]
        [NUnit.Framework.TestCaseAttribute("Itereation7", "Tax_Selection_Extract_Report", "N", "A", "Y", "N", "Q", "A", "I", "", "I", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "N", "N", "Y", "Y", "N", "N", "N", "N", "N", "N", "N", "Y", "N", "Y", "N", "N", "N", "N", "N", "N", "N", "N", "H", "N", "Y", "Y", "N", "Y", "Y", "H", "N", "Y", "Y", "Y", "N", "Y", "Y", "Y", "N", "N", "G", "H", null)]
        public virtual void Tax_Selection_With_DE_Customised_Report_Goldcopy(
                    string reportHeading, 
                    string reportDesc, 
                    string preload, 
                    string taxCodeFlag, 
                    string nzlIrds, 
                    string nzlExempt, 
                    string tfnFlag, 
                    string tfnQuotedFlag, 
                    string exemptCode, 
                    string tfnNotQuotedFlag, 
                    string jointIncompleteInd, 
                    string tinType1, 
                    string tinType2, 
                    string tinType3, 
                    string tinStatusNbr, 
                    string tinExpiryDateFrom, 
                    string tinExpiryDateTO, 
                    string tinCertifiedInd, 
                    string iRLCustodianRefOpt, 
                    string iRLCustodianRef, 
                    string iRLIntermediary, 
                    string iRLInternalStatusOpt, 
                    string iRLInternalStatus, 
                    string countryResidenceOpt, 
                    string countryResidence1, 
                    string countryResidence2, 
                    string countryResidence3, 
                    string entityTypeOpt, 
                    string entityType, 
                    string iRLTaxReference, 
                    string iRLDateOFBirth, 
                    string certFileRef, 
                    string certDwtRef, 
                    string dwtExpiryOpt, 
                    string dwtExpiryDate, 
                    string iRLCertificationStatus, 
                    string zAFCustodianRefOpt, 
                    string zAFCustodianRef, 
                    string zAFIntermediary, 
                    string zAFInternalStatusOpt, 
                    string zAFInternalStatus, 
                    string taxDomicileOpt, 
                    string taxDomicile1, 
                    string taxDomicile2, 
                    string taxDomicile3, 
                    string naturePersonOpt, 
                    string naturePerson1, 
                    string naturePerson2, 
                    string naturePerson3, 
                    string zAFTaxReference, 
                    string iDNO, 
                    string zAFDateOFBirth, 
                    string exemptionCodeOpt, 
                    string exemptionCode, 
                    string passportCtryIssOpt, 
                    string passportCtryIss, 
                    string zAFCertificationStatus, 
                    string regAddress, 
                    string holderCat, 
                    string holderIdentifier, 
                    string holderTypeCode, 
                    string holderOtherTaxCode, 
                    string tfnDesc, 
                    string extraIdentifier, 
                    string homePhone, 
                    string workPhone, 
                    string faxNumber, 
                    string mobilePhone, 
                    string commMethods, 
                    string balanceDetails, 
                    string groupTotals, 
                    string classTotals, 
                    string planDetails, 
                    string directCredit, 
                    string bankAccountNbr, 
                    string bankAccountName, 
                    string bankID, 
                    string bankNamadd, 
                    string payeeDetails, 
                    string payeeAddress, 
                    string payeePcodeDomicile, 
                    string foreignChequeInd, 
                    string residencyInd, 
                    string @class, 
                    string reportClassORGroup, 
                    string classGroup, 
                    string detailRecordOutput, 
                    string webProxyMailing, 
                    string includeDetails, 
                    string empIDInd, 
                    string payIDInd, 
                    string employeeUniqueIDInd, 
                    string locCodesInd, 
                    string busUnitsInd, 
                    string jobBandsInd, 
                    string costCentreInd, 
                    string empCommMethodsInd, 
                    string fieldSeparator, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TaxSelectionWithDECustomisedReport_Gold",
                    "WES_AUTO_R",
                    "35325",
                    "ReportGoldcopyOther",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Tax_selection_With_DE_Customised_Report_Goldcopy", @__tags);
#line 738
this.ScenarioSetup(scenarioInfo);
#line 739
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 740
 testRunner.And("In SELCOY01 I select the company: \"WES_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 741
 testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 742
 testRunner.And("In RSS00101 I click on: \"extract reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table111 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload"});
            table111.AddRow(new string[] {
                        string.Format("{0}", preload)});
#line 743
 testRunner.And("In RSS10001 I continue with the following details:", ((string)(null)), table111, "And ");
#line 746
 testRunner.And("In RSS10010 I click on: \"tax selection\" within the Extract Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table112 = new TechTalk.SpecFlow.Table(new string[] {
                        "TaxCodeFlag",
                        "NzlIrds",
                        "NzlExempt",
                        "TfnFlag",
                        "TfnQuotedFlag",
                        "ExemptCode",
                        "TfnNotQuotedFlag",
                        "JointIncompleteInd",
                        "TinType1",
                        "TinType2",
                        "TinType3",
                        "TinStatusNbr",
                        "TinExpiryDateFrom",
                        "TinExpiryDateTO",
                        "TinCertifiedInd"});
            table112.AddRow(new string[] {
                        string.Format("{0}", taxCodeFlag),
                        string.Format("{0}", nzlIrds),
                        string.Format("{0}", nzlExempt),
                        string.Format("{0}", tfnFlag),
                        string.Format("{0}", tfnQuotedFlag),
                        string.Format("{0}", exemptCode),
                        string.Format("{0}", tfnNotQuotedFlag),
                        string.Format("{0}", jointIncompleteInd),
                        string.Format("{0}", tinType1),
                        string.Format("{0}", tinType2),
                        string.Format("{0}", tinType3),
                        string.Format("{0}", tinStatusNbr),
                        string.Format("{0}", tinExpiryDateFrom),
                        string.Format("{0}", tinExpiryDateTO),
                        string.Format("{0}", tinCertifiedInd)});
#line 747
 testRunner.And("In RSS10032 I continue with the following details:", ((string)(null)), table112, "And ");
#line hidden
            TechTalk.SpecFlow.Table table113 = new TechTalk.SpecFlow.Table(new string[] {
                        "IRLCustodianRefOpt",
                        "IRLCustodianRef",
                        "IRLIntermediary",
                        "IRLInternalStatusOpt",
                        "IRLInternalStatus",
                        "CountryResidenceOpt",
                        "CountryResidence",
                        "EntityTypeOpt",
                        "EntityType",
                        "IRLTaxReference",
                        "IRLDateOFBirth",
                        "CertFileRef",
                        "CertDwtRef",
                        "DwtExpiryOpt",
                        "DwtExpiryDate",
                        "IRLCertificationStatus"});
            table113.AddRow(new string[] {
                        string.Format("{0}", iRLCustodianRefOpt),
                        string.Format("{0}", iRLCustodianRef),
                        string.Format("{0}", iRLIntermediary),
                        string.Format("{0}", iRLInternalStatusOpt),
                        string.Format("{0}", iRLInternalStatus),
                        string.Format("{0}", countryResidenceOpt),
                        "<CountryResidence>",
                        string.Format("{0}", entityTypeOpt),
                        string.Format("{0}", entityType),
                        string.Format("{0}", iRLTaxReference),
                        string.Format("{0}", iRLDateOFBirth),
                        string.Format("{0}", certFileRef),
                        string.Format("{0}", certDwtRef),
                        string.Format("{0}", dwtExpiryOpt),
                        string.Format("{0}", dwtExpiryDate),
                        string.Format("{0}", iRLCertificationStatus)});
#line 750
 testRunner.And("In RSS10043 I continue with the following details:", ((string)(null)), table113, "And ");
#line hidden
            TechTalk.SpecFlow.Table table114 = new TechTalk.SpecFlow.Table(new string[] {
                        "ZAFCustodianRefOpt",
                        "ZAFCustodianRef",
                        "ZAFIntermediary",
                        "ZAFInternalStatusOpt",
                        "ZAFInternalStatus",
                        "TaxDomicileOpt",
                        "TaxDomicile1",
                        "TaxDomicile2",
                        "TaxDomicile3",
                        "NaturePersonOpt",
                        "NaturePerson1",
                        "ZAFTaxReference",
                        "IDNO",
                        "ZAFDateOFBirth",
                        "ExemptionCodeOpt",
                        "ExemptionCode",
                        "PassportCtryIssOpt",
                        "PassportCtryIss",
                        "ZAFCertificationStatus"});
            table114.AddRow(new string[] {
                        string.Format("{0}", zAFCustodianRefOpt),
                        string.Format("{0}", zAFCustodianRef),
                        string.Format("{0}", zAFIntermediary),
                        string.Format("{0}", zAFInternalStatusOpt),
                        string.Format("{0}", zAFInternalStatus),
                        string.Format("{0}", taxDomicileOpt),
                        string.Format("{0}", taxDomicile1),
                        string.Format("{0}", taxDomicile2),
                        string.Format("{0}", taxDomicile3),
                        string.Format("{0}", naturePersonOpt),
                        string.Format("{0}", naturePerson1),
                        string.Format("{0}", zAFTaxReference),
                        string.Format("{0}", iDNO),
                        string.Format("{0}", zAFDateOFBirth),
                        string.Format("{0}", exemptionCodeOpt),
                        string.Format("{0}", exemptionCode),
                        string.Format("{0}", passportCtryIssOpt),
                        string.Format("{0}", passportCtryIss),
                        string.Format("{0}", zAFCertificationStatus)});
#line 753
 testRunner.And("In RSS10044 I continue with the following details:", ((string)(null)), table114, "And ");
#line 756
 testRunner.And("In RSS10010 I click on: \"schedule job\" within the Extract Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 757
 testRunner.And("In RSS10097 I continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 758
 testRunner.And("In RSS10022 I click on: \"customised data extract\" within the Output Format Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table115 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegAddress",
                        "HolderCat",
                        "HolderIdentifier"});
            table115.AddRow(new string[] {
                        string.Format("{0}", regAddress),
                        string.Format("{0}", holderCat),
                        string.Format("{0}", holderIdentifier)});
#line 759
 testRunner.And("In RSS10034 I continue with the following details:", ((string)(null)), table115, "And ");
#line hidden
            TechTalk.SpecFlow.Table table116 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderTypeCode",
                        "HolderOtherTaxCode",
                        "TfnDesc"});
            table116.AddRow(new string[] {
                        string.Format("{0}", holderTypeCode),
                        string.Format("{0}", holderOtherTaxCode),
                        string.Format("{0}", tfnDesc)});
#line 762
 testRunner.And("In RSS10035 I continue with the following details:", ((string)(null)), table116, "And ");
#line hidden
            TechTalk.SpecFlow.Table table117 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "WorkPhone",
                        "FaxNumber",
                        "MobilePhone",
                        "CommMethods"});
            table117.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", workPhone),
                        string.Format("{0}", faxNumber),
                        string.Format("{0}", mobilePhone),
                        string.Format("{0}", commMethods)});
#line 765
 testRunner.And("In RSS10039 I continue with the following details:", ((string)(null)), table117, "And ");
#line hidden
            TechTalk.SpecFlow.Table table118 = new TechTalk.SpecFlow.Table(new string[] {
                        "BalanceDetails",
                        "GroupTotals",
                        "ClassTotals",
                        "PlanDetails",
                        "DirectCredit",
                        "BankAccountNbr",
                        "BankAccountName",
                        "BankID",
                        "BankNamadd",
                        "PayeeDetails",
                        "PayeeAddress",
                        "PayeePcodeDomicile",
                        "ForeignChequeInd",
                        "ResidencyInd",
                        "Class",
                        "ReportClassORGroup",
                        "ClassGroup"});
            table118.AddRow(new string[] {
                        string.Format("{0}", balanceDetails),
                        string.Format("{0}", groupTotals),
                        string.Format("{0}", classTotals),
                        string.Format("{0}", planDetails),
                        "<DirectCredits>",
                        string.Format("{0}", bankAccountNbr),
                        string.Format("{0}", bankAccountName),
                        string.Format("{0}", bankID),
                        string.Format("{0}", bankNamadd),
                        string.Format("{0}", payeeDetails),
                        string.Format("{0}", payeeAddress),
                        string.Format("{0}", payeePcodeDomicile),
                        "<ForeignChequeInds>",
                        "N",
                        string.Format("{0}", @class),
                        string.Format("{0}", reportClassORGroup),
                        string.Format("{0}", classGroup)});
#line 768
 testRunner.And("In RSS10036 I continue with the following details:", ((string)(null)), table118, "And ");
#line hidden
            TechTalk.SpecFlow.Table table119 = new TechTalk.SpecFlow.Table(new string[] {
                        "DetailRecordOutput"});
            table119.AddRow(new string[] {
                        string.Format("{0}", detailRecordOutput)});
#line 771
 testRunner.And("In RSS10048 I continue with the following details:", ((string)(null)), table119, "And ");
#line hidden
            TechTalk.SpecFlow.Table table120 = new TechTalk.SpecFlow.Table(new string[] {
                        "WebProxyMailing"});
            table120.AddRow(new string[] {
                        string.Format("{0}", webProxyMailing)});
#line 774
 testRunner.And("In RSS10046 I continue with the following details:", ((string)(null)), table120, "And ");
#line hidden
            TechTalk.SpecFlow.Table table121 = new TechTalk.SpecFlow.Table(new string[] {
                        "IncludeDetails",
                        "EmpIDInd",
                        "PayIDInd",
                        "EmployeeUniqueIDInd",
                        "LocCodesInd",
                        "BusUnitsInd",
                        "JobBandsInd",
                        "CostCentreInd",
                        "EmpCommMethodsInd"});
            table121.AddRow(new string[] {
                        string.Format("{0}", includeDetails),
                        string.Format("{0}", empIDInd),
                        string.Format("{0}", payIDInd),
                        string.Format("{0}", employeeUniqueIDInd),
                        string.Format("{0}", locCodesInd),
                        string.Format("{0}", busUnitsInd),
                        string.Format("{0}", jobBandsInd),
                        string.Format("{0}", costCentreInd),
                        string.Format("{0}", empCommMethodsInd)});
#line 777
 testRunner.And("In RSS10041 I continue with the following details:", ((string)(null)), table121, "And ");
#line hidden
            TechTalk.SpecFlow.Table table122 = new TechTalk.SpecFlow.Table(new string[] {
                        "FieldSeparator"});
            table122.AddRow(new string[] {
                        string.Format("{0}", fieldSeparator)});
#line 780
 testRunner.And("In RSS10037 I continue with the following details:", ((string)(null)), table122, "And ");
#line hidden
            TechTalk.SpecFlow.Table table123 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportSeq"});
            table123.AddRow(new string[] {
                        string.Format("{0}", reportSeq)});
#line 783
 testRunner.And("In RSS10028 I continue with the following details:", ((string)(null)), table123, "And ");
#line 786
 testRunner.When("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table124 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table124.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 787
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table124, "And ");
#line hidden
            TechTalk.SpecFlow.Table table125 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table125.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 790
  testRunner.Then("I copy output files to local", ((string)(null)), table125, "Then ");
#line 793
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 794
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Tax_selection_LB_Labels_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("TaxSelectionLabelsReport_Gold")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("33779")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyOther")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Itereation1", "Tax_Selection_With_LB_Labels_Report", "N", "N", "H", null)]
        [NUnit.Framework.TestCaseAttribute("Itereation2", "Tax_Selection_Without_LB_Labels_Report", "N", "Y", "H", null)]
        public virtual void Tax_Selection_LB_Labels_Report_Goldcopy(string reportHeading, string reportDesc, string preload, string printAsx, string reportSeq, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TaxSelectionLabelsReport_Gold",
                    "WES_AUTO_R",
                    "33779",
                    "ReportGoldcopyOther",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Tax_selection_LB_Labels_Report_Goldcopy", @__tags);
#line 811
this.ScenarioSetup(scenarioInfo);
#line 812
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 813
 testRunner.And("In SELCOY01 I select the company: \"WES_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 814
 testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 815
 testRunner.And("In RSS00101 I click on: \"extract reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table126 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload"});
            table126.AddRow(new string[] {
                        string.Format("{0}", preload)});
#line 816
 testRunner.And("In RSS10001 I continue with the following details:", ((string)(null)), table126, "And ");
#line 819
 testRunner.And("In RSS10010 I click on: \"schedule job\" within the Extract Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 820
 testRunner.And("In RSS10097 I continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 821
 testRunner.And("In RSS10022 I click on: \"labels\" within the Output Format Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table127 = new TechTalk.SpecFlow.Table(new string[] {
                        "PrintAsx"});
            table127.AddRow(new string[] {
                        string.Format("{0}", printAsx)});
#line 822
 testRunner.And("In RSS10023 I continue with the following details:", ((string)(null)), table127, "And ");
#line hidden
            TechTalk.SpecFlow.Table table128 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportSeq"});
            table128.AddRow(new string[] {
                        string.Format("{0}", reportSeq)});
#line 825
 testRunner.And("In RSS10028 I continue with the following details:", ((string)(null)), table128, "And ");
#line 828
 testRunner.When("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table129 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table129.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 829
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table129, "And ");
#line hidden
            TechTalk.SpecFlow.Table table130 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table130.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 832
  testRunner.Then("I copy output files to local", ((string)(null)), table130, "Then ");
#line 835
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 836
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Electronic_Communication_Customised_Extract_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ElectronicCommunicationWithCustomisedExtractReport_Gold")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("334777")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyOther")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Itereation1", "Electronic_Communication_Customised_Extract_Report", "N", "A", "A", "A", "", "", "A", "", "", "", "A", "", "", "", "A", "", "", "", "A", "", "", "", "A", "", "", "", "A", "", "", "", "Y", "Y", "Y", "Y", "Y", "N", "Y", "Y", "Y", "Y", "Y", "Y", "N", "H", "N", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "", "P", "N", "N", "N", "N", "N", null)]
        [NUnit.Framework.TestCaseAttribute("Itereation2", "Electronic_Communication_Customised_Extract_Report", "N", "O", "A", "B", "", "", "B", "", "", "", "B", "", "", "", "A", "", "", "", "A", "", "", "", "B", "", "", "", "B", "", "", "", "N", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "N", "Y", "N", "H", "N", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "", "D", "N", "N", "N", "N", "N", null)]
        [NUnit.Framework.TestCaseAttribute("Itereation3", "Electronic_Communication_Customised_Extract_Report", "N", "O", "B", "A", "", "", "S", "E", "M", "", "S", "F", "O", "", "A", "", "", "", "A", "", "", "", "S", "T", "", "", "S", "A", "", "", "Y", "Y", "Y", "Y", "Y", "N", "Y", "Y", "Y", "Y", "Y", "Y", "N", "H", "N", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "", "H", "N", "N", "N", "N", "N", null)]
        [NUnit.Framework.TestCaseAttribute("Itereation4", "Electronic_Communication_Customised_Extract_Report", "N", "O", "A", "S", "1/04/2015", "25/9/2015", "E", "T", "P", "", "E", "T", "", "", "A", "", "", "", "A", "", "", "", "E", "T", "", "", "E", "T", "", "", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "N", "H", "N", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "", "H", "N", "N", "N", "N", "N", null)]
        [NUnit.Framework.TestCaseAttribute("Itereation5", "Electronic_Communication_Customised_Extract_Report", "N", "A", "B", "A", "", "", "S", "E", "T", "P", "A", "", "", "", "A", "", "", "", "A", "", "", "", "A", "", "", "", "A", "", "", "", "N", "Y", "Y", "Y", "Y", "N", "Y", "Y", "Y", "Y", "Y", "Y", "N", "H", "N", "N", "", "", "", "", "", "", "", "", "", "P", "N", "N", "N", "N", "N", null)]
        public virtual void Electronic_Communication_Customised_Extract_Report_Goldcopy(
                    string reportHeading, 
                    string reportDesc, 
                    string preload, 
                    string indFlag, 
                    string email, 
                    string rtnDateInd, 
                    string rtnDateFrom, 
                    string rtnDateTO, 
                    string pubSelection1, 
                    string _1Methods1, 
                    string _2Methods1, 
                    string _3Methods1, 
                    string pubSelection3, 
                    string _1Methods3, 
                    string _2Methods3, 
                    string _3Methods3, 
                    string pubSelection2, 
                    string _1Methods2, 
                    string _2Methods2, 
                    string _3Methods2, 
                    string pubSelection7, 
                    string _1Methods7, 
                    string _2Methods7, 
                    string _3Methods7, 
                    string pubSelection8, 
                    string _1Methods8, 
                    string _2Methods8, 
                    string _3Methods8, 
                    string pubSelection9, 
                    string _1Methods9, 
                    string _2Methods9, 
                    string _3Methods9, 
                    string regAddress, 
                    string holderCat, 
                    string holderIdentifier, 
                    string holderTypeCode, 
                    string holderOtherTaxCode, 
                    string tfnDesc, 
                    string extraIdentifier, 
                    string homePhone, 
                    string workPhone, 
                    string faxNumber, 
                    string mobilePhone, 
                    string commMethods, 
                    string balanceDetails, 
                    string detailRecordOutput, 
                    string webProxyMailing, 
                    string includeDetails, 
                    string empIDInd, 
                    string payIDInd, 
                    string employeeUniqueIDInd, 
                    string locCodesInd, 
                    string busUnitsInd, 
                    string jobBandsInd, 
                    string costCentreInd, 
                    string empCommMethodsInd, 
                    string fieldSeparator, 
                    string reportSeq, 
                    string planDetails, 
                    string directCredit, 
                    string residencyInd, 
                    string payeeDetails, 
                    string foreignChequeInd, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ElectronicCommunicationWithCustomisedExtractReport_Gold",
                    "WES_AUTO_R",
                    "334777",
                    "ReportGoldcopyOther",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Electronic_Communication_Customised_Extract_Report_Goldcopy", @__tags);
#line 849
this.ScenarioSetup(scenarioInfo);
#line 850
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 851
 testRunner.And("In SELCOY01 I select the company: \"WES_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 852
 testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 853
 testRunner.And("In RSS00101 I click on: \"extract reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table131 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload"});
            table131.AddRow(new string[] {
                        string.Format("{0}", preload)});
#line 854
 testRunner.And("In RSS10001 I continue with the following details:", ((string)(null)), table131, "And ");
#line 857
 testRunner.And("In RSS10010 I click on: \"electronic communication\" within the Extract Reporting M" +
                    "enu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table132 = new TechTalk.SpecFlow.Table(new string[] {
                        "IndFlag",
                        "Email",
                        "RtnDateInd",
                        "RtnDateFrom",
                        "RtnDateTO",
                        "PubSelection1",
                        "1Methods1",
                        "2Methods1",
                        "3Methods1",
                        "PubSelection2",
                        "1Methods2",
                        "2Methods2",
                        "3Methods2",
                        "PubSelection3",
                        "1Methods3",
                        "2Methods3",
                        "3Methods3",
                        "PubSelection7",
                        "1Methods7",
                        "2Methods7",
                        "3Methods7",
                        "PubSelection8",
                        "1Methods8",
                        "2Methods8",
                        "3Methods8",
                        "PubSelection9",
                        "1Methods9",
                        "2Methods9",
                        "3Methods9"});
            table132.AddRow(new string[] {
                        string.Format("{0}", indFlag),
                        string.Format("{0}", email),
                        string.Format("{0}", rtnDateInd),
                        string.Format("{0}", rtnDateFrom),
                        string.Format("{0}", rtnDateTO),
                        string.Format("{0}", pubSelection1),
                        string.Format("{0}", _1Methods1),
                        string.Format("{0}", _2Methods1),
                        string.Format("{0}", _3Methods1),
                        string.Format("{0}", pubSelection2),
                        string.Format("{0}", _1Methods2),
                        string.Format("{0}", _2Methods2),
                        string.Format("{0}", _3Methods2),
                        string.Format("{0}", pubSelection3),
                        string.Format("{0}", _1Methods3),
                        string.Format("{0}", _2Methods3),
                        string.Format("{0}", _3Methods3),
                        string.Format("{0}", pubSelection7),
                        string.Format("{0}", _1Methods7),
                        string.Format("{0}", _2Methods7),
                        string.Format("{0}", _3Methods7),
                        string.Format("{0}", pubSelection8),
                        string.Format("{0}", _1Methods8),
                        string.Format("{0}", _2Methods8),
                        string.Format("{0}", _3Methods8),
                        string.Format("{0}", pubSelection9),
                        string.Format("{0}", _1Methods9),
                        string.Format("{0}", _2Methods9),
                        string.Format("{0}", _3Methods9)});
#line 858
 testRunner.And("In RSS10050 I continue with the following details:", ((string)(null)), table132, "And ");
#line 861
 testRunner.And("In RSS10010 I click on: \"schedule job\" within the Extract Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 862
 testRunner.And("In RSS10097 I continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 863
 testRunner.And("In RSS10022 I click on: \"customised data extract\" within the Output Format Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table133 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegAddress",
                        "HolderCat",
                        "HolderIdentifier"});
            table133.AddRow(new string[] {
                        string.Format("{0}", regAddress),
                        string.Format("{0}", holderCat),
                        string.Format("{0}", holderIdentifier)});
#line 864
 testRunner.And("In RSS10034 I continue with the following details:", ((string)(null)), table133, "And ");
#line hidden
            TechTalk.SpecFlow.Table table134 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderTypeCode",
                        "HolderOtherTaxCode",
                        "TfnDesc"});
            table134.AddRow(new string[] {
                        string.Format("{0}", holderTypeCode),
                        string.Format("{0}", holderOtherTaxCode),
                        string.Format("{0}", tfnDesc)});
#line 867
 testRunner.And("In RSS10035 I continue with the following details:", ((string)(null)), table134, "And ");
#line hidden
            TechTalk.SpecFlow.Table table135 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "WorkPhone",
                        "FaxNumber",
                        "MobilePhone",
                        "CommMethods"});
            table135.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", workPhone),
                        string.Format("{0}", faxNumber),
                        string.Format("{0}", mobilePhone),
                        string.Format("{0}", commMethods)});
#line 870
 testRunner.And("In RSS10039 I continue with the following details:", ((string)(null)), table135, "And ");
#line hidden
            TechTalk.SpecFlow.Table table136 = new TechTalk.SpecFlow.Table(new string[] {
                        "BalanceDetails",
                        "PlanDetails",
                        "DirectCredit",
                        "ResidencyInd",
                        "PayeeDetails",
                        "ForeignChequeInd"});
            table136.AddRow(new string[] {
                        string.Format("{0}", balanceDetails),
                        string.Format("{0}", planDetails),
                        string.Format("{0}", directCredit),
                        string.Format("{0}", residencyInd),
                        string.Format("{0}", payeeDetails),
                        string.Format("{0}", foreignChequeInd)});
#line 873
 testRunner.And("In RSS10036 I continue with the following details:", ((string)(null)), table136, "And ");
#line hidden
            TechTalk.SpecFlow.Table table137 = new TechTalk.SpecFlow.Table(new string[] {
                        "DetailRecordOutput"});
            table137.AddRow(new string[] {
                        string.Format("{0}", detailRecordOutput)});
#line 876
 testRunner.And("In RSS10048 I continue with the following details:", ((string)(null)), table137, "And ");
#line hidden
            TechTalk.SpecFlow.Table table138 = new TechTalk.SpecFlow.Table(new string[] {
                        "WebProxyMailing"});
            table138.AddRow(new string[] {
                        string.Format("{0}", webProxyMailing)});
#line 879
 testRunner.And("In RSS10046 I continue with the following details:", ((string)(null)), table138, "And ");
#line hidden
            TechTalk.SpecFlow.Table table139 = new TechTalk.SpecFlow.Table(new string[] {
                        "IncludeDetails",
                        "EmpIDInd",
                        "PayIDInd",
                        "EmployeeUniqueIDInd",
                        "LocCodesInd",
                        "BusUnitsInd",
                        "JobBandsInd",
                        "CostCentreInd",
                        "EmpCommMethodsInd"});
            table139.AddRow(new string[] {
                        string.Format("{0}", includeDetails),
                        string.Format("{0}", empIDInd),
                        string.Format("{0}", payIDInd),
                        string.Format("{0}", employeeUniqueIDInd),
                        string.Format("{0}", locCodesInd),
                        string.Format("{0}", busUnitsInd),
                        string.Format("{0}", jobBandsInd),
                        string.Format("{0}", costCentreInd),
                        string.Format("{0}", empCommMethodsInd)});
#line 882
 testRunner.And("In RSS10041 I continue with the following details:", ((string)(null)), table139, "And ");
#line hidden
            TechTalk.SpecFlow.Table table140 = new TechTalk.SpecFlow.Table(new string[] {
                        "FieldSeparator"});
            table140.AddRow(new string[] {
                        string.Format("{0}", fieldSeparator)});
#line 885
 testRunner.And("In RSS10037 I continue with the following details:", ((string)(null)), table140, "And ");
#line hidden
            TechTalk.SpecFlow.Table table141 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportSeq"});
            table141.AddRow(new string[] {
                        string.Format("{0}", reportSeq)});
#line 888
 testRunner.And("In RSS10028 I continue with the following details:", ((string)(null)), table141, "And ");
#line 891
 testRunner.When("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table142 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table142.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 892
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table142, "And ");
#line hidden
            TechTalk.SpecFlow.Table table143 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table143.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 895
  testRunner.Then("I copy output files to local", ((string)(null)), table143, "Then ");
#line 898
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 899
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Name_And_Address_Customised_Extract_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("NameAndAddressWithCustomisedExtractReport_Gold")]
        [NUnit.Framework.CategoryAttribute("QBE_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("29480")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyOther")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Itereation1", "Name_And_Address_Customised_Extract_Report", "N", "Y", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "Y", "Y", "Y", "Y", "Y", "N", "Y", "Y", "Y", "Y", "Y", "Y", "N", "H", "N", "N", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "", "P", "N", "N", "N", "N", "N", null)]
        [NUnit.Framework.TestCaseAttribute("Itereation2", "Name_And_Address_Customised_Extract_Report", "N", "N", "Ewfupid", "R", "F", "Rimceqil", "R", "F", "Cify", "R", "F", "A", "I", "5000", "5001", "", "", "", "", "", "", "I", "AUS", "GBR", "USA", "62571", "P", "S", "A", "N", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "N", "Y", "N", "H", "N", "N", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "", "D", "N", "N", "N", "N", "N", null)]
        public virtual void Name_And_Address_Customised_Extract_Report_Goldcopy(
                    string reportHeading, 
                    string reportDesc, 
                    string preload, 
                    string staticSelOnly, 
                    string nASearchPattern1, 
                    string nASearchRegexpInd1, 
                    string nASearchLocation1, 
                    string nASearchPattern2, 
                    string nASearchRegexpInd2, 
                    string nASearchLocation2, 
                    string nASearchPattern3, 
                    string nASearchRegexpInd3, 
                    string nASearchLocation3, 
                    string nASearchConnector, 
                    string postcodeFlag, 
                    string pCFrom1, 
                    string pCTo1, 
                    string pCFrom2, 
                    string pCTo2, 
                    string pCFrom3, 
                    string pCTo3, 
                    string pCFrom4, 
                    string pCTo4, 
                    string domcodeFlag, 
                    string domCodes1, 
                    string domCodes2, 
                    string domCodes3, 
                    string brokerNum, 
                    string nameKeyAlphaFrom, 
                    string nameKeyAlphaTO, 
                    string dpid, 
                    string regAddress, 
                    string holderCat, 
                    string holderIdentifier, 
                    string holderTypeCode, 
                    string holderOtherTaxCode, 
                    string tfnDesc, 
                    string extraIdentifier, 
                    string homePhone, 
                    string workPhone, 
                    string faxNumber, 
                    string mobilePhone, 
                    string commMethods, 
                    string balanceDetails, 
                    string detailRecordOutput, 
                    string webProxyMailing, 
                    string includeDetails, 
                    string empIDInd, 
                    string payIDInd, 
                    string employeeUniqueIDInd, 
                    string locCodesInd, 
                    string busUnitsInd, 
                    string jobBandsInd, 
                    string costCentreInd, 
                    string empCommMethodsInd, 
                    string fieldSeparator, 
                    string reportSeq, 
                    string planDetails, 
                    string directCredit, 
                    string residencyInd, 
                    string payeeDetails, 
                    string foreignChequeInd, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "NameAndAddressWithCustomisedExtractReport_Gold",
                    "QBE_AUTO_R",
                    "29480",
                    "ReportGoldcopyOther",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Name_And_Address_Customised_Extract_Report_Goldcopy", @__tags);
#line 915
this.ScenarioSetup(scenarioInfo);
#line 916
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 917
 testRunner.And("In SELCOY01 I select the company: \"QBE_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 918
 testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 919
 testRunner.And("In RSS00101 I click on: \"extract reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table144 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload"});
            table144.AddRow(new string[] {
                        string.Format("{0}", preload)});
#line 920
 testRunner.And("In RSS10001 I continue with the following details:", ((string)(null)), table144, "And ");
#line 923
 testRunner.And("In RSS10010 I click on: \"name address\" within the Extract Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table145 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticSelOnly",
                        "NASearchPattern1",
                        "NASearchRegexpInd1",
                        "NASearchLocation1",
                        "NASearchPattern2",
                        "NASearchRegexpInd2",
                        "NASearchLocation2",
                        "NASearchPattern3",
                        "NASearchRegexpInd3",
                        "NASearchLocation3",
                        "NASearchConnector",
                        "PostcodeFlag",
                        "PCFrom1",
                        "PCTo1",
                        "PCFrom2",
                        "PCTo2",
                        "PCFrom3",
                        "PCTo3",
                        "PCFrom4",
                        "PCTo4",
                        "DomcodeFlag",
                        "DomCodes1",
                        "DomCodes2",
                        "DomCodes3",
                        "BrokerNum",
                        "NameKeyAlphaFrom",
                        "NameKeyAlphaTO",
                        "Dpid",
                        "ResidencyInd"});
            table145.AddRow(new string[] {
                        string.Format("{0}", staticSelOnly),
                        string.Format("{0}", nASearchPattern1),
                        string.Format("{0}", nASearchRegexpInd1),
                        string.Format("{0}", nASearchLocation1),
                        string.Format("{0}", nASearchPattern2),
                        string.Format("{0}", nASearchRegexpInd2),
                        string.Format("{0}", nASearchLocation2),
                        string.Format("{0}", nASearchPattern3),
                        string.Format("{0}", nASearchRegexpInd3),
                        string.Format("{0}", nASearchLocation3),
                        string.Format("{0}", nASearchConnector),
                        string.Format("{0}", postcodeFlag),
                        string.Format("{0}", pCFrom1),
                        string.Format("{0}", pCTo1),
                        string.Format("{0}", pCFrom2),
                        string.Format("{0}", pCTo2),
                        string.Format("{0}", pCFrom3),
                        string.Format("{0}", pCTo3),
                        string.Format("{0}", pCFrom4),
                        string.Format("{0}", pCTo4),
                        string.Format("{0}", domcodeFlag),
                        string.Format("{0}", domCodes1),
                        string.Format("{0}", domCodes2),
                        string.Format("{0}", domCodes3),
                        string.Format("{0}", brokerNum),
                        string.Format("{0}", nameKeyAlphaFrom),
                        string.Format("{0}", nameKeyAlphaTO),
                        string.Format("{0}", dpid),
                        string.Format("{0}", residencyInd)});
#line 924
 testRunner.And("In RSS10016 I continue with the following details:", ((string)(null)), table145, "And ");
#line 927
 testRunner.And("In RSS10010 I click on: \"schedule job\" within the Extract Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 928
 testRunner.And("In RSS10097 I continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 929
 testRunner.And("In RSS10022 I click on: \"customised data extract\" within the Output Format Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table146 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegAddress",
                        "HolderCat",
                        "HolderIdentifier"});
            table146.AddRow(new string[] {
                        string.Format("{0}", regAddress),
                        string.Format("{0}", holderCat),
                        string.Format("{0}", holderIdentifier)});
#line 930
 testRunner.And("In RSS10034 I continue with the following details:", ((string)(null)), table146, "And ");
#line hidden
            TechTalk.SpecFlow.Table table147 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderTypeCode",
                        "HolderOtherTaxCode",
                        "TfnDesc"});
            table147.AddRow(new string[] {
                        string.Format("{0}", holderTypeCode),
                        string.Format("{0}", holderOtherTaxCode),
                        string.Format("{0}", tfnDesc)});
#line 933
 testRunner.And("In RSS10035 I continue with the following details:", ((string)(null)), table147, "And ");
#line hidden
            TechTalk.SpecFlow.Table table148 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "WorkPhone",
                        "FaxNumber",
                        "MobilePhone",
                        "CommMethods"});
            table148.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", workPhone),
                        string.Format("{0}", faxNumber),
                        string.Format("{0}", mobilePhone),
                        string.Format("{0}", commMethods)});
#line 936
 testRunner.And("In RSS10039 I continue with the following details:", ((string)(null)), table148, "And ");
#line hidden
            TechTalk.SpecFlow.Table table149 = new TechTalk.SpecFlow.Table(new string[] {
                        "BalanceDetails",
                        "PlanDetails",
                        "DirectCredit",
                        "ResidencyInd",
                        "PayeeDetails",
                        "ForeignChequeInd"});
            table149.AddRow(new string[] {
                        string.Format("{0}", balanceDetails),
                        string.Format("{0}", planDetails),
                        string.Format("{0}", directCredit),
                        string.Format("{0}", residencyInd),
                        string.Format("{0}", payeeDetails),
                        string.Format("{0}", foreignChequeInd)});
#line 939
 testRunner.And("In RSS10036 I continue with the following details:", ((string)(null)), table149, "And ");
#line hidden
            TechTalk.SpecFlow.Table table150 = new TechTalk.SpecFlow.Table(new string[] {
                        "DetailRecordOutput"});
            table150.AddRow(new string[] {
                        string.Format("{0}", detailRecordOutput)});
#line 942
 testRunner.And("In RSS10048 I continue with the following details:", ((string)(null)), table150, "And ");
#line hidden
            TechTalk.SpecFlow.Table table151 = new TechTalk.SpecFlow.Table(new string[] {
                        "WebProxyMailing"});
            table151.AddRow(new string[] {
                        string.Format("{0}", webProxyMailing)});
#line 945
 testRunner.And("In RSS10046 I continue with the following details:", ((string)(null)), table151, "And ");
#line hidden
            TechTalk.SpecFlow.Table table152 = new TechTalk.SpecFlow.Table(new string[] {
                        "IncludeDetails",
                        "EmpIDInd",
                        "PayIDInd",
                        "EmployeeUniqueIDInd",
                        "LocCodesInd",
                        "BusUnitsInd",
                        "JobBandsInd",
                        "CostCentreInd",
                        "EmpCommMethodsInd"});
            table152.AddRow(new string[] {
                        string.Format("{0}", includeDetails),
                        string.Format("{0}", empIDInd),
                        string.Format("{0}", payIDInd),
                        string.Format("{0}", employeeUniqueIDInd),
                        string.Format("{0}", locCodesInd),
                        string.Format("{0}", busUnitsInd),
                        string.Format("{0}", jobBandsInd),
                        string.Format("{0}", costCentreInd),
                        string.Format("{0}", empCommMethodsInd)});
#line 948
 testRunner.And("In RSS10041 I continue with the following details:", ((string)(null)), table152, "And ");
#line hidden
            TechTalk.SpecFlow.Table table153 = new TechTalk.SpecFlow.Table(new string[] {
                        "FieldSeparator"});
            table153.AddRow(new string[] {
                        string.Format("{0}", fieldSeparator)});
#line 951
 testRunner.And("In RSS10037 I continue with the following details:", ((string)(null)), table153, "And ");
#line hidden
            TechTalk.SpecFlow.Table table154 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportSeq"});
            table154.AddRow(new string[] {
                        string.Format("{0}", reportSeq)});
#line 954
 testRunner.And("In RSS10028 I continue with the following details:", ((string)(null)), table154, "And ");
#line 957
 testRunner.When("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table155 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table155.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 958
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table155, "And ");
#line hidden
            TechTalk.SpecFlow.Table table156 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table156.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 961
  testRunner.Then("I copy output files to local", ((string)(null)), table156, "Then ");
#line 964
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 965
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
