// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SCRIPAU.Automation.Reporting
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ESSReportingGold")]
    public partial class ESSReportingGoldFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ESSReportingGold.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ESSReportingGold", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Employee_Extract_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESS_EmployeeExtractReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42419")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test2", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "DEP", "EXA", "", "", "", "1", "99999999999", "N", "N", "N", "N", "N", "S", ",", "Y", "", "A", "", "", "", "", "", "", "CPU_AUTO_R", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "OPT", "EXA", "3", "7", "", "1", "99999999999", "N", "N", "N", "N", "N", "S", ",", "Y", "", "A", "", "", "", "", "", "", "CPU_AUTO_R", null)]
        [NUnit.Framework.TestCaseAttribute("Test4", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "3", "7", "", "1", "99999999999", "N", "N", "N", "N", "N", "S", ",", "Y", "", "A", "", "", "", "", "", "", "CPU_AUTO_R", null)]
        [NUnit.Framework.TestCaseAttribute("Test5", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "FP", "OPT", "3", "7", "", "1", "99999999999", "N", "N", "N", "N", "N", "S", ",", "Y", "", "A", "", "", "", "", "", "", "CPU_AUTO_R", null)]
        [NUnit.Framework.TestCaseAttribute("Test6", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "1", "5", "", "", "99999999999", "N", "N", "N", "N", "N", "S", ",", "Y", "", "A", "6", "7", "8", "9", "", "", "QBE_AUTO_R", null)]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "", "99999999999", "N", "N", "N", "N", "N", "S", ",", "Y", "", "A", "", "", "", "", "", "", "CPU_AUTO_R", new string[] {
                "SmokeTestReportTest"})]
        public virtual void ESS_Employee_Extract_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string selcls1, 
                    string selcls2, 
                    string selgrp1, 
                    string selgrp2, 
                    string exd1, 
                    string unitBalanceFrom, 
                    string unitBalanceTO, 
                    string holderTotalsOnly, 
                    string classCode, 
                    string registerCode, 
                    string registerType, 
                    string awardDate, 
                    string select, 
                    string fieldSeparator, 
                    string textDelimiterReq, 
                    string reportDate, 
                    string reportSeq, 
                    string selgrp3, 
                    string selgrp4, 
                    string selgrp5, 
                    string selgrp6, 
                    string transDateFrom, 
                    string transDateTO, 
                    string company, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESS_EmployeeExtractReport_Gold",
                    "CPU_AUTO_R",
                    "42419",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Employee_Extract_Report_Goldcopy", @__tags);
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
 testRunner.When(string.Format("In SELCOY01 I select the company: \"{0}\"", company), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
  testRunner.And("In ERS00100 I click on: \"employee extract report\" within the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table1.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 14
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table1, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table2.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 17
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table3.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 20
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table4.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 23
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table5.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 26
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table5, "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table6.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 29
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table6, "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selcls1",
                        "Selcls2",
                        "Selgrp1",
                        "Selgrp2",
                        "Exd1",
                        "UnitBalanceFrom",
                        "UnitBalanceTO",
                        "HolderTotalsOnly",
                        "Selgrp3",
                        "Selgrp4",
                        "Selgrp5",
                        "Selgrp6",
                        "TransDateFrom",
                        "TransDateTO"});
            table7.AddRow(new string[] {
                        string.Format("{0}", selcls1),
                        string.Format("{0}", selcls2),
                        string.Format("{0}", selgrp1),
                        string.Format("{0}", selgrp2),
                        string.Format("{0}", exd1),
                        string.Format("{0}", unitBalanceFrom),
                        string.Format("{0}", unitBalanceTO),
                        string.Format("{0}", holderTotalsOnly),
                        string.Format("{0}", selgrp3),
                        string.Format("{0}", selgrp4),
                        string.Format("{0}", selgrp5),
                        string.Format("{0}", selgrp6),
                        string.Format("{0}", transDateFrom),
                        string.Format("{0}", transDateTO)});
#line 32
  testRunner.And("In ERS01013 I continue with the following details:", ((string)(null)), table7, "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClassCode",
                        "RegisterCode",
                        "RegisterType",
                        "AwardDate"});
            table8.AddRow(new string[] {
                        string.Format("{0}", classCode),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", registerType),
                        string.Format("{0}", awardDate)});
#line 35
  testRunner.And("In ERS01016 I continue with the following details:", ((string)(null)), table8, "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Select",
                        "FieldSeparator",
                        "TextDelimiterReq"});
            table9.AddRow(new string[] {
                        string.Format("{0}", select),
                        string.Format("{0}", fieldSeparator),
                        string.Format("{0}", textDelimiterReq)});
#line 38
  testRunner.And("In ERS01017 I continue with the following details:", ((string)(null)), table9, "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table10.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 41
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table10, "And ");
#line 44
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table11.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 45
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table11, "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table12.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 48
  testRunner.Then("I copy output files to local", ((string)(null)), table12, "Then ");
#line 51
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Purchase_Reconciliation_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESS_PurchaseReconciliationReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42420")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "DEP", "", "11A", "", "EP", "", "01/01/2010", "01/01/2015", "S", "B", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "N", "", "A", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "DEP", "EXA", "11A", "12A", "EP", "", "01/01/2015", "01/04/2015", "S", "B", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "N", "", "A", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "DEP", "EXA", "11A", "12A", "EP", "", "01/01/2015", "01/04/2015", "S", "B", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "N", "", "A", "1", "7", null)]
        [NUnit.Framework.TestCaseAttribute("Test4", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "11A", "", "EP", "", "01/01/2010", "01/01/2015", "S", "B", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "N", "", "A", "3", "7", null)]
        public virtual void ESS_Purchase_Reconciliation_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string selcls1, 
                    string selcls2, 
                    string selreg1, 
                    string selreg2, 
                    string regType1, 
                    string regType2, 
                    string dateFrom, 
                    string dateTO, 
                    string summaryDetailInd, 
                    string contributionTypeInd, 
                    string contractedSvgsInd, 
                    string svgsContribDiffInd, 
                    string dispResidualsInd, 
                    string dispUnitBalanceInd, 
                    string dispSharePriceInd, 
                    string dispShareCostInd, 
                    string dispUnitsAllocInd, 
                    string ers01004RecContribDetsInd, 
                    string reportDate, 
                    string reportSeq, 
                    string selGrp1, 
                    string selGrp2, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESS_PurchaseReconciliationReport_Gold",
                    "CPU_AUTO_R",
                    "42420",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Purchase_Reconciliation_Report_Goldcopy", @__tags);
#line 76
this.ScenarioSetup(scenarioInfo);
#line 77
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 78
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 79
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
  testRunner.And("In ERS00100 I click on: \"purchase reconciliation report\" within the ESS Reporting" +
                    " Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table13.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 82
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table13, "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table14.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 85
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table14, "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table15.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 88
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table15, "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table16.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 91
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table16, "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table17.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 94
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table17, "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table18.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 97
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table18, "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selcls1",
                        "Selcls2",
                        "Selreg1",
                        "Selreg2",
                        "RegType1",
                        "RegType2",
                        "DateFrom",
                        "DateTO",
                        "SummaryDetailInd",
                        "ContributionTypeInd",
                        "ContractedSvgsInd",
                        "SvgsContribDiffInd",
                        "DispResidualsInd",
                        "DispUnitBalanceInd",
                        "DispSharePriceInd",
                        "DispShareCostInd",
                        "DispUnitsAllocInd",
                        "Ers01004RecContribDetsInd",
                        "SelGrp1",
                        "SelGrp2"});
            table19.AddRow(new string[] {
                        string.Format("{0}", selcls1),
                        string.Format("{0}", selcls2),
                        string.Format("{0}", selreg1),
                        string.Format("{0}", selreg2),
                        string.Format("{0}", regType1),
                        string.Format("{0}", regType2),
                        string.Format("{0}", dateFrom),
                        string.Format("{0}", dateTO),
                        string.Format("{0}", summaryDetailInd),
                        string.Format("{0}", contributionTypeInd),
                        string.Format("{0}", contractedSvgsInd),
                        string.Format("{0}", svgsContribDiffInd),
                        string.Format("{0}", dispResidualsInd),
                        string.Format("{0}", dispUnitBalanceInd),
                        string.Format("{0}", dispSharePriceInd),
                        string.Format("{0}", dispShareCostInd),
                        string.Format("{0}", dispUnitsAllocInd),
                        string.Format("{0}", ers01004RecContribDetsInd),
                        string.Format("{0}", selGrp1),
                        string.Format("{0}", selGrp2)});
#line 100
  testRunner.And("In ERS01004 I continue with the following details:", ((string)(null)), table19, "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table20.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 103
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table20, "And ");
#line 106
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table21.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 107
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table21, "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table22.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 110
  testRunner.Then("I copy output files to local", ((string)(null)), table22, "Then ");
#line 113
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 114
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Contribution_File_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESS_ContributionFileReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42418")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "DEP", "", "", "", "", "A", "", "A", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "DEP", "12A", "11A", "", "", "A", "", "A", null)]
        public virtual void ESS_Contribution_File_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string selcls, 
                    string selreg1, 
                    string selreg2, 
                    string regType1, 
                    string regType2, 
                    string participants, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESS_ContributionFileReport_Gold",
                    "CPU_AUTO_R",
                    "42418",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Contribution_File_Report_Goldcopy", @__tags);
#line 129
this.ScenarioSetup(scenarioInfo);
#line 130
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 131
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 132
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 133
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 134
  testRunner.And("In ERS00100 I click on: \"contribution file report\" within the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table23.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 135
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table23, "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table24.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 138
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table24, "And ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table25.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 141
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table25, "And ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table26.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 144
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table26, "And ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table27.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 147
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table27, "And ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table28.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 150
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table28, "And ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selcls",
                        "Selreg1",
                        "Selreg2",
                        "RegType1",
                        "RegType2",
                        "Participants"});
            table29.AddRow(new string[] {
                        string.Format("{0}", selcls),
                        string.Format("{0}", selreg1),
                        string.Format("{0}", selreg2),
                        string.Format("{0}", regType1),
                        string.Format("{0}", regType2),
                        string.Format("{0}", participants)});
#line 153
  testRunner.And("In ERS01009 I continue with the following details:", ((string)(null)), table29, "And ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table30.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 156
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table30, "And ");
#line 159
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table31.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 160
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table31, "And ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table32.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 163
  testRunner.Then("I copy output files to local", ((string)(null)), table32, "Then ");
#line 166
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 167
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Loan_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSLoanReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42421")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "", "R", "5000", "7863", "", "", "N", "N", "", "A", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "", "D", "", "", "01/01/1997", "31/12/1997", "N", "N", "", "A", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "ELA", "", "9", "", "", "", "R", "5000", "7863", "", "", "N", "N", "", "A", null)]
        public virtual void ESS_Loan_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string class1, 
                    string class2, 
                    string ers01005Selgrp1, 
                    string ers01005Selgrp2, 
                    string reg1, 
                    string reg2, 
                    string runORDateRange, 
                    string runRangeFrom, 
                    string runRangeTO, 
                    string transDateFrom, 
                    string transDateTO, 
                    string lapseDate, 
                    string totalsOnly, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSLoanReport_Gold",
                    "CPU_AUTO_R",
                    "42421",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Loan_Report_Goldcopy", @__tags);
#line 179
this.ScenarioSetup(scenarioInfo);
#line 180
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 181
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 182
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 183
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 184
  testRunner.And("In ERS00100 I click on: \"loan report\" within the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table33.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 185
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table33, "And ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table34.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 188
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table34, "And ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table35.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 191
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table35, "And ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table36.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 194
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table36, "And ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table37.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 197
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table37, "And ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table38.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 200
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table38, "And ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Class1",
                        "Class2",
                        "Ers01005Selgrp1",
                        "Ers01005Selgrp2",
                        "Reg1",
                        "Reg2",
                        "RunORDateRange",
                        "RunRangeFrom",
                        "RunRangeTO",
                        "TransDateFrom",
                        "TransDateTO",
                        "LapseDate",
                        "TotalsOnly"});
            table39.AddRow(new string[] {
                        string.Format("{0}", class1),
                        string.Format("{0}", class2),
                        string.Format("{0}", ers01005Selgrp1),
                        string.Format("{0}", ers01005Selgrp2),
                        string.Format("{0}", reg1),
                        string.Format("{0}", reg2),
                        string.Format("{0}", runORDateRange),
                        string.Format("{0}", runRangeFrom),
                        string.Format("{0}", runRangeTO),
                        string.Format("{0}", transDateFrom),
                        string.Format("{0}", transDateTO),
                        string.Format("{0}", lapseDate),
                        string.Format("{0}", totalsOnly)});
#line 203
  testRunner.And("In ERS01005 I continue with the following details:", ((string)(null)), table39, "And ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table40.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 206
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table40, "And ");
#line 209
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table41.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 210
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table41, "And ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table42.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 213
  testRunner.Then("I copy output files to local", ((string)(null)), table42, "Then ");
#line 216
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 217
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Transaction_Movement_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSTransactionMovementReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42422")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "", "", "", "R", "4400", "4405", "", "", "", "", "A", "CPU_AUTO_R", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "DEP", "OPT", "", "", "", "", "", "", "R", "4400", "4405", "", "", "", "", "A", "CPU_AUTO_R", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "", "", "", "D", "", "", "01/01/2014", "01/01/2015", "", "", "A", "CPU_AUTO_R", null)]
        [NUnit.Framework.TestCaseAttribute("Test4", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "DEP", "OPT", "", "", "", "", "", "", "D", "", "", "01/01/2014", "01/01/2015", "", "", "A", "CPU_AUTO_R", null)]
        [NUnit.Framework.TestCaseAttribute("Test5", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "OPT", "3", "7", "", "", "", "", "R", "4400", "4405", "", "", "", "", "A", "CPU_AUTO_R", null)]
        [NUnit.Framework.TestCaseAttribute("Test6", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "OPT", "", "7", "", "", "", "", "", "D", "", "", "01/01/2014", "01/01/2015", "", "", "A", "CPU_AUTO_R", null)]
        [NUnit.Framework.TestCaseAttribute("Test7", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "", "", "", "R", "7000", "7860", "", "", "", "", "A", "NAB2_AUTO_R", null)]
        [NUnit.Framework.TestCaseAttribute("Test8", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "", "", "", "R", "4000", "5214", "", "", "", "", "A", "QBE_AUTO_R", null)]
        public virtual void ESS_Transaction_Movement_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string selcls1, 
                    string selcls2, 
                    string selgrp1, 
                    string selgrp2, 
                    string selreg1, 
                    string selreg2, 
                    string regType1, 
                    string regType2, 
                    string runORDateRange, 
                    string runRangeFrom, 
                    string runRangeTO, 
                    string transDateFrom, 
                    string transDateTO, 
                    string summaryReportCsvInd, 
                    string reportDate, 
                    string reportSeq, 
                    string company, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSTransactionMovementReport_Gold",
                    "CPU_AUTO_R",
                    "42422",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Transaction_Movement_Report_Goldcopy", @__tags);
#line 232
this.ScenarioSetup(scenarioInfo);
#line 233
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 234
 testRunner.When(string.Format("In SELCOY01 I select the company: \"{0}\"", company), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 235
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 236
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 237
  testRunner.And("In ERS00100 I click on: \"transaction movement report\" within the ESS Reporting Me" +
                    "nu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table43.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 238
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table43, "And ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table44.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 241
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table44, "And ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table45.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 244
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table45, "And ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table46.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 247
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table46, "And ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table47.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 250
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table47, "And ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table48.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 253
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table48, "And ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selcls1",
                        "Selcls2",
                        "Selgrp1",
                        "Selgrp2",
                        "Selreg1",
                        "Selreg2",
                        "RegType1",
                        "RegType2",
                        "RunORDateRange",
                        "RunRangeFrom",
                        "RunRangeTO",
                        "TransDateFrom",
                        "TransDateTO",
                        "SummaryReportCsvInd"});
            table49.AddRow(new string[] {
                        string.Format("{0}", selcls1),
                        string.Format("{0}", selcls2),
                        string.Format("{0}", selgrp1),
                        string.Format("{0}", selgrp2),
                        string.Format("{0}", selreg1),
                        string.Format("{0}", selreg2),
                        string.Format("{0}", regType1),
                        string.Format("{0}", regType2),
                        string.Format("{0}", runORDateRange),
                        string.Format("{0}", runRangeFrom),
                        string.Format("{0}", runRangeTO),
                        string.Format("{0}", transDateFrom),
                        string.Format("{0}", transDateTO),
                        string.Format("{0}", summaryReportCsvInd)});
#line 256
  testRunner.And("In ERS01008 I continue with the following details:", ((string)(null)), table49, "And ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table50.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 259
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table50, "And ");
#line 262
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table51.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 263
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table51, "And ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table52.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 266
  testRunner.Then("I copy output files to local", ((string)(null)), table52, "Then ");
#line 269
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 270
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Unprocessed_Leaver_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSUnprocessedLeaverReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42423")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "", "", "A", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "DEP", "", "", "", "", "", "", "A", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "OPT", "", "", "", "09A", "", "", "A", null)]
        [NUnit.Framework.TestCaseAttribute("Test4", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "OPT", "", "7", "3", "", "", "", "A", null)]
        public virtual void ESS_Unprocessed_Leaver_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string clsCode1, 
                    string clsCode2, 
                    string clsGrp1, 
                    string clsGrp2, 
                    string regCode1, 
                    string regCode2, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSUnprocessedLeaverReport_Gold",
                    "CPU_AUTO_R",
                    "42423",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Unprocessed_Leaver_Report_Goldcopy", @__tags);
#line 289
this.ScenarioSetup(scenarioInfo);
#line 290
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 291
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 292
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 293
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 294
  testRunner.And("In ERS00100 I click on: \"unprocessed leaver report\" within the ESS Reporting Menu" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table53.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 295
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table53, "And ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table54.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 298
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table54, "And ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table55.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 301
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table55, "And ");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table56.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 304
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table56, "And ");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table57.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 307
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table57, "And ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table58.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 310
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table58, "And ");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClsCode1",
                        "ClsCode2",
                        "ClsGrp1",
                        "ClsGrp2",
                        "RegCode1",
                        "RegCode2"});
            table59.AddRow(new string[] {
                        string.Format("{0}", clsCode1),
                        string.Format("{0}", clsCode2),
                        string.Format("{0}", clsGrp1),
                        string.Format("{0}", clsGrp2),
                        string.Format("{0}", regCode1),
                        string.Format("{0}", regCode2)});
#line 313
  testRunner.And("In ERS01041 I continue with the following details:", ((string)(null)), table59, "And ");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table60.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 316
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table60, "And ");
#line 319
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table61.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 320
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table61, "And ");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table62.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 323
  testRunner.Then("I copy output files to local", ((string)(null)), table62, "Then ");
#line 326
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 327
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Grant_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSGrantReport_Gold")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42434")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "", "R", "7862", "", "D", "Y", "", "A", "NAB2_AUTO_R", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "OPT", "", "", "", "", "", "R", "7862", "", "D", "Y", "", "A", "NAB2_AUTO_R", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "", "D", "", "01/01/2015", "D", "Y", "", "A", "NAB2_AUTO_R", null)]
        [NUnit.Framework.TestCaseAttribute("Test4", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "PRS", "", "", "", "13A", "", "D", "", "01/01/2015", "D", "Y", "", "A", "NAB2_AUTO_R", null)]
        [NUnit.Framework.TestCaseAttribute("Test5", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "DLC", "", "2", "", "", "", "R", "4407", "", "D", "Y", "", "A", "CPU_AUTO_R", null)]
        public virtual void ESS_Grant_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string clsCode1, 
                    string clsCode2, 
                    string clsGrp1, 
                    string clsGrp2, 
                    string regCode1, 
                    string regCode2, 
                    string aSATRunDateInd, 
                    string aSATRunNum, 
                    string aSATDate, 
                    string summaryDetailInd, 
                    string nilHoldingsInd, 
                    string reportDate, 
                    string reportSeq, 
                    string company, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSGrantReport_Gold",
                    "NAB2_AUTO_R",
                    "42434",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Grant_Report_Goldcopy", @__tags);
#line 342
this.ScenarioSetup(scenarioInfo);
#line 343
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 344
 testRunner.When(string.Format("In SELCOY01 I select the company: \"{0}\"", company), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 345
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 346
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 347
  testRunner.And("In ERS00100 I click on: \"grant report\" within the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table63.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 348
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table63, "And ");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table64.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 351
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table64, "And ");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table65.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 354
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table65, "And ");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table66.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 357
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table66, "And ");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table67.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 360
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table67, "And ");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table68.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 363
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table68, "And ");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClsCode1",
                        "ClsCode2",
                        "ClsGrp1",
                        "ClsGrp2",
                        "RegCode1",
                        "RegCode2",
                        "ASATRunDateInd",
                        "ASATRunNum",
                        "ASATDate",
                        "SummaryDetailInd",
                        "NilHoldingsInd"});
            table69.AddRow(new string[] {
                        string.Format("{0}", clsCode1),
                        string.Format("{0}", clsCode2),
                        string.Format("{0}", clsGrp1),
                        string.Format("{0}", clsGrp2),
                        string.Format("{0}", regCode1),
                        string.Format("{0}", regCode2),
                        string.Format("{0}", aSATRunDateInd),
                        string.Format("{0}", aSATRunNum),
                        string.Format("{0}", aSATDate),
                        string.Format("{0}", summaryDetailInd),
                        string.Format("{0}", nilHoldingsInd)});
#line 366
  testRunner.And("In ERS01039 I continue with the following details:", ((string)(null)), table69, "And ");
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table70.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 369
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table70, "And ");
#line 372
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table71.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 373
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table71, "And ");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table72.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 376
  testRunner.Then("I copy output files to local", ((string)(null)), table72, "Then ");
#line 379
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 380
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Vesting_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSVestingReport_Gold")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42435")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "", "01/01/2012", "01/01/2015", "D", "Y", "", "A", "NAB2_AUTO_R", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "PRS", "", "", "", "", "", "01/01/2014", "01/01/2015", "D", "Y", "", "A", "NAB2_AUTO_R", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "DLA", "DLC", "2", "", "", "", "01/01/2012", "01/01/2015", "D", "Y", "", "A", "CPU_AUTO_R", null)]
        public virtual void ESS_Vesting_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string clsCode1, 
                    string clsCode2, 
                    string clsGrp1, 
                    string clsGrp2, 
                    string regCode1, 
                    string regCode2, 
                    string vestingDateFrom, 
                    string vestingDateTO, 
                    string summaryDetailInd, 
                    string totalsReportInd, 
                    string reportDate, 
                    string reportSeq, 
                    string company, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSVestingReport_Gold",
                    "NAB2_AUTO_R",
                    "42435",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Vesting_Report_Goldcopy", @__tags);
#line 394
this.ScenarioSetup(scenarioInfo);
#line 395
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 396
 testRunner.When(string.Format("In SELCOY01 I select the company: \"{0}\"", company), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 397
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 398
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 399
  testRunner.And("In ERS00100 I click on: \"vesting report\" within the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table73.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 400
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table73, "And ");
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table74.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 403
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table74, "And ");
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table75.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 406
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table75, "And ");
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table76.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 409
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table76, "And ");
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table77.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 412
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table77, "And ");
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table78.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 415
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table78, "And ");
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClsCode1",
                        "ClsCode2",
                        "ClsGrp1",
                        "ClsGrp2",
                        "RegCode1",
                        "RegCode2",
                        "VestingDateFrom",
                        "VestingDateTO",
                        "SummaryDetailInd",
                        "TotalsReportInd"});
            table79.AddRow(new string[] {
                        string.Format("{0}", clsCode1),
                        string.Format("{0}", clsCode2),
                        string.Format("{0}", clsGrp1),
                        string.Format("{0}", clsGrp2),
                        string.Format("{0}", regCode1),
                        string.Format("{0}", regCode2),
                        string.Format("{0}", vestingDateFrom),
                        string.Format("{0}", vestingDateTO),
                        string.Format("{0}", summaryDetailInd),
                        string.Format("{0}", totalsReportInd)});
#line 418
  testRunner.And("In ERS01040 I continue with the following details:", ((string)(null)), table79, "And ");
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table80.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 421
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table80, "And ");
#line 424
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table81.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 425
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table81, "And ");
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table82.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 428
  testRunner.Then("I copy output files to local", ((string)(null)), table82, "Then ");
#line 431
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 432
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Exercise_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSExerciseReport_Gold")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42436")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "", "R", "7850", "7862", "", "", "D", "B", "", "A", "NAB2_AUTO_R", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "", "D", "", "", "01/01/2010", "01/01/2015", "B", "C", "", "A", "NAB2_AUTO_R", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "OPT", "", "", "", "", "", "D", "", "", "01/01/2010", "01/01/2015", "B", "C", "", "A", "NAB2_AUTO_R", null)]
        [NUnit.Framework.TestCaseAttribute("Test4", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "OPT", "", "2", "", "", "", "R", "4000", "4407", "", "", "D", "B", "", "A", "CPU_AUTO_R", null)]
        public virtual void ESS_Exercise_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string clsCode1, 
                    string clsCode2, 
                    string clsGrp1, 
                    string clsGrp2, 
                    string regCode1, 
                    string regCode2, 
                    string runDateRangeInd, 
                    string runRangeFrom, 
                    string runRangeTO, 
                    string tranDateFrom, 
                    string tranDateTO, 
                    string summaryDetailInd, 
                    string exerciseStatusInd, 
                    string reportDate, 
                    string reportSeq, 
                    string company, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSExerciseReport_Gold",
                    "NAB2_AUTO_R",
                    "42436",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Exercise_Report_Goldcopy", @__tags);
#line 446
this.ScenarioSetup(scenarioInfo);
#line 447
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 448
 testRunner.When(string.Format("In SELCOY01 I select the company: \"{0}\"", company), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 449
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 450
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 451
  testRunner.And("In ERS00100 I click on: \"exercise report\" within the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table83.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 452
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table83, "And ");
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table84.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 455
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table84, "And ");
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table85.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 458
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table85, "And ");
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table86.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 461
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table86, "And ");
#line hidden
            TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table87.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 464
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table87, "And ");
#line hidden
            TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table88.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 467
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table88, "And ");
#line hidden
            TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClsCode1",
                        "ClsCode2",
                        "ClsGrp1",
                        "ClsGrp2",
                        "RegCode1",
                        "RegCode2",
                        "RunDateRangeInd",
                        "RunRangeFrom",
                        "RunRangeTO",
                        "TranDateFrom",
                        "TranDateTO",
                        "SummaryDetailInd",
                        "ExerciseStatusInd"});
            table89.AddRow(new string[] {
                        string.Format("{0}", clsCode1),
                        string.Format("{0}", clsCode2),
                        string.Format("{0}", clsGrp1),
                        string.Format("{0}", clsGrp2),
                        string.Format("{0}", regCode1),
                        string.Format("{0}", regCode2),
                        string.Format("{0}", runDateRangeInd),
                        string.Format("{0}", runRangeFrom),
                        string.Format("{0}", runRangeTO),
                        string.Format("{0}", tranDateFrom),
                        string.Format("{0}", tranDateTO),
                        string.Format("{0}", summaryDetailInd),
                        string.Format("{0}", exerciseStatusInd)});
#line 470
  testRunner.And("In ERS01046 I continue with the following details:", ((string)(null)), table89, "And ");
#line hidden
            TechTalk.SpecFlow.Table table90 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table90.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 473
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table90, "And ");
#line 476
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table91 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table91.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 477
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table91, "And ");
#line hidden
            TechTalk.SpecFlow.Table table92 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table92.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 480
  testRunner.Then("I copy output files to local", ((string)(null)), table92, "Then ");
#line 483
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 484
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Cancellation_Expiry_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSCancellationExpiryReport_Gold")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42438")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "", "R", "7850", "7862", "", "", "D", "B", "", "A", "nab2_auto_r", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "", "D", "", "", "01/01/2010", "01/01/2015", "B", "C", "", "A", "nab2_auto_r", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "OPT", "", "", "", "", "", "D", "", "", "01/01/2010", "01/01/2015", "B", "C", "", "A", "nab2_auto_r", null)]
        [NUnit.Framework.TestCaseAttribute("Test4", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "OPT", "", "7", "", "", "", "D", "", "", "01/01/2010", "01/01/2016", "B", "C", "", "A", "nab2_auto_r", null)]
        public virtual void ESS_Cancellation_Expiry_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string clsCode1, 
                    string clsCode2, 
                    string clsGrp1, 
                    string clsGrp2, 
                    string regCode1, 
                    string regCode2, 
                    string runDateRangeInd, 
                    string runRangeFrom, 
                    string runRangeTO, 
                    string tranDateFrom, 
                    string tranDateTO, 
                    string summaryDetailInd, 
                    string canExpTypeInd, 
                    string reportDate, 
                    string reportSeq, 
                    string company, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSCancellationExpiryReport_Gold",
                    "NAB2_AUTO_R",
                    "42438",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Cancellation_Expiry_Report_Goldcopy", @__tags);
#line 499
this.ScenarioSetup(scenarioInfo);
#line 500
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 501
 testRunner.When(string.Format("In SELCOY01 I select the company: \"{0}\"", company), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 502
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 503
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 504
  testRunner.And("In ERS00100 I click on: \"cancellation expiry report\" within the ESS Reporting Men" +
                    "u", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table93 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table93.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 505
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table93, "And ");
#line hidden
            TechTalk.SpecFlow.Table table94 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table94.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 508
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table94, "And ");
#line hidden
            TechTalk.SpecFlow.Table table95 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table95.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 511
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table95, "And ");
#line hidden
            TechTalk.SpecFlow.Table table96 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table96.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 514
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table96, "And ");
#line hidden
            TechTalk.SpecFlow.Table table97 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table97.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 517
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table97, "And ");
#line hidden
            TechTalk.SpecFlow.Table table98 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table98.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 520
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table98, "And ");
#line hidden
            TechTalk.SpecFlow.Table table99 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClsCode1",
                        "ClsCode2",
                        "ClsGrp1",
                        "ClsGrp2",
                        "RegCode1",
                        "RegCode2",
                        "RunDateRangeInd",
                        "RunRangeFrom",
                        "RunRangeTO",
                        "TranDateFrom",
                        "TranDateTO",
                        "CanExpTypeInd",
                        "SummaryDetailInd"});
            table99.AddRow(new string[] {
                        string.Format("{0}", clsCode1),
                        string.Format("{0}", clsCode2),
                        string.Format("{0}", clsGrp1),
                        string.Format("{0}", clsGrp2),
                        string.Format("{0}", regCode1),
                        string.Format("{0}", regCode2),
                        string.Format("{0}", runDateRangeInd),
                        string.Format("{0}", runRangeFrom),
                        string.Format("{0}", runRangeTO),
                        string.Format("{0}", tranDateFrom),
                        string.Format("{0}", tranDateTO),
                        string.Format("{0}", canExpTypeInd),
                        string.Format("{0}", summaryDetailInd)});
#line 523
  testRunner.And("In ERS01042 I continue with the following details:", ((string)(null)), table99, "And ");
#line hidden
            TechTalk.SpecFlow.Table table100 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table100.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 526
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table100, "And ");
#line 529
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table101 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table101.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 530
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table101, "And ");
#line hidden
            TechTalk.SpecFlow.Table table102 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table102.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 533
  testRunner.Then("I copy output files to local", ((string)(null)), table102, "Then ");
#line 536
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 537
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Plan_Contributions_Purchases_Allocations_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSPlanContributionsPurchasesAllocationsReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42440")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "", "01/01/2014", "01/01/2015", "", "A", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "DEP", "", "", "", "", "", "01/01/2014", "01/01/2015", "", "A", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "DEP", "", "3", "7", "", "", "01/01/2014", "01/01/2015", "", "A", null)]
        public virtual void ESS_Plan_Contributions_Purchases_Allocations_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string clsCode1, 
                    string clsCode2, 
                    string clsGrp1, 
                    string clsGrp2, 
                    string regCode1, 
                    string regCode2, 
                    string tranDateFrom, 
                    string tranDateTO, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSPlanContributionsPurchasesAllocationsReport_Gold",
                    "CPU_AUTO_R",
                    "42440",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Plan_Contributions_Purchases_Allocations_Report_Goldcopy", @__tags);
#line 553
this.ScenarioSetup(scenarioInfo);
#line 554
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 555
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 556
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 557
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 558
  testRunner.And("In ERS00100 I click on: \"plan contributions purchases allocations report\" within " +
                    "the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table103 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table103.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 559
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table103, "And ");
#line hidden
            TechTalk.SpecFlow.Table table104 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table104.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 562
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table104, "And ");
#line hidden
            TechTalk.SpecFlow.Table table105 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table105.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 565
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table105, "And ");
#line hidden
            TechTalk.SpecFlow.Table table106 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table106.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 568
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table106, "And ");
#line hidden
            TechTalk.SpecFlow.Table table107 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table107.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 571
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table107, "And ");
#line hidden
            TechTalk.SpecFlow.Table table108 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table108.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 574
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table108, "And ");
#line hidden
            TechTalk.SpecFlow.Table table109 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClsCode1",
                        "ClsCode2",
                        "ClsGrp1",
                        "ClsGrp2",
                        "RegCode1",
                        "RegCode2",
                        "TranDateFrom",
                        "TranDateTO"});
            table109.AddRow(new string[] {
                        string.Format("{0}", clsCode1),
                        string.Format("{0}", clsCode2),
                        string.Format("{0}", clsGrp1),
                        string.Format("{0}", clsGrp2),
                        string.Format("{0}", regCode1),
                        string.Format("{0}", regCode2),
                        string.Format("{0}", tranDateFrom),
                        string.Format("{0}", tranDateTO)});
#line 577
  testRunner.And("In ERS01023 I continue with the following details:", ((string)(null)), table109, "And ");
#line hidden
            TechTalk.SpecFlow.Table table110 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table110.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 580
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table110, "And ");
#line 583
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table111 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table111.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 584
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table111, "And ");
#line hidden
            TechTalk.SpecFlow.Table table112 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table112.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 587
  testRunner.Then("I copy output files to local", ((string)(null)), table112, "Then ");
#line 590
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 591
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Plan_Withdrawals_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSPlanWithdrawalsReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42441")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "01/01/2014", "01/01/2015", "", "A", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "DEP", "EXA", "", "", "01/01/2014", "01/01/2015", "", "A", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "DEP", "", "3", "7", "01/01/2014", "01/01/2015", "", "A", null)]
        public virtual void ESS_Plan_Withdrawals_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string clsCode1, 
                    string clsCode2, 
                    string clsGrp1, 
                    string clsGrp2, 
                    string tranDateFrom, 
                    string tranDateTO, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSPlanWithdrawalsReport_Gold",
                    "CPU_AUTO_R",
                    "42441",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Plan_Withdrawals_Report_Goldcopy", @__tags);
#line 606
this.ScenarioSetup(scenarioInfo);
#line 607
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 608
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 609
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 610
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 611
  testRunner.And("In ERS00100 I click on: \"plan withdrawals report\" within the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table113 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table113.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 612
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table113, "And ");
#line hidden
            TechTalk.SpecFlow.Table table114 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table114.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 615
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table114, "And ");
#line hidden
            TechTalk.SpecFlow.Table table115 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table115.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 618
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table115, "And ");
#line hidden
            TechTalk.SpecFlow.Table table116 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table116.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 621
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table116, "And ");
#line hidden
            TechTalk.SpecFlow.Table table117 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table117.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 624
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table117, "And ");
#line hidden
            TechTalk.SpecFlow.Table table118 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table118.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 627
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table118, "And ");
#line hidden
            TechTalk.SpecFlow.Table table119 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClsCode1",
                        "ClsCode2",
                        "ClsGrp1",
                        "ClsGrp2",
                        "TranDateFrom",
                        "TranDateTO"});
            table119.AddRow(new string[] {
                        string.Format("{0}", clsCode1),
                        string.Format("{0}", clsCode2),
                        string.Format("{0}", clsGrp1),
                        string.Format("{0}", clsGrp2),
                        string.Format("{0}", tranDateFrom),
                        string.Format("{0}", tranDateTO)});
#line 630
  testRunner.And("In ERS01024 I continue with the following details:", ((string)(null)), table119, "And ");
#line hidden
            TechTalk.SpecFlow.Table table120 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table120.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 633
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table120, "And ");
#line 636
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table121 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table121.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 637
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table121, "And ");
#line hidden
            TechTalk.SpecFlow.Table table122 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table122.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 640
  testRunner.Then("I copy output files to local", ((string)(null)), table122, "Then ");
#line 643
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 644
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Dividend_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSDividendReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42442")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "ORDTS", "", "", "01/01/2010", "01/04/2015", "", "A", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "DEP", "EXA", "", "", "13EDA", "", "", "01/01/2010", "01/04/2015", "", "A", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "3", "7", "13EDA", "", "", "01/01/2010", "01/04/2015", "", "A", null)]
        [NUnit.Framework.TestCaseAttribute("Test4", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "EXA", "", "3", "7", "13EDA", "", "", "01/01/2010", "01/04/2015", "", "A", null)]
        public virtual void ESS_Dividend_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string clsCode1, 
                    string clsCode2, 
                    string clsGrp1, 
                    string clsGrp2, 
                    string payAcct1, 
                    string payAcct2, 
                    string oneClassPerCatInd1, 
                    string transDateFrom, 
                    string transDateTO, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSDividendReport_Gold",
                    "CPU_AUTO_R",
                    "42442",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Dividend_Report_Goldcopy", @__tags);
#line 659
this.ScenarioSetup(scenarioInfo);
#line 660
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 661
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 662
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 663
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 664
  testRunner.And("In ERS00100 I click on: \"dividend report\" within the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table123 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table123.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 665
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table123, "And ");
#line hidden
            TechTalk.SpecFlow.Table table124 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table124.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 668
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table124, "And ");
#line hidden
            TechTalk.SpecFlow.Table table125 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table125.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 671
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table125, "And ");
#line hidden
            TechTalk.SpecFlow.Table table126 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table126.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 674
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table126, "And ");
#line hidden
            TechTalk.SpecFlow.Table table127 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table127.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 677
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table127, "And ");
#line hidden
            TechTalk.SpecFlow.Table table128 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table128.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 680
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table128, "And ");
#line hidden
            TechTalk.SpecFlow.Table table129 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClsCode1",
                        "ClsCode2",
                        "ClsGrp1",
                        "ClsGrp2",
                        "PayAcct1",
                        "PayAcct2",
                        "OneClassPerCatInd1",
                        "TransDateFrom",
                        "TransDateTO"});
            table129.AddRow(new string[] {
                        string.Format("{0}", clsCode1),
                        string.Format("{0}", clsCode2),
                        string.Format("{0}", clsGrp1),
                        string.Format("{0}", clsGrp2),
                        string.Format("{0}", payAcct1),
                        string.Format("{0}", payAcct2),
                        string.Format("{0}", oneClassPerCatInd1),
                        string.Format("{0}", transDateFrom),
                        string.Format("{0}", transDateTO)});
#line 683
  testRunner.And("In ERS01025 I continue with the following details:", ((string)(null)), table129, "And ");
#line hidden
            TechTalk.SpecFlow.Table table130 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table130.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 686
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table130, "And ");
#line 689
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table131 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table131.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 690
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table131, "And ");
#line hidden
            TechTalk.SpecFlow.Table table132 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table132.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 693
  testRunner.Then("I copy output files to local", ((string)(null)), table132, "Then ");
#line 696
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 697
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Unallocated_Reconciliation_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSUnallocatedReconciliationReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42443")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "DEP", "", "", "", "01/01/2014", "01/01/2015", "S", "", "A", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "7", "", "01/01/2014", "01/01/2015", "S", "", "A", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "DEP", "", "7", "3", "01/01/2014", "01/01/2015", "S", "", "A", null)]
        public virtual void ESS_Unallocated_Reconciliation_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string clsCode1, 
                    string clsCode2, 
                    string clsGrp1, 
                    string clsGrp2, 
                    string transDateFrom, 
                    string transDateTO, 
                    string nfxdnSelection, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSUnallocatedReconciliationReport_Gold",
                    "CPU_AUTO_R",
                    "42443",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Unallocated_Reconciliation_Report_Goldcopy", @__tags);
#line 712
this.ScenarioSetup(scenarioInfo);
#line 713
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 714
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 715
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 716
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 717
  testRunner.And("In ERS00100 I click on: \"unallocated reconciliation report\" within the ESS Report" +
                    "ing Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table133 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table133.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 718
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table133, "And ");
#line hidden
            TechTalk.SpecFlow.Table table134 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table134.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 721
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table134, "And ");
#line hidden
            TechTalk.SpecFlow.Table table135 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table135.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 724
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table135, "And ");
#line hidden
            TechTalk.SpecFlow.Table table136 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table136.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 727
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table136, "And ");
#line hidden
            TechTalk.SpecFlow.Table table137 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table137.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 730
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table137, "And ");
#line hidden
            TechTalk.SpecFlow.Table table138 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClsCode1",
                        "ClsCode2",
                        "ClsGrp1",
                        "ClsGrp2",
                        "TransDateFrom",
                        "TransDateTO",
                        "NfxdnSelection"});
            table138.AddRow(new string[] {
                        string.Format("{0}", clsCode1),
                        string.Format("{0}", clsCode2),
                        string.Format("{0}", clsGrp1),
                        string.Format("{0}", clsGrp2),
                        string.Format("{0}", transDateFrom),
                        string.Format("{0}", transDateTO),
                        string.Format("{0}", nfxdnSelection)});
#line 733
  testRunner.And("In ERS01026 I continue with the following details:", ((string)(null)), table138, "And ");
#line 736
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table139 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table139.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 737
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table139, "And ");
#line hidden
            TechTalk.SpecFlow.Table table140 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table140.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 740
  testRunner.Then("I copy output files to local", ((string)(null)), table140, "Then ");
#line 743
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 744
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Trustee_Reconciliation_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSTrusteeReconciliationReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42444")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "EXA", "DEP", "", "", "01/01/2014", "01/01/2015", "S", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "7", "", "01/01/2014", "01/01/2015", "S", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "EXA", "", "7", "3", "01/01/2014", "01/01/2015", "S", null)]
        public virtual void ESS_Trustee_Reconciliation_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string clsCode1, 
                    string clsCode2, 
                    string clsGrp1, 
                    string clsGrp2, 
                    string transDateFrom, 
                    string transDateTO, 
                    string nfxupSelection, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSTrusteeReconciliationReport_Gold",
                    "CPU_AUTO_R",
                    "42444",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Trustee_Reconciliation_Report_Goldcopy", @__tags);
#line 759
this.ScenarioSetup(scenarioInfo);
#line 760
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 761
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 762
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 763
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 764
  testRunner.And("In ERS00100 I click on: \"trustee reconciliation report\" within the ESS Reporting " +
                    "Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table141 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table141.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 765
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table141, "And ");
#line hidden
            TechTalk.SpecFlow.Table table142 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table142.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 768
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table142, "And ");
#line hidden
            TechTalk.SpecFlow.Table table143 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table143.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 771
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table143, "And ");
#line hidden
            TechTalk.SpecFlow.Table table144 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table144.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 774
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table144, "And ");
#line hidden
            TechTalk.SpecFlow.Table table145 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table145.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 777
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table145, "And ");
#line hidden
            TechTalk.SpecFlow.Table table146 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClsCode1",
                        "ClsCode2",
                        "ClsGrp1",
                        "ClsGrp2",
                        "TransDateFrom",
                        "TransDateTO",
                        "NfxupSelection"});
            table146.AddRow(new string[] {
                        string.Format("{0}", clsCode1),
                        string.Format("{0}", clsCode2),
                        string.Format("{0}", clsGrp1),
                        string.Format("{0}", clsGrp2),
                        string.Format("{0}", transDateFrom),
                        string.Format("{0}", transDateTO),
                        string.Format("{0}", nfxupSelection)});
#line 780
  testRunner.And("In ERS01029 I continue with the following details:", ((string)(null)), table146, "And ");
#line 783
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table147 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table147.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 784
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table147, "And ");
#line hidden
            TechTalk.SpecFlow.Table table148 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table148.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 787
  testRunner.Then("I copy output files to local", ((string)(null)), table148, "Then ");
#line 790
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 791
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Static_Withholding_Details_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSStaticWithholdingDetailsReport_Gold")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42578")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "N", "N", "N", "N", "N", "N", "N", "", "A", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "", "A", null)]
        public virtual void ESS_Static_Withholding_Details_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string eventType, 
                    string eventCode1, 
                    string eventCode2, 
                    string reportDateFrom, 
                    string reportDateTO, 
                    string eventCode, 
                    string eventType1, 
                    string eventDate, 
                    string withholdingTaxRate, 
                    string withholdingTaxDesc, 
                    string marketValueType, 
                    string complexHolderCode, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSStaticWithholdingDetailsReport_Gold",
                    "NAB2_AUTO_R",
                    "42578",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Static_Withholding_Details_Report_Goldcopy", @__tags);
#line 805
this.ScenarioSetup(scenarioInfo);
#line 806
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 807
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 808
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 809
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 810
  testRunner.And("In ERS00100 I click on: \"static withholding details report\" within the ESS Report" +
                    "ing Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table149 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table149.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 811
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table149, "And ");
#line hidden
            TechTalk.SpecFlow.Table table150 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table150.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 814
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table150, "And ");
#line hidden
            TechTalk.SpecFlow.Table table151 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table151.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 817
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table151, "And ");
#line hidden
            TechTalk.SpecFlow.Table table152 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table152.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 820
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table152, "And ");
#line hidden
            TechTalk.SpecFlow.Table table153 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table153.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 823
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table153, "And ");
#line hidden
            TechTalk.SpecFlow.Table table154 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table154.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 826
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table154, "And ");
#line hidden
            TechTalk.SpecFlow.Table table155 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventType",
                        "EventCode1",
                        "EventCode2",
                        "ReportDateFrom",
                        "ReportDateTO"});
            table155.AddRow(new string[] {
                        string.Format("{0}", eventType),
                        string.Format("{0}", eventCode1),
                        string.Format("{0}", eventCode2),
                        string.Format("{0}", reportDateFrom),
                        string.Format("{0}", reportDateTO)});
#line 829
  testRunner.And("In ERS01056 I continue with the following details:", ((string)(null)), table155, "And ");
#line hidden
            TechTalk.SpecFlow.Table table156 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventCode",
                        "EventType1",
                        "EventDate",
                        "WithholdingTaxRate",
                        "WithholdingTaxDesc",
                        "MarketValueType",
                        "ComplexHolderCode"});
            table156.AddRow(new string[] {
                        string.Format("{0}", eventCode),
                        string.Format("{0}", eventType1),
                        string.Format("{0}", eventDate),
                        string.Format("{0}", withholdingTaxRate),
                        string.Format("{0}", withholdingTaxDesc),
                        string.Format("{0}", marketValueType),
                        string.Format("{0}", complexHolderCode)});
#line 832
  testRunner.And("In ERS01057 I continue with the following details:", ((string)(null)), table156, "And ");
#line hidden
            TechTalk.SpecFlow.Table table157 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table157.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 835
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table157, "And ");
#line 838
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table158 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table158.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 839
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table158, "And ");
#line hidden
            TechTalk.SpecFlow.Table table159 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table159.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 842
  testRunner.Then("I copy output files to local", ((string)(null)), table159, "Then ");
#line 845
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 846
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Withholding_Assessment_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSWithholdingAssessmentReport_Gold")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42579")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "1", "10", "", "A", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "11", "10.50", "", "A", null)]
        public virtual void ESS_Withholding_Assessment_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string selection, 
                    string mktValPrice, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSWithholdingAssessmentReport_Gold",
                    "NAB2_AUTO_R",
                    "42579",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Withholding_Assessment_Report_Goldcopy", @__tags);
#line 859
this.ScenarioSetup(scenarioInfo);
#line 860
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 861
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 862
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 863
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 864
  testRunner.And("In ERS00100 I click on: \"withholding assessment report\" within the ESS Reporting " +
                    "Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table160 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table160.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 865
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table160, "And ");
#line hidden
            TechTalk.SpecFlow.Table table161 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table161.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 868
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table161, "And ");
#line hidden
            TechTalk.SpecFlow.Table table162 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table162.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 871
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table162, "And ");
#line hidden
            TechTalk.SpecFlow.Table table163 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table163.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 874
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table163, "And ");
#line hidden
            TechTalk.SpecFlow.Table table164 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table164.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 877
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table164, "And ");
#line hidden
            TechTalk.SpecFlow.Table table165 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table165.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 880
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table165, "And ");
#line hidden
            TechTalk.SpecFlow.Table table166 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table166.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 883
  testRunner.And("In ERS01058 I continue with the following details:", ((string)(null)), table166, "And ");
#line hidden
            TechTalk.SpecFlow.Table table167 = new TechTalk.SpecFlow.Table(new string[] {
                        "MktValPrice"});
            table167.AddRow(new string[] {
                        string.Format("{0}", mktValPrice)});
#line 886
  testRunner.And("In ERS01059 I continue with the following details:", ((string)(null)), table167, "And ");
#line hidden
            TechTalk.SpecFlow.Table table168 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table168.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 889
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table168, "And ");
#line 892
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table169 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table169.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 893
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table169, "And ");
#line hidden
            TechTalk.SpecFlow.Table table170 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table170.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 896
  testRunner.Then("I copy output files to local", ((string)(null)), table170, "Then ");
#line 899
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 900
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Event_Notification_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSEventNotificationReport_Gold")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42580")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "V", "DS5", "01/01/2020", "Y", "Y", "Y", "Y", "", "A", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "V", "DS1", "01/01/2020", "Y", "Y", "Y", "Y", "", "A", null)]
        public virtual void ESS_Event_Notification_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string eventType, 
                    string eventCode, 
                    string eventDate, 
                    string eventTotals, 
                    string registerTotals, 
                    string registerTypeTotals, 
                    string certificateBalances, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSEventNotificationReport_Gold",
                    "NAB2_AUTO_R",
                    "42580",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Event_Notification_Report_Goldcopy", @__tags);
#line 914
this.ScenarioSetup(scenarioInfo);
#line 915
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 916
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 917
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 918
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 919
  testRunner.And("In ERS00100 I click on: \"event notification report\" within the ESS Reporting Menu" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table171 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table171.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 920
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table171, "And ");
#line hidden
            TechTalk.SpecFlow.Table table172 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table172.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 923
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table172, "And ");
#line hidden
            TechTalk.SpecFlow.Table table173 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table173.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 926
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table173, "And ");
#line hidden
            TechTalk.SpecFlow.Table table174 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table174.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 929
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table174, "And ");
#line hidden
            TechTalk.SpecFlow.Table table175 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table175.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 932
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table175, "And ");
#line hidden
            TechTalk.SpecFlow.Table table176 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table176.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 935
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table176, "And ");
#line hidden
            TechTalk.SpecFlow.Table table177 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventType",
                        "EventCode",
                        "EventDate",
                        "EventTotals",
                        "RegisterTotals",
                        "RegisterTypeTotals",
                        "CertificateBalances"});
            table177.AddRow(new string[] {
                        string.Format("{0}", eventType),
                        string.Format("{0}", eventCode),
                        string.Format("{0}", eventDate),
                        string.Format("{0}", eventTotals),
                        string.Format("{0}", registerTotals),
                        string.Format("{0}", registerTypeTotals),
                        string.Format("{0}", certificateBalances)});
#line 938
  testRunner.And("In ERS01054 I continue with the following details:", ((string)(null)), table177, "And ");
#line hidden
            TechTalk.SpecFlow.Table table178 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table178.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 941
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table178, "And ");
#line 944
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table179 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table179.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 945
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table179, "And ");
#line hidden
            TechTalk.SpecFlow.Table table180 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table180.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 948
  testRunner.Then("I copy output files to local", ((string)(null)), table180, "Then ");
#line 951
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 952
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Event_Reconciliation_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSEventReconciliationReport_Gold")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42581")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "V", "", "", "01/01/2015", "01/01/2020", "", "N", "", "A", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "N", "", "", "", "", "", "Y", "N", "Y", "N", "Y", "N", "", "", "", "", "V", "DS5", "", "", "", "", "N", "", "A", null)]
        public virtual void ESS_Event_Reconciliation_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string eventType, 
                    string eventCode1, 
                    string eventCode2, 
                    string reportDateFrom, 
                    string reportDateTO, 
                    string modelPrice, 
                    string totalsOnly, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSEventReconciliationReport_Gold",
                    "NAB2_AUTO_R",
                    "42581",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Event_Reconciliation_Report_Goldcopy", @__tags);
#line 966
this.ScenarioSetup(scenarioInfo);
#line 967
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 968
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 969
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 970
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 971
  testRunner.And("In ERS00100 I click on: \"event reconciliation report\" within the ESS Reporting Me" +
                    "nu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table181 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table181.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 972
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table181, "And ");
#line hidden
            TechTalk.SpecFlow.Table table182 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table182.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 975
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table182, "And ");
#line hidden
            TechTalk.SpecFlow.Table table183 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table183.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 978
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table183, "And ");
#line hidden
            TechTalk.SpecFlow.Table table184 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table184.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 981
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table184, "And ");
#line hidden
            TechTalk.SpecFlow.Table table185 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table185.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 984
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table185, "And ");
#line hidden
            TechTalk.SpecFlow.Table table186 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table186.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 987
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table186, "And ");
#line hidden
            TechTalk.SpecFlow.Table table187 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventType",
                        "EventCode1",
                        "EventCode2",
                        "ReportDateFrom",
                        "ReportDateTO",
                        "ModelPrice",
                        "TotalsOnly"});
            table187.AddRow(new string[] {
                        string.Format("{0}", eventType),
                        string.Format("{0}", eventCode1),
                        string.Format("{0}", eventCode2),
                        string.Format("{0}", reportDateFrom),
                        string.Format("{0}", reportDateTO),
                        string.Format("{0}", modelPrice),
                        string.Format("{0}", totalsOnly)});
#line 990
  testRunner.And("In ERS01055 I continue with the following details:", ((string)(null)), table187, "And ");
#line hidden
            TechTalk.SpecFlow.Table table188 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table188.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 993
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table188, "And ");
#line 996
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table189 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table189.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 997
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table189, "And ");
#line hidden
            TechTalk.SpecFlow.Table table190 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table190.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 1000
  testRunner.Then("I copy output files to local", ((string)(null)), table190, "Then ");
#line 1003
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1004
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_VWAP_Report_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSVWAPReport_Gold")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42582")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "N", "", "", "01/07/2013", "30/06/2014", null)]
        public virtual void ESS_VWAP_Report_Report_Goldcopy(string reportHeading, string preload, string wildString, string finalSecurity, string vwapDateFrom, string vwapDateTO, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSVWAPReport_Gold",
                    "NAB2_AUTO_R",
                    "42582",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_VWAP_Report_Report_Goldcopy", @__tags);
#line 1017
this.ScenarioSetup(scenarioInfo);
#line 1018
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1019
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1020
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1021
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1022
  testRunner.And("In ERS00100 I click on: \"vwap report\" within the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table191 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table191.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 1023
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table191, "And ");
#line hidden
            TechTalk.SpecFlow.Table table192 = new TechTalk.SpecFlow.Table(new string[] {
                        "FinalSecurity",
                        "VwapDateFrom",
                        "VwapDateTO"});
            table192.AddRow(new string[] {
                        string.Format("{0}", finalSecurity),
                        string.Format("{0}", vwapDateFrom),
                        string.Format("{0}", vwapDateTO)});
#line 1026
  testRunner.And("In ERS01030 I continue with the following details:", ((string)(null)), table192, "And ");
#line 1029
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table193 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table193.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 1030
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table193, "And ");
#line hidden
            TechTalk.SpecFlow.Table table194 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table194.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 1033
  testRunner.Then("I copy output files to local", ((string)(null)), table194, "Then ");
#line 1036
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1037
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Housekeeping_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSHousekeepingReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42583")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Testnull)]
        [NUnit.Framework.TestCaseAttribute("Testnull)]
        [NUnit.Framework.TestCaseAttribute("Testnull)]
        [NUnit.Framework.TestCaseAttribute("Test4", "N", "", "DEP", "OPT", "3", "7", "", "", "", "", "", "", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "", "", "", "", null)]
        public virtual void ESS_Housekeeping_Report_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string clsCode1, 
                    string clsCode2, 
                    string clsGrp1, 
                    string clsGrp2, 
                    string regCode1, 
                    string regCode2, 
                    string regType1, 
                    string regType2, 
                    string selectedPlanType, 
                    string selectedTaxType, 
                    string currUnitBal, 
                    string nbrCurrCerts, 
                    string nbrNilCerts, 
                    string holderID, 
                    string holderName, 
                    string planCode, 
                    string planDesc, 
                    string planTypeInd, 
                    string div13AInd, 
                    string finalSecurity, 
                    string cntryOFTax, 
                    string norTrustInd, 
                    string marketValueInd, 
                    string cntlAcct, 
                    string unawAcct, 
                    string paymtOptionInd, 
                    string paymtCreatnInd, 
                    string blkoutPeriodInd, 
                    string blkoutCode, 
                    string leaverPackInd, 
                    string thirdPrtyPayee, 
                    string coyPayee, 
                    string comments, 
                    string taxTypeInd, 
                    string usePoolInd, 
                    string forfType, 
                    string autoForfInd, 
                    string autoRemvlBulkCode, 
                    string autoRemvlFromInd, 
                    string matchWorkgCls, 
                    string planMtchgLimit, 
                    string planMtchgLimitPerd, 
                    string autoPhntmTransfr, 
                    string retirementAge, 
                    string fromOptionClass, 
                    string vsaXfrJurisdictCode, 
                    string singleCertNbr, 
                    string divReinvestInd, 
                    string divPlanCat, 
                    string divPlanConcept, 
                    string lapseDays, 
                    string nilCostOptionInd, 
                    string phantomOptionInd, 
                    string expiryNoticeINUrr, 
                    string nbrDaysBefExpiry, 
                    string vestingNoticeINUrr, 
                    string nbrDaysBeforeVest, 
                    string oNMktPurchaseInd, 
                    string vsaXfrAllowed, 
                    string vsaJurisdictionCodes, 
                    string vsaClassCodes, 
                    string loanLapseExcepts, 
                    string loanLimitMax, 
                    string loanLimitTypeInd, 
                    string loanPaymntTypes, 
                    string loanDivOption, 
                    string allowWebTrfInd, 
                    string registerCode, 
                    string registerType, 
                    string registerDesc, 
                    string comments1, 
                    string holdingEndDate, 
                    string taxEndDate, 
                    string firstAwardDate, 
                    string individualDatesInd, 
                    string floatingInd, 
                    string expiresAfter, 
                    string unitRoundingInd, 
                    string releaseTypes, 
                    string autoRemoveDays, 
                    string aessLimitType, 
                    string limitMinimum, 
                    string limitMaximum, 
                    string paymentsCarrierInd, 
                    string moneyRoundingInd, 
                    string residualsInd, 
                    string maximumNbrRestarts, 
                    string paymentAcct, 
                    string baseCurrency, 
                    string awardPayFreqDtls, 
                    string calcTaxInd, 
                    string forfeitureType, 
                    string proRataMethod, 
                    string forfeitureEndDate, 
                    string nonForfeitureStatus, 
                    string usingMtchgInd, 
                    string usingUnmatchedInd, 
                    string mtchgUpfrontInd, 
                    string futrMtchgEndDate, 
                    string mtchgRatio, 
                    string awdMtchgLimitPerd, 
                    string awdMtchgLimit, 
                    string loanBonusPerdDtls, 
                    string recoursePlanInd, 
                    string futureFloat, 
                    string forfeitureFloat, 
                    string leaverSchedule, 
                    string usingVestingInd, 
                    string taxStmtTypeInd, 
                    string taxReportableInd, 
                    string finRptExp, 
                    string awardDate, 
                    string acqstnSharePrice, 
                    string awardExchgRate, 
                    string ifrsFmv, 
                    string expiryDate, 
                    string vestingCode, 
                    string vestingStartDate, 
                    string performanceHurdles, 
                    string performanceCode, 
                    string ctlPayFreqDtls, 
                    string hlthIntgrtyModeInd, 
                    string enabledStatusInd, 
                    string priceUpdatedInd, 
                    string comments2, 
                    string displayONWeb, 
                    string paymntFreq, 
                    string accumnPeriod, 
                    string accumnStaDate, 
                    string accumnEndDate, 
                    string maxNbrPaymnts, 
                    string trancheNbr, 
                    string testNbr, 
                    string vstDesc, 
                    string vstTerm, 
                    string unitRnd, 
                    string vstComments, 
                    string periodFRVstStart, 
                    string vestPerc, 
                    string vestDate, 
                    string performanceDesc, 
                    string testDate, 
                    string testPerc, 
                    string cancUnvest, 
                    string leaverSchedDesc, 
                    string leaverCode, 
                    string leaverCodeDesc, 
                    string employeeStatus, 
                    string employeeStatusDesc, 
                    string leaverEffectInd, 
                    string maintainRestrctInd, 
                    string phantomLvrTypeInd, 
                    string overrideExpiry, 
                    string overridePeriod, 
                    string overrideFromDate, 
                    string unvNOChgInd, 
                    string unvCancelImm, 
                    string unvAccelVst, 
                    string unvAccelPeriod, 
                    string unvAccelFrmDate, 
                    string vstNOChgInd, 
                    string vstCancelImm, 
                    string vstIgnoreBlackout, 
                    string comments3, 
                    string clntCode1, 
                    string clntCode2, 
                    string coyCode1, 
                    string coyCode2, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSHousekeepingReport_Gold",
                    "CPU_AUTO_R",
                    "42583",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Housekeeping_Report_Goldcopy", @__tags);
#line 1052
this.ScenarioSetup(scenarioInfo);
#line 1053
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1054
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1055
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1056
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1057
  testRunner.And("In ERS00100 I click on: \"ess housekeeping report\" within the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table195 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table195.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 1058
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table195, "And ");
#line hidden
            TechTalk.SpecFlow.Table table196 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClntCode1",
                        "ClntCode2",
                        "CoyCode1",
                        "CoyCode2",
                        "ClsCode1",
                        "ClsCode2",
                        "ClsGrp1",
                        "ClsGrp2",
                        "RegCode1",
                        "RegCode2",
                        "RegType1",
                        "RegType2",
                        "SelectedPlanType",
                        "SelectedTaxType"});
            table196.AddRow(new string[] {
                        string.Format("{0}", clntCode1),
                        string.Format("{0}", clntCode2),
                        string.Format("{0}", coyCode1),
                        string.Format("{0}", coyCode2),
                        string.Format("{0}", clsCode1),
                        string.Format("{0}", clsCode2),
                        string.Format("{0}", clsGrp1),
                        string.Format("{0}", clsGrp2),
                        string.Format("{0}", regCode1),
                        string.Format("{0}", regCode2),
                        string.Format("{0}", regType1),
                        string.Format("{0}", regType2),
                        string.Format("{0}", selectedPlanType),
                        string.Format("{0}", selectedTaxType)});
#line 1061
  testRunner.And("In ERS01031 I continue with the following details:", ((string)(null)), table196, "And ");
#line hidden
            TechTalk.SpecFlow.Table table197 = new TechTalk.SpecFlow.Table(new string[] {
                        "CurrUnitBal",
                        "NbrCurrCerts",
                        "NbrNilCerts",
                        "HolderID",
                        "HolderName"});
            table197.AddRow(new string[] {
                        string.Format("{0}", currUnitBal),
                        string.Format("{0}", nbrCurrCerts),
                        string.Format("{0}", nbrNilCerts),
                        string.Format("{0}", holderID),
                        string.Format("{0}", holderName)});
#line 1064
  testRunner.And("In ERS01036 I continue with the following details:", ((string)(null)), table197, "And ");
#line hidden
            TechTalk.SpecFlow.Table table198 = new TechTalk.SpecFlow.Table(new string[] {
                        "PlanCode",
                        "PlanDesc",
                        "PlanTypeInd",
                        "Div13aInd",
                        "FinalSecurity",
                        "CntryOFTax",
                        "NorTrustInd",
                        "MarketValueInd",
                        "CntlAcct",
                        "UnawAcct",
                        "PaymtOptionInd",
                        "PaymtCreatnInd",
                        "BlkoutPeriodInd",
                        "BlkoutCode",
                        "LeaverPackInd",
                        "ThirdPrtyPayee",
                        "CoyPayee",
                        "Comments",
                        "TaxTypeInd",
                        "UsePoolInd",
                        "ForfType",
                        "AutoForfInd",
                        "AutoRemvlBulkCode",
                        "AutoRemvlFromInd",
                        "MatchWorkgCls",
                        "PlanMtchgLimit",
                        "PlanMtchgLimitPerd",
                        "AutoPhntmTransfr",
                        "RetirementAge",
                        "FromOptionClass",
                        "VsaXfrJurisdictCode",
                        "SingleCertNbr",
                        "DivReinvestInd",
                        "DivPlanCat",
                        "DivPlanConcept",
                        "LapseDays",
                        "NilCostOptionInd",
                        "PhantomOptionInd",
                        "ExpiryNoticeINUrr",
                        "NbrDaysBefExpiry",
                        "VestingNoticeINUrr",
                        "NbrDaysBeforeVest",
                        "ONMktPurchaseInd",
                        "VsaXfrAllowed",
                        "VsaJurisdictionCodes",
                        "VsaClassCodes",
                        "LoanLapseExcepts",
                        "LoanLimitMax",
                        "LoanLimitTypeInd",
                        "LoanPaymntTypes",
                        "LoanDivOption",
                        "AllowWebTrfInd"});
            table198.AddRow(new string[] {
                        string.Format("{0}", planCode),
                        string.Format("{0}", planDesc),
                        string.Format("{0}", planTypeInd),
                        string.Format("{0}", div13AInd),
                        string.Format("{0}", finalSecurity),
                        string.Format("{0}", cntryOFTax),
                        string.Format("{0}", norTrustInd),
                        string.Format("{0}", marketValueInd),
                        string.Format("{0}", cntlAcct),
                        string.Format("{0}", unawAcct),
                        string.Format("{0}", paymtOptionInd),
                        string.Format("{0}", paymtCreatnInd),
                        string.Format("{0}", blkoutPeriodInd),
                        string.Format("{0}", blkoutCode),
                        string.Format("{0}", leaverPackInd),
                        string.Format("{0}", thirdPrtyPayee),
                        string.Format("{0}", coyPayee),
                        string.Format("{0}", comments),
                        string.Format("{0}", taxTypeInd),
                        string.Format("{0}", usePoolInd),
                        string.Format("{0}", forfType),
                        string.Format("{0}", autoForfInd),
                        string.Format("{0}", autoRemvlBulkCode),
                        string.Format("{0}", autoRemvlFromInd),
                        string.Format("{0}", matchWorkgCls),
                        string.Format("{0}", planMtchgLimit),
                        string.Format("{0}", planMtchgLimitPerd),
                        string.Format("{0}", autoPhntmTransfr),
                        string.Format("{0}", retirementAge),
                        string.Format("{0}", fromOptionClass),
                        string.Format("{0}", vsaXfrJurisdictCode),
                        string.Format("{0}", singleCertNbr),
                        string.Format("{0}", divReinvestInd),
                        string.Format("{0}", divPlanCat),
                        string.Format("{0}", divPlanConcept),
                        string.Format("{0}", lapseDays),
                        string.Format("{0}", nilCostOptionInd),
                        string.Format("{0}", phantomOptionInd),
                        string.Format("{0}", expiryNoticeINUrr),
                        string.Format("{0}", nbrDaysBefExpiry),
                        string.Format("{0}", vestingNoticeINUrr),
                        string.Format("{0}", nbrDaysBeforeVest),
                        string.Format("{0}", oNMktPurchaseInd),
                        string.Format("{0}", vsaXfrAllowed),
                        string.Format("{0}", vsaJurisdictionCodes),
                        string.Format("{0}", vsaClassCodes),
                        string.Format("{0}", loanLapseExcepts),
                        string.Format("{0}", loanLimitMax),
                        string.Format("{0}", loanLimitTypeInd),
                        string.Format("{0}", loanPaymntTypes),
                        string.Format("{0}", loanDivOption),
                        string.Format("{0}", allowWebTrfInd)});
#line 1067
  testRunner.And("In ERS01032 I continue with the following details:", ((string)(null)), table198, "And ");
#line hidden
            TechTalk.SpecFlow.Table table199 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode",
                        "RegisterType",
                        "RegisterDesc",
                        "Comments1",
                        "HoldingEndDate",
                        "TaxEndDate",
                        "FirstAwardDate",
                        "IndividualDatesInd",
                        "FloatingInd",
                        "ExpiresAfter",
                        "UnitRoundingInd",
                        "ReleaseTypes",
                        "AutoRemoveDays",
                        "AessLimitType",
                        "LimitMinimum",
                        "LimitMaximum",
                        "PaymentsCarrierInd",
                        "MoneyRoundingInd",
                        "ResidualsInd",
                        "MaximumNbrRestarts",
                        "PaymentAcct",
                        "BaseCurrency",
                        "AwardPayFreqDtls",
                        "CalcTaxInd",
                        "ForfeitureType",
                        "ProRataMethod",
                        "ForfeitureEndDate",
                        "NonForfeitureStatus",
                        "UsingMtchgInd",
                        "UsingUnmatchedInd",
                        "MtchgUpfrontInd",
                        "FutrMtchgEndDate",
                        "MtchgRatio",
                        "AwdMtchgLimitPerd",
                        "AwdMtchgLimit",
                        "LoanBonusPerdDtls",
                        "RecoursePlanInd",
                        "FutureFloat",
                        "ForfeitureFloat",
                        "LeaverSchedule",
                        "UsingVestingInd",
                        "TaxStmtTypeInd",
                        "TaxReportableInd",
                        "FinRptExp"});
            table199.AddRow(new string[] {
                        string.Format("{0}", registerCode),
                        string.Format("{0}", registerType),
                        string.Format("{0}", registerDesc),
                        string.Format("{0}", comments1),
                        string.Format("{0}", holdingEndDate),
                        string.Format("{0}", taxEndDate),
                        string.Format("{0}", firstAwardDate),
                        string.Format("{0}", individualDatesInd),
                        string.Format("{0}", floatingInd),
                        string.Format("{0}", expiresAfter),
                        string.Format("{0}", unitRoundingInd),
                        string.Format("{0}", releaseTypes),
                        string.Format("{0}", autoRemoveDays),
                        string.Format("{0}", aessLimitType),
                        string.Format("{0}", limitMinimum),
                        string.Format("{0}", limitMaximum),
                        string.Format("{0}", paymentsCarrierInd),
                        string.Format("{0}", moneyRoundingInd),
                        string.Format("{0}", residualsInd),
                        string.Format("{0}", maximumNbrRestarts),
                        string.Format("{0}", paymentAcct),
                        string.Format("{0}", baseCurrency),
                        string.Format("{0}", awardPayFreqDtls),
                        string.Format("{0}", calcTaxInd),
                        string.Format("{0}", forfeitureType),
                        string.Format("{0}", proRataMethod),
                        string.Format("{0}", forfeitureEndDate),
                        string.Format("{0}", nonForfeitureStatus),
                        string.Format("{0}", usingMtchgInd),
                        string.Format("{0}", usingUnmatchedInd),
                        string.Format("{0}", mtchgUpfrontInd),
                        string.Format("{0}", futrMtchgEndDate),
                        string.Format("{0}", mtchgRatio),
                        string.Format("{0}", awdMtchgLimitPerd),
                        string.Format("{0}", awdMtchgLimit),
                        string.Format("{0}", loanBonusPerdDtls),
                        string.Format("{0}", recoursePlanInd),
                        string.Format("{0}", futureFloat),
                        string.Format("{0}", forfeitureFloat),
                        string.Format("{0}", leaverSchedule),
                        string.Format("{0}", usingVestingInd),
                        string.Format("{0}", taxStmtTypeInd),
                        string.Format("{0}", taxReportableInd),
                        string.Format("{0}", finRptExp)});
#line 1070
  testRunner.And("In ERS01033 I continue with the following details:", ((string)(null)), table199, "And ");
#line hidden
            TechTalk.SpecFlow.Table table200 = new TechTalk.SpecFlow.Table(new string[] {
                        "AwardDate",
                        "AcqstnSharePrice",
                        "AwardExchgRate",
                        "IfrsFmv",
                        "ExpiryDate",
                        "VestingCode",
                        "VestingStartDate",
                        "PerformanceHurdles",
                        "PerformanceCode",
                        "CtlPayFreqDtls",
                        "HlthIntgrtyModeInd",
                        "EnabledStatusInd",
                        "PriceUpdatedInd",
                        "Comments2",
                        "DisplayONWeb"});
            table200.AddRow(new string[] {
                        string.Format("{0}", awardDate),
                        string.Format("{0}", acqstnSharePrice),
                        string.Format("{0}", awardExchgRate),
                        string.Format("{0}", ifrsFmv),
                        string.Format("{0}", expiryDate),
                        string.Format("{0}", vestingCode),
                        string.Format("{0}", vestingStartDate),
                        string.Format("{0}", performanceHurdles),
                        string.Format("{0}", performanceCode),
                        string.Format("{0}", ctlPayFreqDtls),
                        string.Format("{0}", hlthIntgrtyModeInd),
                        string.Format("{0}", enabledStatusInd),
                        string.Format("{0}", priceUpdatedInd),
                        string.Format("{0}", comments2),
                        string.Format("{0}", displayONWeb)});
#line 1073
  testRunner.And("In ERS01034 I continue with the following details:", ((string)(null)), table200, "And ");
#line hidden
            TechTalk.SpecFlow.Table table201 = new TechTalk.SpecFlow.Table(new string[] {
                        "PaymntFreq",
                        "AccumnPeriod",
                        "AccumnStaDate",
                        "AccumnEndDate",
                        "MaxNbrPaymnts"});
            table201.AddRow(new string[] {
                        string.Format("{0}", paymntFreq),
                        string.Format("{0}", accumnPeriod),
                        string.Format("{0}", accumnStaDate),
                        string.Format("{0}", accumnEndDate),
                        string.Format("{0}", maxNbrPaymnts)});
#line 1076
  testRunner.And("In ERS01035 I continue with the following details:", ((string)(null)), table201, "And ");
#line hidden
            TechTalk.SpecFlow.Table table202 = new TechTalk.SpecFlow.Table(new string[] {
                        "TrancheNbr",
                        "TestNbr",
                        "VstDesc",
                        "VstTerm",
                        "UnitRnd",
                        "VstComments",
                        "PeriodFRVstStart",
                        "VestPerc",
                        "VestDate",
                        "PerformanceDesc",
                        "TestDate",
                        "TestPerc",
                        "CancUnvest"});
            table202.AddRow(new string[] {
                        string.Format("{0}", trancheNbr),
                        string.Format("{0}", testNbr),
                        string.Format("{0}", vstDesc),
                        string.Format("{0}", vstTerm),
                        string.Format("{0}", unitRnd),
                        string.Format("{0}", vstComments),
                        string.Format("{0}", periodFRVstStart),
                        string.Format("{0}", vestPerc),
                        string.Format("{0}", vestDate),
                        string.Format("{0}", performanceDesc),
                        string.Format("{0}", testDate),
                        string.Format("{0}", testPerc),
                        string.Format("{0}", cancUnvest)});
#line 1079
  testRunner.And("In ERS01037 I continue with the following details:", ((string)(null)), table202, "And ");
#line hidden
            TechTalk.SpecFlow.Table table203 = new TechTalk.SpecFlow.Table(new string[] {
                        "LeaverSchedDesc",
                        "LeaverCode",
                        "LeaverCodeDesc",
                        "EmployeeStatus",
                        "EmployeeStatusDesc",
                        "LeaverEffectInd",
                        "MaintainRestrctInd",
                        "PhantomLvrTypeInd",
                        "OverrideExpiry",
                        "OverridePeriod",
                        "OverrideFromDate",
                        "UnvNOChgInd",
                        "UnvCancelImm",
                        "UnvAccelVst",
                        "UnvAccelPeriod",
                        "UnvAccelFrmDate",
                        "VstNOChgInd",
                        "VstCancelImm",
                        "VstIgnoreBlackout",
                        "Comments3"});
            table203.AddRow(new string[] {
                        string.Format("{0}", leaverSchedDesc),
                        string.Format("{0}", leaverCode),
                        string.Format("{0}", leaverCodeDesc),
                        string.Format("{0}", employeeStatus),
                        string.Format("{0}", employeeStatusDesc),
                        string.Format("{0}", leaverEffectInd),
                        string.Format("{0}", maintainRestrctInd),
                        string.Format("{0}", phantomLvrTypeInd),
                        string.Format("{0}", overrideExpiry),
                        string.Format("{0}", overridePeriod),
                        string.Format("{0}", overrideFromDate),
                        string.Format("{0}", unvNOChgInd),
                        string.Format("{0}", unvCancelImm),
                        string.Format("{0}", unvAccelVst),
                        string.Format("{0}", unvAccelPeriod),
                        string.Format("{0}", unvAccelFrmDate),
                        string.Format("{0}", vstNOChgInd),
                        string.Format("{0}", vstCancelImm),
                        string.Format("{0}", vstIgnoreBlackout),
                        string.Format("{0}", comments3)});
#line 1082
  testRunner.And("In ERS01038 I continue with the following details:", ((string)(null)), table203, "And ");
#line 1085
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table204 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table204.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 1086
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table204, "And ");
#line hidden
            TechTalk.SpecFlow.Table table205 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table205.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 1089
  testRunner.Then("I copy output files to local", ((string)(null)), table205, "Then ");
#line 1092
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1093
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Contribution_File_Report_Detail_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESS_ContributionFileReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42418")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "Y", "Y", "Y", "Y", "M", "Y", "Y", "M", "Y", "Y", "M", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "M", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "", "N", "", "Y", "Y", "Y", "Y", "Y", "DEP", "", "", "", "", "A", "", "A", null)]
        public virtual void ESS_Contribution_File_Report_Detail_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string holderCat, 
                    string holderNumber, 
                    string regAddress, 
                    string regAddrCase, 
                    string holderName, 
                    string fullnames, 
                    string caseFull, 
                    string formattedFull, 
                    string nameDetailed, 
                    string caseDetailed, 
                    string surname, 
                    string firstName, 
                    string secondName, 
                    string thirdName, 
                    string title, 
                    string initials, 
                    string designator, 
                    string nameKey, 
                    string nameType, 
                    string holderAddress, 
                    string holderAddressCase, 
                    string includePcode, 
                    string pcodeDomicile, 
                    string dpid, 
                    string barcode, 
                    string alternateID, 
                    string ers01010PersonalUrl, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string workPhone, 
                    string faxNumber, 
                    string mobilePhone, 
                    string returnedEmail, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string variableFlags, 
                    string variableField, 
                    string tfnDescription, 
                    string dates, 
                    string mailUnclaimedDate, 
                    string holderONDate, 
                    string holderOffDate, 
                    string holderAddedDate, 
                    string planDetails, 
                    string drpDetails, 
                    string drpPlanDesc, 
                    string bspDetails, 
                    string bspPlanDesc, 
                    string directCredit, 
                    string bankID, 
                    string bankNamadd, 
                    string bankAccountNbr, 
                    string bankAccountName, 
                    string selcls, 
                    string selreg1, 
                    string selreg2, 
                    string regType1, 
                    string regType2, 
                    string participants, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESS_ContributionFileReport_Gold",
                    "CPU_AUTO_R",
                    "42418",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Contribution_File_Report_Detail_Goldcopy", @__tags);
#line 1107
this.ScenarioSetup(scenarioInfo);
#line 1108
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1109
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1110
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1111
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1112
  testRunner.And("In ERS00100 I click on: \"contribution file report\" within the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table206 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table206.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 1113
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table206, "And ");
#line hidden
            TechTalk.SpecFlow.Table table207 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table207.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 1116
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table207, "And ");
#line hidden
            TechTalk.SpecFlow.Table table208 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier",
                        "HolderCat",
                        "HolderNumber",
                        "RegAddress",
                        "RegAddrCase",
                        "HolderName",
                        "Fullnames",
                        "CaseFull",
                        "FormattedFull",
                        "NameDetailed",
                        "CaseDetailed",
                        "Surname",
                        "FirstName",
                        "SecondName",
                        "ThirdName",
                        "Title",
                        "Initials",
                        "Designator",
                        "NameKey",
                        "NameType",
                        "HolderAddress",
                        "HolderAddressCase",
                        "IncludePcode",
                        "PcodeDomicile",
                        "Dpid",
                        "Barcode",
                        "AlternateID",
                        "Ers01010PersonalUrl"});
            table208.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier),
                        string.Format("{0}", holderCat),
                        string.Format("{0}", holderNumber),
                        string.Format("{0}", regAddress),
                        string.Format("{0}", regAddrCase),
                        string.Format("{0}", holderName),
                        string.Format("{0}", fullnames),
                        string.Format("{0}", caseFull),
                        string.Format("{0}", formattedFull),
                        string.Format("{0}", nameDetailed),
                        string.Format("{0}", caseDetailed),
                        string.Format("{0}", surname),
                        string.Format("{0}", firstName),
                        string.Format("{0}", secondName),
                        string.Format("{0}", thirdName),
                        string.Format("{0}", title),
                        string.Format("{0}", initials),
                        string.Format("{0}", designator),
                        string.Format("{0}", nameKey),
                        string.Format("{0}", nameType),
                        string.Format("{0}", holderAddress),
                        string.Format("{0}", holderAddressCase),
                        string.Format("{0}", includePcode),
                        string.Format("{0}", pcodeDomicile),
                        string.Format("{0}", dpid),
                        string.Format("{0}", barcode),
                        string.Format("{0}", alternateID),
                        string.Format("{0}", ers01010PersonalUrl)});
#line 1119
  testRunner.And("In ERS01010 I continue with the following values:", ((string)(null)), table208, "And ");
#line hidden
            TechTalk.SpecFlow.Table table209 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table209.AddRow(new string[] {
                        "<StaticDetails>"});
#line 1122
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table209, "And ");
#line hidden
            TechTalk.SpecFlow.Table table210 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "WorkPhone",
                        "FaxNumber",
                        "MobilePhone",
                        "EmailAddress",
                        "ReturnedEmail"});
            table210.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", workPhone),
                        string.Format("{0}", faxNumber),
                        string.Format("{0}", mobilePhone),
                        string.Format("{0}", emailAddress),
                        string.Format("{0}", returnedEmail)});
#line 1125
  testRunner.And("In ERS01012 I continue with the following Values:", ((string)(null)), table210, "And ");
#line hidden
            TechTalk.SpecFlow.Table table211 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag",
                        "VariableFlags",
                        "VariableField",
                        "TfnDescription",
                        "Dates",
                        "MailUnclaimedDate",
                        "HolderONDate",
                        "HolderOffDate",
                        "HolderAddedDate",
                        "PlanDetails",
                        "DrpDetails",
                        "DrpPlanDesc",
                        "BspDetails",
                        "BspPlanDesc",
                        "DirectCredit",
                        "BankID",
                        "BankNamadd",
                        "BankAccountNbr",
                        "BankAccountName"});
            table211.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag),
                        string.Format("{0}", variableFlags),
                        string.Format("{0}", variableField),
                        string.Format("{0}", tfnDescription),
                        string.Format("{0}", dates),
                        string.Format("{0}", mailUnclaimedDate),
                        string.Format("{0}", holderONDate),
                        string.Format("{0}", holderOffDate),
                        string.Format("{0}", holderAddedDate),
                        string.Format("{0}", planDetails),
                        string.Format("{0}", drpDetails),
                        string.Format("{0}", drpPlanDesc),
                        string.Format("{0}", bspDetails),
                        string.Format("{0}", bspPlanDesc),
                        string.Format("{0}", directCredit),
                        string.Format("{0}", bankID),
                        string.Format("{0}", bankNamadd),
                        string.Format("{0}", bankAccountNbr),
                        string.Format("{0}", bankAccountName)});
#line 1128
  testRunner.And("In ERS01028 I continue with the following Values:", ((string)(null)), table211, "And ");
#line hidden
            TechTalk.SpecFlow.Table table212 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selcls",
                        "Selreg1",
                        "Selreg2",
                        "RegType1",
                        "RegType2",
                        "Participants"});
            table212.AddRow(new string[] {
                        string.Format("{0}", selcls),
                        string.Format("{0}", selreg1),
                        string.Format("{0}", selreg2),
                        string.Format("{0}", regType1),
                        string.Format("{0}", regType2),
                        string.Format("{0}", participants)});
#line 1131
  testRunner.And("In ERS01009 I continue with the following details:", ((string)(null)), table212, "And ");
#line hidden
            TechTalk.SpecFlow.Table table213 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table213.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 1134
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table213, "And ");
#line 1137
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table214 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table214.AddRow(new string[] {
                        "completion",
                        "300",
                        "error"});
#line 1138
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table214, "And ");
#line hidden
            TechTalk.SpecFlow.Table table215 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table215.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 1141
  testRunner.Then("I copy output files to local", ((string)(null)), table215, "Then ");
#line 1144
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1145
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Employee_Loan_Plan_Statement_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSEmployeeLoanPlanStatement_Gold")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42717")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "", "", "", "", "7862", "", "30", "01/01/2014", "", "01/07/2013", "30/06/2014", "", "A", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "N", "", "", "", "", "", "ELA", "", "", "", "7862", "", "30", "01/01/2014", "", "01/07/2013", "30/06/2014", "", "A", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "N", "", "", "", "", "", "", "", "9", "", "7862", "", "30", "01/01/2014", "", "01/07/2013", "30/06/2014", "", "A", null)]
        public virtual void ESS_Employee_Loan_Plan_Statement_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string class1, 
                    string class2, 
                    string selgrp1, 
                    string selgrp2, 
                    string runRangeTO, 
                    string statementRunFrom, 
                    string marketValuePrice, 
                    string marketValueDate, 
                    string foreignExchangeRate, 
                    string stmtDsplayDateFrom, 
                    string stmtDsplayDateTO, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSEmployeeLoanPlanStatement_Gold",
                    "NAB2_AUTO_R",
                    "42717",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Employee_Loan_Plan_Statement_Goldcopy", @__tags);
#line 1157
this.ScenarioSetup(scenarioInfo);
#line 1158
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1159
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1160
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1161
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1162
  testRunner.And("In ERS00100 I click on: \"employee loan plan statement\" within the ESS Reporting M" +
                    "enu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table216 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table216.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 1163
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table216, "And ");
#line hidden
            TechTalk.SpecFlow.Table table217 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table217.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 1166
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table217, "And ");
#line hidden
            TechTalk.SpecFlow.Table table218 = new TechTalk.SpecFlow.Table(new string[] {
                        "Class1",
                        "Class2",
                        "Selgrp1",
                        "Selgrp2",
                        "RunRangeTO",
                        "StatementRunFrom",
                        "MarketValuePrice",
                        "MarketValueDate",
                        "ForeignExchangeRate",
                        "StmtDsplayDateFrom",
                        "StmtDsplayDateTO"});
            table218.AddRow(new string[] {
                        string.Format("{0}", class1),
                        string.Format("{0}", class2),
                        string.Format("{0}", selgrp1),
                        string.Format("{0}", selgrp2),
                        string.Format("{0}", runRangeTO),
                        string.Format("{0}", statementRunFrom),
                        string.Format("{0}", marketValuePrice),
                        string.Format("{0}", marketValueDate),
                        string.Format("{0}", foreignExchangeRate),
                        string.Format("{0}", stmtDsplayDateFrom),
                        string.Format("{0}", stmtDsplayDateTO)});
#line 1169
  testRunner.And("In ERS01020 I continue with the following details:", ((string)(null)), table218, "And ");
#line hidden
            TechTalk.SpecFlow.Table table219 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table219.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 1172
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table219, "And ");
#line 1175
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table220 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table220.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1176
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table220, "And ");
#line hidden
            TechTalk.SpecFlow.Table table221 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table221.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 1179
  testRunner.Then("I copy output files to local", ((string)(null)), table221, "Then ");
#line 1182
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1183
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Employee_AESS_Plan_Statement_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSEmployeeAESSPlanStatement_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42718")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "", "", "", "", "", "", "4405", "", "C", "C", "C", "10", "01/01/2014", "", "01/07/2013", "30/06/2014", "", "A", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "N", "", "", "", "", "", "DEP", "", "", "", "", "", "4405", "", "C", "C", "C", "10", "01/01/2014", "", "01/07/2013", "30/06/2014", "", "A", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "N", "", "", "", "", "", "DEP", "", "7", "3", "", "", "4405", "", "C", "C", "C", "10", "01/01/2014", "", "01/07/2013", "30/06/2014", "", "A", null)]
        public virtual void ESS_Employee_AESS_Plan_Statement_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string class1, 
                    string class2, 
                    string selgrp1, 
                    string selgrp2, 
                    string reg1, 
                    string reg2, 
                    string runRangeTO, 
                    string statementRunFrom, 
                    string bFBalanceInd, 
                    string statementDisplayInd, 
                    string ers01021PymtTranInd, 
                    string marketValuePrice, 
                    string marketValueDate, 
                    string foreignExchangeRate, 
                    string stmtDsplayDateFrom, 
                    string stmtDsplayDateTO, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSEmployeeAESSPlanStatement_Gold",
                    "CPU_AUTO_R",
                    "42718",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Employee_AESS_Plan_Statement_Goldcopy", @__tags);
#line 1198
this.ScenarioSetup(scenarioInfo);
#line 1199
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1200
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1201
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1202
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1203
  testRunner.And("In ERS00100 I click on: \"employee aess plan statement\" within the ESS Reporting M" +
                    "enu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table222 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table222.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 1204
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table222, "And ");
#line hidden
            TechTalk.SpecFlow.Table table223 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table223.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 1207
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table223, "And ");
#line hidden
            TechTalk.SpecFlow.Table table224 = new TechTalk.SpecFlow.Table(new string[] {
                        "Class1",
                        "Class2",
                        "Selgrp1",
                        "Selgrp2",
                        "Reg1",
                        "Reg2",
                        "RunRangeTO",
                        "StatementRunFrom",
                        "BFBalanceInd",
                        "StatementDisplayInd",
                        "Ers01021PymtTranInd",
                        "MarketValuePrice",
                        "MarketValueDate",
                        "ForeignExchangeRate",
                        "StmtDsplayDateFrom",
                        "StmtDsplayDateTO"});
            table224.AddRow(new string[] {
                        string.Format("{0}", class1),
                        string.Format("{0}", class2),
                        string.Format("{0}", selgrp1),
                        string.Format("{0}", selgrp2),
                        string.Format("{0}", reg1),
                        string.Format("{0}", reg2),
                        string.Format("{0}", runRangeTO),
                        string.Format("{0}", statementRunFrom),
                        string.Format("{0}", bFBalanceInd),
                        string.Format("{0}", statementDisplayInd),
                        string.Format("{0}", ers01021PymtTranInd),
                        string.Format("{0}", marketValuePrice),
                        string.Format("{0}", marketValueDate),
                        string.Format("{0}", foreignExchangeRate),
                        string.Format("{0}", stmtDsplayDateFrom),
                        string.Format("{0}", stmtDsplayDateTO)});
#line 1210
  testRunner.And("In ERS01021 I continue with the following details:", ((string)(null)), table224, "And ");
#line hidden
            TechTalk.SpecFlow.Table table225 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table225.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 1213
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table225, "And ");
#line 1216
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table226 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table226.AddRow(new string[] {
                        "completion",
                        "1200",
                        "error"});
#line 1217
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table226, "And ");
#line hidden
            TechTalk.SpecFlow.Table table227 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table227.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 1220
  testRunner.Then("I copy output files to local", ((string)(null)), table227, "Then ");
#line 1223
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1224
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Employee_Option_Plan_Statement_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSEmployeeOptionPlanStatement_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42719")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "", "", "", "", "", "", "G", "4405", "", "", "", "10", "01/01/2014", "01/07/2013", "30/06/2014", "Y", "", "A", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "N", "", "", "", "", "", "", "", "", "", "", "", "H", "4405", "", "", "", "10", "01/01/2014", "01/07/2013", "30/06/2014", "", "", "A", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "N", "", "", "", "", "", "", "", "", "", "", "", "V", "", "", "01/07/2013", "01/07/2013", "10", "01/01/2014", "01/07/2013", "30/06/2014", "", "", "A", "Y", null)]
        [NUnit.Framework.TestCaseAttribute("Test4", "N", "", "", "", "", "", "", "", "", "", "", "", "E", "", "", "01/07/2013", "01/07/2013", "10", "01/01/2014", "01/07/2013", "30/06/2014", "", "", "A", "Y", null)]
        [NUnit.Framework.TestCaseAttribute("Test5", "N", "", "", "", "", "", "OPT", "", "", "", "", "", "G", "4405", "", "", "", "10", "01/01/2014", "01/07/2013", "30/06/2014", "Y", "", "A", "", null)]
        public virtual void ESS_Employee_Option_Plan_Statement_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string class1, 
                    string class2, 
                    string selgrp1, 
                    string selgrp2, 
                    string reg1, 
                    string reg2, 
                    string statementType, 
                    string runRangeTO, 
                    string statementRunFrom, 
                    string transDateFrom, 
                    string transDateTO, 
                    string marketValuePrice, 
                    string marketValueDate, 
                    string stmtDsplayDateFrom, 
                    string stmtDsplayDateTO, 
                    string nilHoldingsInd, 
                    string reportDate, 
                    string reportSeq, 
                    string confirm, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSEmployeeOptionPlanStatement_Gold",
                    "CPU_AUTO_R",
                    "42719",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Employee_Option_Plan_Statement_Goldcopy", @__tags);
#line 1238
this.ScenarioSetup(scenarioInfo);
#line 1240
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1241
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1242
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1243
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1244
  testRunner.And("In ERS00100 I click on: \"employee option plan statement\" within the ESS Reporting" +
                    " Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table228 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table228.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 1245
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table228, "And ");
#line hidden
            TechTalk.SpecFlow.Table table229 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table229.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 1248
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table229, "And ");
#line hidden
            TechTalk.SpecFlow.Table table230 = new TechTalk.SpecFlow.Table(new string[] {
                        "Class1",
                        "Class2",
                        "Selgrp1",
                        "Selgrp2",
                        "Reg1",
                        "Reg2",
                        "StatementType",
                        "RunRangeTO",
                        "StatementRunFrom",
                        "TransDateFrom",
                        "TransDateTO",
                        "MarketValuePrice",
                        "MarketValueDate",
                        "StmtDsplayDateFrom",
                        "StmtDsplayDateTO",
                        "NilHoldingsInd"});
            table230.AddRow(new string[] {
                        string.Format("{0}", class1),
                        string.Format("{0}", class2),
                        string.Format("{0}", selgrp1),
                        string.Format("{0}", selgrp2),
                        string.Format("{0}", reg1),
                        string.Format("{0}", reg2),
                        string.Format("{0}", statementType),
                        string.Format("{0}", runRangeTO),
                        string.Format("{0}", statementRunFrom),
                        string.Format("{0}", transDateFrom),
                        string.Format("{0}", transDateTO),
                        string.Format("{0}", marketValuePrice),
                        string.Format("{0}", marketValueDate),
                        string.Format("{0}", stmtDsplayDateFrom),
                        string.Format("{0}", stmtDsplayDateTO),
                        string.Format("{0}", nilHoldingsInd)});
#line 1251
  testRunner.And("In ERS01043 I continue with the following details:", ((string)(null)), table230, "And ");
#line hidden
            TechTalk.SpecFlow.Table table231 = new TechTalk.SpecFlow.Table(new string[] {
                        "Confirm"});
            table231.AddRow(new string[] {
                        string.Format("{0}", confirm)});
#line 1254
  testRunner.And("In ERS01044 I continue with the following details:", ((string)(null)), table231, "And ");
#line hidden
            TechTalk.SpecFlow.Table table232 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table232.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 1257
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table232, "And ");
#line 1260
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table233 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table233.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1261
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table233, "And ");
#line hidden
            TechTalk.SpecFlow.Table table234 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table234.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 1264
  testRunner.Then("I copy output files to local", ((string)(null)), table234, "Then ");
#line 1267
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1268
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Pre2010_Employee_Tax_Statements_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSPre2010EmployeeTaxStatements_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42720")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "DEP", "", "", "", "", "N", "", "", "4406", "", "01/01/2007", "30/06/2008", "", "Y", "", "A", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "N", "", "", "", "", "", "DEP", "", "", "", "", "N", "", "", "4406", "", "01/01/2007", "30/06/2008", "", "N", "", "A", null)]
        public virtual void ESS_Pre2010_Employee_Tax_Statements_Goldcopy(
                    string reportHeading, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string class1, 
                    string payAcct1, 
                    string payAcct2, 
                    string classPerCatInd11, 
                    string classPerCatInd12, 
                    string useHistClassesInd, 
                    string histClass1, 
                    string histClass2, 
                    string runRangeTO, 
                    string statementRunFrom, 
                    string transDateFrom, 
                    string transDateTO, 
                    string loanDiscountPrice, 
                    string generateCsvInd, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSPre2010EmployeeTaxStatements_Gold",
                    "CPU_AUTO_R",
                    "42720",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Pre2010_Employee_Tax_Statements_Goldcopy", @__tags);
#line 1284
this.ScenarioSetup(scenarioInfo);
#line 1285
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1286
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1287
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1288
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1289
  testRunner.And("In ERS00100 I click on: \"pre 2010 employee tax statements\" within the ESS Reporti" +
                    "ng Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table235 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table235.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 1290
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table235, "And ");
#line hidden
            TechTalk.SpecFlow.Table table236 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2",
                        "UseHistClassesInd",
                        "HistClass1",
                        "HistClass2"});
            table236.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2),
                        string.Format("{0}", useHistClassesInd),
                        string.Format("{0}", histClass1),
                        string.Format("{0}", histClass2)});
#line 1293
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table236, "And ");
#line hidden
            TechTalk.SpecFlow.Table table237 = new TechTalk.SpecFlow.Table(new string[] {
                        "Class1",
                        "PayAcct1",
                        "PayAcct2",
                        "ClassPerCatInd11",
                        "ClassPerCatInd12",
                        "UseHistClassesInd",
                        "HistClass1",
                        "HistClass2",
                        "RunRangeTO",
                        "StatementRunFrom",
                        "TransDateFrom",
                        "TransDateTO",
                        "LoanDiscountPrice",
                        "GenerateCsvInd"});
            table237.AddRow(new string[] {
                        string.Format("{0}", class1),
                        string.Format("{0}", payAcct1),
                        string.Format("{0}", payAcct2),
                        string.Format("{0}", classPerCatInd11),
                        string.Format("{0}", classPerCatInd12),
                        "N",
                        string.Format("{0}", histClass1),
                        string.Format("{0}", histClass2),
                        string.Format("{0}", runRangeTO),
                        string.Format("{0}", statementRunFrom),
                        string.Format("{0}", transDateFrom),
                        string.Format("{0}", transDateTO),
                        string.Format("{0}", loanDiscountPrice),
                        string.Format("{0}", generateCsvInd)});
#line 1296
  testRunner.And("In ERS01062 I continue with the following details:", ((string)(null)), table237, "And ");
#line hidden
            TechTalk.SpecFlow.Table table238 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table238.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 1299
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table238, "And ");
#line 1302
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table239 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table239.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1303
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table239, "And ");
#line hidden
            TechTalk.SpecFlow.Table table240 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table240.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 1306
  testRunner.Then("I copy output files to local", ((string)(null)), table240, "Then ");
#line 1309
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1310
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Tax_Reporting_Status_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSTaxReportingStatusReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42763")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "CPU_AUTO_R", "NAB2_AUTO_R", "", "2014", "", "", "", "", "A", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "N", "", "CPU_AUTO_R", "", "", "2014", "", "", "", "", "A", null)]
        public virtual void ESS_Tax_Reporting_Status_Report_Goldcopy(string reportHeading, string preload, string wildString, string coyCode151, string coyCode152, string coyCode153, string finYear, string taxStatus1, string taxStatus2, string taxStatus3, string reportDate, string reportSeq, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSTaxReportingStatusReport_Gold",
                    "CPU_AUTO_R",
                    "42763",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Tax_Reporting_Status_Report_Goldcopy", @__tags);
#line 1367
this.ScenarioSetup(scenarioInfo);
#line 1368
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1369
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1370
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1371
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1372
  testRunner.And("In ERS00100 I click on: \"ess tax reporting\" within the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1373
  testRunner.And("In ERS00110 I click on: \"ess tax reporting status report\" within the ESS Tax Repo" +
                    "rting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table241 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table241.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 1374
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table241, "And ");
#line hidden
            TechTalk.SpecFlow.Table table242 = new TechTalk.SpecFlow.Table(new string[] {
                        "CoyCode151",
                        "CoyCode152",
                        "CoyCode153",
                        "FinYear",
                        "TaxStatus1",
                        "TaxStatus2",
                        "TaxStatus3"});
            table242.AddRow(new string[] {
                        string.Format("{0}", coyCode151),
                        string.Format("{0}", coyCode152),
                        string.Format("{0}", coyCode153),
                        string.Format("{0}", finYear),
                        string.Format("{0}", taxStatus1),
                        string.Format("{0}", taxStatus2),
                        string.Format("{0}", taxStatus3)});
#line 1377
  testRunner.And("In ERS01050 I continue with the following details:", ((string)(null)), table242, "And ");
#line hidden
            TechTalk.SpecFlow.Table table243 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table243.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 1380
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table243, "And ");
#line 1383
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table244 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table244.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1384
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table244, "And ");
#line hidden
            TechTalk.SpecFlow.Table table245 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName",
                        "ExternalFiles",
                        "ExternalFileLocation"});
            table245.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        "",
                        "Y",
                        "cpm_doc"});
#line 1387
  testRunner.Then("I copy output files to local", ((string)(null)), table245, "Then ");
#line 1390
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1391
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_ATO_Provider_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSATOProviderReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42764")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "A", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "N", "", "CPU_AUTO_R", "", "", "", "A", null)]
        public virtual void ESS_ATO_Provider_Report_Goldcopy(string reportHeading, string preload, string wildString, string coyCode151, string coyCode152, string coyCode153, string reportDate, string reportSeq, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSATOProviderReport_Gold",
                    "CPU_AUTO_R",
                    "42764",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_ATO_Provider_Report_Goldcopy", @__tags);
#line 1404
this.ScenarioSetup(scenarioInfo);
#line 1405
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1406
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1407
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1408
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1409
  testRunner.And("In ERS00100 I click on: \"ess tax reporting\" within the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1410
  testRunner.And("In ERS00110 I click on: \"ess ato provider report\" within the ESS Tax Reporting Me" +
                    "nu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table246 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table246.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 1411
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table246, "And ");
#line hidden
            TechTalk.SpecFlow.Table table247 = new TechTalk.SpecFlow.Table(new string[] {
                        "CoyCode151",
                        "CoyCode152",
                        "CoyCode153"});
            table247.AddRow(new string[] {
                        string.Format("{0}", coyCode151),
                        string.Format("{0}", coyCode152),
                        string.Format("{0}", coyCode153)});
#line 1414
  testRunner.And("In ERS01051 I continue with the following details:", ((string)(null)), table247, "And ");
#line hidden
            TechTalk.SpecFlow.Table table248 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table248.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 1417
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table248, "And ");
#line 1420
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table249 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table249.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1421
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table249, "And ");
#line hidden
            TechTalk.SpecFlow.Table table250 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName",
                        "ExternalFiles",
                        "ExternalFileLocation"});
            table250.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        "",
                        "Y",
                        "cpm_doc"});
#line 1424
  testRunner.Then("I copy output files to local", ((string)(null)), table250, "Then ");
#line 1427
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1428
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_TFN_Withholding_Report_Goldcopy")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSTFNWithholdingReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42765")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "", "", "", "", "", "DEP", "2014", "", "A", "WH_TFN_CPU_AUTO_R_DEP_2014", "ET_WRK_CPU_AUTO_R_DEP_O_2014", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "N", "", "", "", "", "", "OPT", "2014", "", "A", "WH_TFN_CPU_AUTO_R_OPT_2014", "ET_WRK_CPU_AUTO_R_OPT_O_2014", null)]
        public virtual void ESS_TFN_Withholding_Report_Goldcopy(string reportHeading, string preload, string wildString, string empStatus1, string empStatus2, string leaverCode1, string leaverCode2, string @class, string financialYear, string reportDate, string reportSeq, string fileName1, string fileName2, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSTFNWithholdingReport_Gold",
                    "CPU_AUTO_R",
                    "42765",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_TFN_Withholding_Report_Goldcopy", @__tags);
#line 1440
this.ScenarioSetup(scenarioInfo);
#line 1445
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1446
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1447
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1448
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1449
  testRunner.And("In ERS00100 I click on: \"ess tax reporting\" within the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1450
  testRunner.And("In ERS00110 I click on: \"ess tfn withholding report\" within the ESS Tax Reporting" +
                    " Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table251 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table251.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 1451
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table251, "And ");
#line hidden
            TechTalk.SpecFlow.Table table252 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table252.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 1454
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table252, "And ");
#line hidden
            TechTalk.SpecFlow.Table table253 = new TechTalk.SpecFlow.Table(new string[] {
                        "Class",
                        "FinancialYear"});
            table253.AddRow(new string[] {
                        string.Format("{0}", @class),
                        string.Format("{0}", financialYear)});
#line 1457
  testRunner.And("In ERS01052 I continue with the following details:", ((string)(null)), table253, "And ");
#line hidden
            TechTalk.SpecFlow.Table table254 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table254.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 1460
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table254, "And ");
#line 1463
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table255 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table255.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1464
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table255, "And ");
#line hidden
            TechTalk.SpecFlow.Table table256 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table256.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 1467
  testRunner.Then("I copy output files to local", ((string)(null)), table256, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table257 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table257.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        string.Format("{0}", fileName1)});
#line 1470
  testRunner.Then("I copy output files to local", ((string)(null)), table257, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table258 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table258.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        string.Format("{0}", fileName2)});
#line 1473
  testRunner.Then("I copy output files to local", ((string)(null)), table258, "Then ");
#line 1476
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1477
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Trade_Order_Transaction_Report")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSTradeOrderTransactionReport")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "N", "Y", "N", "N", "N", "N", "N", "", "", "", "", "CRM", "", "NAB2_AUTO_R", "", "", "", "", "", "", "", "", "N", "", "", "", "", "", "", "", "", "", "", "", "9999999", "", "9999999.999999", "", "99999999999999", "", "99999999999.99", "", "99999999", "", "99999999", "", "", "99999999999.99", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "B", "N", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "N", "Y", "N", "N", "N", "N", "N", "", "", "", "", "CRM", "", "NAB2_AUTO_R", "", "ATS", "", "", "", "", "", "", "N", "", "", "", "", "", "", "", "", "", "", "", "9999999", "", "9999999.999999", "", "99999999999999", "", "99999999999.99", "", "99999999", "", "99999999", "", "", "99999999999.99", "", "", "", "", "", "", "", "ESSOPT", "", "", "", "", "", "", "", "", "", "", "C", "N", "", null)]
        public virtual void ESS_Trade_Order_Transaction_Report(
                    string reportHeading, 
                    string preload, 
                    string holderIdentifier, 
                    string staticDetails, 
                    string extraIdentifier, 
                    string homePhone, 
                    string emailAddress, 
                    string holderStatus, 
                    string deceasedFlag, 
                    string exceptionFlag, 
                    string stopTradeFlag, 
                    string divIntentionFlag, 
                    string clientCode1, 
                    string clientCode2, 
                    string companyCode1, 
                    string companyCode2, 
                    string classCode1, 
                    string classCode2, 
                    string regCode1, 
                    string regCode2, 
                    string trdCntrlCode1, 
                    string trdCntrlCode2, 
                    string trdCntrlCode3, 
                    string reportNonCurrent, 
                    string trdType, 
                    string realTimeTrdInd, 
                    string trdOrdStatus1, 
                    string trdOrdStatus2, 
                    string cutOffDateFrom, 
                    string cutOffDateTO, 
                    string trdDateFrom, 
                    string trdDateTO, 
                    string stlDateFrom, 
                    string stlDateTO, 
                    string ordNumFrom, 
                    string ordNumTO, 
                    string finalPriceFrom, 
                    string finalPriceTO, 
                    string totUnitRangeFrom, 
                    string totUnitRangeTO, 
                    string totMnyRangeFrom, 
                    string totMnyRangeTO, 
                    string tranNumRangeFrom, 
                    string tranNumRangeTO, 
                    string pymtRefRangeFrom, 
                    string pymtRefRangeTO, 
                    string orderType, 
                    string limitPriceFrom, 
                    string limitPriceTO, 
                    string ordDurationType, 
                    string ormsOrderStatus1, 
                    string ormsOrderStatus2, 
                    string dateOrderSentFrom, 
                    string dateOrderSentTo, 
                    string brokerCode, 
                    string brokerAccount, 
                    string recnCode, 
                    string payAccount1, 
                    string payAccount2, 
                    string chgPaidBY1, 
                    string chgPaidBY2, 
                    string chgType1, 
                    string chgType2, 
                    string paymentMethod1, 
                    string paymentMethod2, 
                    string pymtCurrCode1, 
                    string pymtCurrCode2, 
                    string reportFormat, 
                    string certDtlsInd, 
                    string reversedTradeInd, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSTradeOrderTransactionReport",
                    "NAB2_AUTO_R",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Trade_Order_Transaction_Report", @__tags);
#line 1490
this.ScenarioSetup(scenarioInfo);
#line 1491
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1492
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1493
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1494
  testRunner.And("In RSS00101 I click on: \"control reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1495
  testRunner.And("In RSS13000 I click on: \"trading system reporting\" within the Control Reporting M" +
                    "enu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1496
  testRunner.And("In TRDRSP00 I click on: \"trade order transaction report\" with in the Trading Syst" +
                    "em Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table259 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload"});
            table259.AddRow(new string[] {
                        string.Format("{0}", preload)});
#line 1497
  testRunner.And("In TRDRSP11 I continue with the following details:", ((string)(null)), table259, "And ");
#line hidden
            TechTalk.SpecFlow.Table table260 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier"});
            table260.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier)});
#line 1500
  testRunner.And("In ERS01010 I continue with the following details:", ((string)(null)), table260, "And ");
#line hidden
            TechTalk.SpecFlow.Table table261 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table261.AddRow(new string[] {
                        string.Format("{0}", staticDetails)});
#line 1503
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table261, "And ");
#line hidden
            TechTalk.SpecFlow.Table table262 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "EmailAddress"});
            table262.AddRow(new string[] {
                        string.Format("{0}", extraIdentifier),
                        string.Format("{0}", homePhone),
                        string.Format("{0}", emailAddress)});
#line 1506
  testRunner.And("In ERS01012 I continue with the following details:", ((string)(null)), table262, "And ");
#line hidden
            TechTalk.SpecFlow.Table table263 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag"});
            table263.AddRow(new string[] {
                        string.Format("{0}", holderStatus),
                        string.Format("{0}", deceasedFlag),
                        string.Format("{0}", exceptionFlag),
                        string.Format("{0}", stopTradeFlag),
                        string.Format("{0}", divIntentionFlag)});
#line 1509
  testRunner.And("In ERS01028 I continue with the following details:", ((string)(null)), table263, "And ");
#line hidden
            TechTalk.SpecFlow.Table table264 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClientCode1",
                        "ClientCode2",
                        "CompanyCode1",
                        "CompanyCode2",
                        "ClassCode1",
                        "ClassCode2",
                        "RegCode1",
                        "RegCode2",
                        "TrdCntrlCode1",
                        "TrdCntrlCode2",
                        "TrdCntrlCode3",
                        "ReportNonCurrent",
                        "TrdType",
                        "RealTimeTrdInd",
                        "TrdOrdStatus1",
                        "TrdOrdStatus2",
                        "CutOffDateFrom",
                        "CutOffDateTO",
                        "TrdDateFrom",
                        "TrdDateTO",
                        "StlDateFrom",
                        "StlDateTO",
                        "OrdNumFrom",
                        "OrdNumTO",
                        "FinalPriceFrom",
                        "FinalPriceTO",
                        "TotUnitRangeFrom",
                        "TotUnitRangeTO",
                        "TotMnyRangeFrom",
                        "TotMnyRangeTO",
                        "TranNumRangeFrom",
                        "TranNumRangeTO",
                        "PymtRefRangeFrom",
                        "PymtRefRangeTO"});
            table264.AddRow(new string[] {
                        string.Format("{0}", clientCode1),
                        string.Format("{0}", clientCode2),
                        string.Format("{0}", companyCode1),
                        string.Format("{0}", companyCode2),
                        string.Format("{0}", classCode1),
                        string.Format("{0}", classCode2),
                        string.Format("{0}", regCode1),
                        string.Format("{0}", regCode2),
                        string.Format("{0}", trdCntrlCode1),
                        string.Format("{0}", trdCntrlCode2),
                        string.Format("{0}", trdCntrlCode3),
                        string.Format("{0}", reportNonCurrent),
                        string.Format("{0}", trdType),
                        string.Format("{0}", realTimeTrdInd),
                        string.Format("{0}", trdOrdStatus1),
                        string.Format("{0}", trdOrdStatus2),
                        string.Format("{0}", cutOffDateFrom),
                        string.Format("{0}", cutOffDateTO),
                        string.Format("{0}", trdDateFrom),
                        string.Format("{0}", trdDateTO),
                        string.Format("{0}", stlDateFrom),
                        string.Format("{0}", stlDateTO),
                        string.Format("{0}", ordNumFrom),
                        string.Format("{0}", ordNumTO),
                        string.Format("{0}", finalPriceFrom),
                        string.Format("{0}", finalPriceTO),
                        string.Format("{0}", totUnitRangeFrom),
                        string.Format("{0}", totUnitRangeTO),
                        string.Format("{0}", totMnyRangeFrom),
                        string.Format("{0}", totMnyRangeTO),
                        string.Format("{0}", tranNumRangeFrom),
                        string.Format("{0}", tranNumRangeTO),
                        string.Format("{0}", pymtRefRangeFrom),
                        string.Format("{0}", pymtRefRangeTO)});
#line 1512
  testRunner.And("In TRDRSP01 I continue with the following details:", ((string)(null)), table264, "And ");
#line hidden
            TechTalk.SpecFlow.Table table265 = new TechTalk.SpecFlow.Table(new string[] {
                        "OrderType",
                        "LimitPriceFrom",
                        "LimitPriceTO",
                        "OrdDurationType",
                        "OrmsOrderStatus1",
                        "OrmsOrderStatus2",
                        "DateOrderSentFrom",
                        "DateOrderSentTo",
                        "BrokerCode",
                        "BrokerAccount",
                        "RecnCode",
                        "PayAccount1",
                        "PayAccount2",
                        "ChgPaidBY1",
                        "ChgPaidBY2",
                        "ChgType1",
                        "ChgType2",
                        "PaymentMethod1",
                        "PaymentMethod2",
                        "PymtCurrCode1",
                        "PymtCurrCode2",
                        "ReportFormat",
                        "CertDtlsInd",
                        "ReversedTradeInd"});
            table265.AddRow(new string[] {
                        string.Format("{0}", orderType),
                        string.Format("{0}", limitPriceFrom),
                        string.Format("{0}", limitPriceTO),
                        string.Format("{0}", ordDurationType),
                        string.Format("{0}", ormsOrderStatus1),
                        string.Format("{0}", ormsOrderStatus2),
                        string.Format("{0}", dateOrderSentFrom),
                        string.Format("{0}", dateOrderSentTo),
                        string.Format("{0}", brokerCode),
                        string.Format("{0}", brokerAccount),
                        string.Format("{0}", recnCode),
                        string.Format("{0}", payAccount1),
                        string.Format("{0}", payAccount2),
                        string.Format("{0}", chgPaidBY1),
                        string.Format("{0}", chgPaidBY2),
                        string.Format("{0}", chgType1),
                        string.Format("{0}", chgType2),
                        string.Format("{0}", paymentMethod1),
                        string.Format("{0}", paymentMethod2),
                        string.Format("{0}", pymtCurrCode1),
                        string.Format("{0}", pymtCurrCode2),
                        string.Format("{0}", reportFormat),
                        string.Format("{0}", certDtlsInd),
                        string.Format("{0}", reversedTradeInd)});
#line 1515
  testRunner.And("In TRDRSP03 I continue with the following details:", ((string)(null)), table265, "And ");
#line 1518
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table266 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table266.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1519
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table266, "And ");
#line hidden
            TechTalk.SpecFlow.Table table267 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table267.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 1522
  testRunner.Then("I copy output files to local", ((string)(null)), table267, "Then ");
#line 1525
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1526
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Company_Trade_Order_Report")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSCompanyTradeOrderReport")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "CRM", "", "NAB2_AUTO_R", "", "", "", "", "", "", "", "", "N", "", "", "", "", "", "", "", "", "", "", "", "9999999", "", "9999999.999999", "", "99999999999999", "", "99999999999.99", "", "", "", "", "", "", "99999999999.99", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "B", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "CRM", "", "NAB2_AUTO_R", "", "", "", "", "", "", "", "", "N", "", "", "", "", "", "", "", "", "", "", "", "9999999", "", "9999999.999999", "", "99999999999999", "", "99999999999.99", "", "", "", "", "", "", "99999999999.99", "", "", "", "", "", "", "", "INVMSW", "", "", "", "", "", "", "", "", "", "", "C", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "CRM", "", "NAB2_AUTO_R", "CPU_AUTO_R", "", "", "", "", "", "", "", "N", "", "", "", "", "", "", "", "", "", "", "", "9999999", "", "9999999.999999", "", "99999999999999", "", "99999999999.99", "", "", "", "", "", "", "99999999999.99", "", "", "", "", "", "", "", "INVMSW", "", "", "", "", "", "", "", "", "", "", "C", "", "", null)]
        public virtual void ESS_Company_Trade_Order_Report(
                    string reportHeading, 
                    string clientCode1, 
                    string clientCode2, 
                    string companyCode1, 
                    string companyCode2, 
                    string classCode1, 
                    string classCode2, 
                    string regCode1, 
                    string regCode2, 
                    string trdCntrlCode1, 
                    string trdCntrlCode2, 
                    string trdCntrlCode3, 
                    string reportNonCurrent, 
                    string trdType, 
                    string realTimeTrdInd, 
                    string trdOrdStatus1, 
                    string trdOrdStatus2, 
                    string cutOffDateFrom, 
                    string cutOffDateTO, 
                    string trdDateFrom, 
                    string trdDateTO, 
                    string stlDateFrom, 
                    string stlDateTO, 
                    string ordNumFrom, 
                    string ordNumTO, 
                    string finalPriceFrom, 
                    string finalPriceTO, 
                    string totUnitRangeFrom, 
                    string totUnitRangeTO, 
                    string totMnyRangeFrom, 
                    string totMnyRangeTO, 
                    string tranNumRangeFrom, 
                    string tranNumRangeTO, 
                    string pymtRefRangeFrom, 
                    string pymtRefRangeTO, 
                    string orderType, 
                    string limitPriceFrom, 
                    string limitPriceTO, 
                    string ordDurationType, 
                    string ormsOrderStatus1, 
                    string ormsOrderStatus2, 
                    string dateOrderSentFrom, 
                    string dateOrderSentTo, 
                    string brokerCode, 
                    string brokerAccount, 
                    string recnCode, 
                    string payAccount1, 
                    string payAccount2, 
                    string chgPaidBY1, 
                    string chgPaidBY2, 
                    string chgType1, 
                    string chgType2, 
                    string paymentMethod1, 
                    string paymentMethod2, 
                    string pymtCurrCode1, 
                    string pymtCurrCode2, 
                    string reportFormat, 
                    string certDtlsInd, 
                    string reversedTradeInd, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSCompanyTradeOrderReport",
                    "NAB2_AUTO_R",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Company_Trade_Order_Report", @__tags);
#line 1538
this.ScenarioSetup(scenarioInfo);
#line 1539
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1540
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1541
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1542
  testRunner.And("In RSS00101 I click on: \"control reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1543
  testRunner.And("In RSS13000 I click on: \"trading system reporting\" within the Control Reporting M" +
                    "enu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1544
  testRunner.And("In TRDRSP00 I click on: \"company trade order report\" with in the Trading System R" +
                    "eporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table268 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClientCode1",
                        "ClientCode2",
                        "CompanyCode1",
                        "CompanyCode2",
                        "ClassCode1",
                        "ClassCode2",
                        "RegCode1",
                        "RegCode2",
                        "TrdCntrlCode1",
                        "TrdCntrlCode2",
                        "TrdCntrlCode3",
                        "ReportNonCurrent",
                        "TrdType",
                        "RealTimeTrdInd",
                        "TrdOrdStatus1",
                        "TrdOrdStatus2",
                        "CutOffDateFrom",
                        "CutOffDateTO",
                        "TrdDateFrom",
                        "TrdDateTO",
                        "StlDateFrom",
                        "StlDateTO",
                        "OrdNumFrom",
                        "OrdNumTO",
                        "FinalPriceFrom",
                        "FinalPriceTO",
                        "TotUnitRangeFrom",
                        "TotUnitRangeTO",
                        "TotMnyRangeFrom",
                        "TotMnyRangeTO",
                        "TranNumRangeFrom",
                        "TranNumRangeTO",
                        "PymtRefRangeFrom",
                        "PymtRefRangeTO"});
            table268.AddRow(new string[] {
                        string.Format("{0}", clientCode1),
                        string.Format("{0}", clientCode2),
                        string.Format("{0}", companyCode1),
                        string.Format("{0}", companyCode2),
                        string.Format("{0}", classCode1),
                        string.Format("{0}", classCode2),
                        string.Format("{0}", regCode1),
                        string.Format("{0}", regCode2),
                        string.Format("{0}", trdCntrlCode1),
                        string.Format("{0}", trdCntrlCode2),
                        string.Format("{0}", trdCntrlCode3),
                        string.Format("{0}", reportNonCurrent),
                        string.Format("{0}", trdType),
                        string.Format("{0}", realTimeTrdInd),
                        string.Format("{0}", trdOrdStatus1),
                        string.Format("{0}", trdOrdStatus2),
                        string.Format("{0}", cutOffDateFrom),
                        string.Format("{0}", cutOffDateTO),
                        string.Format("{0}", trdDateFrom),
                        string.Format("{0}", trdDateTO),
                        string.Format("{0}", stlDateFrom),
                        string.Format("{0}", stlDateTO),
                        string.Format("{0}", ordNumFrom),
                        string.Format("{0}", ordNumTO),
                        string.Format("{0}", finalPriceFrom),
                        string.Format("{0}", finalPriceTO),
                        string.Format("{0}", totUnitRangeFrom),
                        string.Format("{0}", totUnitRangeTO),
                        string.Format("{0}", totMnyRangeFrom),
                        string.Format("{0}", totMnyRangeTO),
                        string.Format("{0}", tranNumRangeFrom),
                        string.Format("{0}", tranNumRangeTO),
                        string.Format("{0}", pymtRefRangeFrom),
                        string.Format("{0}", pymtRefRangeTO)});
#line 1545
  testRunner.And("In TRDRSP01 I continue with the following details:", ((string)(null)), table268, "And ");
#line hidden
            TechTalk.SpecFlow.Table table269 = new TechTalk.SpecFlow.Table(new string[] {
                        "OrderType",
                        "LimitPriceFrom",
                        "LimitPriceTO",
                        "OrdDurationType",
                        "OrmsOrderStatus1",
                        "OrmsOrderStatus2",
                        "DateOrderSentFrom",
                        "DateOrderSentTo",
                        "BrokerCode",
                        "BrokerAccount",
                        "RecnCode",
                        "PayAccount1",
                        "PayAccount2",
                        "ChgPaidBY1",
                        "ChgPaidBY2",
                        "ChgType1",
                        "ChgType2",
                        "PaymentMethod1",
                        "PaymentMethod2",
                        "PymtCurrCode1",
                        "PymtCurrCode2",
                        "ReportFormat",
                        "CertDtlsInd",
                        "ReversedTradeInd"});
            table269.AddRow(new string[] {
                        string.Format("{0}", orderType),
                        string.Format("{0}", limitPriceFrom),
                        string.Format("{0}", limitPriceTO),
                        string.Format("{0}", ordDurationType),
                        string.Format("{0}", ormsOrderStatus1),
                        string.Format("{0}", ormsOrderStatus2),
                        string.Format("{0}", dateOrderSentFrom),
                        string.Format("{0}", dateOrderSentTo),
                        string.Format("{0}", brokerCode),
                        string.Format("{0}", brokerAccount),
                        string.Format("{0}", recnCode),
                        string.Format("{0}", payAccount1),
                        string.Format("{0}", payAccount2),
                        string.Format("{0}", chgPaidBY1),
                        string.Format("{0}", chgPaidBY2),
                        string.Format("{0}", chgType1),
                        string.Format("{0}", chgType2),
                        string.Format("{0}", paymentMethod1),
                        string.Format("{0}", paymentMethod2),
                        string.Format("{0}", pymtCurrCode1),
                        string.Format("{0}", pymtCurrCode2),
                        string.Format("{0}", reportFormat),
                        string.Format("{0}", certDtlsInd),
                        string.Format("{0}", reversedTradeInd)});
#line 1548
  testRunner.And("In TRDRSP03 I continue with the following details:", ((string)(null)), table269, "And ");
#line 1551
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table270 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table270.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1552
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table270, "And ");
#line hidden
            TechTalk.SpecFlow.Table table271 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table271.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 1555
  testRunner.Then("I copy output files to local", ((string)(null)), table271, "Then ");
#line 1558
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1559
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Trade_Control_Housekeeping_Report")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSTradeControlHousekeepingReport")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "", "", "", "", "", "", "N", "I", "", "", "", "", "", "", "", "", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "OPT", "", "", "", "", "S", "N", "I", "", "", "", "", "", "", "", "", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "", "", "", "", "", "T", "N", "I", "", "", "", "", "", "", "", "", "", "", "", "", null)]
        public virtual void ESS_Trade_Control_Housekeeping_Report(
                    string reportHeading, 
                    string classCode1, 
                    string classCode2, 
                    string trdCntrlCode1, 
                    string trdCntrlCode2, 
                    string trdCntrlCode3, 
                    string trdType, 
                    string reportNonCurrent, 
                    string reportEventBulks, 
                    string applyTransactions, 
                    string oNMarketTradeInd, 
                    string realTimeTrdInd, 
                    string onlineEntryInd, 
                    string webEntryInd, 
                    string transactionAuditInd, 
                    string reconciliationCode1, 
                    string reconciliationCode2, 
                    string clientCode1, 
                    string clientCode2, 
                    string companyCode1, 
                    string companyCode2, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSTradeControlHousekeepingReport",
                    "NAB2_AUTO_R",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Trade_Control_Housekeeping_Report", @__tags);
#line 1573
this.ScenarioSetup(scenarioInfo);
#line 1574
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1575
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1576
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1577
  testRunner.And("In RSS00101 I click on: \"control reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1578
  testRunner.And("In RSS13000 I click on: \"trading system reporting\" within the Control Reporting M" +
                    "enu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1579
  testRunner.And("In TRDRSP00 I click on: \"trade control housekeeping report\" with in the Trading S" +
                    "ystem Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table272 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClassCode1",
                        "ClassCode2",
                        "TrdCntrlCode1",
                        "TrdCntrlCode2",
                        "TrdCntrlCode3",
                        "TrdType",
                        "ReportNonCurrent",
                        "ReportEventBulks",
                        "ApplyTransactions",
                        "ONMarketTradeInd",
                        "RealTimeTrdInd",
                        "OnlineEntryInd",
                        "WebEntryInd",
                        "TransactionAuditInd",
                        "ReconciliationCode1",
                        "ReconciliationCode2",
                        "ClientCode1",
                        "ClientCode2",
                        "CompanyCode1",
                        "CompanyCode2"});
            table272.AddRow(new string[] {
                        string.Format("{0}", classCode1),
                        string.Format("{0}", classCode2),
                        string.Format("{0}", trdCntrlCode1),
                        string.Format("{0}", trdCntrlCode2),
                        string.Format("{0}", trdCntrlCode3),
                        string.Format("{0}", trdType),
                        string.Format("{0}", reportNonCurrent),
                        string.Format("{0}", reportEventBulks),
                        string.Format("{0}", applyTransactions),
                        string.Format("{0}", oNMarketTradeInd),
                        string.Format("{0}", realTimeTrdInd),
                        string.Format("{0}", onlineEntryInd),
                        string.Format("{0}", webEntryInd),
                        string.Format("{0}", transactionAuditInd),
                        string.Format("{0}", reconciliationCode1),
                        string.Format("{0}", reconciliationCode2),
                        string.Format("{0}", clientCode1),
                        string.Format("{0}", clientCode2),
                        string.Format("{0}", companyCode1),
                        string.Format("{0}", companyCode2)});
#line 1580
  testRunner.And("In TRDRSP12 I continue with the following details:", ((string)(null)), table272, "And ");
#line 1583
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table273 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table273.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1584
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table273, "And ");
#line hidden
            TechTalk.SpecFlow.Table table274 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table274.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 1587
  testRunner.Then("I copy output files to local", ((string)(null)), table274, "Then ");
#line 1590
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1591
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Company_Trade_Control_Housekeeping_Report")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESSCompanyTradeControlHousekeepingReport")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "", "", "", "", "", "", "N", "I", "", "", "", "", "", "", "", "", "", "", "NAB2_AUTO_R", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "", "", "", "", "", "T", "N", "I", "", "", "", "", "", "", "", "", "", "", "NAB2_AUTO_R", "CPU_AUTO_R", null)]
        public virtual void ESS_Company_Trade_Control_Housekeeping_Report(
                    string reportHeading, 
                    string classCode1, 
                    string classCode2, 
                    string trdCntrlCode1, 
                    string trdCntrlCode2, 
                    string trdCntrlCode3, 
                    string trdType, 
                    string reportNonCurrent, 
                    string reportEventBulks, 
                    string applyTransactions, 
                    string oNMarketTradeInd, 
                    string realTimeTrdInd, 
                    string onlineEntryInd, 
                    string webEntryInd, 
                    string transactionAuditInd, 
                    string reconciliationCode1, 
                    string reconciliationCode2, 
                    string clientCode1, 
                    string clientCode2, 
                    string companyCode1, 
                    string companyCode2, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESSCompanyTradeControlHousekeepingReport",
                    "NAB2_AUTO_R",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Company_Trade_Control_Housekeeping_Report", @__tags);
#line 1604
this.ScenarioSetup(scenarioInfo);
#line 1605
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1606
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1607
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1608
  testRunner.And("In RSS00101 I click on: \"control reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1609
  testRunner.And("In RSS13000 I click on: \"trading system reporting\" within the Control Reporting M" +
                    "enu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1610
  testRunner.And("In TRDRSP00 I click on: \"company trade control housekeeping report\" with in the T" +
                    "rading System Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table275 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClassCode1",
                        "ClassCode2",
                        "TrdCntrlCode1",
                        "TrdCntrlCode2",
                        "TrdCntrlCode3",
                        "TrdType",
                        "ReportNonCurrent",
                        "ReportEventBulks",
                        "ApplyTransactions",
                        "ONMarketTradeInd",
                        "RealTimeTrdInd",
                        "OnlineEntryInd",
                        "WebEntryInd",
                        "TransactionAuditInd",
                        "ReconciliationCode1",
                        "ReconciliationCode2",
                        "ClientCode1",
                        "ClientCode2",
                        "CompanyCode1",
                        "CompanyCode2"});
            table275.AddRow(new string[] {
                        string.Format("{0}", classCode1),
                        string.Format("{0}", classCode2),
                        string.Format("{0}", trdCntrlCode1),
                        string.Format("{0}", trdCntrlCode2),
                        string.Format("{0}", trdCntrlCode3),
                        string.Format("{0}", trdType),
                        string.Format("{0}", reportNonCurrent),
                        string.Format("{0}", reportEventBulks),
                        string.Format("{0}", applyTransactions),
                        string.Format("{0}", oNMarketTradeInd),
                        string.Format("{0}", realTimeTrdInd),
                        string.Format("{0}", onlineEntryInd),
                        string.Format("{0}", webEntryInd),
                        string.Format("{0}", transactionAuditInd),
                        string.Format("{0}", reconciliationCode1),
                        string.Format("{0}", reconciliationCode2),
                        string.Format("{0}", clientCode1),
                        string.Format("{0}", clientCode2),
                        string.Format("{0}", companyCode1),
                        string.Format("{0}", companyCode2)});
#line 1611
  testRunner.And("In TRDRSP12 I continue with the following details:", ((string)(null)), table275, "And ");
#line 1614
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table276 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table276.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1615
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table276, "And ");
#line hidden
            TechTalk.SpecFlow.Table table277 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table277.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 1618
  testRunner.Then("I copy output files to local", ((string)(null)), table277, "Then ");
#line 1621
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1622
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Commission_Code_Housekeeping_Report")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESScommissioncodehousekeepingreport")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "", "", "", "N", "", "", "", "N", "", "", "", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "C2UK", "C3UK", "C4UK", "N", "", "", "", "N", "", "", "", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "", "", "", "N", "B", "", "", "N", "", "", "", "", "", "", "", null)]
        public virtual void ESS_Commission_Code_Housekeeping_Report(
                    string reportHeading, 
                    string commChgCode1, 
                    string commChgCode2, 
                    string commChgCode3, 
                    string reportMasterCodes, 
                    string commChgTypes1, 
                    string commChgTypes2, 
                    string commChgTypes3, 
                    string testChargeCodesInd, 
                    string testCalcDealInput, 
                    string testCalcBulkInput, 
                    string testCalcUnitInput, 
                    string clientCode1, 
                    string clientCode2, 
                    string companyCode1, 
                    string companyCode2, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESScommissioncodehousekeepingreport",
                    "NAB2_AUTO_R",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Commission_Code_Housekeeping_Report", @__tags);
#line 1634
this.ScenarioSetup(scenarioInfo);
#line 1635
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1636
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1637
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1638
  testRunner.And("In RSS00101 I click on: \"control reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1639
  testRunner.And("In RSS13000 I click on: \"trading system reporting\" within the Control Reporting M" +
                    "enu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1640
  testRunner.And("In TRDRSP00 I click on: \"commission code housekeeping report\" with in the Trading" +
                    " System Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table278 = new TechTalk.SpecFlow.Table(new string[] {
                        "CommChgCode1",
                        "CommChgCode2",
                        "CommChgCode3",
                        "ReportMasterCodes",
                        "CommChgTypes1",
                        "CommChgTypes2",
                        "CommChgTypes3",
                        "TestChargeCodesInd",
                        "TestCalcDealInput",
                        "TestCalcBulkInput",
                        "TestCalcUnitInput",
                        "ClientCode1",
                        "ClientCode2",
                        "CompanyCode1",
                        "CompanyCode2"});
            table278.AddRow(new string[] {
                        string.Format("{0}", commChgCode1),
                        string.Format("{0}", commChgCode2),
                        string.Format("{0}", commChgCode3),
                        string.Format("{0}", reportMasterCodes),
                        string.Format("{0}", commChgTypes1),
                        string.Format("{0}", commChgTypes2),
                        string.Format("{0}", commChgTypes3),
                        string.Format("{0}", testChargeCodesInd),
                        string.Format("{0}", testCalcDealInput),
                        string.Format("{0}", testCalcBulkInput),
                        string.Format("{0}", testCalcUnitInput),
                        string.Format("{0}", clientCode1),
                        string.Format("{0}", clientCode2),
                        string.Format("{0}", companyCode1),
                        string.Format("{0}", companyCode2)});
#line 1641
  testRunner.And("In TRDRSP13 I continue with the following details:", ((string)(null)), table278, "And ");
#line 1644
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table279 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table279.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1645
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table279, "And ");
#line hidden
            TechTalk.SpecFlow.Table table280 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table280.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 1648
  testRunner.Then("I copy output files to local", ((string)(null)), table280, "Then ");
#line 1651
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1652
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Company_Commission_Code_Housekeeping_Report")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESScompanycommissioncodehousekeepingreport")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "", "", "", "N", "", "", "", "N", "", "", "", "", "", "CPU_AUTO_R", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "CBNK", "CBNZ", "CBPB", "N", "", "", "", "N", "", "", "", "", "", "CPU_AUTO_R", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "", "", "", "N", "B", "C", "", "N", "", "", "", "", "", "CPU_AUTO_R", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test4", "", "", "", "N", "C", "", "", "N", "", "", "", "", "", "CPU_AUTO_R", "NAB2_AUTO_R", null)]
        public virtual void ESS_Company_Commission_Code_Housekeeping_Report(
                    string reportHeading, 
                    string commChgCode1, 
                    string commChgCode2, 
                    string commChgCode3, 
                    string reportMasterCodes, 
                    string commChgTypes1, 
                    string commChgTypes2, 
                    string commChgTypes3, 
                    string testChargeCodesInd, 
                    string testCalcDealInput, 
                    string testCalcBulkInput, 
                    string testCalcUnitInput, 
                    string clientCode1, 
                    string clientCode2, 
                    string companyCode1, 
                    string companyCode2, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESScompanycommissioncodehousekeepingreport",
                    "NAB2_AUTO_R",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Company_Commission_Code_Housekeeping_Report", @__tags);
#line 1665
this.ScenarioSetup(scenarioInfo);
#line 1666
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1667
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO_R\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1668
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1669
  testRunner.And("In RSS00101 I click on: \"control reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1670
  testRunner.And("In RSS13000 I click on: \"trading system reporting\" within the Control Reporting M" +
                    "enu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1671
  testRunner.And("In TRDRSP00 I click on: \"company commission code housekeeping report\" with in the" +
                    " Trading System Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table281 = new TechTalk.SpecFlow.Table(new string[] {
                        "CommChgCode1",
                        "CommChgCode2",
                        "CommChgCode3",
                        "ReportMasterCodes",
                        "CommChgTypes1",
                        "CommChgTypes2",
                        "CommChgTypes3",
                        "TestChargeCodesInd",
                        "TestCalcDealInput",
                        "TestCalcBulkInput",
                        "TestCalcUnitInput",
                        "ClientCode1",
                        "ClientCode2",
                        "CompanyCode1",
                        "CompanyCode2"});
            table281.AddRow(new string[] {
                        string.Format("{0}", commChgCode1),
                        string.Format("{0}", commChgCode2),
                        string.Format("{0}", commChgCode3),
                        string.Format("{0}", reportMasterCodes),
                        string.Format("{0}", commChgTypes1),
                        string.Format("{0}", commChgTypes2),
                        string.Format("{0}", commChgTypes3),
                        string.Format("{0}", testChargeCodesInd),
                        string.Format("{0}", testCalcDealInput),
                        string.Format("{0}", testCalcBulkInput),
                        string.Format("{0}", testCalcUnitInput),
                        string.Format("{0}", clientCode1),
                        string.Format("{0}", clientCode2),
                        string.Format("{0}", companyCode1),
                        string.Format("{0}", companyCode2)});
#line 1672
  testRunner.And("In TRDRSP13 I continue with the following details:", ((string)(null)), table281, "And ");
#line 1675
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table282 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table282.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1676
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table282, "And ");
#line hidden
            TechTalk.SpecFlow.Table table283 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table283.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 1679
  testRunner.Then("I copy output files to local", ((string)(null)), table283, "Then ");
#line 1682
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1683
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ESS_Employee_Extract_Report_Goldcopy_Detail")]
        [NUnit.Framework.CategoryAttribute("ReportGoldcopyESS")]
        [NUnit.Framework.CategoryAttribute("ESS_EmployeeExtractReport_Gold")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO_R")]
        [NUnit.Framework.CategoryAttribute("42419")]
        [NUnit.Framework.CategoryAttribute("ReportingGold")]
        [NUnit.Framework.TestCaseAttribute("Test1", "CPU_AUTO_R", "N", "", "", "", "", "", "Y", "Y", "Y", "Y", "M", "Y", "Y", "M", "Y", "Y", "M", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "M", "Y", "Y", "Y", "Y", "Y", "Y", "", "", "", "", "", "", "99999999999", "N", "", "", "", "", "", "", "S", ",", "Y", "", "A", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "CPU_AUTO_R", "N", "", "", "", "", "", "Y", "Y", "Y", "Y", "M", "Y", "Y", "M", "Y", "Y", "M", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "M", "Y", "Y", "Y", "Y", "Y", "Y", "", "", "", "", "", "", "99999999999", "Y", "", "", "", "", "", "", "S", ",", "Y", "", "A", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "CPU_AUTO_R", "N", "", "", "", "", "", "Y", "Y", "Y", "Y", "M", "Y", "Y", "M", "Y", "Y", "M", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "M", "Y", "Y", "Y", "Y", "Y", "Y", "", "", "", "", "", "", "99999999999", "Y", "", "", "", "", "01/01/2012", "01/01/2015", "S", ",", "Y", "", "A", null)]
        [NUnit.Framework.TestCaseAttribute("Test4", "QBE_AUTO_R", "N", "", "", "", "", "", "Y", "Y", "Y", "Y", "M", "Y", "Y", "M", "Y", "Y", "M", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "M", "Y", "Y", "Y", "Y", "Y", "Y", "", "", "", "", "", "", "99999999999", "N", "", "", "", "", "", "", "S", ",", "Y", "", "A", null)]
        public virtual void ESS_Employee_Extract_Report_Goldcopy_Detail(
                    string reportHeading, 
                    string company, 
                    string preload, 
                    string wildString, 
                    string empStatus1, 
                    string empStatus2, 
                    string leaverCode1, 
                    string leaverCode2, 
                    string holderIdentifier, 
                    string holderCat, 
                    string holderNumber, 
                    string regAddress, 
                    string regAddrCase, 
                    string holderName, 
                    string fullnames, 
                    string caseFull, 
                    string formattedFull, 
                    string nameDetailed, 
                    string caseDetailed, 
                    string surname, 
                    string firstName, 
                    string secondName, 
                    string thirdName, 
                    string title, 
                    string initials, 
                    string designator, 
                    string nameKey, 
                    string nameType, 
                    string holderAddress, 
                    string holderAddressCase, 
                    string includePcode, 
                    string pcodeDomicile, 
                    string dpid, 
                    string barcode, 
                    string alternateID, 
                    string ers01010PersonalUrl, 
                    string selcls1, 
                    string selcls2, 
                    string selgrp1, 
                    string selgrp2, 
                    string exd1, 
                    string unitBalanceFrom, 
                    string unitBalanceTO, 
                    string holderTotalsOnly, 
                    string selgrp3, 
                    string selgrp4, 
                    string selgrp5, 
                    string selgrp6, 
                    string transDateFrom, 
                    string transDateTO, 
                    string select, 
                    string fieldSeparator, 
                    string textDelimiterReq, 
                    string reportDate, 
                    string reportSeq, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ReportGoldcopyESS",
                    "ESS_EmployeeExtractReport_Gold",
                    "CPU_AUTO_R",
                    "42419",
                    "ReportingGold"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ESS_Employee_Extract_Report_Goldcopy_Detail", @__tags);
#line 1698
this.ScenarioSetup(scenarioInfo);
#line 1699
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1700
 testRunner.When(string.Format("In SELCOY01 I select the company: \"{0}\"", company), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1701
  testRunner.And("In MNS00101 I click on: \"reporting system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1702
  testRunner.And("In RSS00101 I click on: \"ess reporting\" within the Reporting System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1703
  testRunner.And("In ERS00100 I click on: \"employee extract report\" within the ESS Reporting Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table284 = new TechTalk.SpecFlow.Table(new string[] {
                        "Preload",
                        "WildString"});
            table284.AddRow(new string[] {
                        string.Format("{0}", preload),
                        string.Format("{0}", wildString)});
#line 1704
  testRunner.And("In ERS01001 I continue with the following details:", ((string)(null)), table284, "And ");
#line hidden
            TechTalk.SpecFlow.Table table285 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmpStatus1",
                        "EmpStatus2",
                        "LeaverCode1",
                        "LeaverCode2"});
            table285.AddRow(new string[] {
                        string.Format("{0}", empStatus1),
                        string.Format("{0}", empStatus2),
                        string.Format("{0}", leaverCode1),
                        string.Format("{0}", leaverCode2)});
#line 1707
  testRunner.And("In ERS01002 I continue with the following details:", ((string)(null)), table285, "And ");
#line hidden
            TechTalk.SpecFlow.Table table286 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier",
                        "HolderCat",
                        "HolderNumber",
                        "RegAddress",
                        "RegAddrCase",
                        "HolderName",
                        "Fullnames",
                        "CaseFull",
                        "FormattedFull",
                        "NameDetailed",
                        "CaseDetailed",
                        "Surname",
                        "FirstName",
                        "SecondName",
                        "ThirdName",
                        "Title",
                        "Initials",
                        "Designator",
                        "NameKey",
                        "NameType",
                        "HolderAddress",
                        "HolderAddressCase",
                        "IncludePcode",
                        "PcodeDomicile",
                        "Dpid",
                        "Barcode",
                        "AlternateID",
                        "Ers01010PersonalUrl"});
            table286.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier),
                        string.Format("{0}", holderCat),
                        string.Format("{0}", holderNumber),
                        string.Format("{0}", regAddress),
                        string.Format("{0}", regAddrCase),
                        string.Format("{0}", holderName),
                        string.Format("{0}", fullnames),
                        string.Format("{0}", caseFull),
                        string.Format("{0}", formattedFull),
                        string.Format("{0}", nameDetailed),
                        string.Format("{0}", caseDetailed),
                        string.Format("{0}", surname),
                        string.Format("{0}", firstName),
                        string.Format("{0}", secondName),
                        string.Format("{0}", thirdName),
                        string.Format("{0}", title),
                        string.Format("{0}", initials),
                        string.Format("{0}", designator),
                        string.Format("{0}", nameKey),
                        string.Format("{0}", nameType),
                        string.Format("{0}", holderAddress),
                        string.Format("{0}", holderAddressCase),
                        string.Format("{0}", includePcode),
                        string.Format("{0}", pcodeDomicile),
                        string.Format("{0}", dpid),
                        string.Format("{0}", barcode),
                        string.Format("{0}", alternateID),
                        string.Format("{0}", ers01010PersonalUrl)});
#line 1710
  testRunner.And("In ERS01010 I continue with the following values:", ((string)(null)), table286, "And ");
#line hidden
            TechTalk.SpecFlow.Table table287 = new TechTalk.SpecFlow.Table(new string[] {
                        "StaticDetails"});
            table287.AddRow(new string[] {
                        "N"});
#line 1713
  testRunner.And("In ERS01011 I continue with the following details:", ((string)(null)), table287, "And ");
#line hidden
            TechTalk.SpecFlow.Table table288 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraIdentifier",
                        "HomePhone",
                        "WorkPhone",
                        "FaxNumber",
                        "MobilePhone",
                        "EmailAddress",
                        "ReturnedEmail"});
            table288.AddRow(new string[] {
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y"});
#line 1716
  testRunner.And("In ERS01012 I continue with the following Values:", ((string)(null)), table288, "And ");
#line hidden
            TechTalk.SpecFlow.Table table289 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderStatus",
                        "DeceasedFlag",
                        "ExceptionFlag",
                        "StopTradeFlag",
                        "DivIntentionFlag",
                        "VariableFlags",
                        "VariableField",
                        "TfnDescription",
                        "Dates",
                        "MailUnclaimedDate",
                        "HolderONDate",
                        "HolderOffDate",
                        "HolderAddedDate",
                        "PlanDetails",
                        "DrpDetails",
                        "DrpPlanDesc",
                        "BspDetails",
                        "BspPlanDesc",
                        "DirectCredit",
                        "BankID",
                        "BankNamadd",
                        "BankAccountNbr",
                        "BankAccountName"});
            table289.AddRow(new string[] {
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "FP DRP",
                        "N",
                        "N",
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y"});
#line 1719
  testRunner.And("In ERS01028 I continue with the following Values:", ((string)(null)), table289, "And ");
#line hidden
            TechTalk.SpecFlow.Table table290 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selcls1",
                        "Selcls2",
                        "Selgrp1",
                        "Selgrp2",
                        "Exd1",
                        "UnitBalanceFrom",
                        "UnitBalanceTO",
                        "HolderTotalsOnly",
                        "Selgrp3",
                        "Selgrp4",
                        "Selgrp5",
                        "Selgrp6",
                        "TransDateFrom",
                        "TransDateTO"});
            table290.AddRow(new string[] {
                        string.Format("{0}", selcls1),
                        string.Format("{0}", selcls2),
                        string.Format("{0}", selgrp1),
                        string.Format("{0}", selgrp2),
                        string.Format("{0}", exd1),
                        string.Format("{0}", unitBalanceFrom),
                        string.Format("{0}", unitBalanceTO),
                        string.Format("{0}", holderTotalsOnly),
                        string.Format("{0}", selgrp3),
                        string.Format("{0}", selgrp4),
                        string.Format("{0}", selgrp5),
                        string.Format("{0}", selgrp6),
                        string.Format("{0}", transDateFrom),
                        string.Format("{0}", transDateTO)});
#line 1722
  testRunner.And("In ERS01013 I continue with the following details:", ((string)(null)), table290, "And ");
#line hidden
            TechTalk.SpecFlow.Table table291 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClassCode",
                        "RegisterCode",
                        "RegisterType",
                        "AwardDate",
                        "ResidualXferDate",
                        "ResidualXferDate",
                        "ResidualXferAmount",
                        "HoldingEndDate",
                        "TaxEndDate",
                        "Ers01016ForfEndDate",
                        "Vwap",
                        "ShareCost",
                        "CurrentBalance",
                        "OriginalBalance",
                        "TotalCost",
                        "Usan",
                        "SavingsAmount",
                        "TotalSavings",
                        "PaymentFrequency",
                        "Residue",
                        "TaxAssessed",
                        "TerminationInd"});
            table291.AddRow(new string[] {
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y",
                        "Y"});
#line 1725
  testRunner.And("In ERS01016 I continue with the following details:", ((string)(null)), table291, "And ");
#line hidden
            TechTalk.SpecFlow.Table table292 = new TechTalk.SpecFlow.Table(new string[] {
                        "Select",
                        "FieldSeparator",
                        "TextDelimiterReq"});
            table292.AddRow(new string[] {
                        string.Format("{0}", select),
                        string.Format("{0}", fieldSeparator),
                        string.Format("{0}", textDelimiterReq)});
#line 1728
  testRunner.And("In ERS01017 I continue with the following details:", ((string)(null)), table292, "And ");
#line hidden
            TechTalk.SpecFlow.Table table293 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportDate",
                        "ReportSeq"});
            table293.AddRow(new string[] {
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSeq)});
#line 1731
  testRunner.And("In ERS01003 I continue with the following details:", ((string)(null)), table293, "And ");
#line 1734
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table294 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table294.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1735
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table294, "And ");
#line hidden
            TechTalk.SpecFlow.Table table295 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "FileName"});
            table295.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        ""});
#line 1738
  testRunner.Then("I copy output files to local", ((string)(null)), table295, "Then ");
#line 1741
  testRunner.And("I parse the files from VMS or Linux", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1742
  testRunner.And("I compare the files from VMS and Linux goldcopy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
