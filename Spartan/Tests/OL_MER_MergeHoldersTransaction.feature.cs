// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SCRIPAU.Automation.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("OL_MER_MergeHoldersTransaction")]
    public partial class OL_MER_MergeHoldersTransactionFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "OL_MER_MergeHoldersTransaction.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "OL_MER_MergeHoldersTransaction", "Ensure MER. Merge Holders Transaction functionality covered", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Holder Merge")]
        [NUnit.Framework.CategoryAttribute("Bug")]
        [NUnit.Framework.CategoryAttribute("OL_MER_MergeHoldersTransaction")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("MergeHolder")]
        public virtual void HolderMerge()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Holder Merge", new string[] {
                        "Bug",
                        "OL_MER_MergeHoldersTransaction",
                        "CPU_AUTO",
                        "MergeHolder"});
#line 9
this.ScenarioSetup(scenarioInfo);
#line 11
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 12
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
  testRunner.And("I Go to Merge Holder Transaction Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
  testRunner.And("I select \"MERGE\" Transaction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "Tran No",
                        "158"});
            table1.AddRow(new string[] {
                        "From Holder",
                        "I0100007592"});
            table1.AddRow(new string[] {
                        "To Holder",
                        "I0100007690"});
#line 15
 testRunner.When("I merge holder as below:", ((string)(null)), table1, "When ");
#line 20
 testRunner.When("I go to the Enquiry system for \"I0100007690\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "Transaction Code",
                        "MRGTO"});
            table2.AddRow(new string[] {
                        "Transaction Desc",
                        "MERGED HOLDER TO"});
            table2.AddRow(new string[] {
                        "Reference",
                        "I0100007592"});
            table2.AddRow(new string[] {
                        "Source",
                        "WINFRM"});
#line 21
 testRunner.Then("In ENS01034 I should see Static History for holder \"I0100007690\" as below:", ((string)(null)), table2, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "Action",
                        "S"});
            table3.AddRow(new string[] {
                        "Locate Argument",
                        "I0100007592"});
#line 27
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table3, "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table4.AddRow(new string[] {
                        "From HIN",
                        "I0100007592"});
            table4.AddRow(new string[] {
                        "Note",
                        "<* Merged on 22 Apr 2015    *>"});
#line 31
 testRunner.Then("In ENS01001 I should see the holder Details as below:", ((string)(null)), table4, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table5.AddRow(new string[] {
                        "Action",
                        "PD"});
            table5.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 35
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table5, "When ");
#line 39
  testRunner.Then("I expect to see error with text \"There are no payment details for this holder.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
