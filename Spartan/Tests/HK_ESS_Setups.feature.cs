// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SCRIPAU.Automation.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("HK_ESS_Setups")]
    public partial class HK_ESS_SetupsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "HK_ESS_Setups.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "HK_ESS_Setups", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 28329: AESS Plan Setup -[Add/View]")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("HK_ESS_Setups")]
        [NUnit.Framework.CategoryAttribute("28329")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        [NUnit.Framework.TestCaseAttribute("Deferred", "NAB2_AUTO", "DEP", "A", "DEP AUTOMATION TEST", "ORD", "AUS", "T", "I0035246321", "I0035505393", "Y", "", "V", "D", "99999999", "L", "Y", "I", "DRP", "4", "Y", "65", null)]
        [NUnit.Framework.TestCaseAttribute("Exempt", "NAB2_AUTO", "EXA", "A", "EXE AUTOMATION TEST", "ORD", "AUS", "T", "I0035509801", "I0035611576", "Y", "", "V", "X", "99999999", "L", "Y", "I", "DRP", "4", "Y", "65", null)]
        public virtual void TestCase28329AESSPlanSetup_AddView(
                    string plan, 
                    string cOY, 
                    string classCode, 
                    string schemeType, 
                    string classDescription, 
                    string finalSecurity, 
                    string countryOFTaxation, 
                    string planType, 
                    string trusteeAccountID, 
                    string unapAccountID, 
                    string blkoutPeriodInd, 
                    string matchWorkingClass, 
                    string marketValueInd, 
                    string taxTypeInd, 
                    string singleCert, 
                    string forfeitureType, 
                    string autoForfeit, 
                    string divReinvestment, 
                    string planConcept, 
                    string planCategory, 
                    string leaverPackInd, 
                    string retirementAge, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "HK_ESS_Setups",
                    "28329",
                    "NAB2_AUTO",
                    "FullSmokeTest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 28329: AESS Plan Setup -[Add/View]", @__tags);
#line 8
this.ScenarioSetup(scenarioInfo);
#line 10
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 11
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
  testRunner.And("I go to ESS \"Plan Setup\" Option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
  testRunner.And(string.Format("In EHK01002 I Add Plan Setup Details as \"{0}\" \"{1}\" \"{2}\"", classCode, schemeType, classDescription), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
  testRunner.And(string.Format("In EHK01003 I Add ESS Plan Steup Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"" +
                        "{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"", finalSecurity, countryOFTaxation, planType, trusteeAccountID, unapAccountID, blkoutPeriodInd, matchWorkingClass, marketValueInd, taxTypeInd, singleCert, forfeitureType, autoForfeit, divReinvestment, planConcept, planCategory, leaverPackInd, retirementAge), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 28332: Executive Option Plan Setup -[Add/View]")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("HK_ESS_Setups")]
        [NUnit.Framework.CategoryAttribute("28332")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.TestCaseAttribute("Options", "NAB2_AUTO", "OP1", "E", "OP1 AUTOMATION TEST", "ORD", "AUS", "N", "I0035611584", "I0035683631", "N", "V", "N", "N", "N", "N", "Y", "N", null)]
        [NUnit.Framework.TestCaseAttribute("Rights", "NAB2_AUTO", "OP2", "E", "OP2 AUTOMATION TEST", "ORD", "AUS", "N", "I0035683640", "I0035683658", "N", "V", "Y", "Y", "N", "N", "Y", "N", null)]
        public virtual void TestCase28332ExecutiveOptionPlanSetup_AddView(
                    string plan, 
                    string cOY, 
                    string classCode, 
                    string schemeType, 
                    string classDescription, 
                    string finalSecurity, 
                    string countryOFTaxation, 
                    string planType, 
                    string trusteeAccountID, 
                    string unapAccountID, 
                    string blkoutPeriodInd, 
                    string marketValueInd, 
                    string nilCostOptionInd, 
                    string phantomOptionInd, 
                    string oNMktPurchInd, 
                    string vsaXferAllowedInd, 
                    string leaverPackInd, 
                    string expiryNoticeINUrr, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "HK_ESS_Setups",
                    "28332",
                    "NAB2_AUTO"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 28332: Executive Option Plan Setup -[Add/View]", @__tags);
#line 25
this.ScenarioSetup(scenarioInfo);
#line 27
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 28
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
  testRunner.And("I go to ESS \"Plan Setup\" Option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
  testRunner.And(string.Format("In EHK01002 I Add Plan Setup Details as \"{0}\" \"{1}\" \"{2}\"", classCode, schemeType, classDescription), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
  testRunner.And(string.Format("In EHK01005 I Add Executive Options Plan Steup Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\"" +
                        " \"{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\"", finalSecurity, countryOFTaxation, planType, trusteeAccountID, unapAccountID, blkoutPeriodInd, marketValueInd, nilCostOptionInd, phantomOptionInd, oNMktPurchInd, vsaXferAllowedInd, leaverPackInd, expiryNoticeINUrr), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 28331: Loan Plan Setup -[Add/View]")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("HK_ESS_Setups")]
        [NUnit.Framework.CategoryAttribute("28331")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.TestCaseAttribute("Loan", "NAB2_AUTO", "LON", "L", "LON AUTOMATION TEST", "ORD", "AUS", "N", "I0035683674", "I0035683682", "Y", "Y", "009", "V", "D", "C", "A", "", "", "", "Y", null)]
        public virtual void TestCase28331LoanPlanSetup_AddView(
                    string plan, 
                    string cOY, 
                    string classCode, 
                    string schemeType, 
                    string classDescription, 
                    string finalSecurity, 
                    string countryOFTaxation, 
                    string planType, 
                    string trusteeAccountID, 
                    string unapAccountID, 
                    string blkoutPeriodInd, 
                    string useBlkoutCodeInd, 
                    string blkoutCode, 
                    string marketValueInd, 
                    string paymentType1, 
                    string paymentType2, 
                    string paymentType3, 
                    string loanDividendOption, 
                    string maxLimitAmount, 
                    string limitType, 
                    string leaverPackInd, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "HK_ESS_Setups",
                    "28331",
                    "NAB2_AUTO"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 28331: Loan Plan Setup -[Add/View]", @__tags);
#line 42
this.ScenarioSetup(scenarioInfo);
#line 44
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 45
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 46
  testRunner.And("I go to ESS \"Plan Setup\" Option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
  testRunner.And(string.Format("In EHK01002 I Add Plan Setup Details as \"{0}\" \"{1}\" \"{2}\"", classCode, schemeType, classDescription), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
  testRunner.And(string.Format("In EHK01004 I Add Loan Plan Steup Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" " +
                        "\"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\"", finalSecurity, countryOFTaxation, planType, trusteeAccountID, unapAccountID, blkoutPeriodInd, useBlkoutCodeInd, blkoutCode, marketValueInd, paymentType1, paymentType2, paymentType3, loanDividendOption, maxLimitAmount, limitType, leaverPackInd), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 28461: AESS Award Setup (EB) -[Add/View]")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("HK_ESS_Setups")]
        [NUnit.Framework.CategoryAttribute("28461")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.TestCaseAttribute("EB", "NAB2_AUTO", "B", "12A", "12A AUTOMATION TEST", "N", "12", "0", "12", "0", "", "D", "D", "M", "Y", "AUD", "N", "N", "N", "Y", "D", "GN3", "L", "", "", "", "12", "", "100", "N", null)]
        public virtual void TestCase28461AESSAwardSetupEB_AddView(
                    string register, 
                    string cOY, 
                    string registerType2, 
                    string registerCode, 
                    string registerDescription, 
                    string usingIndDatesInd, 
                    string retentionPeriod, 
                    string retentionPeriodDays, 
                    string taxRetentionPeriod, 
                    string taxRetentionPerDays, 
                    string firstAwardDate, 
                    string unitRounding, 
                    string moneyRounding, 
                    string releaseOption1, 
                    string calculateTaxInd, 
                    string baseCurrency, 
                    string usingMatchingInd, 
                    string usingUnmatchedInd, 
                    string matchingUpfrontInd, 
                    string taxReportableInd, 
                    string taxStmtTypeInd, 
                    string leaverSchedule, 
                    string forfeitureType, 
                    string forfProRataMethod, 
                    string forfPeriodFrom1, 
                    string forfPerFromDays, 
                    string forfPeriodTO, 
                    string forfPerTODays, 
                    string forfPercentage, 
                    string savingsCarrierInd, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "HK_ESS_Setups",
                    "28461",
                    "NAB2_AUTO"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 28461: AESS Award Setup (EB) -[Add/View]", @__tags);
#line 58
this.ScenarioSetup(scenarioInfo);
#line 59
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 60
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 61
  testRunner.And("I go to ESS \"award setup\" Option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
  testRunner.And("In EHK010MN I Select \"ATS\" Plan", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
  testRunner.And(string.Format("In EHK01008 I Add Award Setup Details as \"{0}\"", registerType2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
  testRunner.And(string.Format("In EHK01007 I Add ESS Award Setup Details1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\"" +
                        " \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\"", registerCode, registerDescription, usingIndDatesInd, retentionPeriod, retentionPeriodDays, taxRetentionPeriod, taxRetentionPerDays, firstAwardDate, unitRounding, moneyRounding, releaseOption1, calculateTaxInd, baseCurrency, usingMatchingInd, usingUnmatchedInd, matchingUpfrontInd), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
  testRunner.And(string.Format("In EHK01007 I Add ESS Award Setup Details2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\"" +
                        " \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\"", taxReportableInd, taxStmtTypeInd, leaverSchedule, forfeitureType, forfProRataMethod, forfPeriodFrom1, forfPerFromDays, forfPeriodTO, forfPerTODays, forfPercentage, savingsCarrierInd), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 28502: Options Award Setup (EE) -[Add/View]")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("HK_ESS_Setups")]
        [NUnit.Framework.CategoryAttribute("28502")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        [NUnit.Framework.TestCaseAttribute("EE", "NAB2_AUTO", "12A", "12A AUTOMATION TEST", "95", "27", "Y", "D", "D", "", "Y", "AUD", "Y", "", "", "EE", "Y", "GEN", null)]
        public virtual void TestCase28502OptionsAwardSetupEE_AddView(
                    string register, 
                    string cOY, 
                    string registerCode, 
                    string registerDescription, 
                    string expiresAfterMonths, 
                    string expiresAfterDays, 
                    string usingVestingInd, 
                    string unitRounding, 
                    string moneyRounding, 
                    string releaseOption1, 
                    string calculateTaxInd, 
                    string baseCurrency, 
                    string minMaxType, 
                    string minMoneyAmt, 
                    string maxMoneyAmt, 
                    string registerType, 
                    string taxReportableInd, 
                    string leaverSchedule, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "HK_ESS_Setups",
                    "28502",
                    "NAB2_AUTO",
                    "FullSmokeTest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 28502: Options Award Setup (EE) -[Add/View]", @__tags);
#line 76
this.ScenarioSetup(scenarioInfo);
#line 77
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 78
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 79
  testRunner.And("I go to ESS \"award setup\" Option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
  testRunner.And("In EHK010MN I Select \"OPT\" Plan", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
  testRunner.And(string.Format("In EHK01006 I Add Award Setup Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}" +
                        "\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\"", registerCode, registerDescription, expiresAfterMonths, expiresAfterDays, usingVestingInd, unitRounding, moneyRounding, releaseOption1, calculateTaxInd, baseCurrency, minMaxType, minMoneyAmt, maxMoneyAmt, registerType, taxReportableInd, leaverSchedule), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 28905: Loan Award Setup (ER) -[Add/View]")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("HK_ESS_Setups")]
        [NUnit.Framework.CategoryAttribute("28905")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.TestCaseAttribute("ER", "NAB2_AUTO", "12A", "12A AUTOMATION TEST", "N", "300", "", "250", "1", "0.00", "999999.99", "ELA97", "N", "D", "", "R", "AUD", "Y", "GEN", null)]
        public virtual void TestCase28905LoanAwardSetupER_AddView(
                    string register, 
                    string cOY, 
                    string registerCode, 
                    string registerDescription, 
                    string usingIndDatesInd, 
                    string termINMonths, 
                    string termINDays, 
                    string retentionPeriod, 
                    string retentionPeriodDays, 
                    string minAmount, 
                    string maxAmount, 
                    string paymentAccount, 
                    string recourseInd, 
                    string moneyRounding, 
                    string releaseOption1, 
                    string statusType1, 
                    string baseCurrency, 
                    string taxReportableInd, 
                    string leaverSchedule, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "HK_ESS_Setups",
                    "28905",
                    "NAB2_AUTO"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 28905: Loan Award Setup (ER) -[Add/View]", @__tags);
#line 91
this.ScenarioSetup(scenarioInfo);
#line 92
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 93
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 94
  testRunner.And("I go to ESS \"award setup\" Option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
  testRunner.And("In EHK010MN I Select \"ELA\" Plan", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
  testRunner.And(string.Format("In EHK01009 I Add Award Setup Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}" +
                        "\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"", registerCode, registerDescription, usingIndDatesInd, termINMonths, termINDays, retentionPeriod, retentionPeriodDays, minAmount, maxAmount, paymentAccount, recourseInd, moneyRounding, releaseOption1, statusType1, baseCurrency, taxReportableInd, leaverSchedule), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 28908: AESS & Loan Plan Control Setup -[Add/View]")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("HK_ESS_Setups")]
        [NUnit.Framework.CategoryAttribute("28908")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.TestCaseAttribute("AESS", "NAB2_AUTO", "ATS", "11C", "22/11/2011", "33.230000", "", "N", "B", "R", "Y", "Y", null)]
        [NUnit.Framework.TestCaseAttribute("Loan", "NAB2_AUTO", "ELA", "11C", "22/11/2011", "33.230000", "", "N", "R", "R", "Y", "Y", null)]
        public virtual void TestCase28908AESSLoanPlanControlSetup_AddView(string plan, string cOY, string selection, string registerCode, string startDate, string unitValue, string awardExchangeRate, string savingsCarrierInd, string registerType2, string reportUpdateMode, string enabledDisabledInd, string displayONWebInd, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "HK_ESS_Setups",
                    "28908",
                    "NAB2_AUTO"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 28908: AESS & Loan Plan Control Setup -[Add/View]", @__tags);
#line 106
this.ScenarioSetup(scenarioInfo);
#line 107
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 108
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 109
  testRunner.And("I go to ESS \"control setup\" Option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 110
  testRunner.And(string.Format("In EHK010MN I Select Plan as \"{0}\"", selection), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 111
  testRunner.And(string.Format("In EHK01010 I Add Control Setup as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"{7}" +
                        "\" \"{8}\"", registerCode, startDate, unitValue, awardExchangeRate, savingsCarrierInd, registerType2, reportUpdateMode, enabledDisabledInd, displayONWebInd), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 28909: Options Plan Control Setup -[Add/View]")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("HK_ESS_Setups")]
        [NUnit.Framework.CategoryAttribute("28909")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        [NUnit.Framework.TestCaseAttribute("Options", "NAB2_AUTO", "OPT", "11C", "21/03/2003", "30.460000", "", "", "Y", "E", "R", "Y", "V01", "21/03/2003", "Y", "", null)]
        public virtual void TestCase28909OptionsPlanControlSetup_AddView(
                    string plan, 
                    string cOY, 
                    string selection, 
                    string registerCode, 
                    string startDate, 
                    string unitValue, 
                    string endDate, 
                    string awardExchangeRate, 
                    string displayONWebInd, 
                    string registerType2, 
                    string reportUpdateMode, 
                    string enabledDisabledInd, 
                    string vestingCode, 
                    string vestingStartDate, 
                    string performanceHurdles, 
                    string performanceCode, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "HK_ESS_Setups",
                    "28909",
                    "NAB2_AUTO",
                    "FullSmokeTest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 28909: Options Plan Control Setup -[Add/View]", @__tags);
#line 123
this.ScenarioSetup(scenarioInfo);
#line 124
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 125
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 126
  testRunner.And("I go to ESS \"control setup\" Option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 127
  testRunner.And("In EHK010MN I Select \"OPT\" Plan", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
  testRunner.And(string.Format("In EHK01012 I Add Control Setup as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"{7}" +
                        "\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\"", registerCode, startDate, unitValue, endDate, awardExchangeRate, displayONWebInd, registerType2, reportUpdateMode, enabledDisabledInd, vestingCode, vestingStartDate, performanceHurdles, performanceCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 29169: AESS Plan Deduction Setup -[Add/View]")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("HK_ESS_Setups")]
        [NUnit.Framework.CategoryAttribute("29169")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.TestCaseAttribute("AESS", "NAB2_AUTO", "11A", "EB", "M", "1", "01/01/2011", "01/01/2012", "12", null)]
        public virtual void TestCase29169AESSPlanDeductionSetup_AddView(string plan, string cOY, string registerCode, string registerType, string paymentFrequency, string accumPeriod, string accumStartDate, string accumEndDate, string maxNumberPayments, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "HK_ESS_Setups",
                    "29169",
                    "NAB2_AUTO"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 29169: AESS Plan Deduction Setup -[Add/View]", @__tags);
#line 138
this.ScenarioSetup(scenarioInfo);
#line 139
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 140
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 141
  testRunner.And("I go to ESS \"deduction setup\" Option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 142
  testRunner.And("In EHK010MN I Select \"ATS\" Plan", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 143
  testRunner.And(string.Format("In EHK01016 I Add Deduction Setup as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\"", registerCode, registerType, paymentFrequency, accumPeriod, accumStartDate, accumEndDate, maxNumberPayments), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 29172: Blackout Restricted Codes and Blackout Schedule -[Add/View]")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("HK_ESS_Setups")]
        [NUnit.Framework.CategoryAttribute("29172")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.TestCaseAttribute("NAB2_AUTO", "DS", "TEST AUTOMATION BLACKOUT", "DS1", "TEST AUTOMATION DS01", "01/01/2015", "01/01/2017", "S", "S", "Y", "Y", null)]
        public virtual void TestCase29172BlackoutRestrictedCodesAndBlackoutSchedule_AddView(string cOY, string blkoutRstrctdCode, string blkoutRstrctdDesc, string blkoutCode, string blkoutDescription, string blkoutStartDate, string blkoutEndDate, string saleRestriction, string transferRestriction, string allowPendingCancel, string restrictLimitOrders, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "HK_ESS_Setups",
                    "29172",
                    "NAB2_AUTO"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 29172: Blackout Restricted Codes and Blackout Schedule -[Add/View]", @__tags);
#line 153
this.ScenarioSetup(scenarioInfo);
#line 154
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 155
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 156
  testRunner.And("I go to ESS \"blackout restricted codes\" Option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 157
  testRunner.And(string.Format("In EHK01026 I Add Blackout Restricted Codes as \"{0}\" \"{1}\"", blkoutRstrctdCode, blkoutRstrctdDesc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 158
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 159
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 160
 testRunner.When("I go to ESS \"blackout schedule setup\" Option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 161
  testRunner.And(string.Format("In EHK01025 I Add Blackout Schedule Setup as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" " +
                        "\"{6}\" \"{7}\" \"{8}\"", blkoutCode, blkoutDescription, blkoutRstrctdCode, blkoutStartDate, blkoutEndDate, saleRestriction, transferRestriction, allowPendingCancel, restrictLimitOrders), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 29180: Vesting Schedule Setup -[Add/View]")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("HK_ESS_Setups")]
        [NUnit.Framework.CategoryAttribute("29180")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.TestCaseAttribute("Month", "NAB2_AUTO", "DS1", "TEST AUTOMATION VESTING", "48", "12", "D", "12", "1", "25.00000", "", "12", "1", "25.00000", "", "12", "1", "50.00000", "", "TEST AUTOMATION", null)]
        [NUnit.Framework.TestCaseAttribute("Date", "NAB2_AUTO", "DS2", "TEST AUTOMATION VESTING", "48", "12", "D", "", "", "25.00000", "01/01/2011", "", "", "25.00000", "01/01/2012", "", "", "50.00000", "01/01/2013", "TEST AUTOMATION", null)]
        public virtual void TestCase29180VestingScheduleSetup_AddView(
                    string test, 
                    string cOY, 
                    string locateArgument, 
                    string vestingDescription, 
                    string vestingTermINMnths, 
                    string vestingTermINDays, 
                    string unitRounding, 
                    string mnthsFromVestStart1, 
                    string daysFromVestStar1, 
                    string vestingPercentage1, 
                    string vestingDate1, 
                    string mnthsFromVestStart2, 
                    string daysFromVestStar2, 
                    string vestingPercentage2, 
                    string vestingDate2, 
                    string mnthsFromVestStart3, 
                    string daysFromVestStar3, 
                    string vestingPercentage3, 
                    string vestingDate3, 
                    string comments1, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "HK_ESS_Setups",
                    "29180",
                    "NAB2_AUTO"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 29180: Vesting Schedule Setup -[Add/View]", @__tags);
#line 171
this.ScenarioSetup(scenarioInfo);
#line 172
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 173
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 174
  testRunner.And("I go to ESS \"vesting schedule setup\" Option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 175
  testRunner.And(string.Format("In EHK06000 I Add Vesting Schedule Parameters as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{" +
                        "5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"{1" +
                        "7}\"", locateArgument, vestingDescription, vestingTermINMnths, vestingTermINDays, unitRounding, mnthsFromVestStart1, daysFromVestStar1, vestingPercentage1, vestingDate1, mnthsFromVestStart2, daysFromVestStar2, vestingPercentage2, vestingDate2, mnthsFromVestStart3, daysFromVestStar3, vestingPercentage3, vestingDate3, comments1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 29194: Performance Hurdle Setup -[Add/View]")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("HK_ESS_Setups")]
        [NUnit.Framework.CategoryAttribute("29194")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.TestCaseAttribute("NAB2_AUTO", "P01", "1", "P01", "TEST AUTOMATION PERFORMANCE", "01/01/2010", "50.00000", "N", "01/01/2011", "50.00000", "N", "20.00000", null)]
        public virtual void TestCase29194PerformanceHurdleSetup_AddView(string cOY, string locateVestCode, string locateTrancheNbr, string locatePerfCode, string performanceDesc, string testDate1, string testPercent1, string cancelUnv1, string testDate2, string testPercent2, string cancelUnv2, string vestingPercentage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "HK_ESS_Setups",
                    "29194",
                    "NAB2_AUTO"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 29194: Performance Hurdle Setup -[Add/View]", @__tags);
#line 186
this.ScenarioSetup(scenarioInfo);
#line 187
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 188
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 189
  testRunner.And("I go to ESS \"performance hurdle setup\" Option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 190
  testRunner.And(string.Format("In EHK06010 I Add Performance Hurdle Setup as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\"" +
                        " \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\"", locateVestCode, locateTrancheNbr, locatePerfCode, performanceDesc, testDate1, testPercent1, cancelUnv1, testDate2, testPercent2, cancelUnv2, vestingPercentage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 29202: AESS Plan Leaver Schedule Setup -[Add/View]")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("HK_ESS_Setups")]
        [NUnit.Framework.CategoryAttribute("29202")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.TestCaseAttribute("F", "NAB2_AUTO", "A", "DDD", "TEST AUTOMATION", "DDD", "D", "G", "", "", "", "", "", "", "TEST AUTOMATION", "D DEFAULT", "DECEASED ESTATE", null)]
        [NUnit.Framework.TestCaseAttribute("L", "NAB2_AUTO", "A", "FFF", "TEST AUTOMATION", "FFF", "F", "G", "Y", "N", "N", "0", "0", "", "TEST AUTOMATION", "F DEFAULT", "FRAUD/MISCONDUCT/DISMISSED", null)]
        public virtual void TestCase29202AESSPlanLeaverScheduleSetup_AddView(
                    string leaverEffectInd, 
                    string cOY, 
                    string planType, 
                    string leaverSchedule, 
                    string leaverScheduleDesc, 
                    string leaverCode, 
                    string employeeStatus, 
                    string phantomLeaverType, 
                    string relsONEmpEndInd, 
                    string forfImmInd, 
                    string accelerateAvailInd, 
                    string accelerateMonths, 
                    string accelerateDays, 
                    string accelFrmDateInd, 
                    string commentsLine1, 
                    string leaverCodeDesc, 
                    string empStatusDesc, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "HK_ESS_Setups",
                    "29202",
                    "NAB2_AUTO"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 29202: AESS Plan Leaver Schedule Setup -[Add/View]", @__tags);
#line 200
this.ScenarioSetup(scenarioInfo);
#line 201
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 202
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 203
  testRunner.And("I go to ESS \"leaver schedule setup\" Option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 204
  testRunner.And(string.Format("In EHK01039 I Add Leaver Schedule Setup as \"{0}\"", planType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 205
  testRunner.And(string.Format("In EHK01034 I Add AESS Leaver Schedule Setup as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5" +
                        "}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\"", leaverSchedule, leaverScheduleDesc, leaverCode, employeeStatus, leaverEffectInd, phantomLeaverType, relsONEmpEndInd, forfImmInd, accelerateAvailInd, accelerateMonths, accelerateDays, accelFrmDateInd, commentsLine1, leaverCodeDesc, empStatusDesc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 29203: Loan Plan Leaver Schedule Setup -[Add/View]")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("HK_ESS_Setups")]
        [NUnit.Framework.CategoryAttribute("29203")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        [NUnit.Framework.TestCaseAttribute("NAB2_AUTO", "L", "LLL", "TEST AUTOMATION", "LLL", "L", "TEST AUTOMATION", "L DEFAULT", "RESIGNATION", null)]
        public virtual void TestCase29203LoanPlanLeaverScheduleSetup_AddView(string cOY, string planType, string leaverSchedule, string leaverScheduleDesc, string leaverCode, string employeeStatus, string commentsLine1, string leaverCodeDesc, string empStatusDesc, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "HK_ESS_Setups",
                    "29203",
                    "NAB2_AUTO",
                    "FullSmokeTest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 29203: Loan Plan Leaver Schedule Setup -[Add/View]", @__tags);
#line 217
this.ScenarioSetup(scenarioInfo);
#line 218
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 219
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 220
  testRunner.And("I go to ESS \"leaver schedule setup\" Option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 221
  testRunner.And(string.Format("In EHK01039 I Add Leaver Schedule Setup as \"{0}\"", planType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 222
  testRunner.And(string.Format("In EHK01035 I Add Loan Plan Leaver Schedule Setup as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\"", leaverSchedule, leaverScheduleDesc, leaverCode, employeeStatus, commentsLine1, leaverCodeDesc, empStatusDesc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 29204: Executive Options Plan Leaver Schedule Setup -[Add/View]")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("HK_ESS_Setups")]
        [NUnit.Framework.CategoryAttribute("29204")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.TestCaseAttribute("N", "NAB2_AUTO", "E", "LLL", "TEST AUTOMATION", "LLL", "L", "N", "Y", "N", "Y", "N", "N", "TEST AUTOMATION", "L DEFAULT", "RESIGNATION", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Y", "NAB2_AUTO", "E", "LLD", "TEST AUTOMATION", "LLL", "L", "N", "Y", "N", "Y", "N", "N", "TEST AUTOMATION", "L DEFAULT", "RESIGNATION", "10", "10", "E", null)]
        public virtual void TestCase29204ExecutiveOptionsPlanLeaverScheduleSetup_AddView(
                    string overrideExpiryInd, 
                    string cOY, 
                    string planType, 
                    string leaverSchedule, 
                    string leaverScheduleDesc, 
                    string leaverCode, 
                    string employeeStatus, 
                    string unvNOChgInd, 
                    string unvCancelImmInd, 
                    string unvAccelerateVstInd, 
                    string vstNOChgInd, 
                    string vstCancelImmInd, 
                    string vstIgnoreBlackout, 
                    string commentsLine1, 
                    string leaverCodeDesc, 
                    string empStatusDesc, 
                    string overrideMonths, 
                    string overrideDays, 
                    string overrideFromDateInd, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "HK_ESS_Setups",
                    "29204",
                    "NAB2_AUTO"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 29204: Executive Options Plan Leaver Schedule Setup -[Add/View]", @__tags);
#line 232
this.ScenarioSetup(scenarioInfo);
#line 233
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 234
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 235
  testRunner.And("I go to ESS \"leaver schedule setup\" Option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 236
  testRunner.And(string.Format("In EHK01039 I Add Leaver Schedule Setup as \"{0}\"", planType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 237
  testRunner.And(string.Format("In EHK01035 I Add Options Plan Leaver Schedule Setup as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"" +
                        "{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{1" +
                        "6}\"", leaverSchedule, leaverScheduleDesc, leaverCode, employeeStatus, overrideExpiryInd, unvNOChgInd, unvCancelImmInd, unvAccelerateVstInd, vstNOChgInd, vstCancelImmInd, vstIgnoreBlackout, commentsLine1, leaverCodeDesc, empStatusDesc, overrideMonths, overrideDays, overrideFromDateInd), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 29313: Leaver Description Code -[Add/View]")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("HK_ESS_Setups")]
        [NUnit.Framework.CategoryAttribute("29313")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.TestCaseAttribute("NAB2_AUTO", "E", "DSS", "TEST AUTOMATION", "CURRENT EMPLOYEE", null)]
        public virtual void TestCase29313LeaverDescriptionCode_AddView(string cOY, string employeeStatus, string leaverCode, string leaverCodeDesc, string empStatusDesc, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "HK_ESS_Setups",
                    "29313",
                    "NAB2_AUTO"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 29313: Leaver Description Code -[Add/View]", @__tags);
#line 248
this.ScenarioSetup(scenarioInfo);
#line 249
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 250
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 251
  testRunner.And("I go to ESS \"leaver description code\" Option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 252
  testRunner.And(string.Format("In EHK01037 I Add Leaver Description Codes as \"{0}\" \"{1}\" \"{2}\" \"{3}\"", employeeStatus, leaverCode, leaverCodeDesc, empStatusDesc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 29315: ESS Bank Details Setup -[Add/View]")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("HK_ESS_Setups")]
        [NUnit.Framework.CategoryAttribute("29315")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.TestCaseAttribute("NAB2_AUTO", "10", "TEST AUTOMATION", "NAB", "10", "", "AUTOMATION", "TEST AUTOMATION", "13", "100", "100100100", "TEST AUTOMATION", "101010", "Y", null)]
        public virtual void TestCase29315ESSBankDetailsSetup_AddView(string cOY, string addKey, string bulkPayDesc, string homeBankDesc, string cemtexUserNum, string overrideTranType, string paymentDescription, string headerRemitterName, string traceBsb1To3, string traceBsb5To7, string traceAccount, string transRemitterName, string lodgementSuffix, string ausDirectCredtEft1, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "HK_ESS_Setups",
                    "29315",
                    "NAB2_AUTO"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 29315: ESS Bank Details Setup -[Add/View]", @__tags);
#line 262
this.ScenarioSetup(scenarioInfo);
#line 263
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 264
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 265
  testRunner.And("I go to ESS \"ess bank details setup\" Option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 266
  testRunner.And(string.Format("In EHK01030 I Add ESS Direct Credit Code as \"{0}\"", addKey), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 267
  testRunner.And(string.Format("In EHK01032 I Add ESS Direct Credit Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", bulkPayDesc, homeBankDesc, cemtexUserNum, overrideTranType, paymentDescription, headerRemitterName, traceBsb1To3, traceBsb5To7, traceAccount, transRemitterName, lodgementSuffix, ausDirectCredtEft1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 29345: Modify VWAP File -[Add/View]")]
        [NUnit.Framework.CategoryAttribute("HK_ESS_Setups")]
        [NUnit.Framework.CategoryAttribute("29345")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.TestCaseAttribute("FiveDay", "NAB2_AUTO", "ORD", "07/10/2015", "ASX", "33.446665", "1904816", "33.492343", "33.560000", "", "(5 Day)", "AU000000NAB4", "AUD", "Y", "Auto Test01", null)]
        [NUnit.Framework.TestCaseAttribute("SevenDay", "NAB2_AUTO", "ORD", "29/06/2011", "ASX", "33.446665", "1904816", "33.492343", "33.560000", "", "(7 Day)", "AU000000NAB4", "AUD", "Y", "Auto Test01", null)]
        public virtual void TestCase29345ModifyVWAPFile_AddView(
                    string test, 
                    string cOY, 
                    string finalSecurity, 
                    string vwapDate, 
                    string exchangeCode, 
                    string onedayVwap, 
                    string onedayTradeVolume, 
                    string multiDayVwap, 
                    string closingPrice, 
                    string conversionRate, 
                    string multiDayVwapDesc, 
                    string isinNumber, 
                    string currencyCode, 
                    string tradingDayInd, 
                    string lastUpdatedBY, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "HK_ESS_Setups",
                    "29345",
                    "NAB2_AUTO"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 29345: Modify VWAP File -[Add/View]", @__tags);
#line 276
this.ScenarioSetup(scenarioInfo);
#line 277
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 278
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 279
  testRunner.And("I go to ESS \"modify vwap file\" Option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 280
  testRunner.And(string.Format("In EHK01020 I Add Modify VWAP File as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"" +
                        "{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\"", finalSecurity, vwapDate, exchangeCode, onedayVwap, onedayTradeVolume, multiDayVwap, closingPrice, conversionRate, multiDayVwapDesc, isinNumber, currencyCode, tradingDayInd, lastUpdatedBY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 29477: Event Control -[Add/View]")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("HK_ESS_Setups")]
        [NUnit.Framework.CategoryAttribute("29477")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.TestCaseAttribute("V", "NAB2_AUTO", "DD1", "TEST AUTOMATION V", null)]
        [NUnit.Framework.TestCaseAttribute("T", "NAB2_AUTO", "DD2", "TEST AUTOMATION T", null)]
        [NUnit.Framework.TestCaseAttribute("I", "NAB2_AUTO", "DD3", "TEST AUTOMATION I", null)]
        public virtual void TestCase29477EventControl_AddView(string eventType, string cOY, string eventCode, string eventDescription, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "HK_ESS_Setups",
                    "29477",
                    "NAB2_AUTO"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 29477: Event Control -[Add/View]", @__tags);
#line 291
this.ScenarioSetup(scenarioInfo);
#line 292
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 293
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 294
  testRunner.And("I go to ESS \"ess event control\" Option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 295
  testRunner.And(string.Format("In EHK01013 I Add ESS Event Control Setup as \"{0}\" \"{1}\" \"{2}\"", eventType, eventCode, eventDescription), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 29475: T Type Event Setup -[Add/View]")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("HK_ESS_Setups")]
        [NUnit.Framework.CategoryAttribute("29475")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.TestCaseAttribute("Options", "T", "NAB2_AUTO", "DS5", "01/01/2020", "01/01/2013", "30/03/2020", "Y", "N", "OPT", "11C", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("AESS", "T", "NAB2_AUTO", "DS8", "01/01/2020", "01/01/2013", "30/03/2020", "Y", "N", "ATS", "11A", "", "EB", "", null)]
        public virtual void TestCase29475TTypeEventSetup_AddView(string plan, string eventType, string cOY, string eventCode, string eventDate, string evtPeriodSta, string evtPeriodEnd, string eventCurrentInd, string eventClosedInd, string classCode, string registerCode1, string registerCode2, string registerType1, string registerType2, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "HK_ESS_Setups",
                    "29475",
                    "NAB2_AUTO"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 29475: T Type Event Setup -[Add/View]", @__tags);
#line 307
this.ScenarioSetup(scenarioInfo);
#line 308
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 309
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 310
  testRunner.And("I go to ESS \"ess event setup\" Option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 311
  testRunner.And(string.Format("In EHK01014 I Add ESS T Type Event Setup as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"" +
                        "{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", eventType, eventCode, eventDate, evtPeriodSta, evtPeriodEnd, eventCurrentInd, eventClosedInd, classCode, registerCode1, registerCode2, registerType1, registerType2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 29492: V Type Options Plan Event Setup -[Add]")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("HK_ESS_Setups")]
        [NUnit.Framework.CategoryAttribute("29492")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        [NUnit.Framework.TestCaseAttribute("Options", "V", "NAB2_AUTO", "DS4", "01/01/2020", "01/01/2013", "30/03/2020", "Y", "N", "OPT", "03A", "", "", "", "Y", "Y", "P", "01/02/2013", "01/01/2020", "E", "B", "DS01", "DS02", "Y", "C", "V", "Y", "C", "L", "C", "01/02/2013", "31/12/2019", "1", "1", "17", "01/02/2019", "31/12/2019", "A", "C", "T", "L", "", "A", "C", "T", "", "", "C", "D", "E", "F", "W", "A", "P", "A", "P", "Y", "", "", "N", "N", null)]
        public virtual void TestCase29492VTypeOptionsPlanEventSetup_Add(
                    string plan, 
                    string eventType, 
                    string cOY, 
                    string eventCode, 
                    string eventDate, 
                    string evtPeriodSta, 
                    string evtPeriodEnd, 
                    string eventCurrentInd, 
                    string eventClosedInd, 
                    string classCode, 
                    string registerCode1, 
                    string registerCode2, 
                    string registerType1, 
                    string registerType2, 
                    string includeLeaversInd, 
                    string incldBlktHldrInd, 
                    string holderSelctnInd, 
                    string evtNotificationDT, 
                    string evtApplicationDT, 
                    string evtCommMethod, 
                    string defaultBulkType, 
                    string defaultBulkCode, 
                    string defaultXferCode, 
                    string tXRteAplcableInd, 
                    string dfltTaxDspslchoic, 
                    string taxEventPointFlg, 
                    string evtElctnPerdInd, 
                    string dfltPaytMethod, 
                    string dfltNtxDspslchoic, 
                    string dfltRblDspslchoic, 
                    string evtElctnStaDT, 
                    string evtElctnEndDT, 
                    string electnStartHH, 
                    string electnStartMM, 
                    string electnClosingHH, 
                    string evtReconclStaDT, 
                    string evtReconclEndDT, 
                    string ntaxDspslChoice1, 
                    string ntaxDspslChoice2, 
                    string ntaxDspslChoice3, 
                    string ntaxDspslChoice4, 
                    string ntaxDspslChoice5, 
                    string taxDspslChoice1, 
                    string taxDspslChoice2, 
                    string taxDspslChoice3, 
                    string taxDspslChoice4, 
                    string taxDspslChoice5, 
                    string alowdPaytMethod1, 
                    string alowdPaytMethod2, 
                    string alowdPaytMethod3, 
                    string alowdPaytMethod4, 
                    string alowdPaytMethod5, 
                    string ntxEXMethod1, 
                    string ntxEXMethod2, 
                    string taxEXMethod1, 
                    string taxEXMethod2, 
                    string webElectionsInd, 
                    string taxJurisdiction1, 
                    string taxJurisdiction2, 
                    string cmplxTXScnrioInd, 
                    string electionConfInd, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "HK_ESS_Setups",
                    "29492",
                    "NAB2_AUTO",
                    "FullSmokeTest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 29492: V Type Options Plan Event Setup -[Add]", @__tags);
#line 323
this.ScenarioSetup(scenarioInfo);
#line 324
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 325
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 326
  testRunner.And("I go to ESS \"ess event setup\" Option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 327
  testRunner.And(string.Format("In EHK01014 I Add ESS Event Setup as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"{" +
                        "7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\"", eventType, eventCode, eventDate, evtPeriodSta, evtPeriodEnd, eventCurrentInd, eventClosedInd, classCode, registerCode1, registerCode2, registerType1, registerType2, includeLeaversInd, incldBlktHldrInd, holderSelctnInd), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 328
  testRunner.And(string.Format("In EHK01045 I Add Options Event Setup as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}" +
                        "\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\"", evtNotificationDT, evtApplicationDT, evtCommMethod, defaultBulkType, defaultBulkCode, defaultXferCode, tXRteAplcableInd, dfltTaxDspslchoic, taxEventPointFlg, evtElctnPerdInd, dfltPaytMethod, dfltNtxDspslchoic, dfltRblDspslchoic), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 329
  testRunner.And(string.Format("In EHK01046 I Add ESS Event Setup1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"" +
                        "{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"", evtElctnStaDT, evtElctnEndDT, electnStartHH, electnStartMM, electnClosingHH, evtReconclStaDT, evtReconclEndDT, ntaxDspslChoice1, ntaxDspslChoice2, ntaxDspslChoice3, ntaxDspslChoice4, ntaxDspslChoice5, taxDspslChoice1, taxDspslChoice2, taxDspslChoice3, taxDspslChoice4, taxDspslChoice5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 330
  testRunner.And(string.Format("In EHK01046 I Add ESS Event Setup2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"" +
                        "{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\"", alowdPaytMethod1, alowdPaytMethod2, alowdPaytMethod3, alowdPaytMethod4, alowdPaytMethod5, ntxEXMethod1, ntxEXMethod2, taxEXMethod1, taxEXMethod2, webElectionsInd, taxJurisdiction1, taxJurisdiction2, cmplxTXScnrioInd, electionConfInd), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 29493: V Type AESS Plan Event Setup -[Add]")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("HK_ESS_Setups")]
        [NUnit.Framework.CategoryAttribute("29493")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.TestCaseAttribute("AESS", "V", "NAB2_AUTO", "DS7", "31/12/2020", "01/02/2014", "31/12/2020", "Y", "N", "ATS", "05A", "", "EB", "", "Y", "Y", "H", "01/02/2014", "31/12/2020", "B", "DS03", "Y", "A", "Y", "C", "A", "01/02/2014", "25/12/2020", "1", "1", "17", "26/12/2020", "27/12/2020", "A", "C", "P", "", "L", "A", "C", "P", "", "", "C", "D", "E", "F", "W", "A", "P", "A", "P", "Y", "", "", "N", "N", null)]
        public virtual void TestCase29493VTypeAESSPlanEventSetup_Add(
                    string plan, 
                    string eventType, 
                    string cOY, 
                    string eventCode, 
                    string eventDate, 
                    string evtPeriodSta, 
                    string evtPeriodEnd, 
                    string eventCurrentInd, 
                    string eventClosedInd, 
                    string classCode, 
                    string registerCode1, 
                    string registerCode2, 
                    string registerType1, 
                    string registerType2, 
                    string includeLeaversInd, 
                    string incldBlktHldrInd, 
                    string holderSelctnInd, 
                    string evtNotificationDT, 
                    string evtApplicationDT, 
                    string evtCommMethod, 
                    string defaultBulkCode, 
                    string tXRteAplcableInd, 
                    string dfltTaxDspslchoic, 
                    string evtElctnPerdInd, 
                    string dfltPaytMethod, 
                    string dfltNtxDspslchoic, 
                    string evtElctnStaDT, 
                    string evtElctnEndDT, 
                    string electnStartHH, 
                    string electnStartMM, 
                    string electnClosingHH, 
                    string evtReconclStaDT, 
                    string evtReconclEndDT, 
                    string ntaxDspslChoice1, 
                    string ntaxDspslChoice2, 
                    string ntaxDspslChoice3, 
                    string ntaxDspslChoice4, 
                    string ntaxDspslChoice5, 
                    string taxDspslChoice1, 
                    string taxDspslChoice2, 
                    string taxDspslChoice3, 
                    string taxDspslChoice4, 
                    string taxDspslChoice5, 
                    string alowdPaytMethod1, 
                    string alowdPaytMethod2, 
                    string alowdPaytMethod3, 
                    string alowdPaytMethod4, 
                    string alowdPaytMethod5, 
                    string ntxEXMethod1, 
                    string ntxEXMethod2, 
                    string taxEXMethod1, 
                    string taxEXMethod2, 
                    string webElectionsInd, 
                    string taxJurisdiction1, 
                    string taxJurisdiction2, 
                    string cmplxTXScnrioInd, 
                    string electionConfInd, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "HK_ESS_Setups",
                    "29493",
                    "NAB2_AUTO"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 29493: V Type AESS Plan Event Setup -[Add]", @__tags);
#line 340
this.ScenarioSetup(scenarioInfo);
#line 341
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 342
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 343
  testRunner.And("I go to ESS \"ess event setup\" Option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 344
  testRunner.And(string.Format("In EHK01014 I Add ESS Event Setup as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"{" +
                        "7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\"", eventType, eventCode, eventDate, evtPeriodSta, evtPeriodEnd, eventCurrentInd, eventClosedInd, classCode, registerCode1, registerCode2, registerType1, registerType2, includeLeaversInd, incldBlktHldrInd, holderSelctnInd), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 345
  testRunner.And(string.Format("In EHK01045 I Add AESS Event Setup as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"" +
                        "{7}\" \"{8}\"", evtNotificationDT, evtApplicationDT, evtCommMethod, defaultBulkCode, tXRteAplcableInd, dfltTaxDspslchoic, evtElctnPerdInd, dfltPaytMethod, dfltNtxDspslchoic), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 346
  testRunner.And(string.Format("In EHK01046 I Add ESS Event Setup1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"" +
                        "{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"", evtElctnStaDT, evtElctnEndDT, electnStartHH, electnStartMM, electnClosingHH, evtReconclStaDT, evtReconclEndDT, ntaxDspslChoice1, ntaxDspslChoice2, ntaxDspslChoice3, ntaxDspslChoice4, ntaxDspslChoice5, taxDspslChoice1, taxDspslChoice2, taxDspslChoice3, taxDspslChoice4, taxDspslChoice5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 347
  testRunner.And(string.Format("In EHK01046 I Add ESS Event Setup2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"" +
                        "{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\"", alowdPaytMethod1, alowdPaytMethod2, alowdPaytMethod3, alowdPaytMethod4, alowdPaytMethod5, ntxEXMethod1, ntxEXMethod2, taxEXMethod1, taxEXMethod2, webElectionsInd, taxJurisdiction1, taxJurisdiction2, cmplxTXScnrioInd, electionConfInd), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 29574: ESS Provider Information Setup -[Add/View]")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("HK_ESS_Setups")]
        [NUnit.Framework.CategoryAttribute("29574")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.TestCaseAttribute("NAB2_AUTO", "71005485825", "1", "COMPUTERSHARE LIMITED", "COMPUTERSHARE LIMITED", "COMPUTERSHARE LIMITED", "COMPUTERSHARE LIMITED", "YARRA FALLS", "452 JOHNSTON STREET", "ABBOTSFORD", "VIC", "3067", "AUSTRALIA", "S", "P", "LISA HEW", "03 9415 5116", "lisa.hew@computershare.com.au", "LISA HEW", null)]
        public virtual void TestCase29574ESSProviderInformationSetup_AddView(
                    string cOY, 
                    string abn, 
                    string branchNumber, 
                    string providerNameLine1, 
                    string providerNameLine2, 
                    string tradingNameLine1, 
                    string tradingNameLine2, 
                    string postalAddressLine1, 
                    string postalAddressLine2, 
                    string postalSuburb, 
                    string postalState, 
                    string postalPostcode, 
                    string postalCountry, 
                    string addressForNotices, 
                    string communicationMethod, 
                    string providerContactName, 
                    string providerPhoneNumber, 
                    string providerEmailID, 
                    string authorisedSignatory, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "HK_ESS_Setups",
                    "29574",
                    "NAB2_AUTO"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 29574: ESS Provider Information Setup -[Add/View]", @__tags);
#line 357
this.ScenarioSetup(scenarioInfo);
#line 358
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 359
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 360
  testRunner.And("I go to ESS \"ess provider information setup\" Option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 361
  testRunner.And(string.Format("In EHK01038 I Add ESS Provider Information Setup as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        " \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" " +
                        "\"{17}\"", abn, branchNumber, providerNameLine1, providerNameLine2, tradingNameLine1, tradingNameLine2, postalAddressLine1, postalAddressLine2, postalSuburb, postalState, postalPostcode, postalCountry, addressForNotices, communicationMethod, providerContactName, providerPhoneNumber, providerEmailID, authorisedSignatory), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 362
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 363
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 364
  testRunner.And("I go to ESS \"ess provider information setup\" Option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 365
  testRunner.And(string.Format("In EHK01038 I Verify ESS Provider Information Setup as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{" +
                        "4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16" +
                        "}\" \"{17}\"", abn, branchNumber, providerNameLine1, providerNameLine2, tradingNameLine1, tradingNameLine2, postalAddressLine1, postalAddressLine2, postalSuburb, postalState, postalPostcode, postalCountry, addressForNotices, communicationMethod, providerContactName, providerPhoneNumber, providerEmailID, authorisedSignatory), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 29581: VSA Jurisdiction Setup -[Add/View/Delete]")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("HK_ESS_Setups")]
        [NUnit.Framework.CategoryAttribute("29581")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.TestCaseAttribute("Select", "NAB2_AUTO", "VAA", "TEST VAA", "S", "USA", "AFG", "ALB", "DZA", "ASM", "AND", "AGO", "AIA", "ATA", "ATG", "ARG", "ARM", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Exclude", "NAB2_AUTO", "VAB", "TEST VAB", "E", "USA", "GBR", "ALB", "DZA", "ASM", "AND", "AGO", "AIA", "ATA", "ATG", "ARG", "AUS", "NZL", "ARM", null)]
        public virtual void TestCase29581VSAJurisdictionSetup_AddViewDelete(
                    string test, 
                    string cOY, 
                    string jurisdictionCode, 
                    string jurDescription, 
                    string selectDomicileInd, 
                    string domicileCodeL11, 
                    string domicileCodeL12, 
                    string domicileCodeL13, 
                    string domicileCodeL14, 
                    string domicileCodeL15, 
                    string domicileCodeL16, 
                    string domicileCodeL17, 
                    string domicileCodeL18, 
                    string domicileCodeL19, 
                    string domicileCodeL110, 
                    string domicileCodeL111, 
                    string domicileCodeL21, 
                    string domicileCodeL22, 
                    string domicileCodeL23, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "HK_ESS_Setups",
                    "29581",
                    "NAB2_AUTO"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 29581: VSA Jurisdiction Setup -[Add/View/Delete]", @__tags);
#line 375
this.ScenarioSetup(scenarioInfo);
#line 376
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 377
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 378
  testRunner.And("I go to ESS \"vsa jurisdiction setup\" Option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 379
  testRunner.And(string.Format("In EHK01040 I Add VSA Jurisdiction Setup as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"" +
                        "{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"", jurisdictionCode, jurDescription, selectDomicileInd, domicileCodeL11, domicileCodeL12, domicileCodeL13, domicileCodeL14, domicileCodeL15, domicileCodeL16, domicileCodeL17, domicileCodeL18, domicileCodeL19, domicileCodeL110, domicileCodeL111, domicileCodeL21, domicileCodeL22, domicileCodeL23), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 380
  testRunner.And("In EHK01040 I Delete VSA Jurisdiction Setup", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 29678: Trade Control Codes for Sales -[Add]")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("HK_ESS_Setups")]
        [NUnit.Framework.CategoryAttribute("29678")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.TestCaseAttribute("AESS-Batch", "NAB2_AUTO", "ATS3", "S", "TEST AUTOMATION ATS", "Y", "ATS", "N", "N", "A", "3", "AUS", "1", "99999999999999.999999", "W", "10", "00", "Y", "TEST AUTOMATION", "Y", "ORD", "VIC", "BLKUP", "I0030153839", "M", "", "", "", "N", "M", "N", "N", "N", "S", "N", "Y", "O", "N", "W", "N", "W", "W", "Y", "Y", "P", "Y", "Y", "Y", "W", "C", "ESTSC", "ORD", "VIC", "", "", "", "", "D", "ESSJBW", "Y", "TSSAL", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "N", "N", "123451234", "N", "C", "AUD", "", "", "", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "N", "N", "N", "N", "N", "N", "N", "Wire", "CWIR", "A", "N", "Direct Banking", "CDCR", "A", "N", "Local Cheque", "CLCQ", "A", "N", "Foreign Cheque", "CFCQ", "A", "N", "Broker", "Commission", "CBRK", "A", "N", "CPMM", "A", "N", "", "", "", "", "", "", "", "", "", "Stamp Duty", "Handling fee", "Miscellaneous Fee", "CTS", "******", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("AESS-RealTime", "NAB2_AUTO", "ATS4", "S", "TEST AUTOMATION ATS", "Y", "ATS", "N", "N", "A", "3", "AUS", "1", "99999999999999.999999", "W", "10", "00", "Y", "TEST AUTOMATION", "Y", "ORD", "VIC", "BLKUP", "I0030153839", "M", "", "", "", "Y", "M", "N", "N", "N", "S", "N", "Y", "N", "N", "W", "N", "W", "W", "Y", "Y", "P", "Y", "Y", "Y", "W", "C", "ESTSC", "ORD", "VIC", "", "", "", "", "D", "ESSJBW", "Y", "TSSAL", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "N", "N", "123451234", "N", "C", "AUD", "", "", "", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "N", "N", "N", "N", "N", "N", "N", "Wire", "CWIR", "A", "N", "Direct Banking", "CDCR", "A", "N", "Local Cheque", "CLCQ", "A", "N", "Foreign Cheque", "CFCQ", "A", "N", "Broker", "Commission", "CBRK", "A", "N", "CPMM", "A", "N", "", "", "", "", "", "", "", "", "", "Stamp Duty", "Handling fee", "Miscellaneous Fee", "CTS", "******", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Option-Batch", "NAB2_AUTO", "OPT5", "S", "TEST AUTOMATION OPT", "Y", "OPT", "N", "N", "A", "3", "AUS", "1", "99999999999999.999999", "W", "10", "00", "Y", "TEST AUTOMATION", "Y", "ORD", "VIC", "BLKUP", "I0030153839", "M", "", "", "", "N", "M", "N", "N", "N", "S", "N", "Y", "O", "N", "W", "N", "W", "W", "Y", "Y", "P", "Y", "Y", "Y", "W", "C", "ESOXR", "ORD", "VIC", "", "", "", "", "D", "ESSJBW", "Y", "TSSAL", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "N", "N", "123451234", "N", "C", "AUD", "", "", "", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "N", "N", "N", "N", "N", "N", "N", "Wire", "CWIR", "A", "N", "Direct Banking", "CDCR", "A", "N", "Local Cheque", "CLCQ", "A", "N", "Foreign Cheque", "CFCQ", "A", "N", "Broker", "Commission", "CBRK", "A", "N", "CPMM", "A", "N", "", "", "", "", "", "", "", "", "", "Stamp Duty", "Handling fee", "Miscellaneous Fee", "CTS", "******", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Option-RealTime", "NAB2_AUTO", "OPT6", "S", "TEST AUTOMATION OPT", "Y", "OPT", "N", "N", "A", "3", "AUS", "1", "99999999999999.999999", "W", "10", "00", "Y", "TEST AUTOMATION", "Y", "ORD", "VIC", "BLKUP", "I0030153839", "M", "", "", "", "Y", "M", "N", "N", "N", "S", "N", "Y", "N", "N", "W", "N", "W", "W", "Y", "Y", "P", "Y", "Y", "Y", "W", "C", "ESOXR", "ORD", "VIC", "", "", "", "", "D", "ESSJBW", "Y", "TSSAL", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "N", "N", "123451234", "N", "C", "AUD", "", "", "", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "N", "N", "N", "N", "N", "N", "N", "Wire", "CWIR", "A", "N", "Direct Banking", "CDCR", "A", "N", "Local Cheque", "CLCQ", "A", "N", "Foreign Cheque", "CFCQ", "A", "N", "Broker", "Commission", "CBRK", "A", "N", "CPMM", "A", "N", "", "", "", "", "", "", "", "", "", "Stamp Duty", "Handling fee", "Miscellaneous Fee", "CTS", "******", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Loan-Batch", "NAB2_AUTO", "ELA5", "S", "TEST AUTOMATION ELA", "Y", "ELA", "N", "N", "A", "3", "AUS", "1", "99999999999999.999999", "W", "10", "00", "Y", "TEST AUTOMATION", "Y", "ORD", "VIC", "BLKUP", "I0030153839", "M", "", "", "", "N", "M", "N", "N", "N", "S", "N", "N", "O", "N", "W", "N", "W", "W", "Y", "Y", "P", "Y", "Y", "Y", "W", "C", "ESTSC", "ORD", "VIC", "", "", "", "", "D", "ESSJBW", "Y", "TSSAL", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "N", "N", "123451234", "N", "C", "AUD", "", "", "", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "N", "N", "N", "N", "N", "N", "N", "Wire", "CWIR", "A", "N", "Direct Banking", "CDCR", "A", "N", "Local Cheque", "CLCQ", "A", "N", "Foreign Cheque", "CFCQ", "A", "N", "Broker", "Commission", "CBRK", "A", "N", "CPMM", "A", "N", "", "", "", "", "", "", "", "", "", "Stamp Duty", "Handling fee", "Miscellaneous Fee", "CTS", "******", "ELA98", "Y", null)]
        [NUnit.Framework.TestCaseAttribute("Loan-Realtime", "NAB2_AUTO", "ELA6", "S", "TEST AUTOMATION ELA", "Y", "ELA", "N", "N", "A", "3", "AUS", "1", "99999999999999.999999", "W", "10", "00", "Y", "TEST AUTOMATION", "Y", "ORD", "VIC", "BLKUP", "I0030153839", "M", "", "", "", "Y", "", "N", "N", "N", "S", "N", "Y", "N", "N", "W", "N", "W", "W", "Y", "Y", "P", "Y", "Y", "Y", "W", "C", "ESTSC", "ORD", "VIC", "", "", "", "", "D", "ESSJBW", "Y", "TSSAL", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "N", "N", "123451234", "N", "C", "AUD", "", "", "", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "N", "N", "N", "N", "N", "N", "N", "Wire", "CWIR", "A", "N", "Direct Banking", "CDCR", "A", "N", "Local Cheque", "CLCQ", "A", "N", "Foreign Cheque", "CFCQ", "A", "N", "Broker", "Commission", "CBRK", "A", "N", "CPMM", "A", "N", "", "", "", "", "", "", "", "", "", "Stamp Duty", "Handling fee", "Miscellaneous Fee", "CTS", "******", "ELA98", "Y", null)]
        public virtual void TestCase29678TradeControlCodesForSales_Add(
                    string plan, 
                    string cOY, 
                    string tradingCode, 
                    string tradeType, 
                    string tradeDescription, 
                    string currentFlag, 
                    string classCode, 
                    string invTradeInd, 
                    string eventBulkInd, 
                    string settlementAction, 
                    string settlementPeriod, 
                    string settlementRegime, 
                    string minimumDeal, 
                    string maximumDeal, 
                    string recordMoneyORUnits, 
                    string cutOffHH, 
                    string cutOffMM, 
                    string calcReqInd, 
                    string contactDetails, 
                    string counterpartyReqd, 
                    string counterpartyClass, 
                    string counterpartyRegister, 
                    string counterTrantypeCode, 
                    string counterHolderID, 
                    string oNMarketTradeInd, 
                    string dPBrokerCode, 
                    string dPTradeAccount, 
                    string dPConnectionTO, 
                    string realTimeTrading, 
                    string dPOrderType, 
                    string dispExecVenueInd, 
                    string generateAdvices, 
                    string generateCertificates, 
                    string onlineEntryInd, 
                    string externalExercise, 
                    string webInterfaceInd, 
                    string auditInd, 
                    string auditSettlingTrans, 
                    string allowCorporateBodies, 
                    string allowPurchaseResidue, 
                    string allowReturnMail, 
                    string allowDeceased, 
                    string allowPartialSell, 
                    string allowSellTOCover, 
                    string trd24003TaxResidualInd, 
                    string allowCertPartSell, 
                    string allowSellSelected, 
                    string allowFullSell, 
                    string allowForeignResident, 
                    string remainingBalOption1, 
                    string remainingBalTran1, 
                    string remainingBalClass1, 
                    string remainingBalReg1, 
                    string remainingBalOption2, 
                    string remainingBalTran2, 
                    string remainingBalClass2, 
                    string remainingBalReg2, 
                    string grossRounding, 
                    string reconciliationCode, 
                    string cashManagementReqd, 
                    string payAccountNumber, 
                    string validPayMethod1, 
                    string validPayMethod2, 
                    string validPayMethod3, 
                    string existPayDirCred, 
                    string permPayDirCred, 
                    string tempPayDirCred, 
                    string validPayMethod4, 
                    string existPayWire, 
                    string permPayWire, 
                    string tempPayWire, 
                    string validPayMethod5, 
                    string remitTaxPayrollInd, 
                    string remitEmpPayrollInd, 
                    string worldlinkNumber, 
                    string payrollDependentInd, 
                    string defaultPaymentMethd, 
                    string defaultPayCurrency, 
                    string paymentCurrency1, 
                    string paymentCurrency2, 
                    string paymentCurrency3, 
                    string generateTrdtpeInd, 
                    string generateFlatFile, 
                    string buildPaymentsInd, 
                    string smsInd1, 
                    string smsInd2, 
                    string smsInd3, 
                    string smsInd4, 
                    string emailInd1, 
                    string emailInd2, 
                    string emailInd3, 
                    string emailInd4, 
                    string emailCompanySpec1, 
                    string emailCompanySpec2, 
                    string emailCompanySpec3, 
                    string emailCompanySpec4, 
                    string chargeDesc9, 
                    string chargeCode9, 
                    string chargePaidBY9, 
                    string chargeWaived9, 
                    string chargeDesc10, 
                    string chargeCode10, 
                    string chargePaidBY10, 
                    string chargeWaived10, 
                    string chargeDesc11, 
                    string chargeCode11, 
                    string chargePaidBY11, 
                    string chargeWaived11, 
                    string chargeDesc12, 
                    string chargeCode12, 
                    string chargePaidBY12, 
                    string chargeWaived12, 
                    string chargeDesc1, 
                    string chargeDesc2, 
                    string chargeCode1, 
                    string chargePaidBY1, 
                    string chargeWaived1, 
                    string chargeCode2, 
                    string chargePaidBY2, 
                    string chargeWaived2, 
                    string chargeCode3, 
                    string chargePaidBY3, 
                    string chargeWaived3, 
                    string chargeCode4, 
                    string chargePaidBY4, 
                    string chargeWaived4, 
                    string chargeCode5, 
                    string chargePaidBY5, 
                    string chargeWaived5, 
                    string chargeDesc3, 
                    string chargeDesc4, 
                    string chargeDesc5, 
                    string serviceProvider, 
                    string serviceCode, 
                    string loanPayAccount, 
                    string loanRegBreakupReqd, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "HK_ESS_Setups",
                    "29678",
                    "NAB2_AUTO"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 29678: Trade Control Codes for Sales -[Add]", @__tags);
#line 392
this.ScenarioSetup(scenarioInfo);
#line 393
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 394
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 395
  testRunner.And("I go to \"trading control codes\" Control Code Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 396
  testRunner.And(string.Format("In TRD24000 I Add Trade Control Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{" +
                        "6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"", tradingCode, tradeType, tradeDescription, currentFlag, classCode, invTradeInd, eventBulkInd, settlementAction, settlementPeriod, settlementRegime, minimumDeal, maximumDeal, recordMoneyORUnits, cutOffHH, cutOffMM, calcReqInd, contactDetails), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 397
  testRunner.And(string.Format("In TRD24006 I Add Trade Control Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{" +
                        "6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\"", counterpartyReqd, counterpartyClass, counterpartyRegister, counterTrantypeCode, counterHolderID, oNMarketTradeInd, dPBrokerCode, dPTradeAccount, dPConnectionTO, realTimeTrading, dPOrderType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 398
  testRunner.And(string.Format("In TRD24003 I Add Trade Control Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{" +
                        "6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"{17}\" \"{" +
                        "18}\"", dispExecVenueInd, generateAdvices, generateCertificates, onlineEntryInd, externalExercise, webInterfaceInd, auditInd, auditSettlingTrans, allowCorporateBodies, allowPurchaseResidue, allowReturnMail, allowDeceased, allowPartialSell, allowSellTOCover, trd24003TaxResidualInd, allowCertPartSell, allowSellSelected, allowFullSell, allowForeignResident), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 399
  testRunner.And(string.Format("In TRD240RB I Add Trade Control Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{" +
                        "6}\" \"{7}\" \"{8}\"", allowSellTOCover, remainingBalOption1, remainingBalTran1, remainingBalClass1, remainingBalReg1, remainingBalOption2, remainingBalTran2, remainingBalClass2, remainingBalReg2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 400
  testRunner.And(string.Format("In TRD24004 I Add Trade Control Details1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"" +
                        "{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"{17}\" \"" +
                        "{18}\"", grossRounding, reconciliationCode, cashManagementReqd, payAccountNumber, validPayMethod1, validPayMethod2, validPayMethod3, existPayDirCred, permPayDirCred, tempPayDirCred, validPayMethod4, existPayWire, permPayWire, tempPayWire, validPayMethod5, remitTaxPayrollInd, remitEmpPayrollInd, worldlinkNumber, payrollDependentInd), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 401
  testRunner.And(string.Format("In TRD24004 I Add Trade Control Details2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"" +
                        "{6}\" \"{7}\" \"{8}\" \"{9}\"", defaultPaymentMethd, defaultPayCurrency, paymentCurrency1, paymentCurrency2, paymentCurrency3, generateTrdtpeInd, generateFlatFile, buildPaymentsInd, loanPayAccount, loanRegBreakupReqd), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 402
  testRunner.And(string.Format("In TRD24009 I Add Trade Control Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{" +
                        "6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", smsInd1, smsInd2, smsInd3, smsInd4, emailInd1, emailInd2, emailInd3, emailInd4, emailCompanySpec1, emailCompanySpec2, emailCompanySpec3, emailCompanySpec4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 403
  testRunner.And(string.Format("In TRD24007 I Add Trade Control Details1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"" +
                        "{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"{17}\"", chargeDesc9, chargeCode9, chargePaidBY9, chargeWaived9, chargeDesc10, chargeCode10, chargePaidBY10, chargeWaived10, chargeDesc11, chargeCode11, chargePaidBY11, chargeWaived11, chargeDesc12, chargeCode12, chargePaidBY12, chargeWaived12, chargeDesc1, chargeDesc2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 404
  testRunner.And(string.Format("In TRD24007 I Add Trade Control Details2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"" +
                        "{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"{17}\"", chargeCode1, chargePaidBY1, chargeWaived1, chargeCode2, chargePaidBY2, chargeWaived2, chargeCode3, chargePaidBY3, chargeWaived3, chargeCode4, chargePaidBY4, chargeWaived4, chargeCode5, chargePaidBY5, chargeWaived5, chargeDesc3, chargeDesc4, chargeDesc5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 405
  testRunner.And(string.Format("In BILCTL99 I Add Trade Control Details as \"{0}\" \"{1}\"", serviceProvider, serviceCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 29757: Trade Control Codes for AESS Transfer -[Add]")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("HK_ESS_Setups")]
        [NUnit.Framework.CategoryAttribute("29757")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        [NUnit.Framework.TestCaseAttribute("AESS", "NAB2_AUTO", "ATS7", "T", "TEST AUTOMATION ATS", "Y", "ATS", "N", "N", "A", "1", "AUS", "1", "99999999999999.999999", "W", "00", "00", "N", "TEST AUTOMATION", "N", "N", "N", "N", "N", "Y", "N", "N", "W", "", "W", "W", "Y", "", "", "Y", "Y", "Y", "W", "N", "AUD", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "Miscellaneous Fee", "CMXC", "CTS", "******", null)]
        public virtual void TestCase29757TradeControlCodesForAESSTransfer_Add(
                    string plan, 
                    string cOY, 
                    string tradingCode, 
                    string tradeType, 
                    string tradeDescription, 
                    string currentFlag, 
                    string classCode, 
                    string invTradeInd, 
                    string eventBulkInd, 
                    string settlementAction, 
                    string settlementPeriod, 
                    string settlementRegime, 
                    string minimumDeal, 
                    string maximumDeal, 
                    string recordMoneyORUnits, 
                    string cutOffHH, 
                    string cutOffMM, 
                    string calcReqInd, 
                    string contactDetails, 
                    string dispExecVenueInd, 
                    string generateAdvices, 
                    string generateCertificates, 
                    string onlineEntryInd, 
                    string externalExercise, 
                    string webInterfaceInd, 
                    string auditInd, 
                    string auditSettlingTrans, 
                    string allowCorporateBodies, 
                    string allowPurchaseResidue, 
                    string allowReturnMail, 
                    string allowDeceased, 
                    string allowPartialSell, 
                    string allowSellTOCover, 
                    string trd24003TaxResidualInd, 
                    string allowCertPartSell, 
                    string allowSellSelected, 
                    string allowFullSell, 
                    string allowForeignResident, 
                    string grossRounding, 
                    string defaultPayCurrency, 
                    string smsInd1, 
                    string smsInd2, 
                    string smsInd3, 
                    string smsInd4, 
                    string emailInd1, 
                    string emailInd2, 
                    string emailInd3, 
                    string emailInd4, 
                    string emailCompanySpec1, 
                    string emailCompanySpec2, 
                    string emailCompanySpec3, 
                    string emailCompanySpec4, 
                    string chargeDesc5, 
                    string chargeCode5, 
                    string serviceProvider, 
                    string serviceCode, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "HK_ESS_Setups",
                    "29757",
                    "NAB2_AUTO",
                    "FullSmokeTest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 29757: Trade Control Codes for AESS Transfer -[Add]", @__tags);
#line 421
this.ScenarioSetup(scenarioInfo);
#line 422
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 423
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 424
  testRunner.And("I go to \"trading control codes\" Control Code Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 425
  testRunner.And(string.Format("In TRD24000 I Add Trade Control Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{" +
                        "6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"", tradingCode, tradeType, tradeDescription, currentFlag, classCode, invTradeInd, eventBulkInd, settlementAction, settlementPeriod, settlementRegime, minimumDeal, maximumDeal, recordMoneyORUnits, cutOffHH, cutOffMM, calcReqInd, contactDetails), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 426
  testRunner.And(string.Format("In TRD24003 I Add Trade Control Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{" +
                        "6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"{17}\" \"{" +
                        "18}\"", dispExecVenueInd, generateAdvices, generateCertificates, onlineEntryInd, externalExercise, webInterfaceInd, auditInd, auditSettlingTrans, allowCorporateBodies, allowPurchaseResidue, allowReturnMail, allowDeceased, allowPartialSell, allowSellTOCover, trd24003TaxResidualInd, allowCertPartSell, allowSellSelected, allowFullSell, allowForeignResident), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 427
  testRunner.And(string.Format("In TRD24004 I Add Transfer Trade Control Details as \"{0}\" \"{1}\"", grossRounding, defaultPayCurrency), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 428
  testRunner.And(string.Format("In TRD24009 I Verify Trade Control Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\"" +
                        " \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", smsInd1, smsInd2, smsInd3, smsInd4, emailInd1, emailInd2, emailInd3, emailInd4, emailCompanySpec1, emailCompanySpec2, emailCompanySpec3, emailCompanySpec4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 429
  testRunner.And(string.Format("In TRD24007 I Add Transfer Trade Control Details as \"{0}\" \"{1}\"", chargeDesc5, chargeCode5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 430
  testRunner.And(string.Format("In BILCTL99 I Add Trade Control Details as \"{0}\" \"{1}\"", serviceProvider, serviceCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
