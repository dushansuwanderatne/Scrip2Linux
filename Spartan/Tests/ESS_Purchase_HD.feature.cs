// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SCRIPAU.Automation.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ESS_Purchase_HD")]
    public partial class ESS_Purchase_HDFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ESS_Purchase_HD.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ESS_Purchase_HD", "In order to avoid silly mistakes\r\nAs a math idiot\r\nI want to be told the sum of t" +
                    "wo numbers", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Exempt Plan Manual Purchase EP")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("ESSPurchase")]
        [NUnit.Framework.TestCaseAttribute("Test1", "CPU_AUTO", "EXA", "EP", "13A", "ASA", "67355", "01/07/2013", "2500", "", "M", "", "", "", "", "I0030313330", "Partnership", "2500.00", "Unchanged", "Unchanged", "MAN", "67356", "M", "1", "1", "C", "", "02/07/2013", "250.00", "", "", "Part", "AUD", "RPH", "M", "1", "1", "", "", "", "", "", "", "B", "AWP", "EXP", "CBS", "B", "03/07/2013", "03/07/2013", "1000", "10.00000", "10.00000", "", "", "", "", "", "", "B", "03/07/2013", "10", "A", "A", "C", "C", "12/07/2013", "", "1", "250.00", "25", "250.00", "250.00", "", "", "", "", "GCB", "AUD", "03/07/2013", "03/07/2013", "", "AUD", "03/07/2013", "Y", "", "", "", "", "", "", "", "", "", "", "EXA13", "5555", "NDF", "1", "", "N", "FBS", "S", "", "", "", "", "", "", "", "", "", "", "", "", "S", "", "BTQ", "", "SETTLED", "1", "250.00", "Settled", "1", "25", "25", "250.00", "250.00", "ESAWP", "BPE", "P", "PURCHASE", "25", "250.00", "M", "WBC", "033-033", "55665566", "C", "/EXA/13A", "EXA/EXEMPT EMP SHARE PLAN - AU", "13A 20130712EP   12/07/13            25", "**** Total for 20130712EP                 25", "", "", "", "", "", "", "", null)]
        public virtual void ExemptPlanManualPurchaseEP(
                    string test, 
                    string cOY, 
                    string classCode, 
                    string selection, 
                    string registerCode, 
                    string selection1, 
                    string transNumber, 
                    string transDate, 
                    string totalMoney, 
                    string totalUnits, 
                    string paymentFrequency, 
                    string residualInd, 
                    string grantCountry, 
                    string retentionDate, 
                    string taxRetentionDate, 
                    string searchName, 
                    string registerType1, 
                    string money1, 
                    string retentionDate1, 
                    string taxRetentionDate1, 
                    string selection2, 
                    string transNumberM, 
                    string paymentFrequencyM, 
                    string accumPeriod, 
                    string paymentNumber, 
                    string paymentStatus, 
                    string eol01901ReceiptCurrency, 
                    string paymentDate, 
                    string paymentAmount, 
                    string employerPymtAmt, 
                    string eol01901ExchangeRate, 
                    string registerType, 
                    string eol01902EmpBaseCurr, 
                    string selection3, 
                    string payFreq1, 
                    string accumPeriodFrom1, 
                    string accumPeriodTO1, 
                    string payFreq2, 
                    string accumPeriodFrom2, 
                    string accumPeriodTO2, 
                    string payFreq3, 
                    string accumPeriodFrom3, 
                    string accumPeriodTO3, 
                    string releaseMode, 
                    string confirmRelType, 
                    string bulkCode, 
                    string selection4, 
                    string menuSelection, 
                    string settlementDate, 
                    string tradeDate, 
                    string tradeTime, 
                    string indicativePrice, 
                    string finalPrice, 
                    string chargeCode1, 
                    string chargeCode2, 
                    string chargeCode3, 
                    string chargeDesc1, 
                    string chargeDesc2, 
                    string chargeDesc3, 
                    string confirmStatus, 
                    string confirmSettlement, 
                    string confirmFinalPrice, 
                    string menuSelection1, 
                    string confirmStatus1, 
                    string menuSelection2, 
                    string confirmStatus2, 
                    string awardDate, 
                    string registerCode1, 
                    string totalCount, 
                    string totalUnits1, 
                    string unitsCalc, 
                    string costOFShares, 
                    string totalCost, 
                    string residueKept, 
                    string residueRefunded, 
                    string taxONCharges, 
                    string accumCharges, 
                    string selection5, 
                    string bulkCurrency, 
                    string settlementFrom, 
                    string settlementTO, 
                    string bulkID1, 
                    string currency1, 
                    string settlementDate1, 
                    string processBulkInd1, 
                    string bulkID2, 
                    string currency2, 
                    string settlementDate2, 
                    string processBulkInd2, 
                    string bulkID3, 
                    string currency3, 
                    string settlementDate3, 
                    string processBulkInd3, 
                    string homeBankDesc, 
                    string ausTraceAccount, 
                    string paymentAccount, 
                    string orderNO, 
                    string ident, 
                    string nbrBulks, 
                    string paymentDate1, 
                    string addConvRateInd, 
                    string selection6, 
                    string menuSelection3, 
                    string settlementDateS, 
                    string tradeDateS, 
                    string tradeTimeS, 
                    string indicativePriceS, 
                    string finalPriceS, 
                    string registerCode1S, 
                    string chargeCode1S, 
                    string chargeCode2S, 
                    string chargeCode3S, 
                    string chargeDesc1S, 
                    string chargeDesc2S, 
                    string chargeDesc3S, 
                    string confirmStatus3, 
                    string awardDateS, 
                    string selection7, 
                    string bulkID, 
                    string status, 
                    string transCount, 
                    string transTotal, 
                    string statusDesc, 
                    string bulkCount, 
                    string bulkUnits, 
                    string transUnits, 
                    string bulkMoney, 
                    string transMoney, 
                    string tranTypeParent, 
                    string selection8, 
                    string bulkType, 
                    string bulkTypeDesc, 
                    string bulkTransUnits, 
                    string bulkTransMoney, 
                    string actionM, 
                    string bankType, 
                    string bankCode, 
                    string accountNumber, 
                    string action, 
                    string locateArgument, 
                    string certificateLine1, 
                    string certificateLine2, 
                    string certificateLine3, 
                    string certificateLine4, 
                    string certificateLine5, 
                    string certificateLine6, 
                    string certificateLine7, 
                    string certificateLine8, 
                    string certificateLine9, 
                    string certificateLine10, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "ESSPurchase"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Exempt Plan Manual Purchase EP", @__tags);
#line 8
this.ScenarioSetup(scenarioInfo);
#line 10
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 11
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
  testRunner.And("In EOL00113 I click on \"awards\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table1.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 15
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table1, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table2.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 18
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table3.AddRow(new string[] {
                        string.Format("{0}", selection1)});
#line 21
  testRunner.And("In EOL00114 I continue with the following values:", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "TransDate",
                        "TotalMoney",
                        "TotalUnits",
                        "PaymentFrequency",
                        "ResidualInd",
                        "GrantCountry",
                        "RetentionDate",
                        "TaxRetentionDate",
                        "SearchName"});
            table4.AddRow(new string[] {
                        string.Format("{0}", transNumber),
                        string.Format("{0}", transDate),
                        string.Format("{0}", totalMoney),
                        string.Format("{0}", totalUnits),
                        string.Format("{0}", paymentFrequency),
                        string.Format("{0}", residualInd),
                        string.Format("{0}", grantCountry),
                        string.Format("{0}", retentionDate),
                        string.Format("{0}", taxRetentionDate),
                        string.Format("{0}", searchName)});
#line 24
  testRunner.And("In EOL00901 I Add Savings amount as:", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterType1",
                        "Money1",
                        "PaymentFrequency",
                        "RetentionDate",
                        "TaxRetentionDate"});
            table5.AddRow(new string[] {
                        string.Format("{0}", registerType1),
                        string.Format("{0}", money1),
                        string.Format("{0}", paymentFrequency),
                        string.Format("{0}", retentionDate1),
                        string.Format("{0}", taxRetentionDate1)});
#line 27
  testRunner.And("In EOL00905 I continue with the following values:", ((string)(null)), table5, "And ");
#line 30
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
  testRunner.And("In EOL00113 I click on \"payments\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table6.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 34
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table6, "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table7.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 37
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table7, "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table8.AddRow(new string[] {
                        string.Format("{0}", selection2)});
#line 40
  testRunner.And("In EOL00120 I continue with the following values:", ((string)(null)), table8, "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "PaymentFrequency",
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentStatus",
                        "Eol01901ReceiptCurrency",
                        "PaymentDate",
                        "PaymentAmount",
                        "EmployerPymtAmt",
                        "Eol01901ExchangeRate",
                        "SearchName"});
            table9.AddRow(new string[] {
                        string.Format("{0}", transNumberM),
                        string.Format("{0}", paymentFrequencyM),
                        string.Format("{0}", accumPeriod),
                        string.Format("{0}", paymentNumber),
                        string.Format("{0}", paymentStatus),
                        string.Format("{0}", eol01901ReceiptCurrency),
                        string.Format("{0}", paymentDate),
                        string.Format("{0}", paymentAmount),
                        string.Format("{0}", employerPymtAmt),
                        string.Format("{0}", eol01901ExchangeRate),
                        string.Format("{0}", searchName)});
#line 43
  testRunner.And("In EOL01901 I Add Manual Payment as:", ((string)(null)), table9, "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentFrequency",
                        "RegisterType",
                        "PaymentAmount",
                        "Eol01902EmpBaseCurr"});
            table10.AddRow(new string[] {
                        string.Format("{0}", accumPeriod),
                        string.Format("{0}", paymentNumber),
                        string.Format("{0}", paymentFrequency),
                        string.Format("{0}", registerType),
                        string.Format("{0}", paymentAmount),
                        string.Format("{0}", eol01902EmpBaseCurr)});
#line 46
  testRunner.And("In EOL01902 I verify the following values:", ((string)(null)), table10, "And ");
#line 49
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
  testRunner.And("In EOL00113 I click on \"releases\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table11.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 53
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table11, "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table12.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 56
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table12, "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table13.AddRow(new string[] {
                        string.Format("{0}", selection3)});
#line 59
  testRunner.And("In EOL00106 I continue with the following values:", ((string)(null)), table13, "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "PayFreq1",
                        "AccumPeriodFrom1",
                        "AccumPeriodTO1",
                        "PayFreq2",
                        "AccumPeriodFrom2",
                        "AccumPeriodTO2",
                        "PayFreq3",
                        "AccumPeriodFrom3",
                        "AccumPeriodTO3",
                        "ReleaseMode"});
            table14.AddRow(new string[] {
                        string.Format("{0}", payFreq1),
                        string.Format("{0}", accumPeriodFrom1),
                        string.Format("{0}", accumPeriodTO1),
                        string.Format("{0}", payFreq2),
                        string.Format("{0}", accumPeriodFrom2),
                        string.Format("{0}", accumPeriodTO2),
                        string.Format("{0}", payFreq3),
                        string.Format("{0}", accumPeriodFrom3),
                        string.Format("{0}", accumPeriodTO3),
                        string.Format("{0}", releaseMode)});
#line 62
  testRunner.And("In EOLBLK05 I continue with the following values:", ((string)(null)), table14, "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmRelType"});
            table15.AddRow(new string[] {
                        string.Format("{0}", confirmRelType)});
#line 65
  testRunner.And("In EOLBLK04 I continue with the following values:", ((string)(null)), table15, "And ");
#line 68
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table16.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 69
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table16, "And ");
#line 72
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkCode"});
            table17.AddRow(new string[] {
                        string.Format("{0}", bulkCode)});
#line 74
  testRunner.And("I go to the Bulk Processing System and select Bulk code as:", ((string)(null)), table17, "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table18.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 77
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table18, "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table19.AddRow(new string[] {
                        string.Format("{0}", menuSelection)});
#line 80
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table19, "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table20.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus)});
#line 84
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table20, "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table21.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 87
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table21, "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table22.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 90
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table22, "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table23.AddRow(new string[] {
                        string.Format("{0}", menuSelection1)});
#line 93
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table23, "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table24.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode1),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus1)});
#line 96
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table24, "And ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table25.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 99
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table25, "And ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table26.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 102
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table26, "And ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table27.AddRow(new string[] {
                        string.Format("{0}", menuSelection2)});
#line 105
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table27, "And ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table28.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode1),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus2),
                        string.Format("{0}", awardDate)});
#line 108
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table28, "And ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table29.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 111
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table29, "And ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "TotalCount",
                        "TotalUnits",
                        "SettlementDate",
                        "FinalPrice",
                        "UnitsCalc",
                        "CostOFShares",
                        "TotalCost",
                        "ResidueKept",
                        "ResidueRefunded",
                        "TaxONCharges",
                        "AccumCharges"});
            table30.AddRow(new string[] {
                        string.Format("{0}", totalCount),
                        string.Format("{0}", totalUnits1),
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", unitsCalc),
                        string.Format("{0}", costOFShares),
                        string.Format("{0}", totalCost),
                        string.Format("{0}", residueKept),
                        string.Format("{0}", residueRefunded),
                        string.Format("{0}", taxONCharges),
                        string.Format("{0}", accumCharges)});
#line 114
  testRunner.And("In OLSB0404 I verify the following values:", ((string)(null)), table30, "And ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table31.AddRow(new string[] {
                        string.Format("{0}", selection5)});
#line 117
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table31, "And ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkCurrency",
                        "SettlementFrom",
                        "SettlementTO"});
            table32.AddRow(new string[] {
                        string.Format("{0}", bulkCurrency),
                        string.Format("{0}", settlementFrom),
                        string.Format("{0}", settlementTO)});
#line 121
  testRunner.And("In OLSB0105 I continue with the following values:", ((string)(null)), table32, "And ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID1",
                        "Currency1",
                        "SettlementDate1",
                        "ProcessBulkInd1",
                        "BulkID2",
                        "Currency2",
                        "SettlementDate2",
                        "ProcessBulkInd2",
                        "BulkID3",
                        "Currency3",
                        "SettlementDate3",
                        "ProcessBulkInd3"});
            table33.AddRow(new string[] {
                        string.Format("{0}", bulkID1),
                        string.Format("{0}", currency1),
                        string.Format("{0}", settlementDate1),
                        string.Format("{0}", processBulkInd1),
                        string.Format("{0}", bulkID2),
                        string.Format("{0}", currency2),
                        string.Format("{0}", settlementDate2),
                        string.Format("{0}", processBulkInd2),
                        string.Format("{0}", bulkID3),
                        string.Format("{0}", currency3),
                        string.Format("{0}", settlementDate3),
                        string.Format("{0}", processBulkInd3)});
#line 124
  testRunner.And("In OLSB0106 I continue with the following values:", ((string)(null)), table33, "And ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "HomeBankDesc",
                        "AusTraceAccount"});
            table34.AddRow(new string[] {
                        string.Format("{0}", homeBankDesc),
                        string.Format("{0}", ausTraceAccount)});
#line 127
  testRunner.And("In OLSB0104 I verify the following values:", ((string)(null)), table34, "And ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "PaymentAccount",
                        "OrderNO",
                        "Ident",
                        "NbrBulks",
                        "SettlementFrom",
                        "SettlementTO",
                        "PaymentDate",
                        "AddConvRateInd"});
            table35.AddRow(new string[] {
                        string.Format("{0}", paymentAccount),
                        string.Format("{0}", orderNO),
                        string.Format("{0}", ident),
                        string.Format("{0}", nbrBulks),
                        string.Format("{0}", settlementFrom),
                        string.Format("{0}", settlementTO),
                        string.Format("{0}", paymentDate1),
                        string.Format("{0}", addConvRateInd)});
#line 130
  testRunner.And("In OLSB0101 I continue with the following values:", ((string)(null)), table35, "And ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table36.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 133
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table36, "And ");
#line 136
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table37.AddRow(new string[] {
                        string.Format("{0}", selection6)});
#line 138
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table37, "And ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table38.AddRow(new string[] {
                        string.Format("{0}", menuSelection3)});
#line 141
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table38, "And ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table39.AddRow(new string[] {
                        string.Format("{0}", settlementDateS),
                        string.Format("{0}", tradeDateS),
                        string.Format("{0}", tradeTimeS),
                        string.Format("{0}", indicativePriceS),
                        string.Format("{0}", finalPriceS),
                        string.Format("{0}", registerCode1S),
                        string.Format("{0}", chargeCode1S),
                        string.Format("{0}", chargeCode2S),
                        string.Format("{0}", chargeCode3S),
                        string.Format("{0}", chargeDesc1S),
                        string.Format("{0}", chargeDesc2S),
                        string.Format("{0}", chargeDesc3S),
                        string.Format("{0}", confirmStatus3),
                        string.Format("{0}", awardDateS)});
#line 144
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table39, "And ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table40.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 147
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table40, "And ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table41.AddRow(new string[] {
                        string.Format("{0}", selection7)});
#line 151
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table41, "And ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "Status",
                        "RegisterCode",
                        "TransCount",
                        "TransTotal",
                        "SettlementDate"});
            table42.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", status),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", transCount),
                        string.Format("{0}", transTotal),
                        string.Format("{0}", settlementDate3)});
#line 154
  testRunner.And("In BLKSCH01 I continue with the following values:", ((string)(null)), table42, "And ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "StatusDesc",
                        "BulkCount",
                        "BulkUnits",
                        "TransUnits",
                        "BulkMoney",
                        "TransMoney",
                        "TranTypeParent",
                        "HolderID",
                        "RegisterCode"});
            table43.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", statusDesc),
                        string.Format("{0}", bulkCount),
                        string.Format("{0}", bulkUnits),
                        string.Format("{0}", transUnits),
                        string.Format("{0}", bulkMoney),
                        string.Format("{0}", transMoney),
                        string.Format("{0}", tranTypeParent),
                        string.Format("{0}", searchName),
                        string.Format("{0}", registerCode)});
#line 157
  testRunner.And("In OLSB1010 I verify the following values:", ((string)(null)), table43, "And ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table44.AddRow(new string[] {
                        string.Format("{0}", selection8)});
#line 161
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table44, "And ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "Status",
                        "RegisterCode",
                        "TransCount",
                        "TransTotal",
                        "SettlementDate"});
            table45.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", status),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", transCount),
                        string.Format("{0}", transTotal),
                        string.Format("{0}", settlementDate3)});
#line 164
  testRunner.And("In BLKSCH01 I continue with the following values:", ((string)(null)), table45, "And ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkType",
                        "BulkTypeDesc",
                        "ClassCode",
                        "TotalCount",
                        "BulkTransUnits",
                        "BulkTransMoney",
                        "RegisterCode",
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "ActionM"});
            table46.AddRow(new string[] {
                        string.Format("{0}", bulkType),
                        string.Format("{0}", bulkTypeDesc),
                        string.Format("{0}", classCode),
                        string.Format("{0}", totalCount),
                        string.Format("{0}", bulkTransUnits),
                        string.Format("{0}", bulkTransMoney),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", actionM)});
#line 167
  testRunner.And("In BLKSCH02 I verify the following values:", ((string)(null)), table46, "And ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "FinalPrice",
                        "UnitsCalc",
                        "CostOFShares",
                        "TotalCost",
                        "ResidueKept",
                        "ResidueRefunded",
                        "PaymentAccount",
                        "BankType",
                        "BankCode",
                        "AccountNumber"});
            table47.AddRow(new string[] {
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", unitsCalc),
                        string.Format("{0}", costOFShares),
                        string.Format("{0}", totalCost),
                        string.Format("{0}", residueKept),
                        string.Format("{0}", residueRefunded),
                        string.Format("{0}", paymentAccount),
                        string.Format("{0}", bankType),
                        string.Format("{0}", bankCode),
                        string.Format("{0}", accountNumber)});
#line 170
  testRunner.And("In BLKSCH03 I verify the following values:", ((string)(null)), table47, "And ");
#line 173
  testRunner.And("I Escape to the Main Menu from Bulk Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 175
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 176
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table48.AddRow(new string[] {
                        string.Format("{0}", certificateLine1),
                        string.Format("{0}", certificateLine2),
                        string.Format("{0}", certificateLine3),
                        string.Format("{0}", certificateLine4),
                        string.Format("{0}", certificateLine5),
                        string.Format("{0}", certificateLine6),
                        string.Format("{0}", certificateLine7),
                        string.Format("{0}", certificateLine8),
                        string.Format("{0}", certificateLine9),
                        string.Format("{0}", certificateLine10)});
#line 177
 testRunner.Then("In ENS01012 I should see Register details as:", ((string)(null)), table48, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Deferred Plan Manual Purchase EB/EN")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("ESSPurchase")]
        [NUnit.Framework.TestCaseAttribute("Test1", "CPU_AUTO", "DMA", "EB", "14A", "ASA", "67360", "01/07/2014", "1000", "", "Y", "", "", "", "", "I0030313348", "Bonus", "1000.00", "Unchanged", "Unchanged", "MAN", "67361", "Y", "1", "1", "C", "", "01/07/2014", "1000.00", "", "", "Bonus", "AUD", "RPH", "Y", "1", "1", "", "", "", "", "", "", "B", "ABO", "ABO", "CBS", "B", "02/07/2014", "02/07/2014", "1000", "10.00000", "10.00000", "", "", "", "", "", "", "B", "02/07/2014", "10", "A", "A", "C", "C", "01/07/2014", "", "1", "1000.00", "100", "1000.00", "1000.00", "", "", "", "", "GCB", "AUD", "02/07/2014", "02/07/2014", "", "AUD", "02/07/2014", "Y", "", "", "", "", "", "", "", "", "", "", "DMA14", "5555", "NDF", "1", "", "N", "FBS", "S", "", "", "", "", "", "", "", "", "", "", "", "", "S", "", "BTQ", "", "SETTLED", "1", "1000.00", "Settled", "1", "100", "100", "1000.00", "1000.00", "ESABO", "BPE", "P", "PURCHASE", "100", "1000.00", "M", "WBC", "033-033", "55665566", "C", "/DMA/14A", "DMA/AMP COMPANY EB/EN", "14A 20140701EB   01/07/14           100", "**** Total for 20140701EB                100", "14A 20140701EN   01/07/14             0", "**** Total for 20140701EN                  0", "", "", "", "", "", "/PHA/14A", "PHA/PHANTOM ESAP MATCHING", "14A 20140701EN   01/07/14           100", "**** Total for 20140701EN                100", "", "", "", "", "", "", "", null)]
        public virtual void DeferredPlanManualPurchaseEBEN(
                    string test, 
                    string cOY, 
                    string classCode, 
                    string selection, 
                    string registerCode, 
                    string selection1, 
                    string transNumber, 
                    string transDate, 
                    string totalMoney, 
                    string totalUnits, 
                    string paymentFrequency, 
                    string residualInd, 
                    string grantCountry, 
                    string retentionDate, 
                    string taxRetentionDate, 
                    string searchName, 
                    string registerType1, 
                    string money1, 
                    string retentionDate1, 
                    string taxRetentionDate1, 
                    string selection2, 
                    string transNumberM, 
                    string paymentFrequencyM, 
                    string accumPeriod, 
                    string paymentNumber, 
                    string paymentStatus, 
                    string eol01901ReceiptCurrency, 
                    string paymentDate, 
                    string paymentAmount, 
                    string employerPymtAmt, 
                    string eol01901ExchangeRate, 
                    string registerType, 
                    string eol01902EmpBaseCurr, 
                    string selection3, 
                    string payFreq1, 
                    string accumPeriodFrom1, 
                    string accumPeriodTO1, 
                    string payFreq2, 
                    string accumPeriodFrom2, 
                    string accumPeriodTO2, 
                    string payFreq3, 
                    string accumPeriodFrom3, 
                    string accumPeriodTO3, 
                    string releaseMode, 
                    string confirmRelType, 
                    string bulkCode, 
                    string selection4, 
                    string menuSelection, 
                    string settlementDate, 
                    string tradeDate, 
                    string tradeTime, 
                    string indicativePrice, 
                    string finalPrice, 
                    string chargeCode1, 
                    string chargeCode2, 
                    string chargeCode3, 
                    string chargeDesc1, 
                    string chargeDesc2, 
                    string chargeDesc3, 
                    string confirmStatus, 
                    string confirmSettlement, 
                    string confirmFinalPrice, 
                    string menuSelection1, 
                    string confirmStatus1, 
                    string menuSelection2, 
                    string confirmStatus2, 
                    string awardDate, 
                    string registerCode1, 
                    string totalCount, 
                    string totalUnits1, 
                    string unitsCalc, 
                    string costOFShares, 
                    string totalCost, 
                    string residueKept, 
                    string residueRefunded, 
                    string taxONCharges, 
                    string accumCharges, 
                    string selection5, 
                    string bulkCurrency, 
                    string settlementFrom, 
                    string settlementTO, 
                    string bulkID1, 
                    string currency1, 
                    string settlementDate1, 
                    string processBulkInd1, 
                    string bulkID2, 
                    string currency2, 
                    string settlementDate2, 
                    string processBulkInd2, 
                    string bulkID3, 
                    string currency3, 
                    string settlementDate3, 
                    string processBulkInd3, 
                    string homeBankDesc, 
                    string ausTraceAccount, 
                    string paymentAccount, 
                    string orderNO, 
                    string ident, 
                    string nbrBulks, 
                    string paymentDate1, 
                    string addConvRateInd, 
                    string selection6, 
                    string menuSelection3, 
                    string settlementDateS, 
                    string tradeDateS, 
                    string tradeTimeS, 
                    string indicativePriceS, 
                    string finalPriceS, 
                    string registerCode1S, 
                    string chargeCode1S, 
                    string chargeCode2S, 
                    string chargeCode3S, 
                    string chargeDesc1S, 
                    string chargeDesc2S, 
                    string chargeDesc3S, 
                    string confirmStatus3, 
                    string awardDateS, 
                    string selection7, 
                    string bulkID, 
                    string status, 
                    string transCount, 
                    string transTotal, 
                    string statusDesc, 
                    string bulkCount, 
                    string bulkUnits, 
                    string transUnits, 
                    string bulkMoney, 
                    string transMoney, 
                    string tranTypeParent, 
                    string selection8, 
                    string bulkType, 
                    string bulkTypeDesc, 
                    string bulkTransUnits, 
                    string bulkTransMoney, 
                    string actionM, 
                    string bankType, 
                    string bankCode, 
                    string accountNumber, 
                    string action, 
                    string locateArgument, 
                    string certificateLine1, 
                    string certificateLine2, 
                    string certificateLine3, 
                    string certificateLine4, 
                    string certificateLine5, 
                    string certificateLine6, 
                    string certificateLine7, 
                    string certificateLine8, 
                    string certificateLine9, 
                    string certificateLine10, 
                    string locateArgument1, 
                    string certificateLine1P, 
                    string certificateLine2P, 
                    string certificateLine3P, 
                    string certificateLine4P, 
                    string certificateLine5P, 
                    string certificateLine6P, 
                    string certificateLine7P, 
                    string certificateLine8P, 
                    string certificateLine9P, 
                    string certificateLine10P, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "ESSPurchase"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Deferred Plan Manual Purchase EB/EN", @__tags);
#line 188
this.ScenarioSetup(scenarioInfo);
#line 190
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 191
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 192
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 194
  testRunner.And("In EOL00113 I click on \"awards\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table49.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 195
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table49, "And ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table50.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 198
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table50, "And ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table51.AddRow(new string[] {
                        string.Format("{0}", selection1)});
#line 201
  testRunner.And("In EOL00114 I continue with the following values:", ((string)(null)), table51, "And ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "TransDate",
                        "TotalMoney",
                        "TotalUnits",
                        "PaymentFrequency",
                        "ResidualInd",
                        "GrantCountry",
                        "RetentionDate",
                        "TaxRetentionDate",
                        "SearchName"});
            table52.AddRow(new string[] {
                        string.Format("{0}", transNumber),
                        string.Format("{0}", transDate),
                        string.Format("{0}", totalMoney),
                        string.Format("{0}", totalUnits),
                        string.Format("{0}", paymentFrequency),
                        string.Format("{0}", residualInd),
                        string.Format("{0}", grantCountry),
                        string.Format("{0}", retentionDate),
                        string.Format("{0}", taxRetentionDate),
                        string.Format("{0}", searchName)});
#line 204
  testRunner.And("In EOL00901 I Add Savings amount as:", ((string)(null)), table52, "And ");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterType1",
                        "Money1",
                        "PaymentFrequency",
                        "RetentionDate",
                        "TaxRetentionDate"});
            table53.AddRow(new string[] {
                        string.Format("{0}", registerType1),
                        string.Format("{0}", money1),
                        string.Format("{0}", paymentFrequency),
                        string.Format("{0}", retentionDate1),
                        string.Format("{0}", taxRetentionDate1)});
#line 207
  testRunner.And("In EOL00905 I continue with the following values:", ((string)(null)), table53, "And ");
#line 210
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 211
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 213
  testRunner.And("In EOL00113 I click on \"payments\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table54.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 214
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table54, "And ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table55.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 217
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table55, "And ");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table56.AddRow(new string[] {
                        string.Format("{0}", selection2)});
#line 220
  testRunner.And("In EOL00120 I continue with the following values:", ((string)(null)), table56, "And ");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "PaymentFrequency",
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentStatus",
                        "Eol01901ReceiptCurrency",
                        "PaymentDate",
                        "PaymentAmount",
                        "EmployerPymtAmt",
                        "Eol01901ExchangeRate",
                        "SearchName"});
            table57.AddRow(new string[] {
                        string.Format("{0}", transNumberM),
                        string.Format("{0}", paymentFrequencyM),
                        string.Format("{0}", accumPeriod),
                        string.Format("{0}", paymentNumber),
                        string.Format("{0}", paymentStatus),
                        string.Format("{0}", eol01901ReceiptCurrency),
                        string.Format("{0}", paymentDate),
                        string.Format("{0}", paymentAmount),
                        string.Format("{0}", employerPymtAmt),
                        string.Format("{0}", eol01901ExchangeRate),
                        string.Format("{0}", searchName)});
#line 223
  testRunner.And("In EOL01901 I Add Manual Payment as:", ((string)(null)), table57, "And ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentFrequency",
                        "RegisterType",
                        "PaymentAmount",
                        "Eol01902EmpBaseCurr"});
            table58.AddRow(new string[] {
                        string.Format("{0}", accumPeriod),
                        string.Format("{0}", paymentNumber),
                        string.Format("{0}", paymentFrequency),
                        string.Format("{0}", registerType),
                        string.Format("{0}", paymentAmount),
                        string.Format("{0}", eol01902EmpBaseCurr)});
#line 226
  testRunner.And("In EOL01902 I verify the following values:", ((string)(null)), table58, "And ");
#line 229
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 230
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 232
  testRunner.And("In EOL00113 I click on \"releases\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table59.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 233
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table59, "And ");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table60.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 236
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table60, "And ");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table61.AddRow(new string[] {
                        string.Format("{0}", selection3)});
#line 239
  testRunner.And("In EOL00106 I continue with the following values:", ((string)(null)), table61, "And ");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "PayFreq1",
                        "AccumPeriodFrom1",
                        "AccumPeriodTO1",
                        "PayFreq2",
                        "AccumPeriodFrom2",
                        "AccumPeriodTO2",
                        "PayFreq3",
                        "AccumPeriodFrom3",
                        "AccumPeriodTO3",
                        "ReleaseMode"});
            table62.AddRow(new string[] {
                        string.Format("{0}", payFreq1),
                        string.Format("{0}", accumPeriodFrom1),
                        string.Format("{0}", accumPeriodTO1),
                        string.Format("{0}", payFreq2),
                        string.Format("{0}", accumPeriodFrom2),
                        string.Format("{0}", accumPeriodTO2),
                        string.Format("{0}", payFreq3),
                        string.Format("{0}", accumPeriodFrom3),
                        string.Format("{0}", accumPeriodTO3),
                        string.Format("{0}", releaseMode)});
#line 242
  testRunner.And("In EOLBLK05 I continue with the following values:", ((string)(null)), table62, "And ");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmRelType"});
            table63.AddRow(new string[] {
                        string.Format("{0}", confirmRelType)});
#line 245
  testRunner.And("In EOLBLK04 I continue with the following values:", ((string)(null)), table63, "And ");
#line 248
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table64.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 249
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table64, "And ");
#line 252
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkCode"});
            table65.AddRow(new string[] {
                        string.Format("{0}", bulkCode)});
#line 254
  testRunner.And("I go to the Bulk Processing System and select Bulk code as:", ((string)(null)), table65, "And ");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table66.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 257
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table66, "And ");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table67.AddRow(new string[] {
                        string.Format("{0}", menuSelection)});
#line 260
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table67, "And ");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table68.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus)});
#line 264
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table68, "And ");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table69.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 267
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table69, "And ");
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table70.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 270
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table70, "And ");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table71.AddRow(new string[] {
                        string.Format("{0}", menuSelection1)});
#line 273
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table71, "And ");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table72.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode1),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus1)});
#line 276
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table72, "And ");
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table73.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 279
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table73, "And ");
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table74.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 282
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table74, "And ");
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table75.AddRow(new string[] {
                        string.Format("{0}", menuSelection2)});
#line 285
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table75, "And ");
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table76.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode1),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus2),
                        string.Format("{0}", awardDate)});
#line 288
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table76, "And ");
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table77.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 291
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table77, "And ");
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "TotalCount",
                        "TotalUnits",
                        "SettlementDate",
                        "FinalPrice",
                        "UnitsCalc",
                        "CostOFShares",
                        "TotalCost",
                        "ResidueKept",
                        "ResidueRefunded",
                        "TaxONCharges",
                        "AccumCharges"});
            table78.AddRow(new string[] {
                        string.Format("{0}", totalCount),
                        string.Format("{0}", totalUnits1),
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", unitsCalc),
                        string.Format("{0}", costOFShares),
                        string.Format("{0}", totalCost),
                        string.Format("{0}", residueKept),
                        string.Format("{0}", residueRefunded),
                        string.Format("{0}", taxONCharges),
                        string.Format("{0}", accumCharges)});
#line 294
  testRunner.And("In OLSB0404 I verify the following values:", ((string)(null)), table78, "And ");
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table79.AddRow(new string[] {
                        string.Format("{0}", selection5)});
#line 297
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table79, "And ");
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkCurrency",
                        "SettlementFrom",
                        "SettlementTO"});
            table80.AddRow(new string[] {
                        string.Format("{0}", bulkCurrency),
                        string.Format("{0}", settlementFrom),
                        string.Format("{0}", settlementTO)});
#line 301
  testRunner.And("In OLSB0105 I continue with the following values:", ((string)(null)), table80, "And ");
#line hidden
            TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID1",
                        "Currency1",
                        "SettlementDate1",
                        "ProcessBulkInd1",
                        "BulkID2",
                        "Currency2",
                        "SettlementDate2",
                        "ProcessBulkInd2",
                        "BulkID3",
                        "Currency3",
                        "SettlementDate3",
                        "ProcessBulkInd3"});
            table81.AddRow(new string[] {
                        string.Format("{0}", bulkID1),
                        string.Format("{0}", currency1),
                        string.Format("{0}", settlementDate1),
                        string.Format("{0}", processBulkInd1),
                        string.Format("{0}", bulkID2),
                        string.Format("{0}", currency2),
                        string.Format("{0}", settlementDate2),
                        string.Format("{0}", processBulkInd2),
                        string.Format("{0}", bulkID3),
                        string.Format("{0}", currency3),
                        string.Format("{0}", settlementDate3),
                        string.Format("{0}", processBulkInd3)});
#line 304
  testRunner.And("In OLSB0106 I continue with the following values:", ((string)(null)), table81, "And ");
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        "HomeBankDesc",
                        "AusTraceAccount"});
            table82.AddRow(new string[] {
                        string.Format("{0}", homeBankDesc),
                        string.Format("{0}", ausTraceAccount)});
#line 307
  testRunner.And("In OLSB0104 I verify the following values:", ((string)(null)), table82, "And ");
#line hidden
            TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                        "PaymentAccount",
                        "OrderNO",
                        "Ident",
                        "NbrBulks",
                        "SettlementFrom",
                        "SettlementTO",
                        "PaymentDate",
                        "AddConvRateInd"});
            table83.AddRow(new string[] {
                        string.Format("{0}", paymentAccount),
                        string.Format("{0}", orderNO),
                        string.Format("{0}", ident),
                        string.Format("{0}", nbrBulks),
                        string.Format("{0}", settlementFrom),
                        string.Format("{0}", settlementTO),
                        string.Format("{0}", paymentDate1),
                        string.Format("{0}", addConvRateInd)});
#line 310
  testRunner.And("In OLSB0101 I continue with the following values:", ((string)(null)), table83, "And ");
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table84.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 313
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table84, "And ");
#line 316
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table85.AddRow(new string[] {
                        string.Format("{0}", selection6)});
#line 318
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table85, "And ");
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table86.AddRow(new string[] {
                        string.Format("{0}", menuSelection3)});
#line 321
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table86, "And ");
#line hidden
            TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table87.AddRow(new string[] {
                        string.Format("{0}", settlementDateS),
                        string.Format("{0}", tradeDateS),
                        string.Format("{0}", tradeTimeS),
                        string.Format("{0}", indicativePriceS),
                        string.Format("{0}", finalPriceS),
                        string.Format("{0}", registerCode1S),
                        string.Format("{0}", chargeCode1S),
                        string.Format("{0}", chargeCode2S),
                        string.Format("{0}", chargeCode3S),
                        string.Format("{0}", chargeDesc1S),
                        string.Format("{0}", chargeDesc2S),
                        string.Format("{0}", chargeDesc3S),
                        string.Format("{0}", confirmStatus3),
                        string.Format("{0}", awardDateS)});
#line 324
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table87, "And ");
#line hidden
            TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table88.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 327
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table88, "And ");
#line hidden
            TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table89.AddRow(new string[] {
                        string.Format("{0}", selection7)});
#line 331
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table89, "And ");
#line hidden
            TechTalk.SpecFlow.Table table90 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "Status",
                        "RegisterCode",
                        "TransCount",
                        "TransTotal",
                        "SettlementDate"});
            table90.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", status),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", transCount),
                        string.Format("{0}", transTotal),
                        string.Format("{0}", settlementDate3)});
#line 334
  testRunner.And("In BLKSCH01 I continue with the following values:", ((string)(null)), table90, "And ");
#line hidden
            TechTalk.SpecFlow.Table table91 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "StatusDesc",
                        "BulkCount",
                        "BulkUnits",
                        "TransUnits",
                        "BulkMoney",
                        "TransMoney",
                        "TranTypeParent",
                        "HolderID",
                        "RegisterCode"});
            table91.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", statusDesc),
                        string.Format("{0}", bulkCount),
                        string.Format("{0}", bulkUnits),
                        string.Format("{0}", transUnits),
                        string.Format("{0}", bulkMoney),
                        string.Format("{0}", transMoney),
                        string.Format("{0}", tranTypeParent),
                        string.Format("{0}", searchName),
                        string.Format("{0}", registerCode)});
#line 337
  testRunner.And("In OLSB1010 I verify the following values:", ((string)(null)), table91, "And ");
#line hidden
            TechTalk.SpecFlow.Table table92 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table92.AddRow(new string[] {
                        string.Format("{0}", selection8)});
#line 341
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table92, "And ");
#line hidden
            TechTalk.SpecFlow.Table table93 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "Status",
                        "RegisterCode",
                        "TransCount",
                        "TransTotal",
                        "SettlementDate"});
            table93.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", status),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", transCount),
                        string.Format("{0}", transTotal),
                        string.Format("{0}", settlementDate3)});
#line 344
  testRunner.And("In BLKSCH01 I continue with the following values:", ((string)(null)), table93, "And ");
#line hidden
            TechTalk.SpecFlow.Table table94 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkType",
                        "BulkTypeDesc",
                        "ClassCode",
                        "TotalCount",
                        "BulkTransUnits",
                        "BulkTransMoney",
                        "RegisterCode",
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "ActionM"});
            table94.AddRow(new string[] {
                        string.Format("{0}", bulkType),
                        string.Format("{0}", bulkTypeDesc),
                        string.Format("{0}", classCode),
                        string.Format("{0}", totalCount),
                        string.Format("{0}", bulkTransUnits),
                        string.Format("{0}", bulkTransMoney),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", actionM)});
#line 347
  testRunner.And("In BLKSCH02 I verify the following values:", ((string)(null)), table94, "And ");
#line hidden
            TechTalk.SpecFlow.Table table95 = new TechTalk.SpecFlow.Table(new string[] {
                        "FinalPrice",
                        "UnitsCalc",
                        "CostOFShares",
                        "TotalCost",
                        "ResidueKept",
                        "ResidueRefunded",
                        "PaymentAccount",
                        "BankType",
                        "BankCode",
                        "AccountNumber"});
            table95.AddRow(new string[] {
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", unitsCalc),
                        string.Format("{0}", costOFShares),
                        string.Format("{0}", totalCost),
                        string.Format("{0}", residueKept),
                        string.Format("{0}", residueRefunded),
                        string.Format("{0}", paymentAccount),
                        string.Format("{0}", bankType),
                        string.Format("{0}", bankCode),
                        string.Format("{0}", accountNumber)});
#line 350
  testRunner.And("In BLKSCH03 I verify the following values:", ((string)(null)), table95, "And ");
#line 353
  testRunner.And("I Escape to the Main Menu from Bulk Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 355
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 356
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table96 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table96.AddRow(new string[] {
                        string.Format("{0}", certificateLine1),
                        string.Format("{0}", certificateLine2),
                        string.Format("{0}", certificateLine3),
                        string.Format("{0}", certificateLine4),
                        string.Format("{0}", certificateLine5),
                        string.Format("{0}", certificateLine6),
                        string.Format("{0}", certificateLine7),
                        string.Format("{0}", certificateLine8),
                        string.Format("{0}", certificateLine9),
                        string.Format("{0}", certificateLine10)});
#line 357
 testRunner.Then("In ENS01012 I should see Register details as:", ((string)(null)), table96, "Then ");
#line 360
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table97 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table97.AddRow(new string[] {
                        string.Format("{0}", certificateLine1P),
                        string.Format("{0}", certificateLine2P),
                        string.Format("{0}", certificateLine3P),
                        string.Format("{0}", certificateLine4P),
                        string.Format("{0}", certificateLine5P),
                        string.Format("{0}", certificateLine6P),
                        string.Format("{0}", certificateLine7P),
                        string.Format("{0}", certificateLine8P),
                        string.Format("{0}", certificateLine9P),
                        string.Format("{0}", certificateLine10P)});
#line 361
 testRunner.Then("In ENS01012 I should see Register details as:", ((string)(null)), table97, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Deferred Plan Manual Purchase EP/EM")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("ESSPurchase")]
        [NUnit.Framework.TestCaseAttribute("Test1", "CPU_AUTO", "EDP", "EP", "14A", "ASA", "67370", "01/07/2014", "1000", "", "M", "", "", "", "", "I0030313356", "Partnership", "1000.00", "", "", "MAN", "67371", "M", "1", "1", "C", "", "01/07/2014", "1000.00", "", "", "Part", "AUD", "RPH", "M", "1", "1", "", "", "", "", "", "", "B", "AWP", "EDP", "CBS", "B", "02/07/2014", "02/07/2014", "1000", "10.00000", "10.00000", "", "", "", "", "", "", "B", "02/07/2014", "10", "A", "A", "C", "C", "01/07/2014", "", "1", "1000.00", "100", "1000.00", "1000.00", "", "", "", "", "GCB", "AUD", "02/07/2014", "02/07/2014", "", "AUD", "02/07/2014", "Y", "", "", "", "", "", "", "", "", "", "", "EDP14", "5555", "NDF", "1", "", "N", "FBS", "S", "", "", "", "", "", "", "", "", "", "", "", "", "S", "", "BTQ", "", "SETTLED", "1", "1000.00", "Settled", "1", "100", "100", "1000.00", "1000.00", "ESAWP", "BPE", "P", "PURCHASE", "100", "1000.00", "M", "WBC", "033-033", "55665566", "C", "/EDP/14A", "EDP/EXPAT DEFERRED PLAN", "14A 20140701EM   01/07/14            11", "**** Total for 20140701EM                 11", "14A 20140701EP   01/07/14           100", "**** Total for 20140701EP                100", "", "", "", "", "", null)]
        public virtual void DeferredPlanManualPurchaseEPEM(
                    string test, 
                    string cOY, 
                    string classCode, 
                    string selection, 
                    string registerCode, 
                    string selection1, 
                    string transNumber, 
                    string transDate, 
                    string totalMoney, 
                    string totalUnits, 
                    string paymentFrequency, 
                    string residualInd, 
                    string grantCountry, 
                    string retentionDate, 
                    string taxRetentionDate, 
                    string searchName, 
                    string registerType1, 
                    string money1, 
                    string retentionDate1, 
                    string taxRetentionDate1, 
                    string selection2, 
                    string transNumberM, 
                    string paymentFrequencyM, 
                    string accumPeriod, 
                    string paymentNumber, 
                    string paymentStatus, 
                    string eol01901ReceiptCurrency, 
                    string paymentDate, 
                    string paymentAmount, 
                    string employerPymtAmt, 
                    string eol01901ExchangeRate, 
                    string registerType, 
                    string eol01902EmpBaseCurr, 
                    string selection3, 
                    string payFreq1, 
                    string accumPeriodFrom1, 
                    string accumPeriodTO1, 
                    string payFreq2, 
                    string accumPeriodFrom2, 
                    string accumPeriodTO2, 
                    string payFreq3, 
                    string accumPeriodFrom3, 
                    string accumPeriodTO3, 
                    string releaseMode, 
                    string confirmRelType, 
                    string bulkCode, 
                    string selection4, 
                    string menuSelection, 
                    string settlementDate, 
                    string tradeDate, 
                    string tradeTime, 
                    string indicativePrice, 
                    string finalPrice, 
                    string chargeCode1, 
                    string chargeCode2, 
                    string chargeCode3, 
                    string chargeDesc1, 
                    string chargeDesc2, 
                    string chargeDesc3, 
                    string confirmStatus, 
                    string confirmSettlement, 
                    string confirmFinalPrice, 
                    string menuSelection1, 
                    string confirmStatus1, 
                    string menuSelection2, 
                    string confirmStatus2, 
                    string awardDate, 
                    string registerCode1, 
                    string totalCount, 
                    string totalUnits1, 
                    string unitsCalc, 
                    string costOFShares, 
                    string totalCost, 
                    string residueKept, 
                    string residueRefunded, 
                    string taxONCharges, 
                    string accumCharges, 
                    string selection5, 
                    string bulkCurrency, 
                    string settlementFrom, 
                    string settlementTO, 
                    string bulkID1, 
                    string currency1, 
                    string settlementDate1, 
                    string processBulkInd1, 
                    string bulkID2, 
                    string currency2, 
                    string settlementDate2, 
                    string processBulkInd2, 
                    string bulkID3, 
                    string currency3, 
                    string settlementDate3, 
                    string processBulkInd3, 
                    string homeBankDesc, 
                    string ausTraceAccount, 
                    string paymentAccount, 
                    string orderNO, 
                    string ident, 
                    string nbrBulks, 
                    string paymentDate1, 
                    string addConvRateInd, 
                    string selection6, 
                    string menuSelection3, 
                    string settlementDateS, 
                    string tradeDateS, 
                    string tradeTimeS, 
                    string indicativePriceS, 
                    string finalPriceS, 
                    string registerCode1S, 
                    string chargeCode1S, 
                    string chargeCode2S, 
                    string chargeCode3S, 
                    string chargeDesc1S, 
                    string chargeDesc2S, 
                    string chargeDesc3S, 
                    string confirmStatus3, 
                    string awardDateS, 
                    string selection7, 
                    string bulkID, 
                    string status, 
                    string transCount, 
                    string transTotal, 
                    string statusDesc, 
                    string bulkCount, 
                    string bulkUnits, 
                    string transUnits, 
                    string bulkMoney, 
                    string transMoney, 
                    string tranTypeParent, 
                    string selection8, 
                    string bulkType, 
                    string bulkTypeDesc, 
                    string bulkTransUnits, 
                    string bulkTransMoney, 
                    string actionM, 
                    string bankType, 
                    string bankCode, 
                    string accountNumber, 
                    string action, 
                    string locateArgument, 
                    string certificateLine1, 
                    string certificateLine2, 
                    string certificateLine3, 
                    string certificateLine4, 
                    string certificateLine5, 
                    string certificateLine6, 
                    string certificateLine7, 
                    string certificateLine8, 
                    string certificateLine9, 
                    string certificateLine10, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "ESSPurchase"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Deferred Plan Manual Purchase EP/EM", @__tags);
#line 371
this.ScenarioSetup(scenarioInfo);
#line 373
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 374
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 375
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 377
  testRunner.And("In EOL00113 I click on \"awards\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table98 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table98.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 378
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table98, "And ");
#line hidden
            TechTalk.SpecFlow.Table table99 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table99.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 381
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table99, "And ");
#line hidden
            TechTalk.SpecFlow.Table table100 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table100.AddRow(new string[] {
                        string.Format("{0}", selection1)});
#line 384
  testRunner.And("In EOL00114 I continue with the following values:", ((string)(null)), table100, "And ");
#line hidden
            TechTalk.SpecFlow.Table table101 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "TransDate",
                        "TotalMoney",
                        "TotalUnits",
                        "PaymentFrequency",
                        "ResidualInd",
                        "GrantCountry",
                        "RetentionDate",
                        "TaxRetentionDate",
                        "SearchName"});
            table101.AddRow(new string[] {
                        string.Format("{0}", transNumber),
                        string.Format("{0}", transDate),
                        string.Format("{0}", totalMoney),
                        string.Format("{0}", totalUnits),
                        string.Format("{0}", paymentFrequency),
                        string.Format("{0}", residualInd),
                        string.Format("{0}", grantCountry),
                        string.Format("{0}", retentionDate),
                        string.Format("{0}", taxRetentionDate),
                        string.Format("{0}", searchName)});
#line 387
  testRunner.And("In EOL00901 I Add Savings amount as:", ((string)(null)), table101, "And ");
#line hidden
            TechTalk.SpecFlow.Table table102 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterType1",
                        "Money1",
                        "PaymentFrequency",
                        "RetentionDate",
                        "TaxRetentionDate"});
            table102.AddRow(new string[] {
                        string.Format("{0}", registerType1),
                        string.Format("{0}", money1),
                        string.Format("{0}", paymentFrequency),
                        string.Format("{0}", retentionDate1),
                        string.Format("{0}", taxRetentionDate1)});
#line 390
  testRunner.And("In EOL00905 I continue with the following values:", ((string)(null)), table102, "And ");
#line 393
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 394
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 396
  testRunner.And("In EOL00113 I click on \"payments\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table103 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table103.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 397
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table103, "And ");
#line hidden
            TechTalk.SpecFlow.Table table104 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table104.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 400
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table104, "And ");
#line hidden
            TechTalk.SpecFlow.Table table105 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table105.AddRow(new string[] {
                        string.Format("{0}", selection2)});
#line 403
  testRunner.And("In EOL00120 I continue with the following values:", ((string)(null)), table105, "And ");
#line hidden
            TechTalk.SpecFlow.Table table106 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "PaymentFrequency",
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentStatus",
                        "Eol01901ReceiptCurrency",
                        "PaymentDate",
                        "PaymentAmount",
                        "EmployerPymtAmt",
                        "Eol01901ExchangeRate",
                        "SearchName"});
            table106.AddRow(new string[] {
                        string.Format("{0}", transNumberM),
                        string.Format("{0}", paymentFrequencyM),
                        string.Format("{0}", accumPeriod),
                        string.Format("{0}", paymentNumber),
                        string.Format("{0}", paymentStatus),
                        string.Format("{0}", eol01901ReceiptCurrency),
                        string.Format("{0}", paymentDate),
                        string.Format("{0}", paymentAmount),
                        string.Format("{0}", employerPymtAmt),
                        string.Format("{0}", eol01901ExchangeRate),
                        string.Format("{0}", searchName)});
#line 406
  testRunner.And("In EOL01901 I Add Manual Payment as:", ((string)(null)), table106, "And ");
#line hidden
            TechTalk.SpecFlow.Table table107 = new TechTalk.SpecFlow.Table(new string[] {
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentFrequency",
                        "RegisterType",
                        "PaymentAmount",
                        "Eol01902EmpBaseCurr"});
            table107.AddRow(new string[] {
                        string.Format("{0}", accumPeriod),
                        string.Format("{0}", paymentNumber),
                        string.Format("{0}", paymentFrequency),
                        string.Format("{0}", registerType),
                        string.Format("{0}", paymentAmount),
                        string.Format("{0}", eol01902EmpBaseCurr)});
#line 409
  testRunner.And("In EOL01902 I verify the following values:", ((string)(null)), table107, "And ");
#line 412
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 413
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 415
  testRunner.And("In EOL00113 I click on \"releases\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table108 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table108.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 416
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table108, "And ");
#line hidden
            TechTalk.SpecFlow.Table table109 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table109.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 419
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table109, "And ");
#line hidden
            TechTalk.SpecFlow.Table table110 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table110.AddRow(new string[] {
                        string.Format("{0}", selection3)});
#line 422
  testRunner.And("In EOL00106 I continue with the following values:", ((string)(null)), table110, "And ");
#line hidden
            TechTalk.SpecFlow.Table table111 = new TechTalk.SpecFlow.Table(new string[] {
                        "PayFreq1",
                        "AccumPeriodFrom1",
                        "AccumPeriodTO1",
                        "PayFreq2",
                        "AccumPeriodFrom2",
                        "AccumPeriodTO2",
                        "PayFreq3",
                        "AccumPeriodFrom3",
                        "AccumPeriodTO3",
                        "ReleaseMode"});
            table111.AddRow(new string[] {
                        string.Format("{0}", payFreq1),
                        string.Format("{0}", accumPeriodFrom1),
                        string.Format("{0}", accumPeriodTO1),
                        string.Format("{0}", payFreq2),
                        string.Format("{0}", accumPeriodFrom2),
                        string.Format("{0}", accumPeriodTO2),
                        string.Format("{0}", payFreq3),
                        string.Format("{0}", accumPeriodFrom3),
                        string.Format("{0}", accumPeriodTO3),
                        string.Format("{0}", releaseMode)});
#line 425
  testRunner.And("In EOLBLK05 I continue with the following values:", ((string)(null)), table111, "And ");
#line hidden
            TechTalk.SpecFlow.Table table112 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmRelType"});
            table112.AddRow(new string[] {
                        string.Format("{0}", confirmRelType)});
#line 428
  testRunner.And("In EOLBLK04 I continue with the following values:", ((string)(null)), table112, "And ");
#line 431
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table113 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table113.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 432
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table113, "And ");
#line 435
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table114 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkCode"});
            table114.AddRow(new string[] {
                        string.Format("{0}", bulkCode)});
#line 437
  testRunner.And("I go to the Bulk Processing System and select Bulk code as:", ((string)(null)), table114, "And ");
#line hidden
            TechTalk.SpecFlow.Table table115 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table115.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 440
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table115, "And ");
#line hidden
            TechTalk.SpecFlow.Table table116 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table116.AddRow(new string[] {
                        string.Format("{0}", menuSelection)});
#line 443
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table116, "And ");
#line hidden
            TechTalk.SpecFlow.Table table117 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table117.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus)});
#line 447
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table117, "And ");
#line hidden
            TechTalk.SpecFlow.Table table118 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table118.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 450
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table118, "And ");
#line hidden
            TechTalk.SpecFlow.Table table119 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table119.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 453
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table119, "And ");
#line hidden
            TechTalk.SpecFlow.Table table120 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table120.AddRow(new string[] {
                        string.Format("{0}", menuSelection1)});
#line 456
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table120, "And ");
#line hidden
            TechTalk.SpecFlow.Table table121 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table121.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode1),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus1)});
#line 459
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table121, "And ");
#line hidden
            TechTalk.SpecFlow.Table table122 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table122.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 462
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table122, "And ");
#line hidden
            TechTalk.SpecFlow.Table table123 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table123.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 465
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table123, "And ");
#line hidden
            TechTalk.SpecFlow.Table table124 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table124.AddRow(new string[] {
                        string.Format("{0}", menuSelection2)});
#line 468
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table124, "And ");
#line hidden
            TechTalk.SpecFlow.Table table125 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table125.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode1),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus2),
                        string.Format("{0}", awardDate)});
#line 471
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table125, "And ");
#line hidden
            TechTalk.SpecFlow.Table table126 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table126.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 474
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table126, "And ");
#line hidden
            TechTalk.SpecFlow.Table table127 = new TechTalk.SpecFlow.Table(new string[] {
                        "TotalCount",
                        "TotalUnits",
                        "SettlementDate",
                        "FinalPrice",
                        "UnitsCalc",
                        "CostOFShares",
                        "TotalCost",
                        "ResidueKept",
                        "ResidueRefunded",
                        "TaxONCharges",
                        "AccumCharges"});
            table127.AddRow(new string[] {
                        string.Format("{0}", totalCount),
                        string.Format("{0}", totalUnits1),
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", unitsCalc),
                        string.Format("{0}", costOFShares),
                        string.Format("{0}", totalCost),
                        string.Format("{0}", residueKept),
                        string.Format("{0}", residueRefunded),
                        string.Format("{0}", taxONCharges),
                        string.Format("{0}", accumCharges)});
#line 477
  testRunner.And("In OLSB0404 I verify the following values:", ((string)(null)), table127, "And ");
#line hidden
            TechTalk.SpecFlow.Table table128 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table128.AddRow(new string[] {
                        string.Format("{0}", selection5)});
#line 480
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table128, "And ");
#line hidden
            TechTalk.SpecFlow.Table table129 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkCurrency",
                        "SettlementFrom",
                        "SettlementTO"});
            table129.AddRow(new string[] {
                        string.Format("{0}", bulkCurrency),
                        string.Format("{0}", settlementFrom),
                        string.Format("{0}", settlementTO)});
#line 484
  testRunner.And("In OLSB0105 I continue with the following values:", ((string)(null)), table129, "And ");
#line hidden
            TechTalk.SpecFlow.Table table130 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID1",
                        "Currency1",
                        "SettlementDate1",
                        "ProcessBulkInd1",
                        "BulkID2",
                        "Currency2",
                        "SettlementDate2",
                        "ProcessBulkInd2",
                        "BulkID3",
                        "Currency3",
                        "SettlementDate3",
                        "ProcessBulkInd3"});
            table130.AddRow(new string[] {
                        string.Format("{0}", bulkID1),
                        string.Format("{0}", currency1),
                        string.Format("{0}", settlementDate1),
                        string.Format("{0}", processBulkInd1),
                        string.Format("{0}", bulkID2),
                        string.Format("{0}", currency2),
                        string.Format("{0}", settlementDate2),
                        string.Format("{0}", processBulkInd2),
                        string.Format("{0}", bulkID3),
                        string.Format("{0}", currency3),
                        string.Format("{0}", settlementDate3),
                        string.Format("{0}", processBulkInd3)});
#line 487
  testRunner.And("In OLSB0106 I continue with the following values:", ((string)(null)), table130, "And ");
#line hidden
            TechTalk.SpecFlow.Table table131 = new TechTalk.SpecFlow.Table(new string[] {
                        "HomeBankDesc",
                        "AusTraceAccount"});
            table131.AddRow(new string[] {
                        string.Format("{0}", homeBankDesc),
                        string.Format("{0}", ausTraceAccount)});
#line 490
  testRunner.And("In OLSB0104 I verify the following values:", ((string)(null)), table131, "And ");
#line hidden
            TechTalk.SpecFlow.Table table132 = new TechTalk.SpecFlow.Table(new string[] {
                        "PaymentAccount",
                        "OrderNO",
                        "Ident",
                        "NbrBulks",
                        "SettlementFrom",
                        "SettlementTO",
                        "PaymentDate",
                        "AddConvRateInd"});
            table132.AddRow(new string[] {
                        string.Format("{0}", paymentAccount),
                        string.Format("{0}", orderNO),
                        string.Format("{0}", ident),
                        string.Format("{0}", nbrBulks),
                        string.Format("{0}", settlementFrom),
                        string.Format("{0}", settlementTO),
                        string.Format("{0}", paymentDate1),
                        string.Format("{0}", addConvRateInd)});
#line 493
  testRunner.And("In OLSB0101 I continue with the following values:", ((string)(null)), table132, "And ");
#line hidden
            TechTalk.SpecFlow.Table table133 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table133.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 496
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table133, "And ");
#line 499
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table134 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table134.AddRow(new string[] {
                        string.Format("{0}", selection6)});
#line 501
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table134, "And ");
#line hidden
            TechTalk.SpecFlow.Table table135 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table135.AddRow(new string[] {
                        string.Format("{0}", menuSelection3)});
#line 504
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table135, "And ");
#line hidden
            TechTalk.SpecFlow.Table table136 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table136.AddRow(new string[] {
                        string.Format("{0}", settlementDateS),
                        string.Format("{0}", tradeDateS),
                        string.Format("{0}", tradeTimeS),
                        string.Format("{0}", indicativePriceS),
                        string.Format("{0}", finalPriceS),
                        string.Format("{0}", registerCode1S),
                        string.Format("{0}", chargeCode1S),
                        string.Format("{0}", chargeCode2S),
                        string.Format("{0}", chargeCode3S),
                        string.Format("{0}", chargeDesc1S),
                        string.Format("{0}", chargeDesc2S),
                        string.Format("{0}", chargeDesc3S),
                        string.Format("{0}", confirmStatus3),
                        string.Format("{0}", awardDateS)});
#line 507
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table136, "And ");
#line hidden
            TechTalk.SpecFlow.Table table137 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table137.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 510
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table137, "And ");
#line hidden
            TechTalk.SpecFlow.Table table138 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table138.AddRow(new string[] {
                        string.Format("{0}", selection7)});
#line 514
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table138, "And ");
#line hidden
            TechTalk.SpecFlow.Table table139 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "Status",
                        "RegisterCode",
                        "TransCount",
                        "TransTotal",
                        "SettlementDate"});
            table139.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", status),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", transCount),
                        string.Format("{0}", transTotal),
                        string.Format("{0}", settlementDate3)});
#line 517
  testRunner.And("In BLKSCH01 I continue with the following values:", ((string)(null)), table139, "And ");
#line hidden
            TechTalk.SpecFlow.Table table140 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "StatusDesc",
                        "BulkCount",
                        "BulkUnits",
                        "TransUnits",
                        "BulkMoney",
                        "TransMoney",
                        "TranTypeParent",
                        "HolderID",
                        "RegisterCode"});
            table140.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", statusDesc),
                        string.Format("{0}", bulkCount),
                        string.Format("{0}", bulkUnits),
                        string.Format("{0}", transUnits),
                        string.Format("{0}", bulkMoney),
                        string.Format("{0}", transMoney),
                        string.Format("{0}", tranTypeParent),
                        string.Format("{0}", searchName),
                        string.Format("{0}", registerCode)});
#line 520
  testRunner.And("In OLSB1010 I verify the following values:", ((string)(null)), table140, "And ");
#line hidden
            TechTalk.SpecFlow.Table table141 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table141.AddRow(new string[] {
                        string.Format("{0}", selection8)});
#line 524
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table141, "And ");
#line hidden
            TechTalk.SpecFlow.Table table142 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "Status",
                        "RegisterCode",
                        "TransCount",
                        "TransTotal",
                        "SettlementDate"});
            table142.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", status),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", transCount),
                        string.Format("{0}", transTotal),
                        string.Format("{0}", settlementDate3)});
#line 527
  testRunner.And("In BLKSCH01 I continue with the following values:", ((string)(null)), table142, "And ");
#line hidden
            TechTalk.SpecFlow.Table table143 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkType",
                        "BulkTypeDesc",
                        "ClassCode",
                        "TotalCount",
                        "BulkTransUnits",
                        "BulkTransMoney",
                        "RegisterCode",
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "ActionM"});
            table143.AddRow(new string[] {
                        string.Format("{0}", bulkType),
                        string.Format("{0}", bulkTypeDesc),
                        string.Format("{0}", classCode),
                        string.Format("{0}", totalCount),
                        string.Format("{0}", bulkTransUnits),
                        string.Format("{0}", bulkTransMoney),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", actionM)});
#line 530
  testRunner.And("In BLKSCH02 I verify the following values:", ((string)(null)), table143, "And ");
#line hidden
            TechTalk.SpecFlow.Table table144 = new TechTalk.SpecFlow.Table(new string[] {
                        "FinalPrice",
                        "UnitsCalc",
                        "CostOFShares",
                        "TotalCost",
                        "ResidueKept",
                        "ResidueRefunded",
                        "PaymentAccount",
                        "BankType",
                        "BankCode",
                        "AccountNumber"});
            table144.AddRow(new string[] {
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", unitsCalc),
                        string.Format("{0}", costOFShares),
                        string.Format("{0}", totalCost),
                        string.Format("{0}", residueKept),
                        string.Format("{0}", residueRefunded),
                        string.Format("{0}", paymentAccount),
                        string.Format("{0}", bankType),
                        string.Format("{0}", bankCode),
                        string.Format("{0}", accountNumber)});
#line 533
  testRunner.And("In BLKSCH03 I verify the following values:", ((string)(null)), table144, "And ");
#line 536
  testRunner.And("I Escape to the Main Menu from Bulk Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 538
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 539
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table145 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table145.AddRow(new string[] {
                        string.Format("{0}", certificateLine1),
                        string.Format("{0}", certificateLine2),
                        string.Format("{0}", certificateLine3),
                        string.Format("{0}", certificateLine4),
                        string.Format("{0}", certificateLine5),
                        string.Format("{0}", certificateLine6),
                        string.Format("{0}", certificateLine7),
                        string.Format("{0}", certificateLine8),
                        string.Format("{0}", certificateLine9),
                        string.Format("{0}", certificateLine10)});
#line 540
 testRunner.Then("In ENS01012 I should see Register details as:", ((string)(null)), table145, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Bulk Purchase Deferred Plan EP")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("ESSPurchase")]
        [NUnit.Framework.TestCaseAttribute("Test1", "CPU_AUTO", "DEP", "EP", "12A", "INT", "12/07/2012", "ESSUPLDEP.CSV", "F", "N", "Y", "N", "N", "Y", "N", "N", "Y", "N", "N", "N", "Y", "N", "F", "Y", "", "UPL", "", "C", "Bulk Upload Process", "", "A", "MAN", "67380", "M", "1", "1", "C", "", "12/07/2012", "150.00", "", "", "I0030238206", "Part", "AUD", "67381", "M", "1", "1", "C", "", "12/07/2012", "250.00", "", "", "I0030303521", "Part", "AUD", "67382", "M", "1", "1", "C", "", "12/07/2012", "300.00", "", "", "I0030303539", "Part", "AUD", "RPH", "M", "1", "1", "", "", "", "", "", "", "B", "AWP", "DEP", "CBS", "B", "16/07/2012", "16/07/2012", "1000", "10.00000", "10.00000", "", "", "", "", "", "", "B", "A", "C", "16/07/2012", "10.00000", "", "A", "C", "12/07/2012", "3", "700.00", "70", "700.00", "700.00", "", "", "", "", "GCB", "AUD", "16/07/2012", "16/07/2012", "", "AUD", "16/07/2012", "Y", "", "", "", "", "", "", "", "", "", "", "DP12A", "5555", "NDF", "1", "", "N", "S", "", "", "", "", "", "", "", "", "", "", "", "", "S", "", "FBS", "BTQ", "", "SETTLED", "3", "700.00", "Settled", "3", "70", "15", "700.00", "150.00", "ESAWP", "I0030238206", "F", "70", "25", "700.00", "250.00", "I0030303521", "70", "30", "700.00", "300.00", "I0030303539", "BPE", "P", "PURCHASE", "70", "700.00", "M", "", "", "", "C", "/DEP/12A", "DEP/DEFERRED EMP SHARE PLAN - AU", "12A 20120712EB   12/07/12           450", "**** Total for 20120712EB                450", "12A 20120712EP   12/07/12            15", "**** Total for 20120712EP                 15", "", "", "", "", "", null)]
        public virtual void BulkPurchaseDeferredPlanEP(
                    string test, 
                    string cOY, 
                    string classCode, 
                    string selection, 
                    string registerCode, 
                    string selection1, 
                    string appropDate, 
                    string inputFilename, 
                    string nameSelection, 
                    string pCSelection, 
                    string addressMatching, 
                    string allowBlankAddress, 
                    string updateAddrDetails, 
                    string updateEmpDetails, 
                    string autoGenEmpUnqID, 
                    string clearEmpUnqID, 
                    string updateContactDets, 
                    string uploadTfn, 
                    string updateMandates, 
                    string updateDrp, 
                    string runTrnedt, 
                    string createNewAccounts, 
                    string reportFullTotals, 
                    string autoFtpReportsInd, 
                    string fileName, 
                    string selection2, 
                    string timestamp, 
                    string confirm, 
                    string reportHeading, 
                    string reportDate, 
                    string reportSequence, 
                    string selection3, 
                    string transNumber1, 
                    string paymentFrequency1, 
                    string accumPeriod1, 
                    string paymentNumber1, 
                    string paymentStatus1, 
                    string eol01901ReceiptCurrency1, 
                    string paymentDate1, 
                    string paymentAmount1, 
                    string employerPymtAmt1, 
                    string eol01901ExchangeRate1, 
                    string searchName1, 
                    string registerType1, 
                    string eol01902EmpBaseCurr1, 
                    string transNumber2, 
                    string paymentFrequency2, 
                    string accumPeriod2, 
                    string paymentNumber2, 
                    string paymentStatus2, 
                    string eol01901ReceiptCurrency2, 
                    string paymentDate2, 
                    string paymentAmount2, 
                    string employerPymtAmt2, 
                    string eol01901ExchangeRate2, 
                    string searchName2, 
                    string registerType2, 
                    string eol01902EmpBaseCurr2, 
                    string transNumber3, 
                    string paymentFrequency3, 
                    string accumPeriod3, 
                    string paymentNumber3, 
                    string paymentStatus3, 
                    string eol01901ReceiptCurrency3, 
                    string paymentDate3, 
                    string paymentAmount3, 
                    string employerPymtAmt3, 
                    string eol01901ExchangeRate3, 
                    string searchName3, 
                    string registerType3, 
                    string eol01902EmpBaseCurr3, 
                    string selection4, 
                    string payFreq1, 
                    string accumPeriodFrom1, 
                    string accumPeriodTO1, 
                    string payFreq2, 
                    string accumPeriodFrom2, 
                    string accumPeriodTO2, 
                    string payFreq3, 
                    string accumPeriodFrom3, 
                    string accumPeriodTO3, 
                    string releaseMode, 
                    string confirmRelType, 
                    string bulkCode, 
                    string selection5, 
                    string menuSelection, 
                    string settlementDate, 
                    string tradeDate, 
                    string tradeTime, 
                    string indicativePrice, 
                    string finalPrice, 
                    string chargeCode1, 
                    string chargeCode2, 
                    string chargeCode3, 
                    string chargeDesc1, 
                    string chargeDesc2, 
                    string chargeDesc3, 
                    string confirmStatus, 
                    string confirmStatus1, 
                    string confirmStatus2, 
                    string confirmSettlement, 
                    string confirmFinalPrice, 
                    string registerCode1, 
                    string menuSelection1, 
                    string menuSelection2, 
                    string awardDate, 
                    string totalCount, 
                    string totalUnits1, 
                    string unitsCalc, 
                    string costOFShares, 
                    string totalCost, 
                    string residueKept, 
                    string residueRefunded, 
                    string taxONCharges, 
                    string accumCharges, 
                    string selection6, 
                    string bulkCurrency, 
                    string settlementFrom, 
                    string settlementTO, 
                    string bulkID1, 
                    string currency1, 
                    string settlementDate1, 
                    string processBulkInd1, 
                    string bulkID2, 
                    string currency2, 
                    string settlementDate2, 
                    string processBulkInd2, 
                    string bulkID3, 
                    string currency3, 
                    string settlementDate3, 
                    string processBulkInd3, 
                    string homeBankDesc, 
                    string ausTraceAccount, 
                    string paymentAccount, 
                    string orderNO, 
                    string ident, 
                    string nbrBulks, 
                    string paymentDate, 
                    string addConvRateInd, 
                    string menuSelection3, 
                    string settlementDateS, 
                    string tradeDateS, 
                    string tradeTimeS, 
                    string indicativePriceS, 
                    string finalPriceS, 
                    string registerCode1S, 
                    string chargeCode1S, 
                    string chargeCode2S, 
                    string chargeCode3S, 
                    string chargeDesc1S, 
                    string chargeDesc2S, 
                    string chargeDesc3S, 
                    string confirmStatus3, 
                    string awardDateS, 
                    string selection7, 
                    string selection8, 
                    string bulkID, 
                    string status, 
                    string transCount, 
                    string transTotal, 
                    string statusDesc, 
                    string bulkCount, 
                    string bulkUnits, 
                    string transUnits, 
                    string bulkMoney, 
                    string transMoney, 
                    string tranTypeParent, 
                    string holderID1, 
                    string enquiryAction, 
                    string bulkUnits1, 
                    string transUnits1, 
                    string bulkMoney1, 
                    string transMoney1, 
                    string holderID2, 
                    string bulkUnits2, 
                    string transUnits2, 
                    string bulkMoney2, 
                    string transMoney2, 
                    string holderID3, 
                    string selection9, 
                    string bulkType, 
                    string bulkTypeDesc, 
                    string bulkTransUnits, 
                    string bulkTransMoney, 
                    string actionM, 
                    string bankType, 
                    string bankCode, 
                    string accountNumber, 
                    string action, 
                    string locateArgument, 
                    string certificateLine1A, 
                    string certificateLine2A, 
                    string certificateLine3A, 
                    string certificateLine4A, 
                    string certificateLine5A, 
                    string certificateLine6A, 
                    string certificateLine7A, 
                    string certificateLine8A, 
                    string certificateLine9A, 
                    string certificateLine10A, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "ESSPurchase"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Bulk Purchase Deferred Plan EP", @__tags);
#line 550
this.ScenarioSetup(scenarioInfo);
#line 553
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 554
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 555
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 557
  testRunner.And("In EOL00113 I click on \"awards\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table146 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table146.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 558
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table146, "And ");
#line hidden
            TechTalk.SpecFlow.Table table147 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table147.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 561
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table147, "And ");
#line hidden
            TechTalk.SpecFlow.Table table148 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table148.AddRow(new string[] {
                        string.Format("{0}", selection1)});
#line 564
  testRunner.And("In EOL00114 I continue with the following values:", ((string)(null)), table148, "And ");
#line hidden
            TechTalk.SpecFlow.Table table149 = new TechTalk.SpecFlow.Table(new string[] {
                        "AppropDate"});
            table149.AddRow(new string[] {
                        string.Format("{0}", appropDate)});
#line 567
  testRunner.And("In EOL00116 I continue with the following values:", ((string)(null)), table149, "And ");
#line hidden
            TechTalk.SpecFlow.Table table150 = new TechTalk.SpecFlow.Table(new string[] {
                        "InputFilename",
                        "NameSelection",
                        "PCSelection",
                        "AddressMatching",
                        "AllowBlankAddress",
                        "UpdateAddrDetails",
                        "UpdateEmpDetails",
                        "AutoGenEmpUnqID",
                        "ClearEmpUnqID",
                        "UpdateContactDets",
                        "UploadTfn",
                        "UpdateMandates",
                        "UpdateDrp",
                        "RunTrnedt",
                        "CreateNewAccounts",
                        "ReportFullTotals",
                        "AutoFtpReportsInd"});
            table150.AddRow(new string[] {
                        string.Format("{0}", inputFilename),
                        string.Format("{0}", nameSelection),
                        string.Format("{0}", pCSelection),
                        string.Format("{0}", addressMatching),
                        string.Format("{0}", allowBlankAddress),
                        string.Format("{0}", updateAddrDetails),
                        string.Format("{0}", updateEmpDetails),
                        string.Format("{0}", autoGenEmpUnqID),
                        string.Format("{0}", clearEmpUnqID),
                        string.Format("{0}", updateContactDets),
                        string.Format("{0}", uploadTfn),
                        string.Format("{0}", updateMandates),
                        string.Format("{0}", updateDrp),
                        string.Format("{0}", runTrnedt),
                        string.Format("{0}", createNewAccounts),
                        string.Format("{0}", reportFullTotals),
                        string.Format("{0}", autoFtpReportsInd)});
#line 570
  testRunner.And("In EOL00501 I continue with the following values:", ((string)(null)), table150, "And ");
#line 573
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table151 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table151.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 574
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table151, "And ");
#line hidden
            TechTalk.SpecFlow.Table table152 = new TechTalk.SpecFlow.Table(new string[] {
                        "COY",
                        "FileName"});
            table152.AddRow(new string[] {
                        string.Format("{0}", cOY),
                        string.Format("{0}", fileName)});
#line 577
 testRunner.When("I read Timestamps from the Health and Integrity file as:", ((string)(null)), table152, "When ");
#line 580
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 581
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 582
  testRunner.And("In EOL00113 I click on \"awards\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table153 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table153.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 583
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table153, "And ");
#line hidden
            TechTalk.SpecFlow.Table table154 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table154.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 586
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table154, "And ");
#line hidden
            TechTalk.SpecFlow.Table table155 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table155.AddRow(new string[] {
                        string.Format("{0}", selection2)});
#line 590
  testRunner.And("In EOL00114 I continue with the following values:", ((string)(null)), table155, "And ");
#line hidden
            TechTalk.SpecFlow.Table table156 = new TechTalk.SpecFlow.Table(new string[] {
                        "AppropDate"});
            table156.AddRow(new string[] {
                        string.Format("{0}", appropDate)});
#line 593
  testRunner.And("In EOL00116 I continue with the following values:", ((string)(null)), table156, "And ");
#line hidden
            TechTalk.SpecFlow.Table table157 = new TechTalk.SpecFlow.Table(new string[] {
                        "Timestamp",
                        "ReportFullTotals",
                        "AutoFtpReportsInd",
                        "Confirm"});
            table157.AddRow(new string[] {
                        string.Format("{0}", timestamp),
                        string.Format("{0}", reportFullTotals),
                        string.Format("{0}", autoFtpReportsInd),
                        string.Format("{0}", confirm)});
#line 596
  testRunner.And("In EOL00601 I continue with the following values:", ((string)(null)), table157, "And ");
#line hidden
            TechTalk.SpecFlow.Table table158 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "ReportDate",
                        "ReportSequence"});
            table158.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSequence)});
#line 599
  testRunner.And("In EOL00602 I continue with the following values:", ((string)(null)), table158, "And ");
#line 602
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table159 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table159.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 603
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table159, "And ");
#line 606
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 607
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 609
  testRunner.And("In EOL00113 I click on \"payments\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table160 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table160.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 610
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table160, "And ");
#line hidden
            TechTalk.SpecFlow.Table table161 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table161.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 613
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table161, "And ");
#line hidden
            TechTalk.SpecFlow.Table table162 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table162.AddRow(new string[] {
                        string.Format("{0}", selection3)});
#line 616
  testRunner.And("In EOL00120 I continue with the following values:", ((string)(null)), table162, "And ");
#line hidden
            TechTalk.SpecFlow.Table table163 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "PaymentFrequency",
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentStatus",
                        "Eol01901ReceiptCurrency",
                        "PaymentDate",
                        "PaymentAmount",
                        "EmployerPymtAmt",
                        "Eol01901ExchangeRate",
                        "SearchName"});
            table163.AddRow(new string[] {
                        string.Format("{0}", transNumber1),
                        string.Format("{0}", paymentFrequency1),
                        string.Format("{0}", accumPeriod1),
                        string.Format("{0}", paymentNumber1),
                        string.Format("{0}", paymentStatus1),
                        string.Format("{0}", eol01901ReceiptCurrency1),
                        string.Format("{0}", paymentDate1),
                        string.Format("{0}", paymentAmount1),
                        string.Format("{0}", employerPymtAmt1),
                        string.Format("{0}", eol01901ExchangeRate1),
                        string.Format("{0}", searchName1)});
#line 619
  testRunner.And("In EOL01901 I Add Manual Payment as:", ((string)(null)), table163, "And ");
#line hidden
            TechTalk.SpecFlow.Table table164 = new TechTalk.SpecFlow.Table(new string[] {
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentFrequency",
                        "RegisterType",
                        "PaymentAmount",
                        "Eol01902EmpBaseCurr"});
            table164.AddRow(new string[] {
                        string.Format("{0}", accumPeriod1),
                        string.Format("{0}", paymentNumber1),
                        string.Format("{0}", paymentFrequency1),
                        string.Format("{0}", registerType1),
                        string.Format("{0}", paymentAmount1),
                        string.Format("{0}", eol01902EmpBaseCurr1)});
#line 622
  testRunner.And("In EOL01902 I verify the following values:", ((string)(null)), table164, "And ");
#line hidden
            TechTalk.SpecFlow.Table table165 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "PaymentFrequency",
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentStatus",
                        "Eol01901ReceiptCurrency",
                        "PaymentDate",
                        "PaymentAmount",
                        "EmployerPymtAmt",
                        "Eol01901ExchangeRate",
                        "SearchName"});
            table165.AddRow(new string[] {
                        string.Format("{0}", transNumber2),
                        string.Format("{0}", paymentFrequency2),
                        string.Format("{0}", accumPeriod2),
                        string.Format("{0}", paymentNumber2),
                        string.Format("{0}", paymentStatus2),
                        string.Format("{0}", eol01901ReceiptCurrency2),
                        string.Format("{0}", paymentDate2),
                        string.Format("{0}", paymentAmount2),
                        string.Format("{0}", employerPymtAmt2),
                        string.Format("{0}", eol01901ExchangeRate2),
                        string.Format("{0}", searchName2)});
#line 625
  testRunner.And("In EOL01901 I Add Manual Payment as:", ((string)(null)), table165, "And ");
#line hidden
            TechTalk.SpecFlow.Table table166 = new TechTalk.SpecFlow.Table(new string[] {
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentFrequency",
                        "RegisterType",
                        "PaymentAmount",
                        "Eol01902EmpBaseCurr"});
            table166.AddRow(new string[] {
                        string.Format("{0}", accumPeriod2),
                        string.Format("{0}", paymentNumber2),
                        string.Format("{0}", paymentFrequency2),
                        string.Format("{0}", registerType2),
                        string.Format("{0}", paymentAmount2),
                        string.Format("{0}", eol01902EmpBaseCurr2)});
#line 628
  testRunner.And("In EOL01902 I verify the following values:", ((string)(null)), table166, "And ");
#line hidden
            TechTalk.SpecFlow.Table table167 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "PaymentFrequency",
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentStatus",
                        "Eol01901ReceiptCurrency",
                        "PaymentDate",
                        "PaymentAmount",
                        "EmployerPymtAmt",
                        "Eol01901ExchangeRate",
                        "SearchName"});
            table167.AddRow(new string[] {
                        string.Format("{0}", transNumber3),
                        string.Format("{0}", paymentFrequency3),
                        string.Format("{0}", accumPeriod3),
                        string.Format("{0}", paymentNumber3),
                        string.Format("{0}", paymentStatus3),
                        string.Format("{0}", eol01901ReceiptCurrency3),
                        string.Format("{0}", paymentDate3),
                        string.Format("{0}", paymentAmount3),
                        string.Format("{0}", employerPymtAmt3),
                        string.Format("{0}", eol01901ExchangeRate3),
                        string.Format("{0}", searchName3)});
#line 631
  testRunner.And("In EOL01901 I Add Manual Payment as:", ((string)(null)), table167, "And ");
#line hidden
            TechTalk.SpecFlow.Table table168 = new TechTalk.SpecFlow.Table(new string[] {
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentFrequency",
                        "RegisterType",
                        "PaymentAmount",
                        "Eol01902EmpBaseCurr"});
            table168.AddRow(new string[] {
                        string.Format("{0}", accumPeriod3),
                        string.Format("{0}", paymentNumber3),
                        string.Format("{0}", paymentFrequency3),
                        string.Format("{0}", registerType3),
                        string.Format("{0}", paymentAmount3),
                        string.Format("{0}", eol01902EmpBaseCurr3)});
#line 634
  testRunner.And("In EOL01902 I verify the following values:", ((string)(null)), table168, "And ");
#line 637
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 639
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 640
  testRunner.And("In EOL00113 I click on \"releases\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table169 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table169.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 641
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table169, "And ");
#line hidden
            TechTalk.SpecFlow.Table table170 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table170.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 644
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table170, "And ");
#line hidden
            TechTalk.SpecFlow.Table table171 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table171.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 647
  testRunner.And("In EOL00106 I continue with the following values:", ((string)(null)), table171, "And ");
#line hidden
            TechTalk.SpecFlow.Table table172 = new TechTalk.SpecFlow.Table(new string[] {
                        "PayFreq1",
                        "AccumPeriodFrom1",
                        "AccumPeriodTO1",
                        "PayFreq2",
                        "AccumPeriodFrom2",
                        "AccumPeriodTO2",
                        "PayFreq3",
                        "AccumPeriodFrom3",
                        "AccumPeriodTO3",
                        "ReleaseMode"});
            table172.AddRow(new string[] {
                        string.Format("{0}", payFreq1),
                        string.Format("{0}", accumPeriodFrom1),
                        string.Format("{0}", accumPeriodTO1),
                        string.Format("{0}", payFreq2),
                        string.Format("{0}", accumPeriodFrom2),
                        string.Format("{0}", accumPeriodTO2),
                        string.Format("{0}", payFreq3),
                        string.Format("{0}", accumPeriodFrom3),
                        string.Format("{0}", accumPeriodTO3),
                        string.Format("{0}", releaseMode)});
#line 650
  testRunner.And("In EOLBLK05 I continue with the following values:", ((string)(null)), table172, "And ");
#line hidden
            TechTalk.SpecFlow.Table table173 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmRelType"});
            table173.AddRow(new string[] {
                        string.Format("{0}", confirmRelType)});
#line 653
  testRunner.And("In EOLBLK04 I continue with the following values:", ((string)(null)), table173, "And ");
#line 656
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table174 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table174.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 657
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table174, "And ");
#line 660
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table175 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkCode"});
            table175.AddRow(new string[] {
                        string.Format("{0}", bulkCode)});
#line 662
  testRunner.And("I go to the Bulk Processing System and select Bulk code as:", ((string)(null)), table175, "And ");
#line hidden
            TechTalk.SpecFlow.Table table176 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table176.AddRow(new string[] {
                        string.Format("{0}", selection5)});
#line 665
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table176, "And ");
#line hidden
            TechTalk.SpecFlow.Table table177 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table177.AddRow(new string[] {
                        string.Format("{0}", menuSelection)});
#line 668
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table177, "And ");
#line hidden
            TechTalk.SpecFlow.Table table178 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table178.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus)});
#line 672
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table178, "And ");
#line hidden
            TechTalk.SpecFlow.Table table179 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table179.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 675
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table179, "And ");
#line hidden
            TechTalk.SpecFlow.Table table180 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table180.AddRow(new string[] {
                        string.Format("{0}", selection5)});
#line 678
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table180, "And ");
#line hidden
            TechTalk.SpecFlow.Table table181 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table181.AddRow(new string[] {
                        string.Format("{0}", menuSelection1)});
#line 681
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table181, "And ");
#line hidden
            TechTalk.SpecFlow.Table table182 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table182.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode1),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus1)});
#line 684
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table182, "And ");
#line hidden
            TechTalk.SpecFlow.Table table183 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table183.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 687
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table183, "And ");
#line hidden
            TechTalk.SpecFlow.Table table184 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table184.AddRow(new string[] {
                        string.Format("{0}", selection5)});
#line 690
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table184, "And ");
#line hidden
            TechTalk.SpecFlow.Table table185 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table185.AddRow(new string[] {
                        string.Format("{0}", menuSelection2)});
#line 693
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table185, "And ");
#line hidden
            TechTalk.SpecFlow.Table table186 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table186.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode1),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus2),
                        string.Format("{0}", awardDate)});
#line 696
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table186, "And ");
#line hidden
            TechTalk.SpecFlow.Table table187 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table187.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 699
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table187, "And ");
#line hidden
            TechTalk.SpecFlow.Table table188 = new TechTalk.SpecFlow.Table(new string[] {
                        "TotalCount",
                        "TotalUnits",
                        "SettlementDate",
                        "FinalPrice",
                        "UnitsCalc",
                        "CostOFShares",
                        "TotalCost",
                        "ResidueKept",
                        "ResidueRefunded",
                        "TaxONCharges",
                        "AccumCharges"});
            table188.AddRow(new string[] {
                        string.Format("{0}", totalCount),
                        string.Format("{0}", totalUnits1),
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", unitsCalc),
                        string.Format("{0}", costOFShares),
                        string.Format("{0}", totalCost),
                        string.Format("{0}", residueKept),
                        string.Format("{0}", residueRefunded),
                        string.Format("{0}", taxONCharges),
                        string.Format("{0}", accumCharges)});
#line 702
 testRunner.And("In OLSB0404 I verify the following values:", ((string)(null)), table188, "And ");
#line hidden
            TechTalk.SpecFlow.Table table189 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table189.AddRow(new string[] {
                        string.Format("{0}", selection6)});
#line 705
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table189, "And ");
#line hidden
            TechTalk.SpecFlow.Table table190 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkCurrency",
                        "SettlementFrom",
                        "SettlementTO"});
            table190.AddRow(new string[] {
                        string.Format("{0}", bulkCurrency),
                        string.Format("{0}", settlementFrom),
                        string.Format("{0}", settlementTO)});
#line 709
 testRunner.And("In OLSB0105 I continue with the following values:", ((string)(null)), table190, "And ");
#line hidden
            TechTalk.SpecFlow.Table table191 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID1",
                        "Currency1",
                        "SettlementDate1",
                        "ProcessBulkInd1",
                        "BulkID2",
                        "Currency2",
                        "SettlementDate2",
                        "ProcessBulkInd2",
                        "BulkID3",
                        "Currency3",
                        "SettlementDate3",
                        "ProcessBulkInd3"});
            table191.AddRow(new string[] {
                        string.Format("{0}", bulkID1),
                        string.Format("{0}", currency1),
                        string.Format("{0}", settlementDate1),
                        string.Format("{0}", processBulkInd1),
                        string.Format("{0}", bulkID2),
                        string.Format("{0}", currency2),
                        string.Format("{0}", settlementDate2),
                        string.Format("{0}", processBulkInd2),
                        string.Format("{0}", bulkID3),
                        string.Format("{0}", currency3),
                        string.Format("{0}", settlementDate3),
                        string.Format("{0}", processBulkInd3)});
#line 712
  testRunner.And("In OLSB0106 I continue with the following values:", ((string)(null)), table191, "And ");
#line hidden
            TechTalk.SpecFlow.Table table192 = new TechTalk.SpecFlow.Table(new string[] {
                        "HomeBankDesc",
                        "AusTraceAccount"});
            table192.AddRow(new string[] {
                        string.Format("{0}", homeBankDesc),
                        string.Format("{0}", ausTraceAccount)});
#line 715
 testRunner.And("In OLSB0104 I verify the following values:", ((string)(null)), table192, "And ");
#line hidden
            TechTalk.SpecFlow.Table table193 = new TechTalk.SpecFlow.Table(new string[] {
                        "PaymentAccount",
                        "OrderNO",
                        "Ident",
                        "NbrBulks",
                        "SettlementFrom",
                        "SettlementTO",
                        "PaymentDate",
                        "AddConvRateInd"});
            table193.AddRow(new string[] {
                        string.Format("{0}", paymentAccount),
                        string.Format("{0}", orderNO),
                        string.Format("{0}", ident),
                        string.Format("{0}", nbrBulks),
                        string.Format("{0}", settlementFrom),
                        string.Format("{0}", settlementTO),
                        string.Format("{0}", paymentDate),
                        string.Format("{0}", addConvRateInd)});
#line 718
  testRunner.And("In OLSB0101 I continue with the following values:", ((string)(null)), table193, "And ");
#line hidden
            TechTalk.SpecFlow.Table table194 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table194.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 721
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table194, "And ");
#line 724
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table195 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table195.AddRow(new string[] {
                        string.Format("{0}", selection7)});
#line 726
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table195, "And ");
#line hidden
            TechTalk.SpecFlow.Table table196 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table196.AddRow(new string[] {
                        string.Format("{0}", menuSelection3)});
#line 729
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table196, "And ");
#line hidden
            TechTalk.SpecFlow.Table table197 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table197.AddRow(new string[] {
                        string.Format("{0}", settlementDateS),
                        string.Format("{0}", tradeDateS),
                        string.Format("{0}", tradeTimeS),
                        string.Format("{0}", indicativePriceS),
                        string.Format("{0}", finalPriceS),
                        string.Format("{0}", registerCode1S),
                        string.Format("{0}", chargeCode1S),
                        string.Format("{0}", chargeCode2S),
                        string.Format("{0}", chargeCode3S),
                        string.Format("{0}", chargeDesc1S),
                        string.Format("{0}", chargeDesc2S),
                        string.Format("{0}", chargeDesc3S),
                        string.Format("{0}", confirmStatus3),
                        string.Format("{0}", awardDateS)});
#line 732
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table197, "And ");
#line hidden
            TechTalk.SpecFlow.Table table198 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table198.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 735
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table198, "And ");
#line hidden
            TechTalk.SpecFlow.Table table199 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table199.AddRow(new string[] {
                        string.Format("{0}", selection8)});
#line 739
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table199, "And ");
#line hidden
            TechTalk.SpecFlow.Table table200 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "Status",
                        "RegisterCode",
                        "TransCount",
                        "TransTotal",
                        "SettlementDate"});
            table200.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", status),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", transCount),
                        string.Format("{0}", transTotal),
                        string.Format("{0}", settlementDate3)});
#line 742
  testRunner.And("In BLKSCH01 I continue with the following values:", ((string)(null)), table200, "And ");
#line hidden
            TechTalk.SpecFlow.Table table201 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "StatusDesc",
                        "BulkCount",
                        "BulkUnits",
                        "TransUnits",
                        "BulkMoney",
                        "TransMoney",
                        "TranTypeParent",
                        "HolderID",
                        "RegisterCode"});
            table201.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", statusDesc),
                        string.Format("{0}", bulkCount),
                        string.Format("{0}", bulkUnits),
                        string.Format("{0}", transUnits),
                        string.Format("{0}", bulkMoney),
                        string.Format("{0}", transMoney),
                        string.Format("{0}", tranTypeParent),
                        string.Format("{0}", holderID1),
                        string.Format("{0}", registerCode)});
#line 745
  testRunner.And("In OLSB1010 I verify the following values:", ((string)(null)), table201, "And ");
#line hidden
            TechTalk.SpecFlow.Table table202 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnquiryAction"});
            table202.AddRow(new string[] {
                        string.Format("{0}", enquiryAction)});
#line 748
  testRunner.And("In OLSB1010 I continue with the following values:", ((string)(null)), table202, "And ");
#line hidden
            TechTalk.SpecFlow.Table table203 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "StatusDesc",
                        "BulkCount",
                        "BulkUnits",
                        "TransUnits",
                        "BulkMoney",
                        "TransMoney",
                        "TranTypeParent",
                        "HolderID",
                        "RegisterCode"});
            table203.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", statusDesc),
                        string.Format("{0}", bulkCount),
                        string.Format("{0}", bulkUnits1),
                        string.Format("{0}", transUnits1),
                        string.Format("{0}", bulkMoney1),
                        string.Format("{0}", transMoney1),
                        string.Format("{0}", tranTypeParent),
                        string.Format("{0}", holderID2),
                        string.Format("{0}", registerCode)});
#line 751
  testRunner.And("In OLSB1010 I verify the following values:", ((string)(null)), table203, "And ");
#line hidden
            TechTalk.SpecFlow.Table table204 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnquiryAction"});
            table204.AddRow(new string[] {
                        string.Format("{0}", enquiryAction)});
#line 754
  testRunner.And("In OLSB1010 I continue with the following values:", ((string)(null)), table204, "And ");
#line hidden
            TechTalk.SpecFlow.Table table205 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "StatusDesc",
                        "BulkCount",
                        "BulkUnits",
                        "TransUnits",
                        "BulkMoney",
                        "TransMoney",
                        "TranTypeParent",
                        "HolderID",
                        "RegisterCode"});
            table205.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", statusDesc),
                        string.Format("{0}", bulkCount),
                        string.Format("{0}", bulkUnits2),
                        string.Format("{0}", transUnits2),
                        string.Format("{0}", bulkMoney2),
                        string.Format("{0}", transMoney2),
                        string.Format("{0}", tranTypeParent),
                        string.Format("{0}", holderID3),
                        string.Format("{0}", registerCode)});
#line 757
  testRunner.And("In OLSB1010 I verify the following values:", ((string)(null)), table205, "And ");
#line 760
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table206 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table206.AddRow(new string[] {
                        string.Format("{0}", selection9)});
#line 761
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table206, "And ");
#line hidden
            TechTalk.SpecFlow.Table table207 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "Status",
                        "RegisterCode",
                        "TransCount",
                        "TransTotal",
                        "SettlementDate"});
            table207.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", status),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", transCount),
                        string.Format("{0}", transTotal),
                        string.Format("{0}", settlementDate3)});
#line 764
  testRunner.And("In BLKSCH01 I continue with the following values:", ((string)(null)), table207, "And ");
#line hidden
            TechTalk.SpecFlow.Table table208 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkType",
                        "BulkTypeDesc",
                        "ClassCode",
                        "TotalCount",
                        "BulkTransUnits",
                        "BulkTransMoney",
                        "RegisterCode",
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "ActionM"});
            table208.AddRow(new string[] {
                        string.Format("{0}", bulkType),
                        string.Format("{0}", bulkTypeDesc),
                        string.Format("{0}", classCode),
                        string.Format("{0}", totalCount),
                        string.Format("{0}", bulkTransUnits),
                        string.Format("{0}", bulkTransMoney),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", actionM)});
#line 767
  testRunner.And("In BLKSCH02 I verify the following values:", ((string)(null)), table208, "And ");
#line hidden
            TechTalk.SpecFlow.Table table209 = new TechTalk.SpecFlow.Table(new string[] {
                        "FinalPrice",
                        "UnitsCalc",
                        "CostOFShares",
                        "TotalCost",
                        "ResidueKept",
                        "ResidueRefunded",
                        "PaymentAccount",
                        "BankType",
                        "BankCode",
                        "AccountNumber"});
            table209.AddRow(new string[] {
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", unitsCalc),
                        string.Format("{0}", costOFShares),
                        string.Format("{0}", totalCost),
                        string.Format("{0}", residueKept),
                        string.Format("{0}", residueRefunded),
                        string.Format("{0}", paymentAccount),
                        string.Format("{0}", bankType),
                        string.Format("{0}", bankCode),
                        string.Format("{0}", accountNumber)});
#line 770
  testRunner.And("In BLKSCH03 I verify the following values:", ((string)(null)), table209, "And ");
#line 773
  testRunner.And("I Escape to the Main Menu from Bulk Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 775
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", holderID1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 776
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table210 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table210.AddRow(new string[] {
                        string.Format("{0}", certificateLine1A),
                        string.Format("{0}", certificateLine2A),
                        string.Format("{0}", certificateLine3A),
                        string.Format("{0}", certificateLine4A),
                        string.Format("{0}", certificateLine5A),
                        string.Format("{0}", certificateLine6A),
                        string.Format("{0}", certificateLine7A),
                        string.Format("{0}", certificateLine8A),
                        string.Format("{0}", certificateLine9A),
                        string.Format("{0}", certificateLine10A)});
#line 777
 testRunner.Then("In ENS01012 I should see Register details as:", ((string)(null)), table210, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Bulk Purchase Exempt Plan EP")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("ESSPurchase")]
        [NUnit.Framework.TestCaseAttribute("Test1", "CPU_AUTO", "EXA", "EP", "13A", "INT", "12/07/2013", "ESSUPLEXA.CSV", "F", "N", "Y", "N", "N", "Y", "N", "N", "Y", "N", "N", "N", "Y", "N", "F", "Y", "", "UPL", "", "C", "Bulk Upload Process", "", "A", "MAN", "67390", "M", "1", "1", "C", "", "12/07/2013", "300.00", "", "", "I0100008769", "Part", "AUD", "67391", "M", "1", "1", "C", "", "12/07/2013", "250.00", "", "", "I0970335617", "Part", "AUD", "RPH", "M", "1", "1", "", "", "", "", "", "", "B", "AWP", "EXP", "CBS", "B", "16/07/2012", "16/07/2012", "1000", "10.00000", "10.00000", "", "", "", "", "", "", "B", "A", "C", "16/07/2012", "10.00000", "", "A", "C", "12/07/2013", "2", "550.00", "55", "550.00", "550.00", "", "", "", "", "GCB", "AUD", "16/07/2012", "16/07/2012", "", "AUD", "16/07/2012", "Y", "", "", "", "", "", "", "", "", "", "", "EXA13", "5555", "NDF", "1", "", "N", "S", "", "", "", "", "", "", "", "", "", "", "", "", "S", "", "FBS", "BTQ", "", "SETTLED", "2", "550.00", "Settled", "2", "55", "30", "550.00", "300.00", "ESAWP", "I0100008769", "F", "55", "25", "550.00", "250.00", "I0970335617", "BPE", "P", "PURCHASE", "55", "550.00", "M", "WBC", "033-033", "55665566", "C", "/EXA/13A", "EXA/EXEMPT EMP SHARE PLAN - AU", "13A 20130712EP   12/07/13            30", "**** Total for 20130712EP                 30", "", "", "", "", "", "", "", "S", "13A 20130712EP   12/07/13            25", "**** Total for 20130712EP                 25", null)]
        public virtual void BulkPurchaseExemptPlanEP(
                    string test, 
                    string cOY, 
                    string classCode, 
                    string selection, 
                    string registerCode, 
                    string selection1, 
                    string appropDate, 
                    string inputFilename, 
                    string nameSelection, 
                    string pCSelection, 
                    string addressMatching, 
                    string allowBlankAddress, 
                    string updateAddrDetails, 
                    string updateEmpDetails, 
                    string autoGenEmpUnqID, 
                    string clearEmpUnqID, 
                    string updateContactDets, 
                    string uploadTfn, 
                    string updateMandates, 
                    string updateDrp, 
                    string runTrnedt, 
                    string createNewAccounts, 
                    string reportFullTotals, 
                    string autoFtpReportsInd, 
                    string fileName, 
                    string selection2, 
                    string timestamp, 
                    string confirm, 
                    string reportHeading, 
                    string reportDate, 
                    string reportSequence, 
                    string selection3, 
                    string transNumber1, 
                    string paymentFrequency1, 
                    string accumPeriod1, 
                    string paymentNumber1, 
                    string paymentStatus1, 
                    string eol01901ReceiptCurrency1, 
                    string paymentDate1, 
                    string paymentAmount1, 
                    string employerPymtAmt1, 
                    string eol01901ExchangeRate1, 
                    string searchName1, 
                    string registerType1, 
                    string eol01902EmpBaseCurr1, 
                    string transNumber2, 
                    string paymentFrequency2, 
                    string accumPeriod2, 
                    string paymentNumber2, 
                    string paymentStatus2, 
                    string eol01901ReceiptCurrency2, 
                    string paymentDate2, 
                    string paymentAmount2, 
                    string employerPymtAmt2, 
                    string eol01901ExchangeRate2, 
                    string searchName2, 
                    string registerType2, 
                    string eol01902EmpBaseCurr2, 
                    string selection4, 
                    string payFreq1, 
                    string accumPeriodFrom1, 
                    string accumPeriodTO1, 
                    string payFreq2, 
                    string accumPeriodFrom2, 
                    string accumPeriodTO2, 
                    string payFreq3, 
                    string accumPeriodFrom3, 
                    string accumPeriodTO3, 
                    string releaseMode, 
                    string confirmRelType, 
                    string bulkCode, 
                    string selection5, 
                    string menuSelection, 
                    string settlementDate, 
                    string tradeDate, 
                    string tradeTime, 
                    string indicativePrice, 
                    string finalPrice, 
                    string chargeCode1, 
                    string chargeCode2, 
                    string chargeCode3, 
                    string chargeDesc1, 
                    string chargeDesc2, 
                    string chargeDesc3, 
                    string confirmStatus, 
                    string confirmStatus1, 
                    string confirmStatus2, 
                    string confirmSettlement, 
                    string confirmFinalPrice, 
                    string registerCode1, 
                    string menuSelection1, 
                    string menuSelection2, 
                    string awardDate, 
                    string totalCount, 
                    string totalUnits1, 
                    string unitsCalc, 
                    string costOFShares, 
                    string totalCost, 
                    string residueKept, 
                    string residueRefunded, 
                    string taxONCharges, 
                    string accumCharges, 
                    string selection6, 
                    string bulkCurrency, 
                    string settlementFrom, 
                    string settlementTO, 
                    string bulkID1, 
                    string currency1, 
                    string settlementDate1, 
                    string processBulkInd1, 
                    string bulkID2, 
                    string currency2, 
                    string settlementDate2, 
                    string processBulkInd2, 
                    string bulkID3, 
                    string currency3, 
                    string settlementDate3, 
                    string processBulkInd3, 
                    string homeBankDesc, 
                    string ausTraceAccount, 
                    string paymentAccount, 
                    string orderNO, 
                    string ident, 
                    string nbrBulks, 
                    string paymentDate, 
                    string addConvRateInd, 
                    string menuSelection3, 
                    string settlementDateS, 
                    string tradeDateS, 
                    string tradeTimeS, 
                    string indicativePriceS, 
                    string finalPriceS, 
                    string registerCode1S, 
                    string chargeCode1S, 
                    string chargeCode2S, 
                    string chargeCode3S, 
                    string chargeDesc1S, 
                    string chargeDesc2S, 
                    string chargeDesc3S, 
                    string confirmStatus3, 
                    string awardDateS, 
                    string selection7, 
                    string selection8, 
                    string bulkID, 
                    string status, 
                    string transCount, 
                    string transTotal, 
                    string statusDesc, 
                    string bulkCount, 
                    string bulkUnits, 
                    string transUnits, 
                    string bulkMoney, 
                    string transMoney, 
                    string tranTypeParent, 
                    string holderID1, 
                    string enquiryAction, 
                    string bulkUnits1, 
                    string transUnits1, 
                    string bulkMoney1, 
                    string transMoney1, 
                    string holderID2, 
                    string selection9, 
                    string bulkType, 
                    string bulkTypeDesc, 
                    string bulkTransUnits, 
                    string bulkTransMoney, 
                    string actionM, 
                    string bankType, 
                    string bankCode, 
                    string accountNumber, 
                    string action, 
                    string locateArgument, 
                    string certificateLine1A, 
                    string certificateLine2A, 
                    string certificateLine3A, 
                    string certificateLine4A, 
                    string certificateLine5A, 
                    string certificateLine6A, 
                    string certificateLine7A, 
                    string certificateLine8A, 
                    string certificateLine9A, 
                    string certificateLine10A, 
                    string action1, 
                    string certificateLine2B, 
                    string certificateLine3B, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "ESSPurchase"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Bulk Purchase Exempt Plan EP", @__tags);
#line 799
this.ScenarioSetup(scenarioInfo);
#line 802
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 803
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 804
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 806
  testRunner.And("In EOL00113 I click on \"awards\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table211 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table211.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 807
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table211, "And ");
#line hidden
            TechTalk.SpecFlow.Table table212 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table212.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 810
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table212, "And ");
#line hidden
            TechTalk.SpecFlow.Table table213 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table213.AddRow(new string[] {
                        string.Format("{0}", selection1)});
#line 813
  testRunner.And("In EOL00114 I continue with the following values:", ((string)(null)), table213, "And ");
#line hidden
            TechTalk.SpecFlow.Table table214 = new TechTalk.SpecFlow.Table(new string[] {
                        "AppropDate"});
            table214.AddRow(new string[] {
                        string.Format("{0}", appropDate)});
#line 816
  testRunner.And("In EOL00116 I continue with the following values:", ((string)(null)), table214, "And ");
#line hidden
            TechTalk.SpecFlow.Table table215 = new TechTalk.SpecFlow.Table(new string[] {
                        "InputFilename",
                        "NameSelection",
                        "PCSelection",
                        "AddressMatching",
                        "AllowBlankAddress",
                        "UpdateAddrDetails",
                        "UpdateEmpDetails",
                        "AutoGenEmpUnqID",
                        "ClearEmpUnqID",
                        "UpdateContactDets",
                        "UploadTfn",
                        "UpdateMandates",
                        "UpdateDrp",
                        "RunTrnedt",
                        "CreateNewAccounts",
                        "ReportFullTotals",
                        "AutoFtpReportsInd"});
            table215.AddRow(new string[] {
                        string.Format("{0}", inputFilename),
                        string.Format("{0}", nameSelection),
                        string.Format("{0}", pCSelection),
                        string.Format("{0}", addressMatching),
                        string.Format("{0}", allowBlankAddress),
                        string.Format("{0}", updateAddrDetails),
                        string.Format("{0}", updateEmpDetails),
                        string.Format("{0}", autoGenEmpUnqID),
                        string.Format("{0}", clearEmpUnqID),
                        string.Format("{0}", updateContactDets),
                        string.Format("{0}", uploadTfn),
                        string.Format("{0}", updateMandates),
                        string.Format("{0}", updateDrp),
                        string.Format("{0}", runTrnedt),
                        string.Format("{0}", createNewAccounts),
                        string.Format("{0}", reportFullTotals),
                        string.Format("{0}", autoFtpReportsInd)});
#line 819
  testRunner.And("In EOL00501 I continue with the following values:", ((string)(null)), table215, "And ");
#line 822
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table216 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table216.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 823
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table216, "And ");
#line hidden
            TechTalk.SpecFlow.Table table217 = new TechTalk.SpecFlow.Table(new string[] {
                        "COY",
                        "FileName"});
            table217.AddRow(new string[] {
                        string.Format("{0}", cOY),
                        string.Format("{0}", fileName)});
#line 826
 testRunner.When("I read Timestamps from the Health and Integrity file as:", ((string)(null)), table217, "When ");
#line 829
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 830
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 831
  testRunner.And("In EOL00113 I click on \"awards\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table218 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table218.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 832
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table218, "And ");
#line hidden
            TechTalk.SpecFlow.Table table219 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table219.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 835
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table219, "And ");
#line hidden
            TechTalk.SpecFlow.Table table220 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table220.AddRow(new string[] {
                        string.Format("{0}", selection2)});
#line 839
  testRunner.And("In EOL00114 I continue with the following values:", ((string)(null)), table220, "And ");
#line hidden
            TechTalk.SpecFlow.Table table221 = new TechTalk.SpecFlow.Table(new string[] {
                        "AppropDate"});
            table221.AddRow(new string[] {
                        string.Format("{0}", appropDate)});
#line 842
  testRunner.And("In EOL00116 I continue with the following values:", ((string)(null)), table221, "And ");
#line hidden
            TechTalk.SpecFlow.Table table222 = new TechTalk.SpecFlow.Table(new string[] {
                        "Timestamp",
                        "ReportFullTotals",
                        "AutoFtpReportsInd",
                        "Confirm"});
            table222.AddRow(new string[] {
                        string.Format("{0}", timestamp),
                        string.Format("{0}", reportFullTotals),
                        string.Format("{0}", autoFtpReportsInd),
                        string.Format("{0}", confirm)});
#line 845
  testRunner.And("In EOL00601 I continue with the following values:", ((string)(null)), table222, "And ");
#line hidden
            TechTalk.SpecFlow.Table table223 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "ReportDate",
                        "ReportSequence"});
            table223.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSequence)});
#line 848
  testRunner.And("In EOL00602 I continue with the following values:", ((string)(null)), table223, "And ");
#line 851
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table224 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table224.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 852
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table224, "And ");
#line 855
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 856
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 858
  testRunner.And("In EOL00113 I click on \"payments\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table225 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table225.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 859
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table225, "And ");
#line hidden
            TechTalk.SpecFlow.Table table226 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table226.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 862
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table226, "And ");
#line hidden
            TechTalk.SpecFlow.Table table227 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table227.AddRow(new string[] {
                        string.Format("{0}", selection3)});
#line 865
  testRunner.And("In EOL00120 I continue with the following values:", ((string)(null)), table227, "And ");
#line hidden
            TechTalk.SpecFlow.Table table228 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "PaymentFrequency",
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentStatus",
                        "Eol01901ReceiptCurrency",
                        "PaymentDate",
                        "PaymentAmount",
                        "EmployerPymtAmt",
                        "Eol01901ExchangeRate",
                        "SearchName"});
            table228.AddRow(new string[] {
                        string.Format("{0}", transNumber1),
                        string.Format("{0}", paymentFrequency1),
                        string.Format("{0}", accumPeriod1),
                        string.Format("{0}", paymentNumber1),
                        string.Format("{0}", paymentStatus1),
                        string.Format("{0}", eol01901ReceiptCurrency1),
                        string.Format("{0}", paymentDate1),
                        string.Format("{0}", paymentAmount1),
                        string.Format("{0}", employerPymtAmt1),
                        string.Format("{0}", eol01901ExchangeRate1),
                        string.Format("{0}", searchName1)});
#line 868
  testRunner.And("In EOL01901 I Add Manual Payment as:", ((string)(null)), table228, "And ");
#line hidden
            TechTalk.SpecFlow.Table table229 = new TechTalk.SpecFlow.Table(new string[] {
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentFrequency",
                        "RegisterType",
                        "PaymentAmount",
                        "Eol01902EmpBaseCurr"});
            table229.AddRow(new string[] {
                        string.Format("{0}", accumPeriod1),
                        string.Format("{0}", paymentNumber1),
                        string.Format("{0}", paymentFrequency1),
                        string.Format("{0}", registerType1),
                        string.Format("{0}", paymentAmount1),
                        string.Format("{0}", eol01902EmpBaseCurr1)});
#line 871
  testRunner.And("In EOL01902 I verify the following values:", ((string)(null)), table229, "And ");
#line hidden
            TechTalk.SpecFlow.Table table230 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "PaymentFrequency",
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentStatus",
                        "Eol01901ReceiptCurrency",
                        "PaymentDate",
                        "PaymentAmount",
                        "EmployerPymtAmt",
                        "Eol01901ExchangeRate",
                        "SearchName"});
            table230.AddRow(new string[] {
                        string.Format("{0}", transNumber2),
                        string.Format("{0}", paymentFrequency2),
                        string.Format("{0}", accumPeriod2),
                        string.Format("{0}", paymentNumber2),
                        string.Format("{0}", paymentStatus2),
                        string.Format("{0}", eol01901ReceiptCurrency2),
                        string.Format("{0}", paymentDate2),
                        string.Format("{0}", paymentAmount2),
                        string.Format("{0}", employerPymtAmt2),
                        string.Format("{0}", eol01901ExchangeRate2),
                        string.Format("{0}", searchName2)});
#line 874
  testRunner.And("In EOL01901 I Add Manual Payment as:", ((string)(null)), table230, "And ");
#line hidden
            TechTalk.SpecFlow.Table table231 = new TechTalk.SpecFlow.Table(new string[] {
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentFrequency",
                        "RegisterType",
                        "PaymentAmount",
                        "Eol01902EmpBaseCurr"});
            table231.AddRow(new string[] {
                        string.Format("{0}", accumPeriod2),
                        string.Format("{0}", paymentNumber2),
                        string.Format("{0}", paymentFrequency2),
                        string.Format("{0}", registerType2),
                        string.Format("{0}", paymentAmount2),
                        string.Format("{0}", eol01902EmpBaseCurr2)});
#line 877
  testRunner.And("In EOL01902 I verify the following values:", ((string)(null)), table231, "And ");
#line 880
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 882
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 883
  testRunner.And("In EOL00113 I click on \"releases\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table232 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table232.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 884
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table232, "And ");
#line hidden
            TechTalk.SpecFlow.Table table233 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table233.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 887
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table233, "And ");
#line hidden
            TechTalk.SpecFlow.Table table234 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table234.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 890
  testRunner.And("In EOL00106 I continue with the following values:", ((string)(null)), table234, "And ");
#line hidden
            TechTalk.SpecFlow.Table table235 = new TechTalk.SpecFlow.Table(new string[] {
                        "PayFreq1",
                        "AccumPeriodFrom1",
                        "AccumPeriodTO1",
                        "PayFreq2",
                        "AccumPeriodFrom2",
                        "AccumPeriodTO2",
                        "PayFreq3",
                        "AccumPeriodFrom3",
                        "AccumPeriodTO3",
                        "ReleaseMode"});
            table235.AddRow(new string[] {
                        string.Format("{0}", payFreq1),
                        string.Format("{0}", accumPeriodFrom1),
                        string.Format("{0}", accumPeriodTO1),
                        string.Format("{0}", payFreq2),
                        string.Format("{0}", accumPeriodFrom2),
                        string.Format("{0}", accumPeriodTO2),
                        string.Format("{0}", payFreq3),
                        string.Format("{0}", accumPeriodFrom3),
                        string.Format("{0}", accumPeriodTO3),
                        string.Format("{0}", releaseMode)});
#line 893
  testRunner.And("In EOLBLK05 I continue with the following values:", ((string)(null)), table235, "And ");
#line hidden
            TechTalk.SpecFlow.Table table236 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmRelType"});
            table236.AddRow(new string[] {
                        string.Format("{0}", confirmRelType)});
#line 896
  testRunner.And("In EOLBLK04 I continue with the following values:", ((string)(null)), table236, "And ");
#line 899
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table237 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table237.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 900
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table237, "And ");
#line 903
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table238 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkCode"});
            table238.AddRow(new string[] {
                        string.Format("{0}", bulkCode)});
#line 905
  testRunner.And("I go to the Bulk Processing System and select Bulk code as:", ((string)(null)), table238, "And ");
#line hidden
            TechTalk.SpecFlow.Table table239 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table239.AddRow(new string[] {
                        string.Format("{0}", selection5)});
#line 908
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table239, "And ");
#line hidden
            TechTalk.SpecFlow.Table table240 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table240.AddRow(new string[] {
                        string.Format("{0}", menuSelection)});
#line 911
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table240, "And ");
#line hidden
            TechTalk.SpecFlow.Table table241 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table241.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus)});
#line 915
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table241, "And ");
#line hidden
            TechTalk.SpecFlow.Table table242 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table242.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 918
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table242, "And ");
#line hidden
            TechTalk.SpecFlow.Table table243 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table243.AddRow(new string[] {
                        string.Format("{0}", selection5)});
#line 921
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table243, "And ");
#line hidden
            TechTalk.SpecFlow.Table table244 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table244.AddRow(new string[] {
                        string.Format("{0}", menuSelection1)});
#line 924
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table244, "And ");
#line hidden
            TechTalk.SpecFlow.Table table245 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table245.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode1),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus1)});
#line 927
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table245, "And ");
#line hidden
            TechTalk.SpecFlow.Table table246 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table246.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 930
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table246, "And ");
#line hidden
            TechTalk.SpecFlow.Table table247 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table247.AddRow(new string[] {
                        string.Format("{0}", selection5)});
#line 933
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table247, "And ");
#line hidden
            TechTalk.SpecFlow.Table table248 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table248.AddRow(new string[] {
                        string.Format("{0}", menuSelection2)});
#line 936
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table248, "And ");
#line hidden
            TechTalk.SpecFlow.Table table249 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table249.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode1),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus2),
                        string.Format("{0}", awardDate)});
#line 939
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table249, "And ");
#line hidden
            TechTalk.SpecFlow.Table table250 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table250.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 942
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table250, "And ");
#line hidden
            TechTalk.SpecFlow.Table table251 = new TechTalk.SpecFlow.Table(new string[] {
                        "TotalCount",
                        "TotalUnits",
                        "SettlementDate",
                        "FinalPrice",
                        "UnitsCalc",
                        "CostOFShares",
                        "TotalCost",
                        "ResidueKept",
                        "ResidueRefunded",
                        "TaxONCharges",
                        "AccumCharges"});
            table251.AddRow(new string[] {
                        string.Format("{0}", totalCount),
                        string.Format("{0}", totalUnits1),
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", unitsCalc),
                        string.Format("{0}", costOFShares),
                        string.Format("{0}", totalCost),
                        string.Format("{0}", residueKept),
                        string.Format("{0}", residueRefunded),
                        string.Format("{0}", taxONCharges),
                        string.Format("{0}", accumCharges)});
#line 945
 testRunner.And("In OLSB0404 I verify the following values:", ((string)(null)), table251, "And ");
#line hidden
            TechTalk.SpecFlow.Table table252 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table252.AddRow(new string[] {
                        string.Format("{0}", selection6)});
#line 948
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table252, "And ");
#line hidden
            TechTalk.SpecFlow.Table table253 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkCurrency",
                        "SettlementFrom",
                        "SettlementTO"});
            table253.AddRow(new string[] {
                        string.Format("{0}", bulkCurrency),
                        string.Format("{0}", settlementFrom),
                        string.Format("{0}", settlementTO)});
#line 952
 testRunner.And("In OLSB0105 I continue with the following values:", ((string)(null)), table253, "And ");
#line hidden
            TechTalk.SpecFlow.Table table254 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID1",
                        "Currency1",
                        "SettlementDate1",
                        "ProcessBulkInd1",
                        "BulkID2",
                        "Currency2",
                        "SettlementDate2",
                        "ProcessBulkInd2",
                        "BulkID3",
                        "Currency3",
                        "SettlementDate3",
                        "ProcessBulkInd3"});
            table254.AddRow(new string[] {
                        string.Format("{0}", bulkID1),
                        string.Format("{0}", currency1),
                        string.Format("{0}", settlementDate1),
                        string.Format("{0}", processBulkInd1),
                        string.Format("{0}", bulkID2),
                        string.Format("{0}", currency2),
                        string.Format("{0}", settlementDate2),
                        string.Format("{0}", processBulkInd2),
                        string.Format("{0}", bulkID3),
                        string.Format("{0}", currency3),
                        string.Format("{0}", settlementDate3),
                        string.Format("{0}", processBulkInd3)});
#line 955
  testRunner.And("In OLSB0106 I continue with the following values:", ((string)(null)), table254, "And ");
#line hidden
            TechTalk.SpecFlow.Table table255 = new TechTalk.SpecFlow.Table(new string[] {
                        "HomeBankDesc",
                        "AusTraceAccount"});
            table255.AddRow(new string[] {
                        string.Format("{0}", homeBankDesc),
                        string.Format("{0}", ausTraceAccount)});
#line 958
 testRunner.And("In OLSB0104 I verify the following values:", ((string)(null)), table255, "And ");
#line hidden
            TechTalk.SpecFlow.Table table256 = new TechTalk.SpecFlow.Table(new string[] {
                        "PaymentAccount",
                        "OrderNO",
                        "Ident",
                        "NbrBulks",
                        "SettlementFrom",
                        "SettlementTO",
                        "PaymentDate",
                        "AddConvRateInd"});
            table256.AddRow(new string[] {
                        string.Format("{0}", paymentAccount),
                        string.Format("{0}", orderNO),
                        string.Format("{0}", ident),
                        string.Format("{0}", nbrBulks),
                        string.Format("{0}", settlementFrom),
                        string.Format("{0}", settlementTO),
                        string.Format("{0}", paymentDate),
                        string.Format("{0}", addConvRateInd)});
#line 961
  testRunner.And("In OLSB0101 I continue with the following values:", ((string)(null)), table256, "And ");
#line hidden
            TechTalk.SpecFlow.Table table257 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table257.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 964
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table257, "And ");
#line 967
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table258 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table258.AddRow(new string[] {
                        string.Format("{0}", selection7)});
#line 969
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table258, "And ");
#line hidden
            TechTalk.SpecFlow.Table table259 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table259.AddRow(new string[] {
                        string.Format("{0}", menuSelection3)});
#line 972
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table259, "And ");
#line hidden
            TechTalk.SpecFlow.Table table260 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table260.AddRow(new string[] {
                        string.Format("{0}", settlementDateS),
                        string.Format("{0}", tradeDateS),
                        string.Format("{0}", tradeTimeS),
                        string.Format("{0}", indicativePriceS),
                        string.Format("{0}", finalPriceS),
                        string.Format("{0}", registerCode1S),
                        string.Format("{0}", chargeCode1S),
                        string.Format("{0}", chargeCode2S),
                        string.Format("{0}", chargeCode3S),
                        string.Format("{0}", chargeDesc1S),
                        string.Format("{0}", chargeDesc2S),
                        string.Format("{0}", chargeDesc3S),
                        string.Format("{0}", confirmStatus3),
                        string.Format("{0}", awardDateS)});
#line 975
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table260, "And ");
#line hidden
            TechTalk.SpecFlow.Table table261 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table261.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 978
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table261, "And ");
#line hidden
            TechTalk.SpecFlow.Table table262 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table262.AddRow(new string[] {
                        string.Format("{0}", selection8)});
#line 982
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table262, "And ");
#line hidden
            TechTalk.SpecFlow.Table table263 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "Status",
                        "RegisterCode",
                        "TransCount",
                        "TransTotal",
                        "SettlementDate"});
            table263.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", status),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", transCount),
                        string.Format("{0}", transTotal),
                        string.Format("{0}", settlementDate3)});
#line 985
  testRunner.And("In BLKSCH01 I continue with the following values:", ((string)(null)), table263, "And ");
#line hidden
            TechTalk.SpecFlow.Table table264 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "StatusDesc",
                        "BulkCount",
                        "BulkUnits",
                        "TransUnits",
                        "BulkMoney",
                        "TransMoney",
                        "TranTypeParent",
                        "HolderID",
                        "RegisterCode"});
            table264.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", statusDesc),
                        string.Format("{0}", bulkCount),
                        string.Format("{0}", bulkUnits),
                        string.Format("{0}", transUnits),
                        string.Format("{0}", bulkMoney),
                        string.Format("{0}", transMoney),
                        string.Format("{0}", tranTypeParent),
                        string.Format("{0}", holderID1),
                        string.Format("{0}", registerCode)});
#line 988
  testRunner.And("In OLSB1010 I verify the following values:", ((string)(null)), table264, "And ");
#line hidden
            TechTalk.SpecFlow.Table table265 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnquiryAction"});
            table265.AddRow(new string[] {
                        string.Format("{0}", enquiryAction)});
#line 991
  testRunner.And("In OLSB1010 I continue with the following values:", ((string)(null)), table265, "And ");
#line hidden
            TechTalk.SpecFlow.Table table266 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "StatusDesc",
                        "BulkCount",
                        "BulkUnits",
                        "TransUnits",
                        "BulkMoney",
                        "TransMoney",
                        "TranTypeParent",
                        "HolderID",
                        "RegisterCode"});
            table266.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", statusDesc),
                        string.Format("{0}", bulkCount),
                        string.Format("{0}", bulkUnits1),
                        string.Format("{0}", transUnits1),
                        string.Format("{0}", bulkMoney1),
                        string.Format("{0}", transMoney1),
                        string.Format("{0}", tranTypeParent),
                        string.Format("{0}", holderID2),
                        string.Format("{0}", registerCode)});
#line 994
  testRunner.And("In OLSB1010 I verify the following values:", ((string)(null)), table266, "And ");
#line 997
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table267 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table267.AddRow(new string[] {
                        string.Format("{0}", selection9)});
#line 998
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table267, "And ");
#line hidden
            TechTalk.SpecFlow.Table table268 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "Status",
                        "RegisterCode",
                        "TransCount",
                        "TransTotal",
                        "SettlementDate"});
            table268.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", status),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", transCount),
                        string.Format("{0}", transTotal),
                        string.Format("{0}", settlementDate3)});
#line 1001
  testRunner.And("In BLKSCH01 I continue with the following values:", ((string)(null)), table268, "And ");
#line hidden
            TechTalk.SpecFlow.Table table269 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkType",
                        "BulkTypeDesc",
                        "ClassCode",
                        "TotalCount",
                        "BulkTransUnits",
                        "BulkTransMoney",
                        "RegisterCode",
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "ActionM"});
            table269.AddRow(new string[] {
                        string.Format("{0}", bulkType),
                        string.Format("{0}", bulkTypeDesc),
                        string.Format("{0}", classCode),
                        string.Format("{0}", totalCount),
                        string.Format("{0}", bulkTransUnits),
                        string.Format("{0}", bulkTransMoney),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", actionM)});
#line 1004
  testRunner.And("In BLKSCH02 I verify the following values:", ((string)(null)), table269, "And ");
#line hidden
            TechTalk.SpecFlow.Table table270 = new TechTalk.SpecFlow.Table(new string[] {
                        "FinalPrice",
                        "UnitsCalc",
                        "CostOFShares",
                        "TotalCost",
                        "ResidueKept",
                        "ResidueRefunded",
                        "PaymentAccount",
                        "BankType",
                        "BankCode",
                        "AccountNumber"});
            table270.AddRow(new string[] {
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", unitsCalc),
                        string.Format("{0}", costOFShares),
                        string.Format("{0}", totalCost),
                        string.Format("{0}", residueKept),
                        string.Format("{0}", residueRefunded),
                        string.Format("{0}", paymentAccount),
                        string.Format("{0}", bankType),
                        string.Format("{0}", bankCode),
                        string.Format("{0}", accountNumber)});
#line 1007
  testRunner.And("In BLKSCH03 I verify the following values:", ((string)(null)), table270, "And ");
#line 1010
  testRunner.And("I Escape to the Main Menu from Bulk Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1012
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", holderID1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1013
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table271 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table271.AddRow(new string[] {
                        string.Format("{0}", certificateLine1A),
                        string.Format("{0}", certificateLine2A),
                        string.Format("{0}", certificateLine3A),
                        string.Format("{0}", certificateLine4A),
                        string.Format("{0}", certificateLine5A),
                        string.Format("{0}", certificateLine6A),
                        string.Format("{0}", certificateLine7A),
                        string.Format("{0}", certificateLine8A),
                        string.Format("{0}", certificateLine9A),
                        string.Format("{0}", certificateLine10A)});
#line 1014
 testRunner.Then("In ENS01012 I should see Register details as:", ((string)(null)), table271, "Then ");
#line 1017
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, holderID2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1018
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table272 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table272.AddRow(new string[] {
                        string.Format("{0}", certificateLine1A),
                        string.Format("{0}", certificateLine2B),
                        string.Format("{0}", certificateLine3B),
                        string.Format("{0}", certificateLine4A),
                        string.Format("{0}", certificateLine5A),
                        string.Format("{0}", certificateLine6A),
                        string.Format("{0}", certificateLine7A),
                        string.Format("{0}", certificateLine8A),
                        string.Format("{0}", certificateLine9A),
                        string.Format("{0}", certificateLine10A)});
#line 1019
 testRunner.Then("In ENS01012 I should see Register details as:", ((string)(null)), table272, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Deferred Plan Bulk Purchase EB/EN")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("ESSPurchase")]
        [NUnit.Framework.TestCaseAttribute("Test1", "CPU_AUTO", "DMA", "EB", "14A", "INT", "01/07/2014", "ESSUPLDMA.CSV", "F", "N", "Y", "N", "N", "Y", "N", "N", "Y", "N", "N", "N", "Y", "N", "F", "Y", "", "UPL", "", "C", "Bulk Upload Process", "", "A", "MAN", "67395", "Y", "1", "1", "C", "", "01/07/2014", "300.00", "", "", "I0010028001", "Bonus", "AUD", "67396", "Y", "1", "1", "C", "", "01/07/2014", "250.00", "", "", "I0030188489", "Bonus", "AUD", "RPH", "Y", "1", "1", "", "", "", "", "", "", "B", "ABO", "ABO", "CBS", "B", "01/07/2014", "01/07/2014", "1000", "10.00000", "10.00000", "", "", "", "", "", "", "B", "A", "C", "01/07/2014", "10.00000", "", "A", "C", "01/07/2014", "2", "550.00", "55", "550.00", "550.00", "", "", "", "", "GCB", "AUD", "01/07/2014", "01/07/2014", "", "AUD", "01/07/2014", "Y", "", "", "", "", "", "", "", "", "", "", "DMA14", "5555", "NDF", "1", "", "N", "S", "", "", "", "", "", "", "", "", "", "", "", "", "S", "", "FBS", "BTQ", "", "SETTLED", "2", "550.00", "Settled", "2", "55", "30", "550.00", "300.00", "ESABO", "I0010028001", "F", "55", "25", "550.00", "250.00", "I0030188489", "BPE", "P", "PURCHASE", "55", "550.00", "M", "WBC", "033-033", "55665566", "C", "/DMA/14A", "DMA/AMP COMPANY EB/EN", "14A 20140701EB   01/07/14            30", "**** Total for 20140701EB                 30", "14A 20140701EN   01/07/14             0", "**** Total for 20140701EN                  0", "", "", "", "", "", "/PHA/14A", "PHA/PHANTOM ESAP MATCHING", "14A 20140701EN   01/07/14            30", "**** Total for 20140701EN                 30", "", "", null)]
        public virtual void DeferredPlanBulkPurchaseEBEN(
                    string test, 
                    string cOY, 
                    string classCode, 
                    string selection, 
                    string registerCode, 
                    string selection1, 
                    string appropDate, 
                    string inputFilename, 
                    string nameSelection, 
                    string pCSelection, 
                    string addressMatching, 
                    string allowBlankAddress, 
                    string updateAddrDetails, 
                    string updateEmpDetails, 
                    string autoGenEmpUnqID, 
                    string clearEmpUnqID, 
                    string updateContactDets, 
                    string uploadTfn, 
                    string updateMandates, 
                    string updateDrp, 
                    string runTrnedt, 
                    string createNewAccounts, 
                    string reportFullTotals, 
                    string autoFtpReportsInd, 
                    string fileName, 
                    string selection2, 
                    string timestamp, 
                    string confirm, 
                    string reportHeading, 
                    string reportDate, 
                    string reportSequence, 
                    string selection3, 
                    string transNumber1, 
                    string paymentFrequency1, 
                    string accumPeriod1, 
                    string paymentNumber1, 
                    string paymentStatus1, 
                    string eol01901ReceiptCurrency1, 
                    string paymentDate1, 
                    string paymentAmount1, 
                    string employerPymtAmt1, 
                    string eol01901ExchangeRate1, 
                    string searchName1, 
                    string registerType1, 
                    string eol01902EmpBaseCurr1, 
                    string transNumber2, 
                    string paymentFrequency2, 
                    string accumPeriod2, 
                    string paymentNumber2, 
                    string paymentStatus2, 
                    string eol01901ReceiptCurrency2, 
                    string paymentDate2, 
                    string paymentAmount2, 
                    string employerPymtAmt2, 
                    string eol01901ExchangeRate2, 
                    string searchName2, 
                    string registerType2, 
                    string eol01902EmpBaseCurr2, 
                    string selection4, 
                    string payFreq1, 
                    string accumPeriodFrom1, 
                    string accumPeriodTO1, 
                    string payFreq2, 
                    string accumPeriodFrom2, 
                    string accumPeriodTO2, 
                    string payFreq3, 
                    string accumPeriodFrom3, 
                    string accumPeriodTO3, 
                    string releaseMode, 
                    string confirmRelType, 
                    string bulkCode, 
                    string selection5, 
                    string menuSelection, 
                    string settlementDate, 
                    string tradeDate, 
                    string tradeTime, 
                    string indicativePrice, 
                    string finalPrice, 
                    string chargeCode1, 
                    string chargeCode2, 
                    string chargeCode3, 
                    string chargeDesc1, 
                    string chargeDesc2, 
                    string chargeDesc3, 
                    string confirmStatus, 
                    string confirmStatus1, 
                    string confirmStatus2, 
                    string confirmSettlement, 
                    string confirmFinalPrice, 
                    string registerCode1, 
                    string menuSelection1, 
                    string menuSelection2, 
                    string awardDate, 
                    string totalCount, 
                    string totalUnits1, 
                    string unitsCalc, 
                    string costOFShares, 
                    string totalCost, 
                    string residueKept, 
                    string residueRefunded, 
                    string taxONCharges, 
                    string accumCharges, 
                    string selection6, 
                    string bulkCurrency, 
                    string settlementFrom, 
                    string settlementTO, 
                    string bulkID1, 
                    string currency1, 
                    string settlementDate1, 
                    string processBulkInd1, 
                    string bulkID2, 
                    string currency2, 
                    string settlementDate2, 
                    string processBulkInd2, 
                    string bulkID3, 
                    string currency3, 
                    string settlementDate3, 
                    string processBulkInd3, 
                    string homeBankDesc, 
                    string ausTraceAccount, 
                    string paymentAccount, 
                    string orderNO, 
                    string ident, 
                    string nbrBulks, 
                    string paymentDate, 
                    string addConvRateInd, 
                    string menuSelection3, 
                    string settlementDateS, 
                    string tradeDateS, 
                    string tradeTimeS, 
                    string indicativePriceS, 
                    string finalPriceS, 
                    string registerCode1S, 
                    string chargeCode1S, 
                    string chargeCode2S, 
                    string chargeCode3S, 
                    string chargeDesc1S, 
                    string chargeDesc2S, 
                    string chargeDesc3S, 
                    string confirmStatus3, 
                    string awardDateS, 
                    string selection7, 
                    string selection8, 
                    string bulkID, 
                    string status, 
                    string transCount, 
                    string transTotal, 
                    string statusDesc, 
                    string bulkCount, 
                    string bulkUnits, 
                    string transUnits, 
                    string bulkMoney, 
                    string transMoney, 
                    string tranTypeParent, 
                    string holderID1, 
                    string enquiryAction, 
                    string bulkUnits1, 
                    string transUnits1, 
                    string bulkMoney1, 
                    string transMoney1, 
                    string holderID2, 
                    string selection9, 
                    string bulkType, 
                    string bulkTypeDesc, 
                    string bulkTransUnits, 
                    string bulkTransMoney, 
                    string actionM, 
                    string bankType, 
                    string bankCode, 
                    string accountNumber, 
                    string action, 
                    string locateArgument, 
                    string certificateLine1A, 
                    string certificateLine2A, 
                    string certificateLine3A, 
                    string certificateLine4A, 
                    string certificateLine5A, 
                    string certificateLine6A, 
                    string certificateLine7A, 
                    string certificateLine8A, 
                    string certificateLine9A, 
                    string certificateLine10A, 
                    string locateArgument1, 
                    string certificateLine1P, 
                    string certificateLine2P, 
                    string certificateLine3P, 
                    string certificateLine4P, 
                    string certificateLine5P, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "ESSPurchase"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Deferred Plan Bulk Purchase EB/EN", @__tags);
#line 1029
this.ScenarioSetup(scenarioInfo);
#line 1032
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1033
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1034
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1036
  testRunner.And("In EOL00113 I click on \"awards\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table273 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table273.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 1037
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table273, "And ");
#line hidden
            TechTalk.SpecFlow.Table table274 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table274.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 1040
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table274, "And ");
#line hidden
            TechTalk.SpecFlow.Table table275 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table275.AddRow(new string[] {
                        string.Format("{0}", selection1)});
#line 1043
  testRunner.And("In EOL00114 I continue with the following values:", ((string)(null)), table275, "And ");
#line hidden
            TechTalk.SpecFlow.Table table276 = new TechTalk.SpecFlow.Table(new string[] {
                        "AppropDate"});
            table276.AddRow(new string[] {
                        string.Format("{0}", appropDate)});
#line 1046
  testRunner.And("In EOL00116 I continue with the following values:", ((string)(null)), table276, "And ");
#line hidden
            TechTalk.SpecFlow.Table table277 = new TechTalk.SpecFlow.Table(new string[] {
                        "InputFilename",
                        "NameSelection",
                        "PCSelection",
                        "AddressMatching",
                        "AllowBlankAddress",
                        "UpdateAddrDetails",
                        "UpdateEmpDetails",
                        "AutoGenEmpUnqID",
                        "ClearEmpUnqID",
                        "UpdateContactDets",
                        "UploadTfn",
                        "UpdateMandates",
                        "UpdateDrp",
                        "RunTrnedt",
                        "CreateNewAccounts",
                        "ReportFullTotals",
                        "AutoFtpReportsInd"});
            table277.AddRow(new string[] {
                        string.Format("{0}", inputFilename),
                        string.Format("{0}", nameSelection),
                        string.Format("{0}", pCSelection),
                        string.Format("{0}", addressMatching),
                        string.Format("{0}", allowBlankAddress),
                        string.Format("{0}", updateAddrDetails),
                        string.Format("{0}", updateEmpDetails),
                        string.Format("{0}", autoGenEmpUnqID),
                        string.Format("{0}", clearEmpUnqID),
                        string.Format("{0}", updateContactDets),
                        string.Format("{0}", uploadTfn),
                        string.Format("{0}", updateMandates),
                        string.Format("{0}", updateDrp),
                        string.Format("{0}", runTrnedt),
                        string.Format("{0}", createNewAccounts),
                        string.Format("{0}", reportFullTotals),
                        string.Format("{0}", autoFtpReportsInd)});
#line 1049
  testRunner.And("In EOL00501 I continue with the following values:", ((string)(null)), table277, "And ");
#line 1052
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table278 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table278.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1053
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table278, "And ");
#line hidden
            TechTalk.SpecFlow.Table table279 = new TechTalk.SpecFlow.Table(new string[] {
                        "COY",
                        "FileName"});
            table279.AddRow(new string[] {
                        string.Format("{0}", cOY),
                        string.Format("{0}", fileName)});
#line 1056
 testRunner.When("I read Timestamps from the Health and Integrity file as:", ((string)(null)), table279, "When ");
#line 1059
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1060
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1061
  testRunner.And("In EOL00113 I click on \"awards\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table280 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table280.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 1062
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table280, "And ");
#line hidden
            TechTalk.SpecFlow.Table table281 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table281.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 1065
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table281, "And ");
#line hidden
            TechTalk.SpecFlow.Table table282 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table282.AddRow(new string[] {
                        string.Format("{0}", selection2)});
#line 1069
  testRunner.And("In EOL00114 I continue with the following values:", ((string)(null)), table282, "And ");
#line hidden
            TechTalk.SpecFlow.Table table283 = new TechTalk.SpecFlow.Table(new string[] {
                        "AppropDate"});
            table283.AddRow(new string[] {
                        string.Format("{0}", appropDate)});
#line 1072
  testRunner.And("In EOL00116 I continue with the following values:", ((string)(null)), table283, "And ");
#line hidden
            TechTalk.SpecFlow.Table table284 = new TechTalk.SpecFlow.Table(new string[] {
                        "Timestamp",
                        "ReportFullTotals",
                        "AutoFtpReportsInd",
                        "Confirm"});
            table284.AddRow(new string[] {
                        string.Format("{0}", timestamp),
                        string.Format("{0}", reportFullTotals),
                        string.Format("{0}", autoFtpReportsInd),
                        string.Format("{0}", confirm)});
#line 1075
  testRunner.And("In EOL00601 I continue with the following values:", ((string)(null)), table284, "And ");
#line hidden
            TechTalk.SpecFlow.Table table285 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "ReportDate",
                        "ReportSequence"});
            table285.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSequence)});
#line 1078
  testRunner.And("In EOL00602 I continue with the following values:", ((string)(null)), table285, "And ");
#line 1081
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table286 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table286.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1082
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table286, "And ");
#line 1085
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1086
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1088
  testRunner.And("In EOL00113 I click on \"payments\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table287 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table287.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 1089
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table287, "And ");
#line hidden
            TechTalk.SpecFlow.Table table288 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table288.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 1092
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table288, "And ");
#line hidden
            TechTalk.SpecFlow.Table table289 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table289.AddRow(new string[] {
                        string.Format("{0}", selection3)});
#line 1095
  testRunner.And("In EOL00120 I continue with the following values:", ((string)(null)), table289, "And ");
#line hidden
            TechTalk.SpecFlow.Table table290 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "PaymentFrequency",
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentStatus",
                        "Eol01901ReceiptCurrency",
                        "PaymentDate",
                        "PaymentAmount",
                        "EmployerPymtAmt",
                        "Eol01901ExchangeRate",
                        "SearchName"});
            table290.AddRow(new string[] {
                        string.Format("{0}", transNumber1),
                        string.Format("{0}", paymentFrequency1),
                        string.Format("{0}", accumPeriod1),
                        string.Format("{0}", paymentNumber1),
                        string.Format("{0}", paymentStatus1),
                        string.Format("{0}", eol01901ReceiptCurrency1),
                        string.Format("{0}", paymentDate1),
                        string.Format("{0}", paymentAmount1),
                        string.Format("{0}", employerPymtAmt1),
                        string.Format("{0}", eol01901ExchangeRate1),
                        string.Format("{0}", searchName1)});
#line 1098
  testRunner.And("In EOL01901 I Add Manual Payment as:", ((string)(null)), table290, "And ");
#line hidden
            TechTalk.SpecFlow.Table table291 = new TechTalk.SpecFlow.Table(new string[] {
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentFrequency",
                        "RegisterType",
                        "PaymentAmount",
                        "Eol01902EmpBaseCurr"});
            table291.AddRow(new string[] {
                        string.Format("{0}", accumPeriod1),
                        string.Format("{0}", paymentNumber1),
                        string.Format("{0}", paymentFrequency1),
                        string.Format("{0}", registerType1),
                        string.Format("{0}", paymentAmount1),
                        string.Format("{0}", eol01902EmpBaseCurr1)});
#line 1101
  testRunner.And("In EOL01902 I verify the following values:", ((string)(null)), table291, "And ");
#line hidden
            TechTalk.SpecFlow.Table table292 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "PaymentFrequency",
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentStatus",
                        "Eol01901ReceiptCurrency",
                        "PaymentDate",
                        "PaymentAmount",
                        "EmployerPymtAmt",
                        "Eol01901ExchangeRate",
                        "SearchName"});
            table292.AddRow(new string[] {
                        string.Format("{0}", transNumber2),
                        string.Format("{0}", paymentFrequency2),
                        string.Format("{0}", accumPeriod2),
                        string.Format("{0}", paymentNumber2),
                        string.Format("{0}", paymentStatus2),
                        string.Format("{0}", eol01901ReceiptCurrency2),
                        string.Format("{0}", paymentDate2),
                        string.Format("{0}", paymentAmount2),
                        string.Format("{0}", employerPymtAmt2),
                        string.Format("{0}", eol01901ExchangeRate2),
                        string.Format("{0}", searchName2)});
#line 1104
  testRunner.And("In EOL01901 I Add Manual Payment as:", ((string)(null)), table292, "And ");
#line hidden
            TechTalk.SpecFlow.Table table293 = new TechTalk.SpecFlow.Table(new string[] {
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentFrequency",
                        "RegisterType",
                        "PaymentAmount",
                        "Eol01902EmpBaseCurr"});
            table293.AddRow(new string[] {
                        string.Format("{0}", accumPeriod2),
                        string.Format("{0}", paymentNumber2),
                        string.Format("{0}", paymentFrequency2),
                        string.Format("{0}", registerType2),
                        string.Format("{0}", paymentAmount2),
                        string.Format("{0}", eol01902EmpBaseCurr2)});
#line 1107
  testRunner.And("In EOL01902 I verify the following values:", ((string)(null)), table293, "And ");
#line 1110
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1112
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1113
  testRunner.And("In EOL00113 I click on \"releases\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table294 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table294.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 1114
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table294, "And ");
#line hidden
            TechTalk.SpecFlow.Table table295 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table295.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 1117
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table295, "And ");
#line hidden
            TechTalk.SpecFlow.Table table296 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table296.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 1120
  testRunner.And("In EOL00106 I continue with the following values:", ((string)(null)), table296, "And ");
#line hidden
            TechTalk.SpecFlow.Table table297 = new TechTalk.SpecFlow.Table(new string[] {
                        "PayFreq1",
                        "AccumPeriodFrom1",
                        "AccumPeriodTO1",
                        "PayFreq2",
                        "AccumPeriodFrom2",
                        "AccumPeriodTO2",
                        "PayFreq3",
                        "AccumPeriodFrom3",
                        "AccumPeriodTO3",
                        "ReleaseMode"});
            table297.AddRow(new string[] {
                        string.Format("{0}", payFreq1),
                        string.Format("{0}", accumPeriodFrom1),
                        string.Format("{0}", accumPeriodTO1),
                        string.Format("{0}", payFreq2),
                        string.Format("{0}", accumPeriodFrom2),
                        string.Format("{0}", accumPeriodTO2),
                        string.Format("{0}", payFreq3),
                        string.Format("{0}", accumPeriodFrom3),
                        string.Format("{0}", accumPeriodTO3),
                        string.Format("{0}", releaseMode)});
#line 1123
  testRunner.And("In EOLBLK05 I continue with the following values:", ((string)(null)), table297, "And ");
#line hidden
            TechTalk.SpecFlow.Table table298 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmRelType"});
            table298.AddRow(new string[] {
                        string.Format("{0}", confirmRelType)});
#line 1126
  testRunner.And("In EOLBLK04 I continue with the following values:", ((string)(null)), table298, "And ");
#line 1129
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table299 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table299.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1130
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table299, "And ");
#line 1133
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table300 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkCode"});
            table300.AddRow(new string[] {
                        string.Format("{0}", bulkCode)});
#line 1135
  testRunner.And("I go to the Bulk Processing System and select Bulk code as:", ((string)(null)), table300, "And ");
#line hidden
            TechTalk.SpecFlow.Table table301 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table301.AddRow(new string[] {
                        string.Format("{0}", selection5)});
#line 1138
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table301, "And ");
#line hidden
            TechTalk.SpecFlow.Table table302 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table302.AddRow(new string[] {
                        string.Format("{0}", menuSelection)});
#line 1141
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table302, "And ");
#line hidden
            TechTalk.SpecFlow.Table table303 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table303.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus)});
#line 1145
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table303, "And ");
#line hidden
            TechTalk.SpecFlow.Table table304 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table304.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 1148
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table304, "And ");
#line hidden
            TechTalk.SpecFlow.Table table305 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table305.AddRow(new string[] {
                        string.Format("{0}", selection5)});
#line 1151
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table305, "And ");
#line hidden
            TechTalk.SpecFlow.Table table306 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table306.AddRow(new string[] {
                        string.Format("{0}", menuSelection1)});
#line 1154
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table306, "And ");
#line hidden
            TechTalk.SpecFlow.Table table307 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table307.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode1),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus1)});
#line 1157
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table307, "And ");
#line hidden
            TechTalk.SpecFlow.Table table308 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table308.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 1160
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table308, "And ");
#line hidden
            TechTalk.SpecFlow.Table table309 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table309.AddRow(new string[] {
                        string.Format("{0}", selection5)});
#line 1163
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table309, "And ");
#line hidden
            TechTalk.SpecFlow.Table table310 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table310.AddRow(new string[] {
                        string.Format("{0}", menuSelection2)});
#line 1166
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table310, "And ");
#line hidden
            TechTalk.SpecFlow.Table table311 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table311.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode1),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus2),
                        string.Format("{0}", awardDate)});
#line 1169
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table311, "And ");
#line hidden
            TechTalk.SpecFlow.Table table312 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table312.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 1172
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table312, "And ");
#line hidden
            TechTalk.SpecFlow.Table table313 = new TechTalk.SpecFlow.Table(new string[] {
                        "TotalCount",
                        "TotalUnits",
                        "SettlementDate",
                        "FinalPrice",
                        "UnitsCalc",
                        "CostOFShares",
                        "TotalCost",
                        "ResidueKept",
                        "ResidueRefunded",
                        "TaxONCharges",
                        "AccumCharges"});
            table313.AddRow(new string[] {
                        string.Format("{0}", totalCount),
                        string.Format("{0}", totalUnits1),
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", unitsCalc),
                        string.Format("{0}", costOFShares),
                        string.Format("{0}", totalCost),
                        string.Format("{0}", residueKept),
                        string.Format("{0}", residueRefunded),
                        string.Format("{0}", taxONCharges),
                        string.Format("{0}", accumCharges)});
#line 1175
 testRunner.And("In OLSB0404 I verify the following values:", ((string)(null)), table313, "And ");
#line hidden
            TechTalk.SpecFlow.Table table314 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table314.AddRow(new string[] {
                        string.Format("{0}", selection6)});
#line 1178
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table314, "And ");
#line hidden
            TechTalk.SpecFlow.Table table315 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkCurrency",
                        "SettlementFrom",
                        "SettlementTO"});
            table315.AddRow(new string[] {
                        string.Format("{0}", bulkCurrency),
                        string.Format("{0}", settlementFrom),
                        string.Format("{0}", settlementTO)});
#line 1182
 testRunner.And("In OLSB0105 I continue with the following values:", ((string)(null)), table315, "And ");
#line hidden
            TechTalk.SpecFlow.Table table316 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID1",
                        "Currency1",
                        "SettlementDate1",
                        "ProcessBulkInd1",
                        "BulkID2",
                        "Currency2",
                        "SettlementDate2",
                        "ProcessBulkInd2",
                        "BulkID3",
                        "Currency3",
                        "SettlementDate3",
                        "ProcessBulkInd3"});
            table316.AddRow(new string[] {
                        string.Format("{0}", bulkID1),
                        string.Format("{0}", currency1),
                        string.Format("{0}", settlementDate1),
                        string.Format("{0}", processBulkInd1),
                        string.Format("{0}", bulkID2),
                        string.Format("{0}", currency2),
                        string.Format("{0}", settlementDate2),
                        string.Format("{0}", processBulkInd2),
                        string.Format("{0}", bulkID3),
                        string.Format("{0}", currency3),
                        string.Format("{0}", settlementDate3),
                        string.Format("{0}", processBulkInd3)});
#line 1185
  testRunner.And("In OLSB0106 I continue with the following values:", ((string)(null)), table316, "And ");
#line hidden
            TechTalk.SpecFlow.Table table317 = new TechTalk.SpecFlow.Table(new string[] {
                        "HomeBankDesc",
                        "AusTraceAccount"});
            table317.AddRow(new string[] {
                        string.Format("{0}", homeBankDesc),
                        string.Format("{0}", ausTraceAccount)});
#line 1188
 testRunner.And("In OLSB0104 I verify the following values:", ((string)(null)), table317, "And ");
#line hidden
            TechTalk.SpecFlow.Table table318 = new TechTalk.SpecFlow.Table(new string[] {
                        "PaymentAccount",
                        "OrderNO",
                        "Ident",
                        "NbrBulks",
                        "SettlementFrom",
                        "SettlementTO",
                        "PaymentDate",
                        "AddConvRateInd"});
            table318.AddRow(new string[] {
                        string.Format("{0}", paymentAccount),
                        string.Format("{0}", orderNO),
                        string.Format("{0}", ident),
                        string.Format("{0}", nbrBulks),
                        string.Format("{0}", settlementFrom),
                        string.Format("{0}", settlementTO),
                        string.Format("{0}", paymentDate),
                        string.Format("{0}", addConvRateInd)});
#line 1191
  testRunner.And("In OLSB0101 I continue with the following values:", ((string)(null)), table318, "And ");
#line hidden
            TechTalk.SpecFlow.Table table319 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table319.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1194
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table319, "And ");
#line 1197
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table320 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table320.AddRow(new string[] {
                        string.Format("{0}", selection7)});
#line 1199
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table320, "And ");
#line hidden
            TechTalk.SpecFlow.Table table321 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table321.AddRow(new string[] {
                        string.Format("{0}", menuSelection3)});
#line 1202
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table321, "And ");
#line hidden
            TechTalk.SpecFlow.Table table322 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table322.AddRow(new string[] {
                        string.Format("{0}", settlementDateS),
                        string.Format("{0}", tradeDateS),
                        string.Format("{0}", tradeTimeS),
                        string.Format("{0}", indicativePriceS),
                        string.Format("{0}", finalPriceS),
                        string.Format("{0}", registerCode1S),
                        string.Format("{0}", chargeCode1S),
                        string.Format("{0}", chargeCode2S),
                        string.Format("{0}", chargeCode3S),
                        string.Format("{0}", chargeDesc1S),
                        string.Format("{0}", chargeDesc2S),
                        string.Format("{0}", chargeDesc3S),
                        string.Format("{0}", confirmStatus3),
                        string.Format("{0}", awardDateS)});
#line 1205
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table322, "And ");
#line hidden
            TechTalk.SpecFlow.Table table323 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table323.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 1208
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table323, "And ");
#line hidden
            TechTalk.SpecFlow.Table table324 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table324.AddRow(new string[] {
                        string.Format("{0}", selection8)});
#line 1212
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table324, "And ");
#line hidden
            TechTalk.SpecFlow.Table table325 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "Status",
                        "RegisterCode",
                        "TransCount",
                        "TransTotal",
                        "SettlementDate"});
            table325.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", status),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", transCount),
                        string.Format("{0}", transTotal),
                        string.Format("{0}", settlementDate3)});
#line 1215
  testRunner.And("In BLKSCH01 I continue with the following values:", ((string)(null)), table325, "And ");
#line hidden
            TechTalk.SpecFlow.Table table326 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "StatusDesc",
                        "BulkCount",
                        "BulkUnits",
                        "TransUnits",
                        "BulkMoney",
                        "TransMoney",
                        "TranTypeParent",
                        "HolderID",
                        "RegisterCode"});
            table326.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", statusDesc),
                        string.Format("{0}", bulkCount),
                        string.Format("{0}", bulkUnits),
                        string.Format("{0}", transUnits),
                        string.Format("{0}", bulkMoney),
                        string.Format("{0}", transMoney),
                        string.Format("{0}", tranTypeParent),
                        string.Format("{0}", holderID1),
                        string.Format("{0}", registerCode)});
#line 1218
  testRunner.And("In OLSB1010 I verify the following values:", ((string)(null)), table326, "And ");
#line hidden
            TechTalk.SpecFlow.Table table327 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnquiryAction"});
            table327.AddRow(new string[] {
                        string.Format("{0}", enquiryAction)});
#line 1221
  testRunner.And("In OLSB1010 I continue with the following values:", ((string)(null)), table327, "And ");
#line hidden
            TechTalk.SpecFlow.Table table328 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "StatusDesc",
                        "BulkCount",
                        "BulkUnits",
                        "TransUnits",
                        "BulkMoney",
                        "TransMoney",
                        "TranTypeParent",
                        "HolderID",
                        "RegisterCode"});
            table328.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", statusDesc),
                        string.Format("{0}", bulkCount),
                        string.Format("{0}", bulkUnits1),
                        string.Format("{0}", transUnits1),
                        string.Format("{0}", bulkMoney1),
                        string.Format("{0}", transMoney1),
                        string.Format("{0}", tranTypeParent),
                        string.Format("{0}", holderID2),
                        string.Format("{0}", registerCode)});
#line 1224
  testRunner.And("In OLSB1010 I verify the following values:", ((string)(null)), table328, "And ");
#line 1227
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table329 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table329.AddRow(new string[] {
                        string.Format("{0}", selection9)});
#line 1228
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table329, "And ");
#line hidden
            TechTalk.SpecFlow.Table table330 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "Status",
                        "RegisterCode",
                        "TransCount",
                        "TransTotal",
                        "SettlementDate"});
            table330.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", status),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", transCount),
                        string.Format("{0}", transTotal),
                        string.Format("{0}", settlementDate3)});
#line 1231
  testRunner.And("In BLKSCH01 I continue with the following values:", ((string)(null)), table330, "And ");
#line hidden
            TechTalk.SpecFlow.Table table331 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkType",
                        "BulkTypeDesc",
                        "ClassCode",
                        "TotalCount",
                        "BulkTransUnits",
                        "BulkTransMoney",
                        "RegisterCode",
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "ActionM"});
            table331.AddRow(new string[] {
                        string.Format("{0}", bulkType),
                        string.Format("{0}", bulkTypeDesc),
                        string.Format("{0}", classCode),
                        string.Format("{0}", totalCount),
                        string.Format("{0}", bulkTransUnits),
                        string.Format("{0}", bulkTransMoney),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", actionM)});
#line 1234
  testRunner.And("In BLKSCH02 I verify the following values:", ((string)(null)), table331, "And ");
#line hidden
            TechTalk.SpecFlow.Table table332 = new TechTalk.SpecFlow.Table(new string[] {
                        "FinalPrice",
                        "UnitsCalc",
                        "CostOFShares",
                        "TotalCost",
                        "ResidueKept",
                        "ResidueRefunded",
                        "PaymentAccount",
                        "BankType",
                        "BankCode",
                        "AccountNumber"});
            table332.AddRow(new string[] {
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", unitsCalc),
                        string.Format("{0}", costOFShares),
                        string.Format("{0}", totalCost),
                        string.Format("{0}", residueKept),
                        string.Format("{0}", residueRefunded),
                        string.Format("{0}", paymentAccount),
                        string.Format("{0}", bankType),
                        string.Format("{0}", bankCode),
                        string.Format("{0}", accountNumber)});
#line 1237
  testRunner.And("In BLKSCH03 I verify the following values:", ((string)(null)), table332, "And ");
#line 1240
  testRunner.And("I Escape to the Main Menu from Bulk Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1242
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", holderID1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1243
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table333 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table333.AddRow(new string[] {
                        string.Format("{0}", certificateLine1A),
                        string.Format("{0}", certificateLine2A),
                        string.Format("{0}", certificateLine3A),
                        string.Format("{0}", certificateLine4A),
                        string.Format("{0}", certificateLine5A),
                        string.Format("{0}", certificateLine6A),
                        string.Format("{0}", certificateLine7A),
                        string.Format("{0}", certificateLine8A),
                        string.Format("{0}", certificateLine9A),
                        string.Format("{0}", certificateLine10A)});
#line 1244
 testRunner.Then("In ENS01012 I should see Register details as:", ((string)(null)), table333, "Then ");
#line 1247
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table334 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table334.AddRow(new string[] {
                        string.Format("{0}", certificateLine1P),
                        string.Format("{0}", certificateLine2P),
                        string.Format("{0}", certificateLine3P),
                        string.Format("{0}", certificateLine4P),
                        string.Format("{0}", certificateLine5P),
                        string.Format("{0}", certificateLine6A),
                        string.Format("{0}", certificateLine7A),
                        string.Format("{0}", certificateLine8A),
                        string.Format("{0}", certificateLine9A),
                        string.Format("{0}", certificateLine10A)});
#line 1248
 testRunner.Then("In ENS01012 I should see Register details as:", ((string)(null)), table334, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Deferred Plan Bulk Purchase EP/EM")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("ESSPurchase")]
        [NUnit.Framework.TestCaseAttribute("Test1", "CPU_AUTO", "EDP", "EP", "14A", "INT", "01/07/2014", "ESSUPLEDP.CSV", "F", "N", "Y", "N", "N", "Y", "N", "N", "Y", "N", "N", "N", "Y", "N", "F", "Y", "", "UPL", "", "C", "Bulk Upload Process", "", "A", "MAN", "68395", "M", "1", "1", "C", "", "01/07/2014", "300.00", "", "", "I0030004825", "Part", "AUD", "68396", "M", "1", "1", "C", "", "01/07/2014", "250.00", "", "", "I0033245653", "Part", "AUD", "RPH", "M", "1", "1", "", "", "", "", "", "", "B", "AWP", "EDP", "CBS", "B", "01/07/2014", "01/07/2014", "1000", "10.00000", "10.00000", "", "", "", "", "", "", "B", "A", "C", "01/07/2014", "10.00000", "", "A", "C", "01/07/2014", "2", "550.00", "55", "550.00", "550.00", "", "", "", "", "GCB", "AUD", "01/07/2014", "01/07/2014", "", "AUD", "01/07/2014", "Y", "", "", "", "", "", "", "", "", "", "", "EDP14", "5555", "NDF", "1", "", "N", "S", "", "", "", "", "", "", "", "", "", "", "", "", "S", "", "FBS", "BTQ", "", "SETTLED", "2", "550.00", "Settled", "2", "55", "30", "550.00", "300.00", "ESAWP", "I0030004825", "F", "55", "25", "550.00", "250.00", "I0033245653", "BPE", "P", "PURCHASE", "55", "550.00", "M", "WBC", "033-033", "55665566", "C", "/EDP/14A", "EDP/EXPAT DEFERRED PLAN", "14A 20140701EM   01/07/14             3", "**** Total for 20140701EM                  3", "14A 20140701EP   01/07/14            30", "**** Total for 20140701EP                 30", "", "", "", "", "", "S", "14A 20140701EM   01/07/14             2", "**** Total for 20140701EM                  2", "14A 20140701EP   01/07/14            25", "**** Total for 20140701EP                 25", null)]
        public virtual void DeferredPlanBulkPurchaseEPEM(
                    string test, 
                    string cOY, 
                    string classCode, 
                    string selection, 
                    string registerCode, 
                    string selection1, 
                    string appropDate, 
                    string inputFilename, 
                    string nameSelection, 
                    string pCSelection, 
                    string addressMatching, 
                    string allowBlankAddress, 
                    string updateAddrDetails, 
                    string updateEmpDetails, 
                    string autoGenEmpUnqID, 
                    string clearEmpUnqID, 
                    string updateContactDets, 
                    string uploadTfn, 
                    string updateMandates, 
                    string updateDrp, 
                    string runTrnedt, 
                    string createNewAccounts, 
                    string reportFullTotals, 
                    string autoFtpReportsInd, 
                    string fileName, 
                    string selection2, 
                    string timestamp, 
                    string confirm, 
                    string reportHeading, 
                    string reportDate, 
                    string reportSequence, 
                    string selection3, 
                    string transNumber1, 
                    string paymentFrequency1, 
                    string accumPeriod1, 
                    string paymentNumber1, 
                    string paymentStatus1, 
                    string eol01901ReceiptCurrency1, 
                    string paymentDate1, 
                    string paymentAmount1, 
                    string employerPymtAmt1, 
                    string eol01901ExchangeRate1, 
                    string searchName1, 
                    string registerType1, 
                    string eol01902EmpBaseCurr1, 
                    string transNumber2, 
                    string paymentFrequency2, 
                    string accumPeriod2, 
                    string paymentNumber2, 
                    string paymentStatus2, 
                    string eol01901ReceiptCurrency2, 
                    string paymentDate2, 
                    string paymentAmount2, 
                    string employerPymtAmt2, 
                    string eol01901ExchangeRate2, 
                    string searchName2, 
                    string registerType2, 
                    string eol01902EmpBaseCurr2, 
                    string selection4, 
                    string payFreq1, 
                    string accumPeriodFrom1, 
                    string accumPeriodTO1, 
                    string payFreq2, 
                    string accumPeriodFrom2, 
                    string accumPeriodTO2, 
                    string payFreq3, 
                    string accumPeriodFrom3, 
                    string accumPeriodTO3, 
                    string releaseMode, 
                    string confirmRelType, 
                    string bulkCode, 
                    string selection5, 
                    string menuSelection, 
                    string settlementDate, 
                    string tradeDate, 
                    string tradeTime, 
                    string indicativePrice, 
                    string finalPrice, 
                    string chargeCode1, 
                    string chargeCode2, 
                    string chargeCode3, 
                    string chargeDesc1, 
                    string chargeDesc2, 
                    string chargeDesc3, 
                    string confirmStatus, 
                    string confirmStatus1, 
                    string confirmStatus2, 
                    string confirmSettlement, 
                    string confirmFinalPrice, 
                    string registerCode1, 
                    string menuSelection1, 
                    string menuSelection2, 
                    string awardDate, 
                    string totalCount, 
                    string totalUnits1, 
                    string unitsCalc, 
                    string costOFShares, 
                    string totalCost, 
                    string residueKept, 
                    string residueRefunded, 
                    string taxONCharges, 
                    string accumCharges, 
                    string selection6, 
                    string bulkCurrency, 
                    string settlementFrom, 
                    string settlementTO, 
                    string bulkID1, 
                    string currency1, 
                    string settlementDate1, 
                    string processBulkInd1, 
                    string bulkID2, 
                    string currency2, 
                    string settlementDate2, 
                    string processBulkInd2, 
                    string bulkID3, 
                    string currency3, 
                    string settlementDate3, 
                    string processBulkInd3, 
                    string homeBankDesc, 
                    string ausTraceAccount, 
                    string paymentAccount, 
                    string orderNO, 
                    string ident, 
                    string nbrBulks, 
                    string paymentDate, 
                    string addConvRateInd, 
                    string menuSelection3, 
                    string settlementDateS, 
                    string tradeDateS, 
                    string tradeTimeS, 
                    string indicativePriceS, 
                    string finalPriceS, 
                    string registerCode1S, 
                    string chargeCode1S, 
                    string chargeCode2S, 
                    string chargeCode3S, 
                    string chargeDesc1S, 
                    string chargeDesc2S, 
                    string chargeDesc3S, 
                    string confirmStatus3, 
                    string awardDateS, 
                    string selection7, 
                    string selection8, 
                    string bulkID, 
                    string status, 
                    string transCount, 
                    string transTotal, 
                    string statusDesc, 
                    string bulkCount, 
                    string bulkUnits, 
                    string transUnits, 
                    string bulkMoney, 
                    string transMoney, 
                    string tranTypeParent, 
                    string holderID1, 
                    string enquiryAction, 
                    string bulkUnits1, 
                    string transUnits1, 
                    string bulkMoney1, 
                    string transMoney1, 
                    string holderID2, 
                    string selection9, 
                    string bulkType, 
                    string bulkTypeDesc, 
                    string bulkTransUnits, 
                    string bulkTransMoney, 
                    string actionM, 
                    string bankType, 
                    string bankCode, 
                    string accountNumber, 
                    string action, 
                    string locateArgument, 
                    string certificateLine1A, 
                    string certificateLine2A, 
                    string certificateLine3A, 
                    string certificateLine4A, 
                    string certificateLine5A, 
                    string certificateLine6A, 
                    string certificateLine7A, 
                    string certificateLine8A, 
                    string certificateLine9A, 
                    string certificateLine10A, 
                    string action1, 
                    string certificateLine2B, 
                    string certificateLine3B, 
                    string certificateLine4B, 
                    string certificateLine5B, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "ESSPurchase"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Deferred Plan Bulk Purchase EP/EM", @__tags);
#line 1268
this.ScenarioSetup(scenarioInfo);
#line 1271
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1272
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1273
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1275
  testRunner.And("In EOL00113 I click on \"awards\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table335 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table335.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 1276
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table335, "And ");
#line hidden
            TechTalk.SpecFlow.Table table336 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table336.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 1279
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table336, "And ");
#line hidden
            TechTalk.SpecFlow.Table table337 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table337.AddRow(new string[] {
                        string.Format("{0}", selection1)});
#line 1282
  testRunner.And("In EOL00114 I continue with the following values:", ((string)(null)), table337, "And ");
#line hidden
            TechTalk.SpecFlow.Table table338 = new TechTalk.SpecFlow.Table(new string[] {
                        "AppropDate"});
            table338.AddRow(new string[] {
                        string.Format("{0}", appropDate)});
#line 1285
  testRunner.And("In EOL00116 I continue with the following values:", ((string)(null)), table338, "And ");
#line hidden
            TechTalk.SpecFlow.Table table339 = new TechTalk.SpecFlow.Table(new string[] {
                        "InputFilename",
                        "NameSelection",
                        "PCSelection",
                        "AddressMatching",
                        "AllowBlankAddress",
                        "UpdateAddrDetails",
                        "UpdateEmpDetails",
                        "AutoGenEmpUnqID",
                        "ClearEmpUnqID",
                        "UpdateContactDets",
                        "UploadTfn",
                        "UpdateMandates",
                        "UpdateDrp",
                        "RunTrnedt",
                        "CreateNewAccounts",
                        "ReportFullTotals",
                        "AutoFtpReportsInd"});
            table339.AddRow(new string[] {
                        string.Format("{0}", inputFilename),
                        string.Format("{0}", nameSelection),
                        string.Format("{0}", pCSelection),
                        string.Format("{0}", addressMatching),
                        string.Format("{0}", allowBlankAddress),
                        string.Format("{0}", updateAddrDetails),
                        string.Format("{0}", updateEmpDetails),
                        string.Format("{0}", autoGenEmpUnqID),
                        string.Format("{0}", clearEmpUnqID),
                        string.Format("{0}", updateContactDets),
                        string.Format("{0}", uploadTfn),
                        string.Format("{0}", updateMandates),
                        string.Format("{0}", updateDrp),
                        string.Format("{0}", runTrnedt),
                        string.Format("{0}", createNewAccounts),
                        string.Format("{0}", reportFullTotals),
                        string.Format("{0}", autoFtpReportsInd)});
#line 1288
  testRunner.And("In EOL00501 I continue with the following values:", ((string)(null)), table339, "And ");
#line 1291
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table340 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table340.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1292
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table340, "And ");
#line hidden
            TechTalk.SpecFlow.Table table341 = new TechTalk.SpecFlow.Table(new string[] {
                        "COY",
                        "FileName"});
            table341.AddRow(new string[] {
                        string.Format("{0}", cOY),
                        string.Format("{0}", fileName)});
#line 1295
 testRunner.When("I read Timestamps from the Health and Integrity file as:", ((string)(null)), table341, "When ");
#line 1298
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1299
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1300
  testRunner.And("In EOL00113 I click on \"awards\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table342 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table342.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 1301
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table342, "And ");
#line hidden
            TechTalk.SpecFlow.Table table343 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table343.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 1304
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table343, "And ");
#line hidden
            TechTalk.SpecFlow.Table table344 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table344.AddRow(new string[] {
                        string.Format("{0}", selection2)});
#line 1308
  testRunner.And("In EOL00114 I continue with the following values:", ((string)(null)), table344, "And ");
#line hidden
            TechTalk.SpecFlow.Table table345 = new TechTalk.SpecFlow.Table(new string[] {
                        "AppropDate"});
            table345.AddRow(new string[] {
                        string.Format("{0}", appropDate)});
#line 1311
  testRunner.And("In EOL00116 I continue with the following values:", ((string)(null)), table345, "And ");
#line hidden
            TechTalk.SpecFlow.Table table346 = new TechTalk.SpecFlow.Table(new string[] {
                        "Timestamp",
                        "ReportFullTotals",
                        "AutoFtpReportsInd",
                        "Confirm"});
            table346.AddRow(new string[] {
                        string.Format("{0}", timestamp),
                        string.Format("{0}", reportFullTotals),
                        string.Format("{0}", autoFtpReportsInd),
                        string.Format("{0}", confirm)});
#line 1314
  testRunner.And("In EOL00601 I continue with the following values:", ((string)(null)), table346, "And ");
#line hidden
            TechTalk.SpecFlow.Table table347 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "ReportDate",
                        "ReportSequence"});
            table347.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSequence)});
#line 1317
  testRunner.And("In EOL00602 I continue with the following values:", ((string)(null)), table347, "And ");
#line 1320
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table348 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table348.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1321
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table348, "And ");
#line 1324
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1325
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1327
  testRunner.And("In EOL00113 I click on \"payments\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table349 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table349.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 1328
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table349, "And ");
#line hidden
            TechTalk.SpecFlow.Table table350 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table350.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 1331
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table350, "And ");
#line hidden
            TechTalk.SpecFlow.Table table351 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table351.AddRow(new string[] {
                        string.Format("{0}", selection3)});
#line 1334
  testRunner.And("In EOL00120 I continue with the following values:", ((string)(null)), table351, "And ");
#line hidden
            TechTalk.SpecFlow.Table table352 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "PaymentFrequency",
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentStatus",
                        "Eol01901ReceiptCurrency",
                        "PaymentDate",
                        "PaymentAmount",
                        "EmployerPymtAmt",
                        "Eol01901ExchangeRate",
                        "SearchName"});
            table352.AddRow(new string[] {
                        string.Format("{0}", transNumber1),
                        string.Format("{0}", paymentFrequency1),
                        string.Format("{0}", accumPeriod1),
                        string.Format("{0}", paymentNumber1),
                        string.Format("{0}", paymentStatus1),
                        string.Format("{0}", eol01901ReceiptCurrency1),
                        string.Format("{0}", paymentDate1),
                        string.Format("{0}", paymentAmount1),
                        string.Format("{0}", employerPymtAmt1),
                        string.Format("{0}", eol01901ExchangeRate1),
                        string.Format("{0}", searchName1)});
#line 1337
  testRunner.And("In EOL01901 I Add Manual Payment as:", ((string)(null)), table352, "And ");
#line hidden
            TechTalk.SpecFlow.Table table353 = new TechTalk.SpecFlow.Table(new string[] {
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentFrequency",
                        "RegisterType",
                        "PaymentAmount",
                        "Eol01902EmpBaseCurr"});
            table353.AddRow(new string[] {
                        string.Format("{0}", accumPeriod1),
                        string.Format("{0}", paymentNumber1),
                        string.Format("{0}", paymentFrequency1),
                        string.Format("{0}", registerType1),
                        string.Format("{0}", paymentAmount1),
                        string.Format("{0}", eol01902EmpBaseCurr1)});
#line 1340
  testRunner.And("In EOL01902 I verify the following values:", ((string)(null)), table353, "And ");
#line hidden
            TechTalk.SpecFlow.Table table354 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "PaymentFrequency",
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentStatus",
                        "Eol01901ReceiptCurrency",
                        "PaymentDate",
                        "PaymentAmount",
                        "EmployerPymtAmt",
                        "Eol01901ExchangeRate",
                        "SearchName"});
            table354.AddRow(new string[] {
                        string.Format("{0}", transNumber2),
                        string.Format("{0}", paymentFrequency2),
                        string.Format("{0}", accumPeriod2),
                        string.Format("{0}", paymentNumber2),
                        string.Format("{0}", paymentStatus2),
                        string.Format("{0}", eol01901ReceiptCurrency2),
                        string.Format("{0}", paymentDate2),
                        string.Format("{0}", paymentAmount2),
                        string.Format("{0}", employerPymtAmt2),
                        string.Format("{0}", eol01901ExchangeRate2),
                        string.Format("{0}", searchName2)});
#line 1343
  testRunner.And("In EOL01901 I Add Manual Payment as:", ((string)(null)), table354, "And ");
#line hidden
            TechTalk.SpecFlow.Table table355 = new TechTalk.SpecFlow.Table(new string[] {
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentFrequency",
                        "RegisterType",
                        "PaymentAmount",
                        "Eol01902EmpBaseCurr"});
            table355.AddRow(new string[] {
                        string.Format("{0}", accumPeriod2),
                        string.Format("{0}", paymentNumber2),
                        string.Format("{0}", paymentFrequency2),
                        string.Format("{0}", registerType2),
                        string.Format("{0}", paymentAmount2),
                        string.Format("{0}", eol01902EmpBaseCurr2)});
#line 1346
  testRunner.And("In EOL01902 I verify the following values:", ((string)(null)), table355, "And ");
#line 1349
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1351
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1352
  testRunner.And("In EOL00113 I click on \"releases\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table356 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table356.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 1353
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table356, "And ");
#line hidden
            TechTalk.SpecFlow.Table table357 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table357.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 1356
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table357, "And ");
#line hidden
            TechTalk.SpecFlow.Table table358 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table358.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 1359
  testRunner.And("In EOL00106 I continue with the following values:", ((string)(null)), table358, "And ");
#line hidden
            TechTalk.SpecFlow.Table table359 = new TechTalk.SpecFlow.Table(new string[] {
                        "PayFreq1",
                        "AccumPeriodFrom1",
                        "AccumPeriodTO1",
                        "PayFreq2",
                        "AccumPeriodFrom2",
                        "AccumPeriodTO2",
                        "PayFreq3",
                        "AccumPeriodFrom3",
                        "AccumPeriodTO3",
                        "ReleaseMode"});
            table359.AddRow(new string[] {
                        string.Format("{0}", payFreq1),
                        string.Format("{0}", accumPeriodFrom1),
                        string.Format("{0}", accumPeriodTO1),
                        string.Format("{0}", payFreq2),
                        string.Format("{0}", accumPeriodFrom2),
                        string.Format("{0}", accumPeriodTO2),
                        string.Format("{0}", payFreq3),
                        string.Format("{0}", accumPeriodFrom3),
                        string.Format("{0}", accumPeriodTO3),
                        string.Format("{0}", releaseMode)});
#line 1362
  testRunner.And("In EOLBLK05 I continue with the following values:", ((string)(null)), table359, "And ");
#line hidden
            TechTalk.SpecFlow.Table table360 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmRelType"});
            table360.AddRow(new string[] {
                        string.Format("{0}", confirmRelType)});
#line 1365
  testRunner.And("In EOLBLK04 I continue with the following values:", ((string)(null)), table360, "And ");
#line 1368
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table361 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table361.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1369
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table361, "And ");
#line 1372
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table362 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkCode"});
            table362.AddRow(new string[] {
                        string.Format("{0}", bulkCode)});
#line 1374
  testRunner.And("I go to the Bulk Processing System and select Bulk code as:", ((string)(null)), table362, "And ");
#line hidden
            TechTalk.SpecFlow.Table table363 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table363.AddRow(new string[] {
                        string.Format("{0}", selection5)});
#line 1377
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table363, "And ");
#line hidden
            TechTalk.SpecFlow.Table table364 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table364.AddRow(new string[] {
                        string.Format("{0}", menuSelection)});
#line 1380
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table364, "And ");
#line hidden
            TechTalk.SpecFlow.Table table365 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table365.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus)});
#line 1384
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table365, "And ");
#line hidden
            TechTalk.SpecFlow.Table table366 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table366.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 1387
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table366, "And ");
#line hidden
            TechTalk.SpecFlow.Table table367 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table367.AddRow(new string[] {
                        string.Format("{0}", selection5)});
#line 1390
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table367, "And ");
#line hidden
            TechTalk.SpecFlow.Table table368 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table368.AddRow(new string[] {
                        string.Format("{0}", menuSelection1)});
#line 1393
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table368, "And ");
#line hidden
            TechTalk.SpecFlow.Table table369 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table369.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode1),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus1)});
#line 1396
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table369, "And ");
#line hidden
            TechTalk.SpecFlow.Table table370 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table370.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 1399
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table370, "And ");
#line hidden
            TechTalk.SpecFlow.Table table371 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table371.AddRow(new string[] {
                        string.Format("{0}", selection5)});
#line 1402
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table371, "And ");
#line hidden
            TechTalk.SpecFlow.Table table372 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table372.AddRow(new string[] {
                        string.Format("{0}", menuSelection2)});
#line 1405
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table372, "And ");
#line hidden
            TechTalk.SpecFlow.Table table373 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table373.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode1),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus2),
                        string.Format("{0}", awardDate)});
#line 1408
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table373, "And ");
#line hidden
            TechTalk.SpecFlow.Table table374 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table374.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 1411
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table374, "And ");
#line hidden
            TechTalk.SpecFlow.Table table375 = new TechTalk.SpecFlow.Table(new string[] {
                        "TotalCount",
                        "TotalUnits",
                        "SettlementDate",
                        "FinalPrice",
                        "UnitsCalc",
                        "CostOFShares",
                        "TotalCost",
                        "ResidueKept",
                        "ResidueRefunded",
                        "TaxONCharges",
                        "AccumCharges"});
            table375.AddRow(new string[] {
                        string.Format("{0}", totalCount),
                        string.Format("{0}", totalUnits1),
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", unitsCalc),
                        string.Format("{0}", costOFShares),
                        string.Format("{0}", totalCost),
                        string.Format("{0}", residueKept),
                        string.Format("{0}", residueRefunded),
                        string.Format("{0}", taxONCharges),
                        string.Format("{0}", accumCharges)});
#line 1414
 testRunner.And("In OLSB0404 I verify the following values:", ((string)(null)), table375, "And ");
#line hidden
            TechTalk.SpecFlow.Table table376 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table376.AddRow(new string[] {
                        string.Format("{0}", selection6)});
#line 1417
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table376, "And ");
#line hidden
            TechTalk.SpecFlow.Table table377 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkCurrency",
                        "SettlementFrom",
                        "SettlementTO"});
            table377.AddRow(new string[] {
                        string.Format("{0}", bulkCurrency),
                        string.Format("{0}", settlementFrom),
                        string.Format("{0}", settlementTO)});
#line 1421
 testRunner.And("In OLSB0105 I continue with the following values:", ((string)(null)), table377, "And ");
#line hidden
            TechTalk.SpecFlow.Table table378 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID1",
                        "Currency1",
                        "SettlementDate1",
                        "ProcessBulkInd1",
                        "BulkID2",
                        "Currency2",
                        "SettlementDate2",
                        "ProcessBulkInd2",
                        "BulkID3",
                        "Currency3",
                        "SettlementDate3",
                        "ProcessBulkInd3"});
            table378.AddRow(new string[] {
                        string.Format("{0}", bulkID1),
                        string.Format("{0}", currency1),
                        string.Format("{0}", settlementDate1),
                        string.Format("{0}", processBulkInd1),
                        string.Format("{0}", bulkID2),
                        string.Format("{0}", currency2),
                        string.Format("{0}", settlementDate2),
                        string.Format("{0}", processBulkInd2),
                        string.Format("{0}", bulkID3),
                        string.Format("{0}", currency3),
                        string.Format("{0}", settlementDate3),
                        string.Format("{0}", processBulkInd3)});
#line 1424
  testRunner.And("In OLSB0106 I continue with the following values:", ((string)(null)), table378, "And ");
#line hidden
            TechTalk.SpecFlow.Table table379 = new TechTalk.SpecFlow.Table(new string[] {
                        "HomeBankDesc",
                        "AusTraceAccount"});
            table379.AddRow(new string[] {
                        string.Format("{0}", homeBankDesc),
                        string.Format("{0}", ausTraceAccount)});
#line 1427
 testRunner.And("In OLSB0104 I verify the following values:", ((string)(null)), table379, "And ");
#line hidden
            TechTalk.SpecFlow.Table table380 = new TechTalk.SpecFlow.Table(new string[] {
                        "PaymentAccount",
                        "OrderNO",
                        "Ident",
                        "NbrBulks",
                        "SettlementFrom",
                        "SettlementTO",
                        "PaymentDate",
                        "AddConvRateInd"});
            table380.AddRow(new string[] {
                        string.Format("{0}", paymentAccount),
                        string.Format("{0}", orderNO),
                        string.Format("{0}", ident),
                        string.Format("{0}", nbrBulks),
                        string.Format("{0}", settlementFrom),
                        string.Format("{0}", settlementTO),
                        string.Format("{0}", paymentDate),
                        string.Format("{0}", addConvRateInd)});
#line 1430
  testRunner.And("In OLSB0101 I continue with the following values:", ((string)(null)), table380, "And ");
#line hidden
            TechTalk.SpecFlow.Table table381 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table381.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1433
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table381, "And ");
#line 1436
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table382 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table382.AddRow(new string[] {
                        string.Format("{0}", selection7)});
#line 1438
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table382, "And ");
#line hidden
            TechTalk.SpecFlow.Table table383 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table383.AddRow(new string[] {
                        string.Format("{0}", menuSelection3)});
#line 1441
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table383, "And ");
#line hidden
            TechTalk.SpecFlow.Table table384 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table384.AddRow(new string[] {
                        string.Format("{0}", settlementDateS),
                        string.Format("{0}", tradeDateS),
                        string.Format("{0}", tradeTimeS),
                        string.Format("{0}", indicativePriceS),
                        string.Format("{0}", finalPriceS),
                        string.Format("{0}", registerCode1S),
                        string.Format("{0}", chargeCode1S),
                        string.Format("{0}", chargeCode2S),
                        string.Format("{0}", chargeCode3S),
                        string.Format("{0}", chargeDesc1S),
                        string.Format("{0}", chargeDesc2S),
                        string.Format("{0}", chargeDesc3S),
                        string.Format("{0}", confirmStatus3),
                        string.Format("{0}", awardDateS)});
#line 1444
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table384, "And ");
#line hidden
            TechTalk.SpecFlow.Table table385 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table385.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 1447
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table385, "And ");
#line hidden
            TechTalk.SpecFlow.Table table386 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table386.AddRow(new string[] {
                        string.Format("{0}", selection8)});
#line 1451
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table386, "And ");
#line hidden
            TechTalk.SpecFlow.Table table387 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "Status",
                        "RegisterCode",
                        "TransCount",
                        "TransTotal",
                        "SettlementDate"});
            table387.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", status),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", transCount),
                        string.Format("{0}", transTotal),
                        string.Format("{0}", settlementDate3)});
#line 1454
  testRunner.And("In BLKSCH01 I continue with the following values:", ((string)(null)), table387, "And ");
#line hidden
            TechTalk.SpecFlow.Table table388 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "StatusDesc",
                        "BulkCount",
                        "BulkUnits",
                        "TransUnits",
                        "BulkMoney",
                        "TransMoney",
                        "TranTypeParent",
                        "HolderID",
                        "RegisterCode"});
            table388.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", statusDesc),
                        string.Format("{0}", bulkCount),
                        string.Format("{0}", bulkUnits),
                        string.Format("{0}", transUnits),
                        string.Format("{0}", bulkMoney),
                        string.Format("{0}", transMoney),
                        string.Format("{0}", tranTypeParent),
                        string.Format("{0}", holderID1),
                        string.Format("{0}", registerCode)});
#line 1457
  testRunner.And("In OLSB1010 I verify the following values:", ((string)(null)), table388, "And ");
#line hidden
            TechTalk.SpecFlow.Table table389 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnquiryAction"});
            table389.AddRow(new string[] {
                        string.Format("{0}", enquiryAction)});
#line 1460
  testRunner.And("In OLSB1010 I continue with the following values:", ((string)(null)), table389, "And ");
#line hidden
            TechTalk.SpecFlow.Table table390 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "StatusDesc",
                        "BulkCount",
                        "BulkUnits",
                        "TransUnits",
                        "BulkMoney",
                        "TransMoney",
                        "TranTypeParent",
                        "HolderID",
                        "RegisterCode"});
            table390.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", statusDesc),
                        string.Format("{0}", bulkCount),
                        string.Format("{0}", bulkUnits1),
                        string.Format("{0}", transUnits1),
                        string.Format("{0}", bulkMoney1),
                        string.Format("{0}", transMoney1),
                        string.Format("{0}", tranTypeParent),
                        string.Format("{0}", holderID2),
                        string.Format("{0}", registerCode)});
#line 1463
  testRunner.And("In OLSB1010 I verify the following values:", ((string)(null)), table390, "And ");
#line 1466
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table391 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table391.AddRow(new string[] {
                        string.Format("{0}", selection9)});
#line 1467
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table391, "And ");
#line hidden
            TechTalk.SpecFlow.Table table392 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "Status",
                        "RegisterCode",
                        "TransCount",
                        "TransTotal",
                        "SettlementDate"});
            table392.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", status),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", transCount),
                        string.Format("{0}", transTotal),
                        string.Format("{0}", settlementDate3)});
#line 1470
  testRunner.And("In BLKSCH01 I continue with the following values:", ((string)(null)), table392, "And ");
#line hidden
            TechTalk.SpecFlow.Table table393 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkType",
                        "BulkTypeDesc",
                        "ClassCode",
                        "TotalCount",
                        "BulkTransUnits",
                        "BulkTransMoney",
                        "RegisterCode",
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "ActionM"});
            table393.AddRow(new string[] {
                        string.Format("{0}", bulkType),
                        string.Format("{0}", bulkTypeDesc),
                        string.Format("{0}", classCode),
                        string.Format("{0}", totalCount),
                        string.Format("{0}", bulkTransUnits),
                        string.Format("{0}", bulkTransMoney),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", actionM)});
#line 1473
  testRunner.And("In BLKSCH02 I verify the following values:", ((string)(null)), table393, "And ");
#line hidden
            TechTalk.SpecFlow.Table table394 = new TechTalk.SpecFlow.Table(new string[] {
                        "FinalPrice",
                        "UnitsCalc",
                        "CostOFShares",
                        "TotalCost",
                        "ResidueKept",
                        "ResidueRefunded",
                        "PaymentAccount",
                        "BankType",
                        "BankCode",
                        "AccountNumber"});
            table394.AddRow(new string[] {
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", unitsCalc),
                        string.Format("{0}", costOFShares),
                        string.Format("{0}", totalCost),
                        string.Format("{0}", residueKept),
                        string.Format("{0}", residueRefunded),
                        string.Format("{0}", paymentAccount),
                        string.Format("{0}", bankType),
                        string.Format("{0}", bankCode),
                        string.Format("{0}", accountNumber)});
#line 1476
  testRunner.And("In BLKSCH03 I verify the following values:", ((string)(null)), table394, "And ");
#line 1479
  testRunner.And("I Escape to the Main Menu from Bulk Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1481
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", holderID1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1482
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table395 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table395.AddRow(new string[] {
                        string.Format("{0}", certificateLine1A),
                        string.Format("{0}", certificateLine2A),
                        string.Format("{0}", certificateLine3A),
                        string.Format("{0}", certificateLine4A),
                        string.Format("{0}", certificateLine5A),
                        string.Format("{0}", certificateLine6A),
                        string.Format("{0}", certificateLine7A),
                        string.Format("{0}", certificateLine8A),
                        string.Format("{0}", certificateLine9A),
                        string.Format("{0}", certificateLine10A)});
#line 1483
 testRunner.Then("In ENS01012 I should see Register details as:", ((string)(null)), table395, "Then ");
#line 1486
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, holderID2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1487
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table396 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table396.AddRow(new string[] {
                        string.Format("{0}", certificateLine1A),
                        string.Format("{0}", certificateLine2B),
                        string.Format("{0}", certificateLine3B),
                        string.Format("{0}", certificateLine4B),
                        string.Format("{0}", certificateLine5B),
                        string.Format("{0}", certificateLine6A),
                        string.Format("{0}", certificateLine7A),
                        string.Format("{0}", certificateLine8A),
                        string.Format("{0}", certificateLine9A),
                        string.Format("{0}", certificateLine10A)});
#line 1488
 testRunner.Then("In ENS01012 I should see Register details as:", ((string)(null)), table396, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Deferred Plan Bulk Purchase EF")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("ESSPurchase")]
        [NUnit.Framework.TestCaseAttribute("Test1", "CPU_AUTO", "DEP", "EF", "12A", "INT", "12/07/2012", "ESSUPLDEP_EF.CSV", "F", "N", "Y", "N", "N", "Y", "N", "N", "Y", "N", "N", "N", "Y", "N", "F", "Y", "", "UPL", "", "C", "Bulk Upload Process", "", "A", "I0030008910", "C", "/DEP/12A/EF", "DEP/DEFERRED EMP SHARE PLAN - AU", "12A 20120712EF   12/07/12           200", "**** Total for 20120712EF                200", "", "", "", "", "", "", "", "S", "I0031616107", "12A 20120712EF   12/07/12           250", "**** Total for 20120712EF                250", null)]
        public virtual void DeferredPlanBulkPurchaseEF(
                    string test, 
                    string cOY, 
                    string classCode, 
                    string selection, 
                    string registerCode, 
                    string selection1, 
                    string appropDate, 
                    string inputFilename, 
                    string nameSelection, 
                    string pCSelection, 
                    string addressMatching, 
                    string allowBlankAddress, 
                    string updateAddrDetails, 
                    string updateEmpDetails, 
                    string autoGenEmpUnqID, 
                    string clearEmpUnqID, 
                    string updateContactDets, 
                    string uploadTfn, 
                    string updateMandates, 
                    string updateDrp, 
                    string runTrnedt, 
                    string createNewAccounts, 
                    string reportFullTotals, 
                    string autoFtpReportsInd, 
                    string fileName, 
                    string selection2, 
                    string timestamp, 
                    string confirm, 
                    string reportHeading, 
                    string reportDate, 
                    string reportSequence, 
                    string holderID1, 
                    string action, 
                    string locateArgument, 
                    string certificateLine1A, 
                    string certificateLine2A, 
                    string certificateLine3A, 
                    string certificateLine4A, 
                    string certificateLine5A, 
                    string certificateLine6A, 
                    string certificateLine7A, 
                    string certificateLine8A, 
                    string certificateLine9A, 
                    string certificateLine10A, 
                    string action1, 
                    string holderID2, 
                    string certificateLine2B, 
                    string certificateLine3B, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "ESSPurchase"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Deferred Plan Bulk Purchase EF", @__tags);
#line 1499
this.ScenarioSetup(scenarioInfo);
#line 1501
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1502
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1503
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1505
  testRunner.And("In EOL00113 I click on \"awards\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table397 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table397.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 1506
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table397, "And ");
#line hidden
            TechTalk.SpecFlow.Table table398 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table398.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 1509
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table398, "And ");
#line hidden
            TechTalk.SpecFlow.Table table399 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table399.AddRow(new string[] {
                        string.Format("{0}", selection1)});
#line 1512
  testRunner.And("In EOL00114 I continue with the following values:", ((string)(null)), table399, "And ");
#line hidden
            TechTalk.SpecFlow.Table table400 = new TechTalk.SpecFlow.Table(new string[] {
                        "AppropDate"});
            table400.AddRow(new string[] {
                        string.Format("{0}", appropDate)});
#line 1515
  testRunner.And("In EOL00116 I continue with the following values:", ((string)(null)), table400, "And ");
#line hidden
            TechTalk.SpecFlow.Table table401 = new TechTalk.SpecFlow.Table(new string[] {
                        "InputFilename",
                        "NameSelection",
                        "PCSelection",
                        "AddressMatching",
                        "AllowBlankAddress",
                        "UpdateAddrDetails",
                        "UpdateEmpDetails",
                        "AutoGenEmpUnqID",
                        "ClearEmpUnqID",
                        "UpdateContactDets",
                        "UploadTfn",
                        "UpdateMandates",
                        "UpdateDrp",
                        "RunTrnedt",
                        "CreateNewAccounts",
                        "ReportFullTotals",
                        "AutoFtpReportsInd"});
            table401.AddRow(new string[] {
                        string.Format("{0}", inputFilename),
                        string.Format("{0}", nameSelection),
                        string.Format("{0}", pCSelection),
                        string.Format("{0}", addressMatching),
                        string.Format("{0}", allowBlankAddress),
                        string.Format("{0}", updateAddrDetails),
                        string.Format("{0}", updateEmpDetails),
                        string.Format("{0}", autoGenEmpUnqID),
                        string.Format("{0}", clearEmpUnqID),
                        string.Format("{0}", updateContactDets),
                        string.Format("{0}", uploadTfn),
                        string.Format("{0}", updateMandates),
                        string.Format("{0}", updateDrp),
                        string.Format("{0}", runTrnedt),
                        string.Format("{0}", createNewAccounts),
                        string.Format("{0}", reportFullTotals),
                        string.Format("{0}", autoFtpReportsInd)});
#line 1518
  testRunner.And("In EOL00501 I continue with the following values:", ((string)(null)), table401, "And ");
#line 1521
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table402 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table402.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1522
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table402, "And ");
#line hidden
            TechTalk.SpecFlow.Table table403 = new TechTalk.SpecFlow.Table(new string[] {
                        "COY",
                        "FileName"});
            table403.AddRow(new string[] {
                        string.Format("{0}", cOY),
                        string.Format("{0}", fileName)});
#line 1525
 testRunner.When("I read Timestamps from the Health and Integrity file as:", ((string)(null)), table403, "When ");
#line 1528
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1529
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1530
  testRunner.And("In EOL00113 I click on \"awards\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table404 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table404.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 1531
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table404, "And ");
#line hidden
            TechTalk.SpecFlow.Table table405 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table405.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 1534
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table405, "And ");
#line hidden
            TechTalk.SpecFlow.Table table406 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table406.AddRow(new string[] {
                        string.Format("{0}", selection2)});
#line 1538
  testRunner.And("In EOL00114 I continue with the following values:", ((string)(null)), table406, "And ");
#line hidden
            TechTalk.SpecFlow.Table table407 = new TechTalk.SpecFlow.Table(new string[] {
                        "AppropDate"});
            table407.AddRow(new string[] {
                        string.Format("{0}", appropDate)});
#line 1541
  testRunner.And("In EOL00116 I continue with the following values:", ((string)(null)), table407, "And ");
#line hidden
            TechTalk.SpecFlow.Table table408 = new TechTalk.SpecFlow.Table(new string[] {
                        "Timestamp",
                        "ReportFullTotals",
                        "AutoFtpReportsInd",
                        "Confirm"});
            table408.AddRow(new string[] {
                        string.Format("{0}", timestamp),
                        string.Format("{0}", reportFullTotals),
                        string.Format("{0}", autoFtpReportsInd),
                        string.Format("{0}", confirm)});
#line 1544
  testRunner.And("In EOL00601 I continue with the following values:", ((string)(null)), table408, "And ");
#line hidden
            TechTalk.SpecFlow.Table table409 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "ReportDate",
                        "ReportSequence"});
            table409.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSequence)});
#line 1547
  testRunner.And("In EOL00602 I continue with the following values:", ((string)(null)), table409, "And ");
#line 1550
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table410 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table410.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1551
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table410, "And ");
#line 1554
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1556
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", holderID1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1557
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table411 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table411.AddRow(new string[] {
                        string.Format("{0}", certificateLine1A),
                        string.Format("{0}", certificateLine2A),
                        string.Format("{0}", certificateLine3A),
                        string.Format("{0}", certificateLine4A),
                        string.Format("{0}", certificateLine5A),
                        string.Format("{0}", certificateLine6A),
                        string.Format("{0}", certificateLine7A),
                        string.Format("{0}", certificateLine8A),
                        string.Format("{0}", certificateLine9A),
                        string.Format("{0}", certificateLine10A)});
#line 1558
 testRunner.Then("In ENS01012 I should see Register details as:", ((string)(null)), table411, "Then ");
#line 1561
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, holderID2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1562
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table412 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table412.AddRow(new string[] {
                        string.Format("{0}", certificateLine1A),
                        string.Format("{0}", certificateLine2B),
                        string.Format("{0}", certificateLine3B),
                        string.Format("{0}", certificateLine4A),
                        string.Format("{0}", certificateLine5A),
                        string.Format("{0}", certificateLine6A),
                        string.Format("{0}", certificateLine7A),
                        string.Format("{0}", certificateLine8A),
                        string.Format("{0}", certificateLine9A),
                        string.Format("{0}", certificateLine10A)});
#line 1563
 testRunner.Then("In ENS01012 I should see Register details as:", ((string)(null)), table412, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Deferred Plan Bulk Purchase EB")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("ESSPurchase")]
        [NUnit.Framework.TestCaseAttribute("Test1", "CPU_AUTO", "DEP", "EB", "12A", "INT", "12/07/2012", "ESSUPLDEP_TOT.CSV", "F", "N", "Y", "N", "N", "Y", "N", "N", "Y", "N", "N", "N", "Y", "N", "F", "Y", "", "UPL", "", "C", "Bulk Upload Process", "", "A", "RPH", "", "", "", "", "", "", "", "", "", "B", "ABO", "DEB", "CBS", "B", "12/07/2012", "12/07/2012", "1000", "10.00000", "10.00000", "", "", "", "", "", "", "B", "12/07/2012", "10.00000", "A", "A", "C", "C", "12/07/2012", "2", "2500.00", "250", "2500.00", "2500.00", "", "", "", "", "GCB", "AUD", "", "", "", "AUD", "12/07/2012", "Y", "", "", "", "", "", "", "", "", "", "", "", "DP12A", "5555", "NDF", "1", "12/07/2012", "12/07/2012", "", "N", "FBS", "S", "", "", "", "", "", "", "", "", "", "", "", "", "S", "", "BTQ", "", "SETTLED", "2", "2500.00", "Settled", "2", "250", "100", "2500.00", "1000.00", "ESABO", "I0030024087", "F", "250", "150", "2500.00", "1500.00", "I0032848141", "BPE", "P", "PURCHASE", "250", "2500.00", "M", "", "", "", "C", "/DEP/12A", "DEP/DEFERRED EMP SHARE PLAN - AU", "12A 20120712EB   12/07/12           100", "**** Total for 20120712EB                100", "", "", "", "", "", "", "", "S", "12A 20120712EB   12/07/12           150", "**** Total for 20120712EB                150", null)]
        public virtual void DeferredPlanBulkPurchaseEB(
                    string test, 
                    string cOY, 
                    string classCode, 
                    string selection, 
                    string registerCode, 
                    string selection1, 
                    string appropDate, 
                    string inputFilename, 
                    string nameSelection, 
                    string pCSelection, 
                    string addressMatching, 
                    string allowBlankAddress, 
                    string updateAddrDetails, 
                    string updateEmpDetails, 
                    string autoGenEmpUnqID, 
                    string clearEmpUnqID, 
                    string updateContactDets, 
                    string uploadTfn, 
                    string updateMandates, 
                    string updateDrp, 
                    string runTrnedt, 
                    string createNewAccounts, 
                    string reportFullTotals, 
                    string autoFtpReportsInd, 
                    string fileName, 
                    string selection2, 
                    string timestamp, 
                    string confirm, 
                    string reportHeading, 
                    string reportDate, 
                    string reportSequence, 
                    string selection3, 
                    string payFreq1, 
                    string accumPeriodFrom1, 
                    string accumPeriodTO1, 
                    string payFreq2, 
                    string accumPeriodFrom2, 
                    string accumPeriodTO2, 
                    string payFreq3, 
                    string accumPeriodFrom3, 
                    string accumPeriodTO3, 
                    string releaseMode, 
                    string confirmRelType, 
                    string bulkCode, 
                    string selection4, 
                    string menuSelection, 
                    string settlementDate, 
                    string tradeDate, 
                    string tradeTime, 
                    string indicativePrice, 
                    string finalPrice, 
                    string chargeCode1, 
                    string chargeCode2, 
                    string chargeCode3, 
                    string chargeDesc1, 
                    string chargeDesc2, 
                    string chargeDesc3, 
                    string confirmStatus, 
                    string confirmSettlement, 
                    string confirmFinalPrice, 
                    string menuSelection1, 
                    string confirmStatus1, 
                    string menuSelection2, 
                    string confirmStatus2, 
                    string awardDate, 
                    string totalCount, 
                    string totalUnits, 
                    string unitsCalc, 
                    string costOFShares, 
                    string totalCost, 
                    string residueKept, 
                    string residueRefunded, 
                    string taxONCharges, 
                    string accumCharges, 
                    string selection5, 
                    string bulkCurrency, 
                    string settlementFrom, 
                    string settlementTO, 
                    string bulkID1, 
                    string currency1, 
                    string settlementDate1, 
                    string processBulkInd1, 
                    string bulkID2, 
                    string currency2, 
                    string settlementDate2, 
                    string processBulkInd2, 
                    string bulkID3, 
                    string currency3, 
                    string settlementDate3, 
                    string processBulkInd3, 
                    string homeBankDesc, 
                    string ausTraceAccount, 
                    string registerCode1, 
                    string paymentAccount, 
                    string orderNO, 
                    string ident, 
                    string nbrBulks, 
                    string settlementFrom1, 
                    string settlementTO1, 
                    string paymentDate, 
                    string addConvRateInd, 
                    string selection6, 
                    string menuSelection3, 
                    string settlementDateS, 
                    string tradeDateS, 
                    string tradeTimeS, 
                    string indicativePriceS, 
                    string finalPriceS, 
                    string registerCode1S, 
                    string chargeCode1S, 
                    string chargeCode2S, 
                    string chargeCode3S, 
                    string chargeDesc1S, 
                    string chargeDesc2S, 
                    string chargeDesc3S, 
                    string confirmStatus3, 
                    string awardDateS, 
                    string selection7, 
                    string bulkID, 
                    string status, 
                    string transCount, 
                    string transTotal, 
                    string statusDesc, 
                    string bulkCount, 
                    string bulkUnits, 
                    string transUnits, 
                    string bulkMoney, 
                    string transMoney, 
                    string tranTypeParent, 
                    string holderID1, 
                    string enquiryAction, 
                    string bulkUnits1, 
                    string transUnits1, 
                    string bulkMoney1, 
                    string transMoney1, 
                    string holderID2, 
                    string selection8, 
                    string bulkType, 
                    string bulkTypeDesc, 
                    string bulkTransUnits, 
                    string bulkTransMoney, 
                    string actionM, 
                    string bankType, 
                    string bankCode, 
                    string accountNumber, 
                    string action, 
                    string locateArgument, 
                    string certificateLine1A, 
                    string certificateLine2A, 
                    string certificateLine3A, 
                    string certificateLine4A, 
                    string certificateLine5A, 
                    string certificateLine6A, 
                    string certificateLine7A, 
                    string certificateLine8A, 
                    string certificateLine9A, 
                    string certificateLine10A, 
                    string action1, 
                    string certificateLine2B, 
                    string certificateLine3B, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "ESSPurchase"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Deferred Plan Bulk Purchase EB", @__tags);
#line 1574
this.ScenarioSetup(scenarioInfo);
#line 1576
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1577
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1578
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1580
  testRunner.And("In EOL00113 I click on \"awards\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table413 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table413.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 1581
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table413, "And ");
#line hidden
            TechTalk.SpecFlow.Table table414 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table414.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 1584
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table414, "And ");
#line hidden
            TechTalk.SpecFlow.Table table415 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table415.AddRow(new string[] {
                        string.Format("{0}", selection1)});
#line 1587
  testRunner.And("In EOL00114 I continue with the following values:", ((string)(null)), table415, "And ");
#line hidden
            TechTalk.SpecFlow.Table table416 = new TechTalk.SpecFlow.Table(new string[] {
                        "AppropDate"});
            table416.AddRow(new string[] {
                        string.Format("{0}", appropDate)});
#line 1590
  testRunner.And("In EOL00116 I continue with the following values:", ((string)(null)), table416, "And ");
#line hidden
            TechTalk.SpecFlow.Table table417 = new TechTalk.SpecFlow.Table(new string[] {
                        "InputFilename",
                        "NameSelection",
                        "PCSelection",
                        "AddressMatching",
                        "AllowBlankAddress",
                        "UpdateAddrDetails",
                        "UpdateEmpDetails",
                        "AutoGenEmpUnqID",
                        "ClearEmpUnqID",
                        "UpdateContactDets",
                        "UploadTfn",
                        "UpdateMandates",
                        "UpdateDrp",
                        "RunTrnedt",
                        "CreateNewAccounts",
                        "ReportFullTotals",
                        "AutoFtpReportsInd"});
            table417.AddRow(new string[] {
                        string.Format("{0}", inputFilename),
                        string.Format("{0}", nameSelection),
                        string.Format("{0}", pCSelection),
                        string.Format("{0}", addressMatching),
                        string.Format("{0}", allowBlankAddress),
                        string.Format("{0}", updateAddrDetails),
                        string.Format("{0}", updateEmpDetails),
                        string.Format("{0}", autoGenEmpUnqID),
                        string.Format("{0}", clearEmpUnqID),
                        string.Format("{0}", updateContactDets),
                        string.Format("{0}", uploadTfn),
                        string.Format("{0}", updateMandates),
                        string.Format("{0}", updateDrp),
                        string.Format("{0}", runTrnedt),
                        string.Format("{0}", createNewAccounts),
                        string.Format("{0}", reportFullTotals),
                        string.Format("{0}", autoFtpReportsInd)});
#line 1593
  testRunner.And("In EOL00501 I continue with the following values:", ((string)(null)), table417, "And ");
#line 1596
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table418 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table418.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1597
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table418, "And ");
#line hidden
            TechTalk.SpecFlow.Table table419 = new TechTalk.SpecFlow.Table(new string[] {
                        "COY",
                        "FileName"});
            table419.AddRow(new string[] {
                        string.Format("{0}", cOY),
                        string.Format("{0}", fileName)});
#line 1600
 testRunner.When("I read Timestamps from the Health and Integrity file as:", ((string)(null)), table419, "When ");
#line 1603
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1604
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1605
  testRunner.And("In EOL00113 I click on \"awards\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table420 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table420.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 1606
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table420, "And ");
#line hidden
            TechTalk.SpecFlow.Table table421 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table421.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 1609
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table421, "And ");
#line hidden
            TechTalk.SpecFlow.Table table422 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table422.AddRow(new string[] {
                        string.Format("{0}", selection2)});
#line 1613
  testRunner.And("In EOL00114 I continue with the following values:", ((string)(null)), table422, "And ");
#line hidden
            TechTalk.SpecFlow.Table table423 = new TechTalk.SpecFlow.Table(new string[] {
                        "AppropDate"});
            table423.AddRow(new string[] {
                        string.Format("{0}", appropDate)});
#line 1616
  testRunner.And("In EOL00116 I continue with the following values:", ((string)(null)), table423, "And ");
#line hidden
            TechTalk.SpecFlow.Table table424 = new TechTalk.SpecFlow.Table(new string[] {
                        "Timestamp",
                        "ReportFullTotals",
                        "AutoFtpReportsInd",
                        "Confirm"});
            table424.AddRow(new string[] {
                        string.Format("{0}", timestamp),
                        string.Format("{0}", reportFullTotals),
                        string.Format("{0}", autoFtpReportsInd),
                        string.Format("{0}", confirm)});
#line 1619
  testRunner.And("In EOL00601 I continue with the following values:", ((string)(null)), table424, "And ");
#line hidden
            TechTalk.SpecFlow.Table table425 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "ReportDate",
                        "ReportSequence"});
            table425.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSequence)});
#line 1622
  testRunner.And("In EOL00602 I continue with the following values:", ((string)(null)), table425, "And ");
#line 1625
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table426 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table426.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1626
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table426, "And ");
#line 1629
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1631
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1632
  testRunner.And("In EOL00113 I click on \"releases\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table427 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table427.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 1633
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table427, "And ");
#line hidden
            TechTalk.SpecFlow.Table table428 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table428.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 1636
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table428, "And ");
#line hidden
            TechTalk.SpecFlow.Table table429 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table429.AddRow(new string[] {
                        string.Format("{0}", selection3)});
#line 1639
  testRunner.And("In EOL00106 I continue with the following values:", ((string)(null)), table429, "And ");
#line hidden
            TechTalk.SpecFlow.Table table430 = new TechTalk.SpecFlow.Table(new string[] {
                        "PayFreq1",
                        "AccumPeriodFrom1",
                        "AccumPeriodTO1",
                        "PayFreq2",
                        "AccumPeriodFrom2",
                        "AccumPeriodTO2",
                        "PayFreq3",
                        "AccumPeriodFrom3",
                        "AccumPeriodTO3",
                        "ReleaseMode"});
            table430.AddRow(new string[] {
                        string.Format("{0}", payFreq1),
                        string.Format("{0}", accumPeriodFrom1),
                        string.Format("{0}", accumPeriodTO1),
                        string.Format("{0}", payFreq2),
                        string.Format("{0}", accumPeriodFrom2),
                        string.Format("{0}", accumPeriodTO2),
                        string.Format("{0}", payFreq3),
                        string.Format("{0}", accumPeriodFrom3),
                        string.Format("{0}", accumPeriodTO3),
                        string.Format("{0}", releaseMode)});
#line 1642
  testRunner.And("In EOLBLK05 I continue with the following values:", ((string)(null)), table430, "And ");
#line hidden
            TechTalk.SpecFlow.Table table431 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmRelType"});
            table431.AddRow(new string[] {
                        string.Format("{0}", confirmRelType)});
#line 1645
  testRunner.And("In EOLBLK04 I continue with the following values:", ((string)(null)), table431, "And ");
#line 1648
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table432 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table432.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1649
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table432, "And ");
#line 1652
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table433 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkCode"});
            table433.AddRow(new string[] {
                        string.Format("{0}", bulkCode)});
#line 1654
  testRunner.And("I go to the Bulk Processing System and select Bulk code as:", ((string)(null)), table433, "And ");
#line hidden
            TechTalk.SpecFlow.Table table434 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table434.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 1657
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table434, "And ");
#line hidden
            TechTalk.SpecFlow.Table table435 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table435.AddRow(new string[] {
                        string.Format("{0}", menuSelection)});
#line 1660
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table435, "And ");
#line hidden
            TechTalk.SpecFlow.Table table436 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table436.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus)});
#line 1664
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table436, "And ");
#line hidden
            TechTalk.SpecFlow.Table table437 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table437.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 1667
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table437, "And ");
#line hidden
            TechTalk.SpecFlow.Table table438 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table438.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 1670
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table438, "And ");
#line hidden
            TechTalk.SpecFlow.Table table439 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table439.AddRow(new string[] {
                        string.Format("{0}", menuSelection1)});
#line 1673
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table439, "And ");
#line hidden
            TechTalk.SpecFlow.Table table440 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table440.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode1),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus1)});
#line 1676
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table440, "And ");
#line hidden
            TechTalk.SpecFlow.Table table441 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table441.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 1679
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table441, "And ");
#line hidden
            TechTalk.SpecFlow.Table table442 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table442.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 1682
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table442, "And ");
#line hidden
            TechTalk.SpecFlow.Table table443 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table443.AddRow(new string[] {
                        string.Format("{0}", menuSelection2)});
#line 1685
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table443, "And ");
#line hidden
            TechTalk.SpecFlow.Table table444 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table444.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode1),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus2),
                        string.Format("{0}", awardDate)});
#line 1688
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table444, "And ");
#line hidden
            TechTalk.SpecFlow.Table table445 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table445.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 1691
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table445, "And ");
#line hidden
            TechTalk.SpecFlow.Table table446 = new TechTalk.SpecFlow.Table(new string[] {
                        "TotalCount",
                        "TotalUnits",
                        "SettlementDate",
                        "FinalPrice",
                        "UnitsCalc",
                        "CostOFShares",
                        "TotalCost",
                        "ResidueKept",
                        "ResidueRefunded",
                        "TaxONCharges",
                        "AccumCharges"});
            table446.AddRow(new string[] {
                        string.Format("{0}", totalCount),
                        string.Format("{0}", totalUnits),
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", unitsCalc),
                        string.Format("{0}", costOFShares),
                        string.Format("{0}", totalCost),
                        string.Format("{0}", residueKept),
                        string.Format("{0}", residueRefunded),
                        string.Format("{0}", taxONCharges),
                        string.Format("{0}", accumCharges)});
#line 1694
 testRunner.And("In OLSB0404 I verify the following values:", ((string)(null)), table446, "And ");
#line hidden
            TechTalk.SpecFlow.Table table447 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table447.AddRow(new string[] {
                        string.Format("{0}", selection5)});
#line 1697
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table447, "And ");
#line hidden
            TechTalk.SpecFlow.Table table448 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkCurrency",
                        "SettlementFrom",
                        "SettlementTO"});
            table448.AddRow(new string[] {
                        string.Format("{0}", bulkCurrency),
                        string.Format("{0}", settlementFrom),
                        string.Format("{0}", settlementTO)});
#line 1701
 testRunner.And("In OLSB0105 I continue with the following values:", ((string)(null)), table448, "And ");
#line hidden
            TechTalk.SpecFlow.Table table449 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID1",
                        "Currency1",
                        "SettlementDate1",
                        "ProcessBulkInd1",
                        "BulkID2",
                        "Currency2",
                        "SettlementDate2",
                        "ProcessBulkInd2",
                        "BulkID3",
                        "Currency3",
                        "SettlementDate3",
                        "ProcessBulkInd3"});
            table449.AddRow(new string[] {
                        string.Format("{0}", bulkID1),
                        string.Format("{0}", currency1),
                        string.Format("{0}", settlementDate1),
                        string.Format("{0}", processBulkInd1),
                        string.Format("{0}", bulkID2),
                        string.Format("{0}", currency2),
                        string.Format("{0}", settlementDate2),
                        string.Format("{0}", processBulkInd2),
                        string.Format("{0}", bulkID3),
                        string.Format("{0}", currency3),
                        string.Format("{0}", settlementDate3),
                        string.Format("{0}", processBulkInd3)});
#line 1704
  testRunner.And("In OLSB0106 I continue with the following values:", ((string)(null)), table449, "And ");
#line hidden
            TechTalk.SpecFlow.Table table450 = new TechTalk.SpecFlow.Table(new string[] {
                        "HomeBankDesc",
                        "AusTraceAccount"});
            table450.AddRow(new string[] {
                        string.Format("{0}", homeBankDesc),
                        string.Format("{0}", ausTraceAccount)});
#line 1707
 testRunner.And("In OLSB0104 I verify the following values:", ((string)(null)), table450, "And ");
#line hidden
            TechTalk.SpecFlow.Table table451 = new TechTalk.SpecFlow.Table(new string[] {
                        "PaymentAccount",
                        "OrderNO",
                        "Ident",
                        "NbrBulks",
                        "SettlementFrom",
                        "SettlementTO",
                        "PaymentDate",
                        "AddConvRateInd"});
            table451.AddRow(new string[] {
                        string.Format("{0}", paymentAccount),
                        string.Format("{0}", orderNO),
                        string.Format("{0}", ident),
                        string.Format("{0}", nbrBulks),
                        string.Format("{0}", settlementFrom1),
                        string.Format("{0}", settlementTO1),
                        string.Format("{0}", paymentDate),
                        string.Format("{0}", addConvRateInd)});
#line 1710
  testRunner.And("In OLSB0101 I continue with the following values:", ((string)(null)), table451, "And ");
#line hidden
            TechTalk.SpecFlow.Table table452 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table452.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1713
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table452, "And ");
#line 1716
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table453 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table453.AddRow(new string[] {
                        string.Format("{0}", selection6)});
#line 1718
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table453, "And ");
#line hidden
            TechTalk.SpecFlow.Table table454 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table454.AddRow(new string[] {
                        string.Format("{0}", menuSelection3)});
#line 1721
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table454, "And ");
#line hidden
            TechTalk.SpecFlow.Table table455 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table455.AddRow(new string[] {
                        string.Format("{0}", settlementDateS),
                        string.Format("{0}", tradeDateS),
                        string.Format("{0}", tradeTimeS),
                        string.Format("{0}", indicativePriceS),
                        string.Format("{0}", finalPriceS),
                        string.Format("{0}", registerCode1S),
                        string.Format("{0}", chargeCode1S),
                        string.Format("{0}", chargeCode2S),
                        string.Format("{0}", chargeCode3S),
                        string.Format("{0}", chargeDesc1S),
                        string.Format("{0}", chargeDesc2S),
                        string.Format("{0}", chargeDesc3S),
                        string.Format("{0}", confirmStatus3),
                        string.Format("{0}", awardDateS)});
#line 1724
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table455, "And ");
#line hidden
            TechTalk.SpecFlow.Table table456 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table456.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 1727
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table456, "And ");
#line hidden
            TechTalk.SpecFlow.Table table457 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table457.AddRow(new string[] {
                        string.Format("{0}", selection7)});
#line 1731
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table457, "And ");
#line hidden
            TechTalk.SpecFlow.Table table458 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "Status",
                        "RegisterCode",
                        "TransCount",
                        "TransTotal",
                        "SettlementDate"});
            table458.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", status),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", transCount),
                        string.Format("{0}", transTotal),
                        string.Format("{0}", settlementDate3)});
#line 1734
  testRunner.And("In BLKSCH01 I continue with the following values:", ((string)(null)), table458, "And ");
#line hidden
            TechTalk.SpecFlow.Table table459 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "StatusDesc",
                        "BulkCount",
                        "BulkUnits",
                        "TransUnits",
                        "BulkMoney",
                        "TransMoney",
                        "TranTypeParent",
                        "HolderID",
                        "RegisterCode"});
            table459.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", statusDesc),
                        string.Format("{0}", bulkCount),
                        string.Format("{0}", bulkUnits),
                        string.Format("{0}", transUnits),
                        string.Format("{0}", bulkMoney),
                        string.Format("{0}", transMoney),
                        string.Format("{0}", tranTypeParent),
                        string.Format("{0}", holderID1),
                        string.Format("{0}", registerCode)});
#line 1737
  testRunner.And("In OLSB1010 I verify the following values:", ((string)(null)), table459, "And ");
#line hidden
            TechTalk.SpecFlow.Table table460 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnquiryAction"});
            table460.AddRow(new string[] {
                        string.Format("{0}", enquiryAction)});
#line 1740
  testRunner.And("In OLSB1010 I continue with the following values:", ((string)(null)), table460, "And ");
#line hidden
            TechTalk.SpecFlow.Table table461 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "StatusDesc",
                        "BulkCount",
                        "BulkUnits",
                        "TransUnits",
                        "BulkMoney",
                        "TransMoney",
                        "TranTypeParent",
                        "HolderID",
                        "RegisterCode"});
            table461.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", statusDesc),
                        string.Format("{0}", bulkCount),
                        string.Format("{0}", bulkUnits1),
                        string.Format("{0}", transUnits1),
                        string.Format("{0}", bulkMoney1),
                        string.Format("{0}", transMoney1),
                        string.Format("{0}", tranTypeParent),
                        string.Format("{0}", holderID2),
                        string.Format("{0}", registerCode)});
#line 1743
  testRunner.And("In OLSB1010 I verify the following values:", ((string)(null)), table461, "And ");
#line 1746
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table462 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table462.AddRow(new string[] {
                        string.Format("{0}", selection8)});
#line 1747
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table462, "And ");
#line hidden
            TechTalk.SpecFlow.Table table463 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "Status",
                        "RegisterCode",
                        "TransCount",
                        "TransTotal",
                        "SettlementDate"});
            table463.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", status),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", transCount),
                        string.Format("{0}", transTotal),
                        string.Format("{0}", settlementDate3)});
#line 1750
  testRunner.And("In BLKSCH01 I continue with the following values:", ((string)(null)), table463, "And ");
#line hidden
            TechTalk.SpecFlow.Table table464 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkType",
                        "BulkTypeDesc",
                        "ClassCode",
                        "TotalCount",
                        "BulkTransUnits",
                        "BulkTransMoney",
                        "RegisterCode",
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "ActionM"});
            table464.AddRow(new string[] {
                        string.Format("{0}", bulkType),
                        string.Format("{0}", bulkTypeDesc),
                        string.Format("{0}", classCode),
                        string.Format("{0}", totalCount),
                        string.Format("{0}", bulkTransUnits),
                        string.Format("{0}", bulkTransMoney),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", actionM)});
#line 1753
  testRunner.And("In BLKSCH02 I verify the following values:", ((string)(null)), table464, "And ");
#line hidden
            TechTalk.SpecFlow.Table table465 = new TechTalk.SpecFlow.Table(new string[] {
                        "FinalPrice",
                        "UnitsCalc",
                        "CostOFShares",
                        "TotalCost",
                        "ResidueKept",
                        "ResidueRefunded",
                        "PaymentAccount",
                        "BankType",
                        "BankCode",
                        "AccountNumber"});
            table465.AddRow(new string[] {
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", unitsCalc),
                        string.Format("{0}", costOFShares),
                        string.Format("{0}", totalCost),
                        string.Format("{0}", residueKept),
                        string.Format("{0}", residueRefunded),
                        string.Format("{0}", paymentAccount),
                        string.Format("{0}", bankType),
                        string.Format("{0}", bankCode),
                        string.Format("{0}", accountNumber)});
#line 1756
  testRunner.And("In BLKSCH03 I verify the following values:", ((string)(null)), table465, "And ");
#line 1759
  testRunner.And("I Escape to the Main Menu from Bulk Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1761
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", holderID1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1762
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table466 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table466.AddRow(new string[] {
                        string.Format("{0}", certificateLine1A),
                        string.Format("{0}", certificateLine2A),
                        string.Format("{0}", certificateLine3A),
                        string.Format("{0}", certificateLine4A),
                        string.Format("{0}", certificateLine5A),
                        string.Format("{0}", certificateLine6A),
                        string.Format("{0}", certificateLine7A),
                        string.Format("{0}", certificateLine8A),
                        string.Format("{0}", certificateLine9A),
                        string.Format("{0}", certificateLine10A)});
#line 1763
 testRunner.Then("In ENS01012 I should see Register details as:", ((string)(null)), table466, "Then ");
#line 1766
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, holderID2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1767
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table467 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table467.AddRow(new string[] {
                        string.Format("{0}", certificateLine1A),
                        string.Format("{0}", certificateLine2B),
                        string.Format("{0}", certificateLine3B),
                        string.Format("{0}", certificateLine4A),
                        string.Format("{0}", certificateLine5A),
                        string.Format("{0}", certificateLine6A),
                        string.Format("{0}", certificateLine7A),
                        string.Format("{0}", certificateLine8A),
                        string.Format("{0}", certificateLine9A),
                        string.Format("{0}", certificateLine10A)});
#line 1768
 testRunner.Then("In ENS01012 I should see Register details as:", ((string)(null)), table467, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Loan Plan Bulk Purchase ER")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("ESSPurchase")]
        [NUnit.Framework.TestCaseAttribute("Test1", "CPU_AUTO", "LON", "12A", "INT", "01/01/2012", "ESSUPLLON.CSV", "F", "N", "Y", "N", "N", "Y", "N", "N", "Y", "N", "N", "N", "Y", "N", "F", "Y", "UPL", "", "C", "Bulk Upload Process", "", "A", "", "I0100007274", "ESLB", "/LON/12A", "LON STF SHARE OWNERSHIP PLAN(LOAN)", "01/01/2012        100        500.00         500.00     No           0", "*Plan Total              100*       500.00*        500.00 *", "", "", "", "", "", "", "", "S", "I0030089227", "01/01/2012        150        600.00         600.00     No           0", "*Plan Total              150*       600.00*        600.00 *", null)]
        public virtual void LoanPlanBulkPurchaseER(
                    string test, 
                    string cOY, 
                    string classCode, 
                    string registerCode, 
                    string selection, 
                    string appropDate, 
                    string inputFilename, 
                    string nameSelection, 
                    string pCSelection, 
                    string addressMatching, 
                    string allowBlankAddress, 
                    string updateAddrDetails, 
                    string updateEmpDetails, 
                    string autoGenEmpUnqID, 
                    string clearEmpUnqID, 
                    string updateContactDets, 
                    string uploadTfn, 
                    string updateMandates, 
                    string updateDrp, 
                    string runTrnedt, 
                    string createNewAccounts, 
                    string reportFullTotals, 
                    string autoFtpReportsInd, 
                    string selection1, 
                    string timestamp, 
                    string confirm, 
                    string reportHeading, 
                    string reportDate, 
                    string reportSequence, 
                    string fileName, 
                    string holderID1, 
                    string action, 
                    string locateArgument, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string line6, 
                    string line7, 
                    string line8, 
                    string line9, 
                    string line10, 
                    string action1, 
                    string holderID2, 
                    string line2A, 
                    string line3A, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "ESSPurchase"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Loan Plan Bulk Purchase ER", @__tags);
#line 1779
this.ScenarioSetup(scenarioInfo);
#line 1781
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1782
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1783
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1785
  testRunner.And("In EOL00123 I Click on \"awards\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table468 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table468.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 1786
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table468, "And ");
#line hidden
            TechTalk.SpecFlow.Table table469 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table469.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 1789
  testRunner.And("In EOL00124 I continue with the following values:", ((string)(null)), table469, "And ");
#line hidden
            TechTalk.SpecFlow.Table table470 = new TechTalk.SpecFlow.Table(new string[] {
                        "AppropDate"});
            table470.AddRow(new string[] {
                        string.Format("{0}", appropDate)});
#line 1792
  testRunner.And("In EOL00116 I continue with the following values:", ((string)(null)), table470, "And ");
#line hidden
            TechTalk.SpecFlow.Table table471 = new TechTalk.SpecFlow.Table(new string[] {
                        "InputFilename",
                        "NameSelection",
                        "PCSelection",
                        "AddressMatching",
                        "AllowBlankAddress",
                        "UpdateAddrDetails",
                        "UpdateEmpDetails",
                        "AutoGenEmpUnqID",
                        "ClearEmpUnqID",
                        "UpdateContactDets",
                        "UploadTfn",
                        "UpdateMandates",
                        "UpdateDrp",
                        "RunTrnedt",
                        "CreateNewAccounts",
                        "ReportFullTotals",
                        "AutoFtpReportsInd"});
            table471.AddRow(new string[] {
                        string.Format("{0}", inputFilename),
                        string.Format("{0}", nameSelection),
                        string.Format("{0}", pCSelection),
                        string.Format("{0}", addressMatching),
                        string.Format("{0}", allowBlankAddress),
                        string.Format("{0}", updateAddrDetails),
                        string.Format("{0}", updateEmpDetails),
                        string.Format("{0}", autoGenEmpUnqID),
                        string.Format("{0}", clearEmpUnqID),
                        string.Format("{0}", updateContactDets),
                        string.Format("{0}", uploadTfn),
                        string.Format("{0}", updateMandates),
                        string.Format("{0}", updateDrp),
                        string.Format("{0}", runTrnedt),
                        string.Format("{0}", createNewAccounts),
                        string.Format("{0}", reportFullTotals),
                        string.Format("{0}", autoFtpReportsInd)});
#line 1795
  testRunner.And("In EOL00501 I continue with the following values:", ((string)(null)), table471, "And ");
#line 1798
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table472 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table472.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1799
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table472, "And ");
#line hidden
            TechTalk.SpecFlow.Table table473 = new TechTalk.SpecFlow.Table(new string[] {
                        "COY",
                        "FileName"});
            table473.AddRow(new string[] {
                        string.Format("{0}", cOY),
                        string.Format("{0}", fileName)});
#line 1802
 testRunner.When("I read Timestamps from the Health and Integrity file as:", ((string)(null)), table473, "When ");
#line 1805
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1806
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1808
  testRunner.And("In EOL00123 I Click on \"awards\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table474 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table474.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 1809
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table474, "And ");
#line hidden
            TechTalk.SpecFlow.Table table475 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table475.AddRow(new string[] {
                        string.Format("{0}", selection1)});
#line 1812
  testRunner.And("In EOL00124 I continue with the following values:", ((string)(null)), table475, "And ");
#line hidden
            TechTalk.SpecFlow.Table table476 = new TechTalk.SpecFlow.Table(new string[] {
                        "AppropDate"});
            table476.AddRow(new string[] {
                        string.Format("{0}", appropDate)});
#line 1815
  testRunner.And("In EOL00116 I continue with the following values:", ((string)(null)), table476, "And ");
#line hidden
            TechTalk.SpecFlow.Table table477 = new TechTalk.SpecFlow.Table(new string[] {
                        "Timestamp",
                        "ReportFullTotals",
                        "AutoFtpReportsInd",
                        "Confirm"});
            table477.AddRow(new string[] {
                        string.Format("{0}", timestamp),
                        string.Format("{0}", reportFullTotals),
                        string.Format("{0}", autoFtpReportsInd),
                        string.Format("{0}", confirm)});
#line 1818
  testRunner.And("In EOL00601 I continue with the following values:", ((string)(null)), table477, "And ");
#line hidden
            TechTalk.SpecFlow.Table table478 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "ReportDate",
                        "ReportSequence"});
            table478.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSequence)});
#line 1821
  testRunner.And("In EOL00602 I continue with the following values:", ((string)(null)), table478, "And ");
#line 1824
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table479 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table479.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 1825
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table479, "And ");
#line 1828
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1830
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", holderID1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1831
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table480 = new TechTalk.SpecFlow.Table(new string[] {
                        "Line1",
                        "Line2",
                        "Line3",
                        "Line4",
                        "Line5",
                        "Line6",
                        "Line7",
                        "Line8",
                        "Line9",
                        "Line10"});
            table480.AddRow(new string[] {
                        string.Format("{0}", line1),
                        string.Format("{0}", line2),
                        string.Format("{0}", line3),
                        string.Format("{0}", line4),
                        string.Format("{0}", line5),
                        string.Format("{0}", line6),
                        string.Format("{0}", line7),
                        string.Format("{0}", line8),
                        string.Format("{0}", line9),
                        string.Format("{0}", line10)});
#line 1832
 testRunner.Then("In ENSESS19 I should see Loan Balance details as", ((string)(null)), table480, "Then ");
#line 1835
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, holderID2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1836
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table481 = new TechTalk.SpecFlow.Table(new string[] {
                        "Line1",
                        "Line2",
                        "Line3",
                        "Line4",
                        "Line5",
                        "Line6",
                        "Line7",
                        "Line8",
                        "Line9",
                        "Line10"});
            table481.AddRow(new string[] {
                        string.Format("{0}", line1),
                        string.Format("{0}", line2A),
                        string.Format("{0}", line3A),
                        string.Format("{0}", line4),
                        string.Format("{0}", line5),
                        string.Format("{0}", line6),
                        string.Format("{0}", line7),
                        string.Format("{0}", line8),
                        string.Format("{0}", line9),
                        string.Format("{0}", line10)});
#line 1837
 testRunner.Then("In ENSESS19 I should see Loan Balance details as", ((string)(null)), table481, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
