// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SCRIPAU.Automation.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("OL_HKT_HousekeepingTransactions")]
    public partial class OL_HKT_HousekeepingTransactionsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "OL_HKT_HousekeepingTransactions.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "OL_HKT_HousekeepingTransactions", "Ensure OL_HKT_HousekeepingTransactions functionality covered", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TestCase31324_BCCHG Transaction")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("31324")]
        [NUnit.Framework.CategoryAttribute("OL_MER_MergeHoldersTransaction")]
        [NUnit.Framework.TestCaseAttribute("Test1", "BCCHG", "X0065527073", "4388", "12603865", "B", "00001", "2334", "FPD", "VIC", "00001", "2334", "R", "/FPD", ">", "", "2334", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "BCCHG", "X0053284990", "3664", "11948885", "S", "3383", "1543", "FP", "VIC", "3383", "1543", "R", "/FP", ">", "", "E00029344        3383", "E00029344        1543", "", "", null)]
        public virtual void TestCase31324_BCCHGTransaction(
                    string test, 
                    string selCode, 
                    string holderIdentifier, 
                    string runNumber, 
                    string transferNumber, 
                    string buyORSell, 
                    string oldBrokerCode, 
                    string newBrokerCode, 
                    string classCode, 
                    string registerCode, 
                    string cBrokerCode, 
                    string nBrokerCode, 
                    string action, 
                    string locateArgument, 
                    string action1, 
                    string extraCertDetails1, 
                    string extraCertDetails2, 
                    string extraCertDetails3, 
                    string extraCertDetails4, 
                    string extraCertDetails5, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CPU_AUTO",
                    "31324",
                    "OL_MER_MergeHoldersTransaction"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TestCase31324_BCCHG Transaction", @__tags);
#line 8
this.ScenarioSetup(scenarioInfo);
#line 10
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 11
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
  testRunner.And("In MNS00101 I click on: \"online data entry system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
  testRunner.And("In OLS00101 I Click on: \"housekeeping transactions\" with in the online data entry" +
                    " system menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "SelCode"});
            table1.AddRow(new string[] {
                        string.Format("{0}", selCode)});
#line 14
  testRunner.And("In SELTRN20 I continue with the following details:", ((string)(null)), table1, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier",
                        "RunNumber",
                        "TransferNumber",
                        "BuyORSell",
                        "OldBrokerCode",
                        "NewBrokerCode"});
            table2.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier),
                        string.Format("{0}", runNumber),
                        string.Format("{0}", transferNumber),
                        string.Format("{0}", buyORSell),
                        string.Format("{0}", oldBrokerCode),
                        string.Format("{0}", newBrokerCode)});
#line 17
  testRunner.And("In OLS03705 I continue with the following details:", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClassCode",
                        "RegisterCode",
                        "TransferNumber",
                        "CBrokerCode",
                        "NBrokerCode"});
            table3.AddRow(new string[] {
                        string.Format("{0}", classCode),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", transferNumber),
                        string.Format("{0}", cBrokerCode),
                        string.Format("{0}", nBrokerCode)});
#line 20
  testRunner.And("In OLS03706 I verify the following details:", ((string)(null)), table3, "And ");
#line 23
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 24
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", holderIdentifier), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
  testRunner.And(string.Format("I enter the following details as the Locate action \"{0}\" \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
  testRunner.And(string.Format("I enter the following details as the Locate action \"{0}\" \"{1}\"", action1, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraCertDetails1",
                        "ExtraCertDetails2",
                        "ExtraCertDetails3",
                        "ExtraCertDetails4",
                        "ExtraCertDetails5"});
            table4.AddRow(new string[] {
                        string.Format("{0}", extraCertDetails1),
                        string.Format("{0}", extraCertDetails2),
                        string.Format("{0}", extraCertDetails3),
                        string.Format("{0}", extraCertDetails4),
                        string.Format("{0}", extraCertDetails5)});
#line 28
  testRunner.And("In ENS01053 I verify the following details:", ((string)(null)), table4, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TestCase31574_BCCHG_ErrorValidation")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("31574")]
        [NUnit.Framework.CategoryAttribute("OL_MER_MergeHoldersTransaction")]
        [NUnit.Framework.TestCaseAttribute("Test1", "BCCHG", "I0030129784", "2367", "111", "B", "60109", "59999", "No Buy trade for this run/transfer", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "BCCHG", "I0030129784", "2367", "111", "S", "60109", "60109", "Current/New Broker Codes are the Same", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "BCCHG", "X0053284990", "4544", "11624109", "S", "3383", "1791", "No Sell trade for this run/transfer", null)]
        public virtual void TestCase31574_BCCHG_ErrorValidation(string test, string selCode, string holderIdentifier, string runNumber, string transferNumber, string buyORSell, string oldBrokerCode, string newBrokerCode, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CPU_AUTO",
                    "31574",
                    "OL_MER_MergeHoldersTransaction"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TestCase31574_BCCHG_ErrorValidation", @__tags);
#line 40
this.ScenarioSetup(scenarioInfo);
#line 42
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 43
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 44
  testRunner.And("In MNS00101 I click on: \"online data entry system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
  testRunner.And("In OLS00101 I Click on: \"housekeeping transactions\" with in the online data entry" +
                    " system menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "SelCode"});
            table5.AddRow(new string[] {
                        string.Format("{0}", selCode)});
#line 46
  testRunner.And("In SELTRN20 I continue with the following details:", ((string)(null)), table5, "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier",
                        "RunNumber",
                        "TransferNumber",
                        "BuyORSell",
                        "OldBrokerCode",
                        "NewBrokerCode"});
            table6.AddRow(new string[] {
                        string.Format("{0}", holderIdentifier),
                        string.Format("{0}", runNumber),
                        string.Format("{0}", transferNumber),
                        string.Format("{0}", buyORSell),
                        string.Format("{0}", oldBrokerCode),
                        string.Format("{0}", newBrokerCode)});
#line 49
  testRunner.And("In OLS03705 I continue with the following details:", ((string)(null)), table6, "And ");
#line 52
 testRunner.Then(string.Format("I should see the below ErrorMessage \"{0}\"", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TestCase31575_DTCHG_Transaction")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("31575")]
        [NUnit.Framework.CategoryAttribute("OL_MER_MergeHoldersTransaction")]
        [NUnit.Framework.TestCaseAttribute("Test1", "DTCHG", "65527073", "4388", "12603865", "B", "18/02/14", "19/02/14", "FPD", "VIC", "X0065527073", "R", "/FPD", "FPD/CUM ORDINARY FULLY PAID SHARES", "VIC CUM BAL      19/02/14 CUMCR 4388/12603865           9200", "", "", "", "", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "DTCHG", "30071590", "4206", "12391115", "S", "19/06/13", "20/07/14", "FP", "VIC", "I0030071590", "R", "/FP", "FP /ORDINARY FULLY PAID SHARES", "VIC UNCERTIF\'D   16/01/01 RTFXI 1043/10236991            400  X0000132438", "20/07/14 CTFIX 4206/12391115            400- X0000694746          CHESS", "**** Class Total ***             0", "", "", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "DTCHG", "1701", "4403", "9999", "B", "08/07/15", "16/09/15", "FP", "VIC", "C0000001701", "R", "/FP", "FP /ORDINARY FULLY PAID SHARES", "VIC 00000427     16/09/15 CAPIN 4403/    9999            100                     " +
            "  WINFRM", "VIC 00000428     16/09/15 CAPIN 4403/    9999            100                     " +
            "  WINFRM", "VIC 00000429     16/09/15 CAPIN 4403/    9999            100                     " +
            "  WINFRM", "VIC 00000430     16/09/15 CAPIN 4403/    9999            100                     " +
            "  WINFRM", "VIC 00000431     16/09/15 CAPIN 4403/    9999            100                     " +
            "  WINFRM", "08/07/15 CTIND 4403/    7787              0  8/LOST Certificate   WINFRM", "*Certificate Balance           100", "VIC 00000432     16/09/15 CAPIN 4403/    9999            100                     " +
            "  WINFRM", "VIC 00000433     16/09/15 CAPIN 4403/    9999            100                     " +
            "  WINFRM", null)]
        public virtual void TestCase31575_DTCHG_Transaction(
                    string test, 
                    string selCode, 
                    string holderNumber, 
                    string runNumber, 
                    string transferNumber, 
                    string buyORSell, 
                    string curTranDate, 
                    string newTranDate, 
                    string classCode, 
                    string registerCode, 
                    string searchName, 
                    string action, 
                    string locateArgument, 
                    string certificateLine1, 
                    string certificateLine2, 
                    string certificateLine3, 
                    string certificateLine4, 
                    string certificateLine5, 
                    string certificateLine6, 
                    string certificateLine7, 
                    string certificateLine8, 
                    string certificateLine9, 
                    string certificateLine10, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CPU_AUTO",
                    "31575",
                    "OL_MER_MergeHoldersTransaction"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TestCase31575_DTCHG_Transaction", @__tags);
#line 64
this.ScenarioSetup(scenarioInfo);
#line 66
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 67
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 68
  testRunner.And("In MNS00101 I click on: \"online data entry system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
  testRunner.And("In OLS00101 I Click on: \"housekeeping transactions\" with in the online data entry" +
                    " system menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "SelCode"});
            table7.AddRow(new string[] {
                        string.Format("{0}", selCode)});
#line 70
  testRunner.And("In SELTRN20 I continue with the following details:", ((string)(null)), table7, "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderNumber",
                        "RunNumber",
                        "TransferNumber",
                        "BuyORSell",
                        "CurTranDate",
                        "NewTranDate"});
            table8.AddRow(new string[] {
                        string.Format("{0}", holderNumber),
                        string.Format("{0}", runNumber),
                        string.Format("{0}", transferNumber),
                        string.Format("{0}", buyORSell),
                        string.Format("{0}", curTranDate),
                        string.Format("{0}", newTranDate)});
#line 73
  testRunner.And("In OLS03707 I continue with the following details:", ((string)(null)), table8, "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClassCode",
                        "RegisterCode",
                        "TransferNumber",
                        "CurTranDate",
                        "NewTranDate"});
            table9.AddRow(new string[] {
                        string.Format("{0}", classCode),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", transferNumber),
                        string.Format("{0}", curTranDate),
                        string.Format("{0}", newTranDate)});
#line 76
  testRunner.And("In OLS03708 I verify the following details:", ((string)(null)), table9, "And ");
#line 79
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 80
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 81
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
  testRunner.And(string.Format("I enter the following details as the Locate action \"{0}\" \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table10.AddRow(new string[] {
                        string.Format("{0}", certificateLine1),
                        string.Format("{0}", certificateLine2),
                        string.Format("{0}", certificateLine3),
                        string.Format("{0}", certificateLine4),
                        string.Format("{0}", certificateLine5),
                        string.Format("{0}", certificateLine6),
                        string.Format("{0}", certificateLine7),
                        string.Format("{0}", certificateLine8),
                        string.Format("{0}", certificateLine9),
                        string.Format("{0}", certificateLine10)});
#line 83
 testRunner.Then("In ENS01013 I should see Register details as:", ((string)(null)), table10, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TestCase31576_DTCHG_Transaction")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("31576")]
        [NUnit.Framework.CategoryAttribute("OL_MER_MergeHoldersTransaction")]
        [NUnit.Framework.TestCaseAttribute("Test1", "DTCHG", "30273851", "3196", "11945041", "S", "23/06/11", "22/06/11", "No Sell trade for this run/transfer", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "DTCHG", "30273851", "3657", "11945041", "S", "23/06/11", "22/06/11", "This trade on file for Holder 0045776689", null)]
        public virtual void TestCase31576_DTCHG_Transaction(string test, string selCode, string holderNumber, string runNumber, string transferNumber, string buyORSell, string curTranDate, string newTranDate, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CPU_AUTO",
                    "31576",
                    "OL_MER_MergeHoldersTransaction"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TestCase31576_DTCHG_Transaction", @__tags);
#line 97
this.ScenarioSetup(scenarioInfo);
#line 99
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 100
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 101
  testRunner.And("In MNS00101 I click on: \"online data entry system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
  testRunner.And("In OLS00101 I Click on: \"housekeeping transactions\" with in the online data entry" +
                    " system menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "SelCode"});
            table11.AddRow(new string[] {
                        string.Format("{0}", selCode)});
#line 103
  testRunner.And("In SELTRN20 I continue with the following details:", ((string)(null)), table11, "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderNumber",
                        "RunNumber",
                        "TransferNumber",
                        "BuyORSell",
                        "CurTranDate",
                        "NewTranDate"});
            table12.AddRow(new string[] {
                        string.Format("{0}", holderNumber),
                        string.Format("{0}", runNumber),
                        string.Format("{0}", transferNumber),
                        string.Format("{0}", buyORSell),
                        string.Format("{0}", curTranDate),
                        string.Format("{0}", newTranDate)});
#line 106
  testRunner.And("In OLS03707 I continue with the following details:", ((string)(null)), table12, "And ");
#line 109
 testRunner.Then(string.Format("I should see the below ErrorMessage \"{0}\"", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TestCase31593_RTCHG_Transaction")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("31593")]
        [NUnit.Framework.CategoryAttribute("OL_MER_MergeHoldersTransaction")]
        [NUnit.Framework.TestCaseAttribute("Test1", "RTCHG", "65527073", "4388", "12603865", "B", "", "DEP0001574", "FPD", "VIC", "", "DEP0001574", "X0065527073", "R", "/FPD", ">", "", "", "DEP0001574       00001", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "RTCHG", "30084098", "4253", "12469125", "S", "008091023", "004995029", "FP", "VIC", "008091023", "004995029", "I0030084098", "R", "/FP", ">", "", "", "X0000280011 004995029        3610", "X0000287130 007028247        4064", "X0053503641 004995029        1791", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "RTCHG", "100003091", "1422", "100113", "S", "DPS0000796", "&@$*~`\\/", "DEP", "02A", "DPS0000796", "&@$*~`\\/", "I0100003091", "R", "/DEP", ">", "", "", "", "", "&@$*~`\\/", "", null)]
        public virtual void TestCase31593_RTCHG_Transaction(
                    string test, 
                    string selCode, 
                    string holderNumber, 
                    string runNumber, 
                    string transferNumber, 
                    string buyORSell, 
                    string tradeReference, 
                    string newTradeReference, 
                    string classCode, 
                    string registerCode, 
                    string cTradeReference, 
                    string nTradeReference, 
                    string holderIdentifier, 
                    string action, 
                    string locateArgument, 
                    string action1, 
                    string locateArgument1, 
                    string extraCertDetails1, 
                    string extraCertDetails2, 
                    string extraCertDetails3, 
                    string extraCertDetails4, 
                    string extraCertDetails5, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CPU_AUTO",
                    "31593",
                    "OL_MER_MergeHoldersTransaction"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TestCase31593_RTCHG_Transaction", @__tags);
#line 121
this.ScenarioSetup(scenarioInfo);
#line 123
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 124
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 125
  testRunner.And("In MNS00101 I click on: \"online data entry system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 126
  testRunner.And("In OLS00101 I Click on: \"housekeeping transactions\" with in the online data entry" +
                    " system menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "SelCode"});
            table13.AddRow(new string[] {
                        string.Format("{0}", selCode)});
#line 127
  testRunner.And("In SELTRN20 I continue with the following details:", ((string)(null)), table13, "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderNumber",
                        "RunNumber",
                        "TransferNumber",
                        "BuyORSell",
                        "TradeReference",
                        "NewTradeReference"});
            table14.AddRow(new string[] {
                        string.Format("{0}", holderNumber),
                        string.Format("{0}", runNumber),
                        string.Format("{0}", transferNumber),
                        string.Format("{0}", buyORSell),
                        string.Format("{0}", tradeReference),
                        string.Format("{0}", newTradeReference)});
#line 130
  testRunner.And("In OLS03703 I continue with the following details:", ((string)(null)), table14, "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClassCode",
                        "RegisterCode",
                        "TransferNumber",
                        "CTradeReference",
                        "NTradeReference"});
            table15.AddRow(new string[] {
                        string.Format("{0}", classCode),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", transferNumber),
                        string.Format("{0}", cTradeReference),
                        string.Format("{0}", nTradeReference)});
#line 133
  testRunner.And("In OLS03704 I verify the following details:", ((string)(null)), table15, "And ");
#line 136
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 137
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 138
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", holderIdentifier), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 139
  testRunner.And(string.Format("I enter the following details as the Locate action \"{0}\" \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 140
  testRunner.And(string.Format("I enter the following details as the Locate action \"{0}\" \"{1}\"", action1, locateArgument1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExtraCertDetails1",
                        "ExtraCertDetails2",
                        "ExtraCertDetails3",
                        "ExtraCertDetails4",
                        "ExtraCertDetails5"});
            table16.AddRow(new string[] {
                        string.Format("{0}", extraCertDetails1),
                        string.Format("{0}", extraCertDetails2),
                        string.Format("{0}", extraCertDetails3),
                        string.Format("{0}", extraCertDetails4),
                        string.Format("{0}", extraCertDetails5)});
#line 141
  testRunner.And("In ENS01053 I verify the following details:", ((string)(null)), table16, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TestCase31578_RTCHG_ErrorValidation")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("31578")]
        [NUnit.Framework.CategoryAttribute("OL_MER_MergeHoldersTransaction")]
        [NUnit.Framework.TestCaseAttribute("Test1", "RTCHG", "1701", "4403", "9999", "B", "123", "456", "Trade for this run/transfer is               (leading zeroes are required)", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "RTCHG", "45776689", "3657", "11945041", "B", "E00029344", "069333094", "No Buy trade for this run/transfer", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "RTCHG", "45776689", "3657", "11945041", "S", "E00029344", "069333094", "Trade for this run/transfer is 069333094     (leading zeroes are required)", null)]
        public virtual void TestCase31578_RTCHG_ErrorValidation(string test, string selCode, string holderNumber, string runNumber, string transferNumber, string buyORSell, string tradeReference, string newTradeReference, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CPU_AUTO",
                    "31578",
                    "OL_MER_MergeHoldersTransaction"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TestCase31578_RTCHG_ErrorValidation", @__tags);
#line 156
this.ScenarioSetup(scenarioInfo);
#line 158
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 159
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 160
  testRunner.And("In MNS00101 I click on: \"online data entry system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 161
  testRunner.And("In OLS00101 I Click on: \"housekeeping transactions\" with in the online data entry" +
                    " system menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "SelCode"});
            table17.AddRow(new string[] {
                        string.Format("{0}", selCode)});
#line 162
  testRunner.And("In SELTRN20 I continue with the following details:", ((string)(null)), table17, "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderNumber",
                        "RunNumber",
                        "TransferNumber",
                        "BuyORSell",
                        "TradeReference",
                        "NewTradeReference"});
            table18.AddRow(new string[] {
                        string.Format("{0}", holderNumber),
                        string.Format("{0}", runNumber),
                        string.Format("{0}", transferNumber),
                        string.Format("{0}", buyORSell),
                        string.Format("{0}", tradeReference),
                        string.Format("{0}", newTradeReference)});
#line 165
  testRunner.And("In OLS03703 I continue with the following details:", ((string)(null)), table18, "And ");
#line 168
 testRunner.Then(string.Format("I should see the below ErrorMessage \"{0}\"", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TestCase35811_DIVHS_MERGEReversal_Transaction")]
        [NUnit.Framework.CategoryAttribute("ANZ_AUTO")]
        [NUnit.Framework.CategoryAttribute("35811")]
        [NUnit.Framework.CategoryAttribute("OL_MER_MergeHoldersTransaction")]
        [NUnit.Framework.TestCaseAttribute("Test1", "DIVHS", "I8768767565", "05/08/15", "SB02", "D", "D", "51", "I0010164036", "DH", "", "05/08/2015", "DIRECT CREDIT", "SB02", "SB003", "PAYMENT", "960.00", "960.00", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "DIVHS", "I0060295654", "05/08/15", "SB01", "D", "C", "44", "X0007974477", "DH", "", "", "", "", "", "", "", "", null)]
        public virtual void TestCase35811_DIVHS_MERGEReversal_Transaction(
                    string test, 
                    string selCode, 
                    string fromHolderID, 
                    string paymentDate, 
                    string dividendCode, 
                    string dividendSource, 
                    string payMethod, 
                    string referenceNumber, 
                    string tOHolderID, 
                    string action, 
                    string locateArgument, 
                    string payDate, 
                    string payMethod1, 
                    string code, 
                    string payAccount, 
                    string payType, 
                    string grossAmount, 
                    string nettAmount, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ANZ_AUTO",
                    "35811",
                    "OL_MER_MergeHoldersTransaction"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TestCase35811_DIVHS_MERGEReversal_Transaction", @__tags);
#line 180
this.ScenarioSetup(scenarioInfo);
#line 182
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 183
 testRunner.When("In SELCOY01 I select the company: \"ANZ_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 184
  testRunner.And("In MNS00101 I click on: \"online data entry system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 185
  testRunner.And("In OLS00101 I Click on: \"housekeeping transactions\" with in the online data entry" +
                    " system menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "SelCode"});
            table19.AddRow(new string[] {
                        string.Format("{0}", selCode)});
#line 186
  testRunner.And("In SELTRN20 I continue with the following details:", ((string)(null)), table19, "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "FromHolderID",
                        "PaymentDate",
                        "DividendCode",
                        "DividendSource",
                        "PayMethod",
                        "ReferenceNumber",
                        "TOHolderID"});
            table20.AddRow(new string[] {
                        string.Format("{0}", fromHolderID),
                        string.Format("{0}", paymentDate),
                        string.Format("{0}", dividendCode),
                        string.Format("{0}", dividendSource),
                        string.Format("{0}", payMethod),
                        string.Format("{0}", referenceNumber),
                        string.Format("{0}", tOHolderID)});
#line 189
  testRunner.And("In OLS03801 I continue with the following details:", ((string)(null)), table20, "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "PaymentDate",
                        "DividendCode",
                        "DividendSource",
                        "PayMethod",
                        "ReferenceNumber"});
            table21.AddRow(new string[] {
                        string.Format("{0}", paymentDate),
                        string.Format("{0}", dividendCode),
                        string.Format("{0}", dividendSource),
                        string.Format("{0}", payMethod),
                        string.Format("{0}", referenceNumber)});
#line 192
  testRunner.And("In OLS03802 I verify the following details:", ((string)(null)), table21, "And ");
#line 195
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 196
 testRunner.When("In SELCOY01 I select the company: \"ANZ_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 197
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", tOHolderID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 198
  testRunner.And(string.Format("I enter the following details as the Locate action \"{0}\" \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 199
 testRunner.Then(string.Format("In ENSDIV01 I should see Dividend History as below \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" " +
                        "\"{5}\" \"{6}\"", payDate, payMethod1, code, payAccount, payType, grossAmount, nettAmount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TestCase35811_DIVHS_MERGEReversal_ErrorValidation")]
        [NUnit.Framework.CategoryAttribute("ANZ_AUTO")]
        [NUnit.Framework.CategoryAttribute("35812")]
        [NUnit.Framework.CategoryAttribute("OL_MER_MergeHoldersTransaction")]
        [NUnit.Framework.TestCaseAttribute("Test1", "DIVHS", "X0007974477", "", "", "", "", "", "X0007974234", "Invalid Holder Identifier - please re-enter", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "DIVHS", "X0007974477", "", "", "", "", "", "X0007974477", "Cannot Reverse Merge Details to SAME holder", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "DIVHS", "X0007974477", "05/08/15", "", "", "", "", "I8768767565", "Holder Details NOT found on Divhis File", null)]
        [NUnit.Framework.TestCaseAttribute("Test4", "DIVHS", "I8768767565", "16/12/14", "A058", "D", "D", "41654", "X0007974477", "Holder Details NOT found on Divhis File", null)]
        [NUnit.Framework.TestCaseAttribute("Test5", "DIVHS", "I8768767565", "16/12", "", "", "", "", "X0007974477", "Payment date entered is invalid", null)]
        public virtual void TestCase35811_DIVHS_MERGEReversal_ErrorValidation(string test, string selCode, string fromHolderID, string paymentDate, string dividendCode, string dividendSource, string payMethod, string referenceNumber, string tOHolderID, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ANZ_AUTO",
                    "35812",
                    "OL_MER_MergeHoldersTransaction"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TestCase35811_DIVHS_MERGEReversal_ErrorValidation", @__tags);
#line 211
this.ScenarioSetup(scenarioInfo);
#line 213
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 214
 testRunner.When("In SELCOY01 I select the company: \"ANZ_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 215
  testRunner.And("In MNS00101 I click on: \"online data entry system\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 216
  testRunner.And("In OLS00101 I Click on: \"housekeeping transactions\" with in the online data entry" +
                    " system menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "SelCode"});
            table22.AddRow(new string[] {
                        string.Format("{0}", selCode)});
#line 217
  testRunner.And("In SELTRN20 I continue with the following details:", ((string)(null)), table22, "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "FromHolderID",
                        "PaymentDate",
                        "DividendCode",
                        "DividendSource",
                        "PayMethod",
                        "ReferenceNumber",
                        "TOHolderID"});
            table23.AddRow(new string[] {
                        string.Format("{0}", fromHolderID),
                        string.Format("{0}", paymentDate),
                        string.Format("{0}", dividendCode),
                        string.Format("{0}", dividendSource),
                        string.Format("{0}", payMethod),
                        string.Format("{0}", referenceNumber),
                        string.Format("{0}", tOHolderID)});
#line 220
  testRunner.And("In OLS03801 I continue with the following details:", ((string)(null)), table23, "And ");
#line 223
 testRunner.Then(string.Format("I should see the below ErrorMessage \"{0}\"", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
