// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SCRIPAU.Automation.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ESS_Purchase_UD")]
    public partial class ESS_Purchase_UDFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ESS_Purchase_UD.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ESS_Purchase_UD", "In order to avoid silly mistakes\r\nAs a math idiot\r\nI want to be told the sum of t" +
                    "wo numbers", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Deferred Plan Bulk Multiple Registers EP")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("ESSPurchase")]
        [NUnit.Framework.CategoryAttribute("ESSPurchaseUD")]
        [NUnit.Framework.TestCaseAttribute("Test1", "CPU_AUTO", "DEP", "ESSUPLDEPEPUD.CSV", "F", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "", "F", "Y", "", "Y", "Bulk Upload Process", "", "A", "EP", "12A", "MAN", "68400", "M", "1", "1", "C", "", "12/07/2012", "150.00", "", "", "I0100019001", "AUD", "Part", "68401", "200.00", "I0013420891", "RPH", "M", "1", "1", "", "", "", "", "", "", "B", "AWP", "13A", "12/07/2013", "DEP", "CBS", "B", "03/01/2013", "03/01/2013", "1000", "10.00000", "10.00000", "13A", "", "", "", "", "", "", "B", "A", "", "A", "C", "12/07/2013", "C", "1", "200.00", "20", "200.00", "200.00", "", "", "", "", "1", "2", "12/07/2012", "12/07/2012", "12/07/2012", "150.00", "15", "150.00", "150.00", "GCB", "AUD", "", "", "", "AUD", "", "Y", "", "AUD", "", "Y", "", "", "", "", "", "", "DP12A", "5555", "NDF", "2", "12/07/2012", "03/01/2013", "", "N", "FBS", "S", "", "", "", "", "S", "", "I0100019001", "C", "/DEP/12A", "DEP/DEFERRED EMP SHARE PLAN - AU", "12A 20120712EP   12/07/12            15", "**** Total for 20120712EP                 15", "", "", "", "", "", "", "", "S", "I0013420891", "/DEP/13A", "13A 20130712EP   12/07/13            20", "**** Total for 20130712EP                 20", null)]
        public virtual void DeferredPlanBulkMultipleRegistersEP(
                    string test, 
                    string cOY, 
                    string classCode, 
                    string inputFilename, 
                    string nameSelection, 
                    string pCSelection, 
                    string addressMatching, 
                    string allowBlankAddress, 
                    string updateAddrDetails, 
                    string updateEmpDetails, 
                    string autoGenEmpUnqID, 
                    string clearEmpUnqID, 
                    string updateContactDets, 
                    string uploadTfn, 
                    string updateMandates, 
                    string updateDrp, 
                    string runTrnedt, 
                    string createNewAccounts, 
                    string reportFullTotals, 
                    string autoFtpReportsInd, 
                    string fileName, 
                    string confirm, 
                    string reportHeading, 
                    string reportDate, 
                    string reportSequence, 
                    string selection, 
                    string registerCode1, 
                    string selection2, 
                    string transNumber1, 
                    string paymentFrequency1, 
                    string accumPeriod1, 
                    string paymentNumber1, 
                    string paymentStatus1, 
                    string eol01901ReceiptCurrency1, 
                    string paymentDate1, 
                    string paymentAmount1, 
                    string employerPymtAmt1, 
                    string eol01901ExchangeRate1, 
                    string searchName1, 
                    string eol01902EmpBaseCurr1, 
                    string registerType1, 
                    string transNumber2, 
                    string paymentAmount2, 
                    string searchName2, 
                    string selection3, 
                    string payFreq1, 
                    string accumPeriodFrom1, 
                    string accumPeriodTO1, 
                    string payFreq2, 
                    string accumPeriodFrom2, 
                    string accumPeriodTO2, 
                    string payFreq3, 
                    string accumPeriodFrom3, 
                    string accumPeriodTO3, 
                    string releaseMode, 
                    string confirmRelType, 
                    string registerCode2, 
                    string paymentDate2, 
                    string bulkCode, 
                    string selection4, 
                    string menuSelection1, 
                    string settlementDateA, 
                    string tradeDateA, 
                    string tradeTimeA, 
                    string indicativePriceA, 
                    string finalPriceA, 
                    string registerCodeA, 
                    string chargeCode1, 
                    string chargeCode2, 
                    string chargeCode3, 
                    string chargeDesc1, 
                    string chargeDesc2, 
                    string chargeDesc3, 
                    string confirmStatusA, 
                    string menuSelection2, 
                    string registerCodeB, 
                    string confirmStatusB, 
                    string menuSelection3, 
                    string awardDate1, 
                    string confirmStatusC, 
                    string totalCount, 
                    string totalUnits1, 
                    string unitsCalc1, 
                    string costOFShares1, 
                    string totalCost1, 
                    string residueKept, 
                    string residueRefunded, 
                    string taxONCharges, 
                    string accumCharges, 
                    string bulkNo1, 
                    string bulkNo2, 
                    string settlementDateB, 
                    string tradeDateB, 
                    string awardDate2, 
                    string totalUnits2, 
                    string unitsCalc2, 
                    string costOFShares2, 
                    string totalCost2, 
                    string selection5, 
                    string bulkCurrency, 
                    string settlementFrom, 
                    string settlementTO, 
                    string bulkID1, 
                    string currency1, 
                    string settlementDate1, 
                    string processBulkInd1, 
                    string bulkID2, 
                    string currency2, 
                    string settlementDate2, 
                    string processBulkInd2, 
                    string bulkID3, 
                    string currency3, 
                    string settlementDate3, 
                    string processBulkInd3, 
                    string homeBankDesc, 
                    string ausTraceAccount, 
                    string paymentAccount, 
                    string orderNO, 
                    string ident, 
                    string nbrBulks, 
                    string settlementFrom1, 
                    string settlementTO1, 
                    string paymentDate, 
                    string addConvRateInd, 
                    string selection6, 
                    string menuSelection4, 
                    string tradeDateS, 
                    string tradeTimeS, 
                    string indicativePriceS, 
                    string finalPriceS, 
                    string confirmStatusD, 
                    string awardDateS, 
                    string holderID1, 
                    string action, 
                    string locateArgument, 
                    string certificateLine1A, 
                    string certificateLine2A, 
                    string certificateLine3A, 
                    string certificateLine4A, 
                    string certificateLine5A, 
                    string certificateLine6A, 
                    string certificateLine7A, 
                    string certificateLine8A, 
                    string certificateLine9A, 
                    string certificateLine10A, 
                    string action1, 
                    string holderID2, 
                    string locateArgument1, 
                    string certificateLine2B, 
                    string certificateLine3B, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "ESSPurchase",
                    "ESSPurchaseUD"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Deferred Plan Bulk Multiple Registers EP", @__tags);
#line 9
this.ScenarioSetup(scenarioInfo);
#line 11
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 12
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
  testRunner.And("In EOL00113 I click on \"multiple awards health integrity\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "InputFilename",
                        "NameSelection",
                        "PCSelection",
                        "AddressMatching",
                        "AllowBlankAddress",
                        "UpdateAddrDetails",
                        "UpdateEmpDetails",
                        "AutoGenEmpUnqID",
                        "ClearEmpUnqID",
                        "UpdateContactDets",
                        "UploadTfn",
                        "UpdateMandates",
                        "UpdateDrp",
                        "RunTrnedt",
                        "CreateNewAccounts",
                        "ReportFullTotals",
                        "AutoFtpReportsInd"});
            table1.AddRow(new string[] {
                        string.Format("{0}", inputFilename),
                        string.Format("{0}", nameSelection),
                        string.Format("{0}", pCSelection),
                        string.Format("{0}", addressMatching),
                        string.Format("{0}", allowBlankAddress),
                        string.Format("{0}", updateAddrDetails),
                        string.Format("{0}", updateEmpDetails),
                        string.Format("{0}", autoGenEmpUnqID),
                        string.Format("{0}", clearEmpUnqID),
                        string.Format("{0}", updateContactDets),
                        string.Format("{0}", uploadTfn),
                        string.Format("{0}", updateMandates),
                        string.Format("{0}", updateDrp),
                        string.Format("{0}", runTrnedt),
                        string.Format("{0}", createNewAccounts),
                        string.Format("{0}", reportFullTotals),
                        string.Format("{0}", autoFtpReportsInd)});
#line 16
  testRunner.And("In EOL00501 I continue with the following values:", ((string)(null)), table1, "And ");
#line 19
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table2.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 20
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "COY",
                        "FileName"});
            table3.AddRow(new string[] {
                        string.Format("{0}", cOY),
                        string.Format("{0}", fileName)});
#line 23
 testRunner.When("I read Timestamps from the Health and Integrity file as:", ((string)(null)), table3, "When ");
#line 26
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
  testRunner.And("In EOL00113 I click on \"multiple awards bulk uploads\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Timestamp",
                        "ReportFullTotals",
                        "AutoFtpReportsInd",
                        "Confirm"});
            table4.AddRow(new string[] {
                        "<Timestamp>",
                        string.Format("{0}", reportFullTotals),
                        string.Format("{0}", autoFtpReportsInd),
                        string.Format("{0}", confirm)});
#line 30
  testRunner.And("In EOL00601 I continue with the following values:", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "ReportDate",
                        "ReportSequence"});
            table5.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSequence)});
#line 33
  testRunner.And("In EOL00602 I continue with the following values:", ((string)(null)), table5, "And ");
#line 36
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table6.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 37
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table6, "And ");
#line 40
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
  testRunner.And("In EOL00113 I click on \"payments\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table7.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 44
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table7, "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table8.AddRow(new string[] {
                        string.Format("{0}", registerCode1)});
#line 47
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table8, "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table9.AddRow(new string[] {
                        string.Format("{0}", selection2)});
#line 50
  testRunner.And("In EOL00120 I continue with the following values:", ((string)(null)), table9, "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "PaymentFrequency",
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentStatus",
                        "Eol01901ReceiptCurrency",
                        "PaymentDate",
                        "PaymentAmount",
                        "EmployerPymtAmt",
                        "Eol01901ExchangeRate",
                        "SearchName"});
            table10.AddRow(new string[] {
                        string.Format("{0}", transNumber1),
                        string.Format("{0}", paymentFrequency1),
                        string.Format("{0}", accumPeriod1),
                        string.Format("{0}", paymentNumber1),
                        string.Format("{0}", paymentStatus1),
                        string.Format("{0}", eol01901ReceiptCurrency1),
                        string.Format("{0}", paymentDate1),
                        string.Format("{0}", paymentAmount1),
                        string.Format("{0}", employerPymtAmt1),
                        string.Format("{0}", eol01901ExchangeRate1),
                        string.Format("{0}", searchName1)});
#line 53
  testRunner.And("In EOL01901 I Add Manual Payment as:", ((string)(null)), table10, "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentFrequency",
                        "RegisterType",
                        "PaymentAmount",
                        "Eol01902EmpBaseCurr"});
            table11.AddRow(new string[] {
                        string.Format("{0}", accumPeriod1),
                        string.Format("{0}", paymentNumber1),
                        string.Format("{0}", paymentFrequency1),
                        string.Format("{0}", registerType1),
                        string.Format("{0}", paymentAmount1),
                        string.Format("{0}", eol01902EmpBaseCurr1)});
#line 56
  testRunner.And("In EOL01902 I verify the following values:", ((string)(null)), table11, "And ");
#line 59
  testRunner.And("EscapeFromCurrentScreen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table12.AddRow(new string[] {
                        string.Format("{0}", registerCode2)});
#line 60
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table12, "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table13.AddRow(new string[] {
                        string.Format("{0}", selection2)});
#line 63
  testRunner.And("In EOL00120 I continue with the following values:", ((string)(null)), table13, "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "PaymentFrequency",
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentStatus",
                        "Eol01901ReceiptCurrency",
                        "PaymentDate",
                        "PaymentAmount",
                        "EmployerPymtAmt",
                        "Eol01901ExchangeRate",
                        "SearchName"});
            table14.AddRow(new string[] {
                        string.Format("{0}", transNumber2),
                        string.Format("{0}", paymentFrequency1),
                        string.Format("{0}", accumPeriod1),
                        string.Format("{0}", paymentNumber1),
                        string.Format("{0}", paymentStatus1),
                        string.Format("{0}", eol01901ReceiptCurrency1),
                        string.Format("{0}", paymentDate2),
                        string.Format("{0}", paymentAmount2),
                        string.Format("{0}", employerPymtAmt1),
                        string.Format("{0}", eol01901ExchangeRate1),
                        string.Format("{0}", searchName2)});
#line 66
  testRunner.And("In EOL01901 I Add Manual Payment as:", ((string)(null)), table14, "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentFrequency",
                        "RegisterType",
                        "PaymentAmount",
                        "Eol01902EmpBaseCurr"});
            table15.AddRow(new string[] {
                        string.Format("{0}", accumPeriod1),
                        string.Format("{0}", paymentNumber1),
                        string.Format("{0}", paymentFrequency1),
                        string.Format("{0}", registerType1),
                        string.Format("{0}", paymentAmount2),
                        string.Format("{0}", eol01902EmpBaseCurr1)});
#line 69
  testRunner.And("In EOL01902 I verify the following values:", ((string)(null)), table15, "And ");
#line 72
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
  testRunner.And("In EOL00113 I click on \"releases\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table16.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 76
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table16, "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table17.AddRow(new string[] {
                        string.Format("{0}", registerCode1)});
#line 79
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table17, "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table18.AddRow(new string[] {
                        string.Format("{0}", selection3)});
#line 82
  testRunner.And("In EOL00106 I continue with the following values:", ((string)(null)), table18, "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "PayFreq1",
                        "AccumPeriodFrom1",
                        "AccumPeriodTO1",
                        "PayFreq2",
                        "AccumPeriodFrom2",
                        "AccumPeriodTO2",
                        "PayFreq3",
                        "AccumPeriodFrom3",
                        "AccumPeriodTO3",
                        "ReleaseMode"});
            table19.AddRow(new string[] {
                        string.Format("{0}", payFreq1),
                        string.Format("{0}", accumPeriodFrom1),
                        string.Format("{0}", accumPeriodTO1),
                        string.Format("{0}", payFreq2),
                        string.Format("{0}", accumPeriodFrom2),
                        string.Format("{0}", accumPeriodTO2),
                        string.Format("{0}", payFreq3),
                        string.Format("{0}", accumPeriodFrom3),
                        string.Format("{0}", accumPeriodTO3),
                        string.Format("{0}", releaseMode)});
#line 85
  testRunner.And("In EOLBLK05 I continue with the following values:", ((string)(null)), table19, "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmRelType"});
            table20.AddRow(new string[] {
                        string.Format("{0}", confirmRelType)});
#line 88
  testRunner.And("In EOLBLK04 I continue with the following values:", ((string)(null)), table20, "And ");
#line 91
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table21.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 92
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table21, "And ");
#line 95
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 97
  testRunner.And("In EOL00113 I click on \"releases\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table22.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 98
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table22, "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table23.AddRow(new string[] {
                        string.Format("{0}", registerCode2)});
#line 101
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table23, "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table24.AddRow(new string[] {
                        string.Format("{0}", selection3)});
#line 104
  testRunner.And("In EOL00106 I continue with the following values:", ((string)(null)), table24, "And ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "PayFreq1",
                        "AccumPeriodFrom1",
                        "AccumPeriodTO1",
                        "PayFreq2",
                        "AccumPeriodFrom2",
                        "AccumPeriodTO2",
                        "PayFreq3",
                        "AccumPeriodFrom3",
                        "AccumPeriodTO3",
                        "ReleaseMode"});
            table25.AddRow(new string[] {
                        string.Format("{0}", payFreq1),
                        string.Format("{0}", accumPeriodFrom1),
                        string.Format("{0}", accumPeriodTO1),
                        string.Format("{0}", payFreq2),
                        string.Format("{0}", accumPeriodFrom2),
                        string.Format("{0}", accumPeriodTO2),
                        string.Format("{0}", payFreq3),
                        string.Format("{0}", accumPeriodFrom3),
                        string.Format("{0}", accumPeriodTO3),
                        string.Format("{0}", releaseMode)});
#line 107
  testRunner.And("In EOLBLK05 I continue with the following values:", ((string)(null)), table25, "And ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmRelType"});
            table26.AddRow(new string[] {
                        string.Format("{0}", confirmRelType)});
#line 110
  testRunner.And("In EOLBLK04 I continue with the following values:", ((string)(null)), table26, "And ");
#line 113
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table27.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 114
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table27, "And ");
#line 117
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkCode"});
            table28.AddRow(new string[] {
                        string.Format("{0}", bulkCode)});
#line 119
  testRunner.And("I go to the Bulk Processing System and select Bulk code as:", ((string)(null)), table28, "And ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table29.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 122
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table29, "And ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkNo"});
            table30.AddRow(new string[] {
                        string.Format("{0}", bulkNo1)});
#line 125
  testRunner.And("In BLKSCH01 I Select the bulk", ((string)(null)), table30, "And ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table31.AddRow(new string[] {
                        string.Format("{0}", menuSelection1)});
#line 128
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table31, "And ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table32.AddRow(new string[] {
                        string.Format("{0}", settlementDateA),
                        string.Format("{0}", tradeDateA),
                        string.Format("{0}", tradeTimeA),
                        string.Format("{0}", indicativePriceA),
                        string.Format("{0}", finalPriceA),
                        string.Format("{0}", registerCodeA),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatusA)});
#line 132
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table32, "And ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table33.AddRow(new string[] {
                        string.Format("{0}", settlementDateA),
                        string.Format("{0}", finalPriceA)});
#line 135
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table33, "And ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table34.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 138
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table34, "And ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkNo"});
            table35.AddRow(new string[] {
                        string.Format("{0}", bulkNo1)});
#line 141
  testRunner.And("In BLKSCH01 I Select the bulk", ((string)(null)), table35, "And ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table36.AddRow(new string[] {
                        string.Format("{0}", menuSelection2)});
#line 144
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table36, "And ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table37.AddRow(new string[] {
                        string.Format("{0}", settlementDateA),
                        string.Format("{0}", tradeDateA),
                        string.Format("{0}", tradeTimeA),
                        string.Format("{0}", indicativePriceA),
                        string.Format("{0}", finalPriceA),
                        string.Format("{0}", registerCodeB),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatusB)});
#line 147
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table37, "And ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table38.AddRow(new string[] {
                        string.Format("{0}", settlementDateA),
                        string.Format("{0}", finalPriceA)});
#line 150
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table38, "And ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table39.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 153
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table39, "And ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkNo"});
            table40.AddRow(new string[] {
                        string.Format("{0}", bulkNo1)});
#line 156
  testRunner.And("In BLKSCH01 I Select the bulk", ((string)(null)), table40, "And ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table41.AddRow(new string[] {
                        string.Format("{0}", menuSelection3)});
#line 159
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table41, "And ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table42.AddRow(new string[] {
                        string.Format("{0}", settlementDateA),
                        string.Format("{0}", tradeDateA),
                        string.Format("{0}", tradeTimeA),
                        string.Format("{0}", indicativePriceA),
                        string.Format("{0}", finalPriceA),
                        string.Format("{0}", registerCodeB),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatusC),
                        string.Format("{0}", awardDate1)});
#line 162
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table42, "And ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table43.AddRow(new string[] {
                        string.Format("{0}", settlementDateA),
                        string.Format("{0}", finalPriceA)});
#line 165
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table43, "And ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "TotalCount",
                        "TotalUnits",
                        "SettlementDate",
                        "FinalPrice",
                        "UnitsCalc",
                        "CostOFShares",
                        "TotalCost",
                        "ResidueKept",
                        "ResidueRefunded",
                        "TaxONCharges",
                        "AccumCharges"});
            table44.AddRow(new string[] {
                        string.Format("{0}", totalCount),
                        string.Format("{0}", totalUnits1),
                        string.Format("{0}", settlementDateA),
                        string.Format("{0}", finalPriceA),
                        string.Format("{0}", unitsCalc1),
                        string.Format("{0}", costOFShares1),
                        string.Format("{0}", totalCost1),
                        string.Format("{0}", residueKept),
                        string.Format("{0}", residueRefunded),
                        string.Format("{0}", taxONCharges),
                        string.Format("{0}", accumCharges)});
#line 168
 testRunner.Then("In OLSB0404 I verify the following values:", ((string)(null)), table44, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table45.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 171
 testRunner.When("In OLSBLK02 I continue with the following values:", ((string)(null)), table45, "When ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkNo"});
            table46.AddRow(new string[] {
                        string.Format("{0}", bulkNo2)});
#line 174
  testRunner.And("In BLKSCH01 I Select the bulk", ((string)(null)), table46, "And ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table47.AddRow(new string[] {
                        string.Format("{0}", menuSelection1)});
#line 177
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table47, "And ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table48.AddRow(new string[] {
                        string.Format("{0}", settlementDateB),
                        string.Format("{0}", tradeDateB),
                        string.Format("{0}", tradeTimeA),
                        string.Format("{0}", indicativePriceA),
                        string.Format("{0}", finalPriceA),
                        string.Format("{0}", registerCode1),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatusA)});
#line 181
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table48, "And ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table49.AddRow(new string[] {
                        string.Format("{0}", settlementDateB),
                        string.Format("{0}", finalPriceA)});
#line 184
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table49, "And ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table50.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 187
 testRunner.When("In OLSBLK02 I continue with the following values:", ((string)(null)), table50, "When ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkNo"});
            table51.AddRow(new string[] {
                        string.Format("{0}", bulkNo2)});
#line 190
  testRunner.And("In BLKSCH01 I Select the bulk", ((string)(null)), table51, "And ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table52.AddRow(new string[] {
                        string.Format("{0}", menuSelection2)});
#line 193
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table52, "And ");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table53.AddRow(new string[] {
                        string.Format("{0}", settlementDateB),
                        string.Format("{0}", tradeDateB),
                        string.Format("{0}", tradeTimeA),
                        string.Format("{0}", indicativePriceA),
                        string.Format("{0}", finalPriceA),
                        string.Format("{0}", registerCodeB),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatusB)});
#line 196
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table53, "And ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table54.AddRow(new string[] {
                        string.Format("{0}", settlementDateB),
                        string.Format("{0}", finalPriceA)});
#line 199
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table54, "And ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table55.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 202
 testRunner.When("In OLSBLK02 I continue with the following values:", ((string)(null)), table55, "When ");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkNo"});
            table56.AddRow(new string[] {
                        string.Format("{0}", bulkNo2)});
#line 205
  testRunner.And("In BLKSCH01 I Select the bulk", ((string)(null)), table56, "And ");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table57.AddRow(new string[] {
                        string.Format("{0}", menuSelection3)});
#line 208
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table57, "And ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table58.AddRow(new string[] {
                        string.Format("{0}", settlementDateB),
                        string.Format("{0}", tradeDateB),
                        string.Format("{0}", tradeTimeA),
                        string.Format("{0}", indicativePriceA),
                        string.Format("{0}", finalPriceA),
                        string.Format("{0}", registerCodeB),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatusC),
                        string.Format("{0}", awardDate2)});
#line 211
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table58, "And ");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table59.AddRow(new string[] {
                        string.Format("{0}", settlementDateB),
                        string.Format("{0}", finalPriceA)});
#line 214
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table59, "And ");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "TotalCount",
                        "TotalUnits",
                        "SettlementDate",
                        "FinalPrice",
                        "UnitsCalc",
                        "CostOFShares",
                        "TotalCost",
                        "ResidueKept",
                        "ResidueRefunded",
                        "TaxONCharges",
                        "AccumCharges"});
            table60.AddRow(new string[] {
                        string.Format("{0}", totalCount),
                        string.Format("{0}", totalUnits2),
                        string.Format("{0}", settlementDateB),
                        string.Format("{0}", finalPriceA),
                        string.Format("{0}", unitsCalc2),
                        string.Format("{0}", costOFShares2),
                        string.Format("{0}", totalCost2),
                        string.Format("{0}", residueKept),
                        string.Format("{0}", residueRefunded),
                        string.Format("{0}", taxONCharges),
                        string.Format("{0}", accumCharges)});
#line 217
 testRunner.Then("In OLSB0404 I verify the following values:", ((string)(null)), table60, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table61.AddRow(new string[] {
                        string.Format("{0}", selection5)});
#line 220
 testRunner.When("In OLSBLK02 I continue with the following values:", ((string)(null)), table61, "When ");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkCurrency",
                        "SettlementFrom",
                        "SettlementTO"});
            table62.AddRow(new string[] {
                        string.Format("{0}", bulkCurrency),
                        string.Format("{0}", settlementFrom),
                        string.Format("{0}", settlementTO)});
#line 223
  testRunner.And("In OLSB0105 I continue with the following values:", ((string)(null)), table62, "And ");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID1",
                        "Currency1",
                        "SettlementDate1",
                        "ProcessBulkInd1",
                        "BulkID2",
                        "Currency2",
                        "SettlementDate2",
                        "ProcessBulkInd2",
                        "BulkID3",
                        "Currency3",
                        "SettlementDate3",
                        "ProcessBulkInd3"});
            table63.AddRow(new string[] {
                        string.Format("{0}", bulkID1),
                        string.Format("{0}", currency1),
                        string.Format("{0}", settlementDate1),
                        string.Format("{0}", processBulkInd1),
                        string.Format("{0}", bulkID2),
                        string.Format("{0}", currency2),
                        string.Format("{0}", settlementDate2),
                        string.Format("{0}", processBulkInd2),
                        string.Format("{0}", bulkID3),
                        string.Format("{0}", currency3),
                        string.Format("{0}", settlementDate3),
                        string.Format("{0}", processBulkInd3)});
#line 226
  testRunner.And("In OLSB0106 I continue with the following values:", ((string)(null)), table63, "And ");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "HomeBankDesc",
                        "AusTraceAccount"});
            table64.AddRow(new string[] {
                        string.Format("{0}", homeBankDesc),
                        string.Format("{0}", ausTraceAccount)});
#line 229
  testRunner.And("In OLSB0104 I verify the following values:", ((string)(null)), table64, "And ");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "PaymentAccount",
                        "OrderNO",
                        "Ident",
                        "NbrBulks",
                        "SettlementFrom",
                        "SettlementTO",
                        "PaymentDate",
                        "AddConvRateInd"});
            table65.AddRow(new string[] {
                        string.Format("{0}", paymentAccount),
                        string.Format("{0}", orderNO),
                        string.Format("{0}", ident),
                        string.Format("{0}", nbrBulks),
                        string.Format("{0}", settlementFrom1),
                        string.Format("{0}", settlementTO1),
                        string.Format("{0}", paymentDate),
                        string.Format("{0}", addConvRateInd)});
#line 232
  testRunner.And("In OLSB0101 I continue with the following values:", ((string)(null)), table65, "And ");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table66.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 235
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table66, "And ");
#line 238
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table67.AddRow(new string[] {
                        string.Format("{0}", selection6)});
#line 240
 testRunner.When("In OLSBLK02 I continue with the following values:", ((string)(null)), table67, "When ");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkNo"});
            table68.AddRow(new string[] {
                        string.Format("{0}", bulkNo1)});
#line 243
  testRunner.And("In BLKSCH01 I Select the bulk", ((string)(null)), table68, "And ");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table69.AddRow(new string[] {
                        string.Format("{0}", menuSelection4)});
#line 246
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table69, "And ");
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table70.AddRow(new string[] {
                        string.Format("{0}", settlementDate1),
                        string.Format("{0}", tradeDateS),
                        string.Format("{0}", tradeTimeS),
                        string.Format("{0}", indicativePriceS),
                        string.Format("{0}", finalPriceS),
                        string.Format("{0}", registerCodeB),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatusD),
                        string.Format("{0}", awardDateS)});
#line 249
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table70, "And ");
#line 252
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table71.AddRow(new string[] {
                        string.Format("{0}", selection6)});
#line 253
 testRunner.When("In OLSBLK02 I continue with the following values:", ((string)(null)), table71, "When ");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table72.AddRow(new string[] {
                        string.Format("{0}", menuSelection4)});
#line 256
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table72, "And ");
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table73.AddRow(new string[] {
                        string.Format("{0}", settlementDate1),
                        string.Format("{0}", tradeDateS),
                        string.Format("{0}", tradeTimeS),
                        string.Format("{0}", indicativePriceS),
                        string.Format("{0}", finalPriceS),
                        string.Format("{0}", registerCodeB),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatusD),
                        string.Format("{0}", awardDateS)});
#line 259
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table73, "And ");
#line 262
  testRunner.And("I Escape to the Main Menu from Bulk Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 264
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", holderID1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 265
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table74.AddRow(new string[] {
                        string.Format("{0}", certificateLine1A),
                        string.Format("{0}", certificateLine2A),
                        string.Format("{0}", certificateLine3A),
                        string.Format("{0}", certificateLine4A),
                        string.Format("{0}", certificateLine5A),
                        string.Format("{0}", certificateLine6A),
                        string.Format("{0}", certificateLine7A),
                        string.Format("{0}", certificateLine8A),
                        string.Format("{0}", certificateLine9A),
                        string.Format("{0}", certificateLine10A)});
#line 266
 testRunner.Then("In ENS01012 I should see Register details as:", ((string)(null)), table74, "Then ");
#line 269
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, holderID2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 270
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table75.AddRow(new string[] {
                        string.Format("{0}", certificateLine1A),
                        string.Format("{0}", certificateLine2B),
                        string.Format("{0}", certificateLine3B),
                        string.Format("{0}", certificateLine4A),
                        string.Format("{0}", certificateLine5A),
                        string.Format("{0}", certificateLine6A),
                        string.Format("{0}", certificateLine7A),
                        string.Format("{0}", certificateLine8A),
                        string.Format("{0}", certificateLine9A),
                        string.Format("{0}", certificateLine10A)});
#line 271
 testRunner.Then("In ENS01012 I should see Register details as:", ((string)(null)), table75, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Deferred Plan Bulk Multiple Registers EF")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("ESSPurchase")]
        [NUnit.Framework.TestCaseAttribute("Test1", "CPU_AUTO", "DEP", "ESSUPLDEPEFUD.CSV", "F", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "", "F", "Y", "", "", "Y", "Bulk Upload Process", "", "A", "I0030047346", "C", "/DEP/12A/EF", "DEP/DEFERRED EMP SHARE PLAN - AU", "12A 20120712EF   12/07/12           200", "**** Total for 20120712EF                200", "", "", "", "", "", "", "", "S", "I0013692343", "/DEP/13A/EF", "13A 20130712EF   12/07/13           250", "**** Total for 20130712EF                250", null)]
        public virtual void DeferredPlanBulkMultipleRegistersEF(
                    string test, 
                    string cOY, 
                    string classCode, 
                    string inputFilename, 
                    string nameSelection, 
                    string pCSelection, 
                    string addressMatching, 
                    string allowBlankAddress, 
                    string updateAddrDetails, 
                    string updateEmpDetails, 
                    string autoGenEmpUnqID, 
                    string clearEmpUnqID, 
                    string updateContactDets, 
                    string uploadTfn, 
                    string updateMandates, 
                    string updateDrp, 
                    string runTrnedt, 
                    string createNewAccounts, 
                    string reportFullTotals, 
                    string autoFtpReportsInd, 
                    string fileName, 
                    string timestamp, 
                    string confirm, 
                    string reportHeading, 
                    string reportDate, 
                    string reportSequence, 
                    string holderID1, 
                    string action, 
                    string locateArgument, 
                    string certificateLine1A, 
                    string certificateLine2A, 
                    string certificateLine3A, 
                    string certificateLine4A, 
                    string certificateLine5A, 
                    string certificateLine6A, 
                    string certificateLine7A, 
                    string certificateLine8A, 
                    string certificateLine9A, 
                    string certificateLine10A, 
                    string action1, 
                    string holderID2, 
                    string locateArgument1, 
                    string certificateLine2B, 
                    string certificateLine3B, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "ESSPurchase"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Deferred Plan Bulk Multiple Registers EF", @__tags);
#line 283
this.ScenarioSetup(scenarioInfo);
#line 285
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 286
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 287
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 289
  testRunner.And("In EOL00113 I click on \"multiple awards health integrity\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "InputFilename",
                        "NameSelection",
                        "PCSelection",
                        "AddressMatching",
                        "AllowBlankAddress",
                        "UpdateAddrDetails",
                        "UpdateEmpDetails",
                        "AutoGenEmpUnqID",
                        "ClearEmpUnqID",
                        "UpdateContactDets",
                        "UploadTfn",
                        "UpdateMandates",
                        "UpdateDrp",
                        "RunTrnedt",
                        "CreateNewAccounts",
                        "ReportFullTotals",
                        "AutoFtpReportsInd"});
            table76.AddRow(new string[] {
                        string.Format("{0}", inputFilename),
                        string.Format("{0}", nameSelection),
                        string.Format("{0}", pCSelection),
                        string.Format("{0}", addressMatching),
                        string.Format("{0}", allowBlankAddress),
                        string.Format("{0}", updateAddrDetails),
                        string.Format("{0}", updateEmpDetails),
                        string.Format("{0}", autoGenEmpUnqID),
                        string.Format("{0}", clearEmpUnqID),
                        string.Format("{0}", updateContactDets),
                        string.Format("{0}", uploadTfn),
                        string.Format("{0}", updateMandates),
                        string.Format("{0}", updateDrp),
                        string.Format("{0}", runTrnedt),
                        string.Format("{0}", createNewAccounts),
                        string.Format("{0}", reportFullTotals),
                        string.Format("{0}", autoFtpReportsInd)});
#line 290
  testRunner.And("In EOL00501 I continue with the following values:", ((string)(null)), table76, "And ");
#line 293
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table77.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 294
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table77, "And ");
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "COY",
                        "FileName"});
            table78.AddRow(new string[] {
                        string.Format("{0}", cOY),
                        string.Format("{0}", fileName)});
#line 297
 testRunner.When("I read Timestamps from the Health and Integrity file as:", ((string)(null)), table78, "When ");
#line 300
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 302
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 303
  testRunner.And("In EOL00113 I click on \"multiple awards bulk uploads\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "Timestamp",
                        "ReportFullTotals",
                        "AutoFtpReportsInd",
                        "Confirm"});
            table79.AddRow(new string[] {
                        string.Format("{0}", timestamp),
                        string.Format("{0}", reportFullTotals),
                        string.Format("{0}", autoFtpReportsInd),
                        string.Format("{0}", confirm)});
#line 304
  testRunner.And("In EOL00601 I continue with the following values:", ((string)(null)), table79, "And ");
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "ReportDate",
                        "ReportSequence"});
            table80.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSequence)});
#line 307
  testRunner.And("In EOL00602 I continue with the following values:", ((string)(null)), table80, "And ");
#line 310
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table81.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 311
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table81, "And ");
#line 314
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 316
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", holderID1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 317
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table82.AddRow(new string[] {
                        string.Format("{0}", certificateLine1A),
                        string.Format("{0}", certificateLine2A),
                        string.Format("{0}", certificateLine3A),
                        string.Format("{0}", certificateLine4A),
                        string.Format("{0}", certificateLine5A),
                        string.Format("{0}", certificateLine6A),
                        string.Format("{0}", certificateLine7A),
                        string.Format("{0}", certificateLine8A),
                        string.Format("{0}", certificateLine9A),
                        string.Format("{0}", certificateLine10A)});
#line 318
 testRunner.Then("In ENS01012 I should see Register details as:", ((string)(null)), table82, "Then ");
#line 321
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, holderID2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 322
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table83.AddRow(new string[] {
                        string.Format("{0}", certificateLine1A),
                        string.Format("{0}", certificateLine2B),
                        string.Format("{0}", certificateLine3B),
                        string.Format("{0}", certificateLine4A),
                        string.Format("{0}", certificateLine5A),
                        string.Format("{0}", certificateLine6A),
                        string.Format("{0}", certificateLine7A),
                        string.Format("{0}", certificateLine8A),
                        string.Format("{0}", certificateLine9A),
                        string.Format("{0}", certificateLine10A)});
#line 323
 testRunner.Then("In ENS01012 I should see Register details as:", ((string)(null)), table83, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Deferred Plan Bulk Multiple Registers EB")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("ESSPurchase")]
        [NUnit.Framework.TestCaseAttribute("Test1", "CPU_AUTO", "DEP", "ESSUPLDEPEBUD.CSV", "F", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "", "F", "Y", "", "Y", "A", "Bulk Upload Process", "", "A", "EB", "12A", "RPH", "", "", "", "", "", "", "", "", "", "B", "ABO", "13A", "DEB", "CBS", "1", "B", "12/07/2013", "12/07/2013", "1000", "10.00000", "10.00000", "", "", "", "", "", "", "A", "", "C", "12/07/2013", "1", "1500.00", "150", "1500.00", "1500.00", "", "", "", "", "GCB", "AUD", "", "", "", "AUD", "", "Y", "", "", "", "", "", "", "", "", "", "", "DP13A", "5555", "NDF", "1", "", "", "", "N", "", "12/07/2012", "12/07/2012", "12/07/2012", "1000.00", "100", "1000.00", "1000.00", "DP12A", "FBS", "S", "", "", "", "", "", "", "", "", "", "", "", "", "", "I0030041194", "C", "/DEP/12A/EB", "DEP/DEFERRED EMP SHARE PLAN - AU", "12A 20120712EB   12/07/12           100", "**** Total for 20120712EB                100", "", "", "", "", "", "", "", "S", "I8800233462", "/DEP/13A/EB", "13A 20130712EB   12/07/13           150", "**** Total for 20130712EB                150", null)]
        public virtual void DeferredPlanBulkMultipleRegistersEB(
                    string test, 
                    string cOY, 
                    string classCode, 
                    string inputFilename, 
                    string nameSelection, 
                    string pCSelection, 
                    string addressMatching, 
                    string allowBlankAddress, 
                    string updateAddrDetails, 
                    string updateEmpDetails, 
                    string autoGenEmpUnqID, 
                    string clearEmpUnqID, 
                    string updateContactDets, 
                    string uploadTfn, 
                    string updateMandates, 
                    string updateDrp, 
                    string runTrnedt, 
                    string createNewAccounts, 
                    string reportFullTotals, 
                    string autoFtpReportsInd, 
                    string fileName, 
                    string timestamp, 
                    string confirm, 
                    string reportHeading, 
                    string reportDate, 
                    string reportSequence, 
                    string selection, 
                    string registerCode1, 
                    string selection1, 
                    string payFreq1, 
                    string accumPeriodFrom1, 
                    string accumPeriodTO1, 
                    string payFreq2, 
                    string accumPeriodFrom2, 
                    string accumPeriodTO2, 
                    string payFreq3, 
                    string accumPeriodFrom3, 
                    string accumPeriodTO3, 
                    string releaseMode, 
                    string confirmRelType, 
                    string registerCode2, 
                    string bulkCode, 
                    string selection2, 
                    string bulkNo1, 
                    string menuSelection, 
                    string settlementDate, 
                    string tradeDate, 
                    string tradeTime, 
                    string indicativePrice, 
                    string finalPrice, 
                    string chargeCode1, 
                    string chargeCode2, 
                    string chargeCode3, 
                    string chargeDesc1, 
                    string chargeDesc2, 
                    string chargeDesc3, 
                    string menuSelection1, 
                    string registerCode, 
                    string menuSelection2, 
                    string awardDate1, 
                    string totalCount, 
                    string totalUnits1, 
                    string unitsCalc1, 
                    string costOFShares1, 
                    string totalCost1, 
                    string residueKept, 
                    string residueRefunded, 
                    string taxONCharges, 
                    string accumCharges, 
                    string selection3, 
                    string bulkCurrency, 
                    string settlementFrom, 
                    string settlementTO, 
                    string bulkID, 
                    string currency1, 
                    string settlementDate1, 
                    string processBulkInd1, 
                    string bulkID2, 
                    string currency2, 
                    string settlementDate2, 
                    string processBulkInd2, 
                    string bulkID3, 
                    string currency3, 
                    string settlementDate3, 
                    string processBulkInd3, 
                    string homeBankDesc, 
                    string ausTraceAccount, 
                    string paymentAccount1, 
                    string orderNO, 
                    string ident, 
                    string nbrBulks, 
                    string settlementFrom1, 
                    string settlementTO1, 
                    string paymentDate, 
                    string addConvRateInd, 
                    string bulkID1, 
                    string settlementDateb, 
                    string tradeDate2, 
                    string awardDate2, 
                    string totalUnits2, 
                    string unitsCalc2, 
                    string costOFShares2, 
                    string totalCost2, 
                    string paymentAccount2, 
                    string selection4, 
                    string menuSelection3, 
                    string settlementDateS, 
                    string tradeDateS, 
                    string tradeTimeS, 
                    string indicativePriceS, 
                    string finalPriceS, 
                    string registerCodeS, 
                    string chargeCode1S, 
                    string chargeCode2S, 
                    string chargeCode3S, 
                    string chargeDesc1S, 
                    string chargeDesc2S, 
                    string chargeDesc3S, 
                    string awardDate1S, 
                    string holderID1, 
                    string action, 
                    string locateArgument, 
                    string certificateLine1A, 
                    string certificateLine2A, 
                    string certificateLine3A, 
                    string certificateLine4A, 
                    string certificateLine5A, 
                    string certificateLine6A, 
                    string certificateLine7A, 
                    string certificateLine8A, 
                    string certificateLine9A, 
                    string certificateLine10A, 
                    string action1, 
                    string holderID2, 
                    string locateArgument1, 
                    string certificateLine2B, 
                    string certificateLine3B, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "ESSPurchase"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Deferred Plan Bulk Multiple Registers EB", @__tags);
#line 335
this.ScenarioSetup(scenarioInfo);
#line 337
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 338
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 339
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 341
  testRunner.And("In EOL00113 I click on \"multiple awards health integrity\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        "InputFilename",
                        "NameSelection",
                        "PCSelection",
                        "AddressMatching",
                        "AllowBlankAddress",
                        "UpdateAddrDetails",
                        "UpdateEmpDetails",
                        "AutoGenEmpUnqID",
                        "ClearEmpUnqID",
                        "UpdateContactDets",
                        "UploadTfn",
                        "UpdateMandates",
                        "UpdateDrp",
                        "RunTrnedt",
                        "CreateNewAccounts",
                        "ReportFullTotals",
                        "AutoFtpReportsInd"});
            table84.AddRow(new string[] {
                        string.Format("{0}", inputFilename),
                        string.Format("{0}", nameSelection),
                        string.Format("{0}", pCSelection),
                        string.Format("{0}", addressMatching),
                        string.Format("{0}", allowBlankAddress),
                        string.Format("{0}", updateAddrDetails),
                        string.Format("{0}", updateEmpDetails),
                        string.Format("{0}", autoGenEmpUnqID),
                        string.Format("{0}", clearEmpUnqID),
                        string.Format("{0}", updateContactDets),
                        string.Format("{0}", uploadTfn),
                        string.Format("{0}", updateMandates),
                        string.Format("{0}", updateDrp),
                        string.Format("{0}", runTrnedt),
                        string.Format("{0}", createNewAccounts),
                        string.Format("{0}", reportFullTotals),
                        string.Format("{0}", autoFtpReportsInd)});
#line 342
  testRunner.And("In EOL00501 I continue with the following values:", ((string)(null)), table84, "And ");
#line 345
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table85.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 346
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table85, "And ");
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        "COY",
                        "FileName"});
            table86.AddRow(new string[] {
                        string.Format("{0}", cOY),
                        string.Format("{0}", fileName)});
#line 349
 testRunner.When("I read Timestamps from the Health and Integrity file as:", ((string)(null)), table86, "When ");
#line 352
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 354
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 355
  testRunner.And("In EOL00113 I click on \"multiple awards bulk uploads\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                        "Timestamp",
                        "ReportFullTotals",
                        "AutoFtpReportsInd",
                        "Confirm"});
            table87.AddRow(new string[] {
                        string.Format("{0}", timestamp),
                        string.Format("{0}", reportFullTotals),
                        string.Format("{0}", autoFtpReportsInd),
                        string.Format("{0}", confirm)});
#line 356
  testRunner.And("In EOL00601 I continue with the following values:", ((string)(null)), table87, "And ");
#line hidden
            TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "ReportDate",
                        "ReportSequence"});
            table88.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSequence)});
#line 359
  testRunner.And("In EOL00602 I continue with the following values:", ((string)(null)), table88, "And ");
#line 362
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table89.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 363
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table89, "And ");
#line 366
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 368
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 369
  testRunner.And("In EOL00113 I click on \"releases\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table90 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table90.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 370
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table90, "And ");
#line hidden
            TechTalk.SpecFlow.Table table91 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table91.AddRow(new string[] {
                        string.Format("{0}", registerCode1)});
#line 373
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table91, "And ");
#line hidden
            TechTalk.SpecFlow.Table table92 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table92.AddRow(new string[] {
                        string.Format("{0}", selection1)});
#line 376
  testRunner.And("In EOL00106 I continue with the following values:", ((string)(null)), table92, "And ");
#line hidden
            TechTalk.SpecFlow.Table table93 = new TechTalk.SpecFlow.Table(new string[] {
                        "PayFreq1",
                        "AccumPeriodFrom1",
                        "AccumPeriodTO1",
                        "PayFreq2",
                        "AccumPeriodFrom2",
                        "AccumPeriodTO2",
                        "PayFreq3",
                        "AccumPeriodFrom3",
                        "AccumPeriodTO3",
                        "ReleaseMode"});
            table93.AddRow(new string[] {
                        string.Format("{0}", payFreq1),
                        string.Format("{0}", accumPeriodFrom1),
                        string.Format("{0}", accumPeriodTO1),
                        string.Format("{0}", payFreq2),
                        string.Format("{0}", accumPeriodFrom2),
                        string.Format("{0}", accumPeriodTO2),
                        string.Format("{0}", payFreq3),
                        string.Format("{0}", accumPeriodFrom3),
                        string.Format("{0}", accumPeriodTO3),
                        string.Format("{0}", releaseMode)});
#line 379
  testRunner.And("In EOLBLK05 I continue with the following values:", ((string)(null)), table93, "And ");
#line hidden
            TechTalk.SpecFlow.Table table94 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmRelType"});
            table94.AddRow(new string[] {
                        string.Format("{0}", confirmRelType)});
#line 382
  testRunner.And("In EOLBLK04 I continue with the following values:", ((string)(null)), table94, "And ");
#line 385
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table95 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table95.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 386
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table95, "And ");
#line 389
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 391
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 392
  testRunner.And("In EOL00113 I click on \"releases\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table96 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table96.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 393
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table96, "And ");
#line hidden
            TechTalk.SpecFlow.Table table97 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table97.AddRow(new string[] {
                        string.Format("{0}", registerCode2)});
#line 396
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table97, "And ");
#line hidden
            TechTalk.SpecFlow.Table table98 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table98.AddRow(new string[] {
                        string.Format("{0}", selection1)});
#line 399
  testRunner.And("In EOL00106 I continue with the following values:", ((string)(null)), table98, "And ");
#line hidden
            TechTalk.SpecFlow.Table table99 = new TechTalk.SpecFlow.Table(new string[] {
                        "PayFreq1",
                        "AccumPeriodFrom1",
                        "AccumPeriodTO1",
                        "PayFreq2",
                        "AccumPeriodFrom2",
                        "AccumPeriodTO2",
                        "PayFreq3",
                        "AccumPeriodFrom3",
                        "AccumPeriodTO3",
                        "ReleaseMode"});
            table99.AddRow(new string[] {
                        string.Format("{0}", payFreq1),
                        string.Format("{0}", accumPeriodFrom1),
                        string.Format("{0}", accumPeriodTO1),
                        string.Format("{0}", payFreq2),
                        string.Format("{0}", accumPeriodFrom2),
                        string.Format("{0}", accumPeriodTO2),
                        string.Format("{0}", payFreq3),
                        string.Format("{0}", accumPeriodFrom3),
                        string.Format("{0}", accumPeriodTO3),
                        string.Format("{0}", releaseMode)});
#line 402
  testRunner.And("In EOLBLK05 I continue with the following values:", ((string)(null)), table99, "And ");
#line hidden
            TechTalk.SpecFlow.Table table100 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmRelType"});
            table100.AddRow(new string[] {
                        string.Format("{0}", confirmRelType)});
#line 405
  testRunner.And("In EOLBLK04 I continue with the following values:", ((string)(null)), table100, "And ");
#line 408
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table101 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table101.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 409
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table101, "And ");
#line 412
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table102 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkCode"});
            table102.AddRow(new string[] {
                        string.Format("{0}", bulkCode)});
#line 414
  testRunner.And("I go to the Bulk Processing System and select Bulk code as:", ((string)(null)), table102, "And ");
#line hidden
            TechTalk.SpecFlow.Table table103 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table103.AddRow(new string[] {
                        string.Format("{0}", selection2)});
#line 417
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table103, "And ");
#line hidden
            TechTalk.SpecFlow.Table table104 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkNo"});
            table104.AddRow(new string[] {
                        string.Format("{0}", bulkNo1)});
#line 420
  testRunner.And("In BLKSCH01 I Select the bulk", ((string)(null)), table104, "And ");
#line hidden
            TechTalk.SpecFlow.Table table105 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table105.AddRow(new string[] {
                        string.Format("{0}", menuSelection)});
#line 423
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table105, "And ");
#line hidden
            TechTalk.SpecFlow.Table table106 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table106.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode2),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", menuSelection)});
#line 427
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table106, "And ");
#line hidden
            TechTalk.SpecFlow.Table table107 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table107.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", finalPrice)});
#line 430
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table107, "And ");
#line hidden
            TechTalk.SpecFlow.Table table108 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table108.AddRow(new string[] {
                        string.Format("{0}", selection2)});
#line 433
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table108, "And ");
#line hidden
            TechTalk.SpecFlow.Table table109 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkNo"});
            table109.AddRow(new string[] {
                        string.Format("{0}", bulkNo1)});
#line 436
  testRunner.And("In BLKSCH01 I Select the bulk", ((string)(null)), table109, "And ");
#line hidden
            TechTalk.SpecFlow.Table table110 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table110.AddRow(new string[] {
                        string.Format("{0}", menuSelection1)});
#line 439
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table110, "And ");
#line hidden
            TechTalk.SpecFlow.Table table111 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table111.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", menuSelection1)});
#line 442
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table111, "And ");
#line hidden
            TechTalk.SpecFlow.Table table112 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table112.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", finalPrice)});
#line 445
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table112, "And ");
#line hidden
            TechTalk.SpecFlow.Table table113 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table113.AddRow(new string[] {
                        string.Format("{0}", selection2)});
#line 448
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table113, "And ");
#line hidden
            TechTalk.SpecFlow.Table table114 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkNo"});
            table114.AddRow(new string[] {
                        string.Format("{0}", bulkNo1)});
#line 451
  testRunner.And("In BLKSCH01 I Select the bulk", ((string)(null)), table114, "And ");
#line hidden
            TechTalk.SpecFlow.Table table115 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table115.AddRow(new string[] {
                        string.Format("{0}", menuSelection2)});
#line 454
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table115, "And ");
#line hidden
            TechTalk.SpecFlow.Table table116 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table116.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", menuSelection2),
                        string.Format("{0}", awardDate1)});
#line 457
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table116, "And ");
#line hidden
            TechTalk.SpecFlow.Table table117 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table117.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", finalPrice)});
#line 460
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table117, "And ");
#line hidden
            TechTalk.SpecFlow.Table table118 = new TechTalk.SpecFlow.Table(new string[] {
                        "TotalCount",
                        "TotalUnits",
                        "SettlementDate",
                        "FinalPrice",
                        "UnitsCalc",
                        "CostOFShares",
                        "TotalCost",
                        "ResidueKept",
                        "ResidueRefunded",
                        "TaxONCharges",
                        "AccumCharges"});
            table118.AddRow(new string[] {
                        string.Format("{0}", totalCount),
                        string.Format("{0}", totalUnits1),
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", unitsCalc1),
                        string.Format("{0}", costOFShares1),
                        string.Format("{0}", totalCost1),
                        string.Format("{0}", residueKept),
                        string.Format("{0}", residueRefunded),
                        string.Format("{0}", taxONCharges),
                        string.Format("{0}", accumCharges)});
#line 463
 testRunner.Then("In OLSB0404 I verify the following values:", ((string)(null)), table118, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table119 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table119.AddRow(new string[] {
                        string.Format("{0}", selection3)});
#line 466
 testRunner.When("In OLSBLK02 I continue with the following values:", ((string)(null)), table119, "When ");
#line hidden
            TechTalk.SpecFlow.Table table120 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkCurrency",
                        "SettlementFrom",
                        "SettlementTO"});
            table120.AddRow(new string[] {
                        string.Format("{0}", bulkCurrency),
                        string.Format("{0}", settlementFrom),
                        string.Format("{0}", settlementTO)});
#line 469
  testRunner.And("In OLSB0105 I continue with the following values:", ((string)(null)), table120, "And ");
#line hidden
            TechTalk.SpecFlow.Table table121 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID1",
                        "Currency1",
                        "SettlementDate1",
                        "ProcessBulkInd1",
                        "BulkID2",
                        "Currency2",
                        "SettlementDate2",
                        "ProcessBulkInd2",
                        "BulkID3",
                        "Currency3",
                        "SettlementDate3",
                        "ProcessBulkInd3"});
            table121.AddRow(new string[] {
                        string.Format("{0}", bulkID1),
                        string.Format("{0}", currency1),
                        string.Format("{0}", settlementDate1),
                        string.Format("{0}", processBulkInd1),
                        string.Format("{0}", bulkID2),
                        string.Format("{0}", currency2),
                        string.Format("{0}", settlementDate2),
                        string.Format("{0}", processBulkInd2),
                        string.Format("{0}", bulkID3),
                        string.Format("{0}", currency3),
                        string.Format("{0}", settlementDate3),
                        string.Format("{0}", processBulkInd3)});
#line 472
  testRunner.And("In OLSB0106 I continue with the following values:", ((string)(null)), table121, "And ");
#line hidden
            TechTalk.SpecFlow.Table table122 = new TechTalk.SpecFlow.Table(new string[] {
                        "HomeBankDesc",
                        "AusTraceAccount"});
            table122.AddRow(new string[] {
                        string.Format("{0}", homeBankDesc),
                        string.Format("{0}", ausTraceAccount)});
#line 475
  testRunner.And("In OLSB0104 I verify the following values:", ((string)(null)), table122, "And ");
#line hidden
            TechTalk.SpecFlow.Table table123 = new TechTalk.SpecFlow.Table(new string[] {
                        "PaymentAccount",
                        "OrderNO",
                        "Ident",
                        "NbrBulks",
                        "SettlementFrom",
                        "SettlementTO",
                        "PaymentDate",
                        "AddConvRateInd"});
            table123.AddRow(new string[] {
                        string.Format("{0}", paymentAccount1),
                        string.Format("{0}", orderNO),
                        string.Format("{0}", ident),
                        string.Format("{0}", nbrBulks),
                        string.Format("{0}", settlementFrom1),
                        string.Format("{0}", settlementTO1),
                        string.Format("{0}", paymentDate),
                        string.Format("{0}", addConvRateInd)});
#line 478
  testRunner.And("In OLSB0101 I continue with the following values:", ((string)(null)), table123, "And ");
#line hidden
            TechTalk.SpecFlow.Table table124 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table124.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 481
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table124, "And ");
#line 484
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table125 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table125.AddRow(new string[] {
                        string.Format("{0}", selection2)});
#line 486
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table125, "And ");
#line hidden
            TechTalk.SpecFlow.Table table126 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table126.AddRow(new string[] {
                        string.Format("{0}", menuSelection)});
#line 489
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table126, "And ");
#line hidden
            TechTalk.SpecFlow.Table table127 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table127.AddRow(new string[] {
                        string.Format("{0}", settlementDateb),
                        string.Format("{0}", tradeDate2),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode1),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", menuSelection)});
#line 492
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table127, "And ");
#line hidden
            TechTalk.SpecFlow.Table table128 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table128.AddRow(new string[] {
                        string.Format("{0}", settlementDateb),
                        string.Format("{0}", finalPrice)});
#line 495
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table128, "And ");
#line hidden
            TechTalk.SpecFlow.Table table129 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table129.AddRow(new string[] {
                        string.Format("{0}", selection2)});
#line 498
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table129, "And ");
#line hidden
            TechTalk.SpecFlow.Table table130 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table130.AddRow(new string[] {
                        string.Format("{0}", menuSelection1)});
#line 501
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table130, "And ");
#line hidden
            TechTalk.SpecFlow.Table table131 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table131.AddRow(new string[] {
                        string.Format("{0}", settlementDateb),
                        string.Format("{0}", tradeDate2),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", menuSelection1)});
#line 504
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table131, "And ");
#line hidden
            TechTalk.SpecFlow.Table table132 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table132.AddRow(new string[] {
                        string.Format("{0}", settlementDateb),
                        string.Format("{0}", finalPrice)});
#line 507
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table132, "And ");
#line hidden
            TechTalk.SpecFlow.Table table133 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table133.AddRow(new string[] {
                        string.Format("{0}", selection2)});
#line 510
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table133, "And ");
#line hidden
            TechTalk.SpecFlow.Table table134 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table134.AddRow(new string[] {
                        string.Format("{0}", menuSelection2)});
#line 513
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table134, "And ");
#line hidden
            TechTalk.SpecFlow.Table table135 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table135.AddRow(new string[] {
                        string.Format("{0}", settlementDateb),
                        string.Format("{0}", tradeDate2),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", menuSelection2),
                        string.Format("{0}", awardDate2)});
#line 516
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table135, "And ");
#line hidden
            TechTalk.SpecFlow.Table table136 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table136.AddRow(new string[] {
                        string.Format("{0}", settlementDateb),
                        string.Format("{0}", finalPrice)});
#line 519
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table136, "And ");
#line hidden
            TechTalk.SpecFlow.Table table137 = new TechTalk.SpecFlow.Table(new string[] {
                        "TotalCount",
                        "TotalUnits",
                        "SettlementDate",
                        "FinalPrice",
                        "UnitsCalc",
                        "CostOFShares",
                        "TotalCost",
                        "ResidueKept",
                        "ResidueRefunded",
                        "TaxONCharges",
                        "AccumCharges"});
            table137.AddRow(new string[] {
                        string.Format("{0}", totalCount),
                        string.Format("{0}", totalUnits2),
                        string.Format("{0}", settlementDateb),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", unitsCalc2),
                        string.Format("{0}", costOFShares2),
                        string.Format("{0}", totalCost2),
                        string.Format("{0}", residueKept),
                        string.Format("{0}", residueRefunded),
                        string.Format("{0}", taxONCharges),
                        string.Format("{0}", accumCharges)});
#line 522
 testRunner.Then("In OLSB0404 I verify the following values:", ((string)(null)), table137, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table138 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table138.AddRow(new string[] {
                        string.Format("{0}", selection3)});
#line 525
 testRunner.When("In OLSBLK02 I continue with the following values:", ((string)(null)), table138, "When ");
#line hidden
            TechTalk.SpecFlow.Table table139 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkCurrency",
                        "SettlementFrom",
                        "SettlementTO"});
            table139.AddRow(new string[] {
                        string.Format("{0}", bulkCurrency),
                        string.Format("{0}", settlementFrom),
                        string.Format("{0}", settlementTO)});
#line 528
  testRunner.And("In OLSB0105 I continue with the following values:", ((string)(null)), table139, "And ");
#line hidden
            TechTalk.SpecFlow.Table table140 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID1",
                        "Currency1",
                        "SettlementDate1",
                        "ProcessBulkInd1",
                        "BulkID2",
                        "Currency2",
                        "SettlementDate2",
                        "ProcessBulkInd2",
                        "BulkID3",
                        "Currency3",
                        "SettlementDate3",
                        "ProcessBulkInd3"});
            table140.AddRow(new string[] {
                        string.Format("{0}", bulkID1),
                        string.Format("{0}", currency1),
                        string.Format("{0}", settlementDate1),
                        string.Format("{0}", processBulkInd1),
                        string.Format("{0}", bulkID2),
                        string.Format("{0}", currency2),
                        string.Format("{0}", settlementDate2),
                        string.Format("{0}", processBulkInd2),
                        string.Format("{0}", bulkID3),
                        string.Format("{0}", currency3),
                        string.Format("{0}", settlementDate3),
                        string.Format("{0}", processBulkInd3)});
#line 531
  testRunner.And("In OLSB0106 I continue with the following values:", ((string)(null)), table140, "And ");
#line hidden
            TechTalk.SpecFlow.Table table141 = new TechTalk.SpecFlow.Table(new string[] {
                        "HomeBankDesc",
                        "AusTraceAccount"});
            table141.AddRow(new string[] {
                        string.Format("{0}", homeBankDesc),
                        string.Format("{0}", ausTraceAccount)});
#line 534
  testRunner.And("In OLSB0104 I verify the following values:", ((string)(null)), table141, "And ");
#line hidden
            TechTalk.SpecFlow.Table table142 = new TechTalk.SpecFlow.Table(new string[] {
                        "PaymentAccount",
                        "OrderNO",
                        "Ident",
                        "NbrBulks",
                        "SettlementFrom",
                        "SettlementTO",
                        "PaymentDate",
                        "AddConvRateInd"});
            table142.AddRow(new string[] {
                        string.Format("{0}", paymentAccount2),
                        string.Format("{0}", orderNO),
                        string.Format("{0}", ident),
                        string.Format("{0}", nbrBulks),
                        string.Format("{0}", settlementFrom1),
                        string.Format("{0}", settlementTO1),
                        string.Format("{0}", paymentDate),
                        string.Format("{0}", addConvRateInd)});
#line 537
  testRunner.And("In OLSB0101 I continue with the following values:", ((string)(null)), table142, "And ");
#line hidden
            TechTalk.SpecFlow.Table table143 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table143.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 540
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table143, "And ");
#line 543
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table144 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table144.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 545
 testRunner.When("In OLSBLK02 I continue with the following values:", ((string)(null)), table144, "When ");
#line hidden
            TechTalk.SpecFlow.Table table145 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkNo"});
            table145.AddRow(new string[] {
                        string.Format("{0}", bulkNo1)});
#line 548
  testRunner.And("In BLKSCH01 I Select the bulk", ((string)(null)), table145, "And ");
#line hidden
            TechTalk.SpecFlow.Table table146 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table146.AddRow(new string[] {
                        string.Format("{0}", menuSelection3)});
#line 551
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table146, "And ");
#line hidden
            TechTalk.SpecFlow.Table table147 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table147.AddRow(new string[] {
                        string.Format("{0}", settlementDateS),
                        string.Format("{0}", tradeDateS),
                        string.Format("{0}", tradeTimeS),
                        string.Format("{0}", indicativePriceS),
                        string.Format("{0}", finalPriceS),
                        string.Format("{0}", registerCodeS),
                        string.Format("{0}", chargeCode1S),
                        string.Format("{0}", chargeCode2S),
                        string.Format("{0}", chargeCode3S),
                        string.Format("{0}", chargeDesc1S),
                        string.Format("{0}", chargeDesc2S),
                        string.Format("{0}", chargeDesc3S),
                        string.Format("{0}", menuSelection3),
                        string.Format("{0}", awardDate1S)});
#line 554
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table147, "And ");
#line 557
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table148 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table148.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 559
 testRunner.When("In OLSBLK02 I continue with the following values:", ((string)(null)), table148, "When ");
#line hidden
            TechTalk.SpecFlow.Table table149 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table149.AddRow(new string[] {
                        string.Format("{0}", menuSelection3)});
#line 562
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table149, "And ");
#line hidden
            TechTalk.SpecFlow.Table table150 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table150.AddRow(new string[] {
                        string.Format("{0}", settlementDateS),
                        string.Format("{0}", tradeDateS),
                        string.Format("{0}", tradeTimeS),
                        string.Format("{0}", indicativePriceS),
                        string.Format("{0}", finalPriceS),
                        string.Format("{0}", registerCodeS),
                        string.Format("{0}", chargeCode1S),
                        string.Format("{0}", chargeCode2S),
                        string.Format("{0}", chargeCode3S),
                        string.Format("{0}", chargeDesc1S),
                        string.Format("{0}", chargeDesc2S),
                        string.Format("{0}", chargeDesc3S),
                        string.Format("{0}", menuSelection3),
                        string.Format("{0}", awardDate1S)});
#line 565
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table150, "And ");
#line 568
  testRunner.And("I Escape to the Main Menu from Bulk Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 570
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", holderID1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 571
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table151 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table151.AddRow(new string[] {
                        string.Format("{0}", certificateLine1A),
                        string.Format("{0}", certificateLine2A),
                        string.Format("{0}", certificateLine3A),
                        string.Format("{0}", certificateLine4A),
                        string.Format("{0}", certificateLine5A),
                        string.Format("{0}", certificateLine6A),
                        string.Format("{0}", certificateLine7A),
                        string.Format("{0}", certificateLine8A),
                        string.Format("{0}", certificateLine9A),
                        string.Format("{0}", certificateLine10A)});
#line 572
 testRunner.Then("In ENS01012 I should see Register details as:", ((string)(null)), table151, "Then ");
#line 575
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, holderID2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 576
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table152 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table152.AddRow(new string[] {
                        string.Format("{0}", certificateLine1A),
                        string.Format("{0}", certificateLine2B),
                        string.Format("{0}", certificateLine3B),
                        string.Format("{0}", certificateLine4A),
                        string.Format("{0}", certificateLine5A),
                        string.Format("{0}", certificateLine6A),
                        string.Format("{0}", certificateLine7A),
                        string.Format("{0}", certificateLine8A),
                        string.Format("{0}", certificateLine9A),
                        string.Format("{0}", certificateLine10A)});
#line 577
 testRunner.Then("In ENS01012 I should see Register details as:", ((string)(null)), table152, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Options Plan Bulk Multiple Registers EE")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("ESSPurchase")]
        [NUnit.Framework.TestCaseAttribute("Test1", "CPU_AUTO", "OPT", "ESSUPLOPTUD.CSV", "F", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "", "F", "Y", "", "", "Y", "Bulk Upload Process", "", "A", "I0030066804", "C", "/OPT/10B/EE", "OPT/EMPLOYEE OPTIONS PLAN", "10B 20100604EE   04/06/10          1000", "**** Total for 20100604EE               1000", "", "", "", "", "", "", "", "S", "I0030160380", "/OPT/10A/EE", "10A 20100604EE   04/06/10          2000", "**** Total for 20100604EE               2000", null)]
        public virtual void OptionsPlanBulkMultipleRegistersEE(
                    string test, 
                    string cOY, 
                    string classCode, 
                    string inputFilename, 
                    string nameSelection, 
                    string pCSelection, 
                    string addressMatching, 
                    string allowBlankAddress, 
                    string updateAddrDetails, 
                    string updateEmpDetails, 
                    string autoGenEmpUnqID, 
                    string clearEmpUnqID, 
                    string updateContactDets, 
                    string uploadTfn, 
                    string updateMandates, 
                    string updateDrp, 
                    string runTrnedt, 
                    string createNewAccounts, 
                    string reportFullTotals, 
                    string autoFtpReportsInd, 
                    string fileName, 
                    string timestamp, 
                    string confirm, 
                    string reportHeading, 
                    string reportDate, 
                    string reportSequence, 
                    string holderID1, 
                    string action, 
                    string locateArgument, 
                    string certificateLine1A, 
                    string certificateLine2A, 
                    string certificateLine3A, 
                    string certificateLine4A, 
                    string certificateLine5A, 
                    string certificateLine6A, 
                    string certificateLine7A, 
                    string certificateLine8A, 
                    string certificateLine9A, 
                    string certificateLine10A, 
                    string action1, 
                    string holderID2, 
                    string locateArgument1, 
                    string certificateLine2B, 
                    string certificateLine3B, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "ESSPurchase"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Options Plan Bulk Multiple Registers EE", @__tags);
#line 589
this.ScenarioSetup(scenarioInfo);
#line 590
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 591
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 592
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 594
  testRunner.And("In EOL00107 I Click on \"multiple grant health integrity\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table153 = new TechTalk.SpecFlow.Table(new string[] {
                        "InputFilename",
                        "NameSelection",
                        "PCSelection",
                        "AddressMatching",
                        "AllowBlankAddress",
                        "UpdateAddrDetails",
                        "UpdateEmpDetails",
                        "AutoGenEmpUnqID",
                        "ClearEmpUnqID",
                        "UpdateContactDets",
                        "UploadTfn",
                        "UpdateMandates",
                        "UpdateDrp",
                        "RunTrnedt",
                        "CreateNewAccounts",
                        "ReportFullTotals",
                        "AutoFtpReportsInd"});
            table153.AddRow(new string[] {
                        string.Format("{0}", inputFilename),
                        string.Format("{0}", nameSelection),
                        string.Format("{0}", pCSelection),
                        string.Format("{0}", addressMatching),
                        string.Format("{0}", allowBlankAddress),
                        string.Format("{0}", updateAddrDetails),
                        string.Format("{0}", updateEmpDetails),
                        string.Format("{0}", autoGenEmpUnqID),
                        string.Format("{0}", clearEmpUnqID),
                        string.Format("{0}", updateContactDets),
                        string.Format("{0}", uploadTfn),
                        string.Format("{0}", updateMandates),
                        string.Format("{0}", updateDrp),
                        string.Format("{0}", runTrnedt),
                        string.Format("{0}", createNewAccounts),
                        string.Format("{0}", reportFullTotals),
                        string.Format("{0}", autoFtpReportsInd)});
#line 595
  testRunner.And("In EOL00501 I continue with the following values:", ((string)(null)), table153, "And ");
#line 598
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table154 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table154.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 599
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table154, "And ");
#line hidden
            TechTalk.SpecFlow.Table table155 = new TechTalk.SpecFlow.Table(new string[] {
                        "COY",
                        "FileName"});
            table155.AddRow(new string[] {
                        string.Format("{0}", cOY),
                        string.Format("{0}", fileName)});
#line 602
 testRunner.When("I read Timestamps from the Health and Integrity file as:", ((string)(null)), table155, "When ");
#line 605
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 607
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 608
  testRunner.And("In EOL00107 I Click on \"multiple grant bulk uploads\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table156 = new TechTalk.SpecFlow.Table(new string[] {
                        "Timestamp",
                        "ReportFullTotals",
                        "AutoFtpReportsInd",
                        "Confirm"});
            table156.AddRow(new string[] {
                        string.Format("{0}", timestamp),
                        string.Format("{0}", reportFullTotals),
                        string.Format("{0}", autoFtpReportsInd),
                        string.Format("{0}", confirm)});
#line 609
  testRunner.And("In EOL00601 I continue with the following values:", ((string)(null)), table156, "And ");
#line hidden
            TechTalk.SpecFlow.Table table157 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "ReportDate",
                        "ReportSequence"});
            table157.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSequence)});
#line 612
  testRunner.And("In EOL00602 I continue with the following values:", ((string)(null)), table157, "And ");
#line 615
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table158 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table158.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 616
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table158, "And ");
#line 619
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 621
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", holderID1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 622
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table159 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table159.AddRow(new string[] {
                        string.Format("{0}", certificateLine1A),
                        string.Format("{0}", certificateLine2A),
                        string.Format("{0}", certificateLine3A),
                        string.Format("{0}", certificateLine4A),
                        string.Format("{0}", certificateLine5A),
                        string.Format("{0}", certificateLine6A),
                        string.Format("{0}", certificateLine7A),
                        string.Format("{0}", certificateLine8A),
                        string.Format("{0}", certificateLine9A),
                        string.Format("{0}", certificateLine10A)});
#line 623
 testRunner.Then("In ENS01012 I should see Register details as:", ((string)(null)), table159, "Then ");
#line 626
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, holderID2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 627
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table160 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table160.AddRow(new string[] {
                        string.Format("{0}", certificateLine1A),
                        string.Format("{0}", certificateLine2B),
                        string.Format("{0}", certificateLine3B),
                        string.Format("{0}", certificateLine4A),
                        string.Format("{0}", certificateLine5A),
                        string.Format("{0}", certificateLine6A),
                        string.Format("{0}", certificateLine7A),
                        string.Format("{0}", certificateLine8A),
                        string.Format("{0}", certificateLine9A),
                        string.Format("{0}", certificateLine10A)});
#line 628
 testRunner.Then("In ENS01012 I should see Register details as:", ((string)(null)), table160, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Loan Plan Bulk Multiple Registers ER")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("ESSPurchase")]
        [NUnit.Framework.TestCaseAttribute("Test1", "CPU_AUTO", "LON", "ESSUPLLONUD.CSV", "F", "N", "Y", "N", "", "", "", "", "", "", "", "", "", "", "F", "Y", "", "", "Y", "Bulk Upload Process", "", "A", "I0100007584", "ESLB", "/LON/12A", "LON STF SHARE OWNERSHIP PLAN(LOAN)", "12A 0000015906 01/01/2012        100        500.00         500.00     No         " +
            "  0", "*Plan Total              100*       500.00*        500.00 *", "", "", "", "", "", "", "", "S", "I0030195469", "/LON/13A", "13A 0000015907 01/01/2013        150        600.00         600.00     No         " +
            "  0", "*Plan Total              150*       600.00*        600.00 *", null)]
        public virtual void LoanPlanBulkMultipleRegistersER(
                    string test, 
                    string cOY, 
                    string classCode, 
                    string inputFilename, 
                    string nameSelection, 
                    string pCSelection, 
                    string addressMatching, 
                    string allowBlankAddress, 
                    string updateAddrDetails, 
                    string updateEmpDetails, 
                    string autoGenEmpUnqID, 
                    string clearEmpUnqID, 
                    string updateContactDets, 
                    string uploadTfn, 
                    string updateMandates, 
                    string updateDrp, 
                    string runTrnedt, 
                    string createNewAccounts, 
                    string reportFullTotals, 
                    string autoFtpReportsInd, 
                    string fileName, 
                    string timestamp, 
                    string confirm, 
                    string reportHeading, 
                    string reportDate, 
                    string reportSequence, 
                    string holderID1, 
                    string action, 
                    string locateArgument, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string line6, 
                    string line7, 
                    string line8, 
                    string line9, 
                    string line10, 
                    string action1, 
                    string holderID2, 
                    string locateArgument1, 
                    string line2A, 
                    string line3A, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "ESSPurchase"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Loan Plan Bulk Multiple Registers ER", @__tags);
#line 639
this.ScenarioSetup(scenarioInfo);
#line 640
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 641
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 642
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 644
  testRunner.And("In EOL00113 I click on \"multiple awards health integrity\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table161 = new TechTalk.SpecFlow.Table(new string[] {
                        "InputFilename",
                        "NameSelection",
                        "PCSelection",
                        "AddressMatching",
                        "AllowBlankAddress",
                        "UpdateAddrDetails",
                        "UpdateEmpDetails",
                        "AutoGenEmpUnqID",
                        "ClearEmpUnqID",
                        "UpdateContactDets",
                        "UploadTfn",
                        "UpdateMandates",
                        "UpdateDrp",
                        "RunTrnedt",
                        "CreateNewAccounts",
                        "ReportFullTotals",
                        "AutoFtpReportsInd"});
            table161.AddRow(new string[] {
                        string.Format("{0}", inputFilename),
                        string.Format("{0}", nameSelection),
                        string.Format("{0}", pCSelection),
                        string.Format("{0}", addressMatching),
                        string.Format("{0}", allowBlankAddress),
                        string.Format("{0}", updateAddrDetails),
                        string.Format("{0}", updateEmpDetails),
                        string.Format("{0}", autoGenEmpUnqID),
                        string.Format("{0}", clearEmpUnqID),
                        string.Format("{0}", updateContactDets),
                        string.Format("{0}", uploadTfn),
                        string.Format("{0}", updateMandates),
                        string.Format("{0}", updateDrp),
                        string.Format("{0}", runTrnedt),
                        string.Format("{0}", createNewAccounts),
                        string.Format("{0}", reportFullTotals),
                        string.Format("{0}", autoFtpReportsInd)});
#line 645
  testRunner.And("In EOL00501 I continue with the following values:", ((string)(null)), table161, "And ");
#line 648
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table162 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table162.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 649
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table162, "And ");
#line hidden
            TechTalk.SpecFlow.Table table163 = new TechTalk.SpecFlow.Table(new string[] {
                        "COY",
                        "FileName"});
            table163.AddRow(new string[] {
                        string.Format("{0}", cOY),
                        string.Format("{0}", fileName)});
#line 652
 testRunner.When("I read Timestamps from the Health and Integrity file as:", ((string)(null)), table163, "When ");
#line 655
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 657
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 658
  testRunner.And("In EOL00113 I click on \"multiple awards bulk uploads\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table164 = new TechTalk.SpecFlow.Table(new string[] {
                        "Timestamp",
                        "ReportFullTotals",
                        "AutoFtpReportsInd",
                        "Confirm"});
            table164.AddRow(new string[] {
                        string.Format("{0}", timestamp),
                        string.Format("{0}", reportFullTotals),
                        string.Format("{0}", autoFtpReportsInd),
                        string.Format("{0}", confirm)});
#line 659
  testRunner.And("In EOL00601 I continue with the following values:", ((string)(null)), table164, "And ");
#line hidden
            TechTalk.SpecFlow.Table table165 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "ReportDate",
                        "ReportSequence"});
            table165.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSequence)});
#line 662
  testRunner.And("In EOL00602 I continue with the following values:", ((string)(null)), table165, "And ");
#line 665
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table166 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table166.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 666
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table166, "And ");
#line 669
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 671
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", holderID1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 672
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table167 = new TechTalk.SpecFlow.Table(new string[] {
                        "Line1",
                        "Line2",
                        "Line3",
                        "Line4",
                        "Line5",
                        "Line6",
                        "Line7",
                        "Line8",
                        "Line9",
                        "Line10"});
            table167.AddRow(new string[] {
                        string.Format("{0}", line1),
                        string.Format("{0}", line2),
                        string.Format("{0}", line3),
                        string.Format("{0}", line4),
                        string.Format("{0}", line5),
                        string.Format("{0}", line6),
                        string.Format("{0}", line7),
                        string.Format("{0}", line8),
                        string.Format("{0}", line9),
                        string.Format("{0}", line10)});
#line 673
 testRunner.Then("In ENSESS19 I should see Loan Balance details as", ((string)(null)), table167, "Then ");
#line 676
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, holderID2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 677
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table168 = new TechTalk.SpecFlow.Table(new string[] {
                        "Line1",
                        "Line2",
                        "Line3",
                        "Line4",
                        "Line5",
                        "Line6",
                        "Line7",
                        "Line8",
                        "Line9",
                        "Line10"});
            table168.AddRow(new string[] {
                        string.Format("{0}", line1),
                        string.Format("{0}", line2A),
                        string.Format("{0}", line3A),
                        string.Format("{0}", line4),
                        string.Format("{0}", line5),
                        string.Format("{0}", line6),
                        string.Format("{0}", line7),
                        string.Format("{0}", line8),
                        string.Format("{0}", line9),
                        string.Format("{0}", line10)});
#line 678
 testRunner.Then("In ENSESS19 I should see Loan Balance details as", ((string)(null)), table168, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
