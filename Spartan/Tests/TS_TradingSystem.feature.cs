// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SCRIPAU.Automation.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("TS_TradingSystem")]
    public partial class TS_TradingSystemFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "TS_TradingSystem.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "TS_TradingSystem", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 30108: Deferred Real Time Sale")]
        [NUnit.Framework.CategoryAttribute("AESSPlanSales")]
        [NUnit.Framework.CategoryAttribute("TFS538234")]
        [NUnit.Framework.CategoryAttribute("TS_TradingSystem")]
        [NUnit.Framework.CategoryAttribute("30108")]
        [NUnit.Framework.TestCaseAttribute("SellPartial", "NAB2_AUTO", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "Y", "C", "ESTSC", "ORD", "VIC", "123451234", "I0035535926", "P", "40", "D", "AUD", "E", "43.000000", "43.000000", "1", "30.00", "40.000000", "1200.00", "", "", "", "3.60", "100.00", "10.00", "10.36", "1076.04", "N", "TIWUQI.KOD._test@computershare.com", "40.000000", "Y", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "40.000000", "40.000000", "1200.00", "30.000000", "30.000000", "30.000000", "1200.00", "", "113.60", "", "", "10.36", "", "1076.04", "3.60", "100.00", "", "10.00", "", "", "", "", "", "", "", "", "1", "1076.04", "", "", "", "", "113.60", "10.36", "", "", "", "", "", "", "TSSAL", "ATS2", "NDF", "ATS", "1", "40.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "40.000000", "1076.04", "Y", "Dir-Credit", "AUD", "40.000000", "Sell Partial", "S", "SALE", "Settled", "1", "40.000000", "1076.04", "20/08/2015", "20/08/2015", "ESSOPT", "1533", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "ATS Sale     ATSR0000003  79269000 20/08/15 Set           40.000000       1076.04" +
            "      30.000000", "", "", "", "", "01", "", "20/08/2015", "AUSTRALIAN DOLLAR", "Direct Banking", "113.60", "10.36", "083-054", "000000000234567800", "T C C CIW", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "40.000000", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "ATSR", "40.000000", "1076.04", null)]
        [NUnit.Framework.TestCaseAttribute("SellSpecific", "NAB2_AUTO", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "Y", "C", "ESTSC", "ORD", "VIC", "123451234", "I0033655983", "S", "", "E", "", "E", "982.000000", "882.000000", "1", "30.00", "750.000000", "22500.00", "", "", "", "67.50", "100.00", "", "16.75", "22315.75", "N", "GOQAD.FIWTYUM-CAEYP._test@computershare.com", "750.000000", "Y", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "750.000000", "750.000000", "22500.00", "30.000000", "30.000000", "30.000000", "22500.00", "", "167.50", "", "", "16.75", "", "22315.75", "67.50", "100.00", "", "", "", "", "", "", "", "", "", "", "", "", "1", "22315.75", "", "", "167.50", "16.75", "", "", "", "", "", "", "TSSAL", "ATS4", "NDF", "ATS", "1", "750.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "750.000000", "22315.75", "Y", "Employer", "AUD", "750.000000", "Sell Specific", "S", "SALE", "Settled", "1", "750.000000", "22315.75", "20/08/2015", "20/08/2015", "ESSOPT", "1552", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "ATS Sale     ATSR0000002  79268999 20/08/15 Set          750.000000      22315.75" +
            "      30.000000", "", "", "", "", "01", "", "20/08/2015", "AUSTRALIAN DOLLAR", "Employer", "167.50", "16.75", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "750.000000", "Y", "", "Y", "", "Y", "", "Y", "", "Y", "", "Y", "", "", "50", "", "50", "", "50", "", "", "", "", "ATSR", "750.000000", "22315.75", null)]
        [NUnit.Framework.TestCaseAttribute("SellAll-WHT", "NAB2_AUTO", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "Y", "C", "ESTSC", "ORD", "VIC", "123451234", "I0031501458", "A", "", "C", "AUD", "E", "600.000000", "600.000000", "1", "30.00", "600.000000", "18000.00", "", "4604.67", "", "54.00", "100.00", "15.00", "15.40", "13210.93", "N", "LIFGQEBCMEPQRS._test@computershare.com", "600.000000", "Y", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "600.000000", "600.000000", "18000.00", "30.000000", "30.000000", "30.000000", "18000.00", "", "169.00", "", "", "15.40", "", "13210.93", "54.00", "100.00", "", "", "15.00", "", "1", "13210.93", "", "", "", "", "", "", "", "", "", "", "169.00", "15.40", "", "", "", "", "", "", "TSSAL", "ATSW", "NDF", "ATS", "1", "600.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "600.000000", "13210.93", "Y", "Cheque Loc", "AUD", "600.000000", "Sell All", "S", "SALE", "Settled", "1", "600.000000", "13210.93", "20/08/2015", "20/08/2015", "ESSOPT", "2287", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "ATS Sale     ATSR0000002  79269020 20/08/15 Set          600.000000      13210.93" +
            "      30.000000", "", "", "", "", "01", "", "20/08/2015", "AUSTRALIAN DOLLAR", "Cheque/Unpres", "169.00", "15.40", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "600.000000", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "ATSR", "600.000000", "13210.93", null)]
        public virtual void TestCase30108DeferredRealTimeSale(
                    string saleType, 
                    string cOY, 
                    string onMarketTrade, 
                    string brokerCode, 
                    string brokerAccountID, 
                    string connectionCode, 
                    string realTimeTrading, 
                    string topupPercentage, 
                    string sellSelected, 
                    string option, 
                    string tranType, 
                    string @class, 
                    string reg, 
                    string worldLinkNumber, 
                    string searchName, 
                    string sellOption, 
                    string units, 
                    string paymentMethod, 
                    string prefCurrency, 
                    string notificationReqdInd, 
                    string balance, 
                    string availBalance, 
                    string durationType, 
                    string estMarketValue, 
                    string unitsSell, 
                    string marketValue, 
                    string purchResidueAmt, 
                    string federalTaxWithheld, 
                    string loanAmt, 
                    string chargeAmount1, 
                    string chargeAmount2, 
                    string chargeAmount3, 
                    string totalGst, 
                    string estimatedProceeds, 
                    string overrideEmailInd, 
                    string emailAddress, 
                    string confirmUnits, 
                    string confirmWarningFlag5, 
                    string menuSelection, 
                    string confirmStatus, 
                    string tradeDate, 
                    string tradeTimeHH, 
                    string tradeTimeMM, 
                    string settlementDate, 
                    string totalUnits, 
                    string unitsTraded, 
                    string totalCost, 
                    string finalPrice, 
                    string tradePrice, 
                    string priceATAudit, 
                    string grossAmount, 
                    string purchaseResidue, 
                    string holderCharges1, 
                    string loanAmount, 
                    string optionCost, 
                    string gst, 
                    string taxWithheld, 
                    string nettAmount, 
                    string chargeAmount01, 
                    string chargeAmount02, 
                    string chargeAmount03, 
                    string chargeAmount04, 
                    string chargeAmount05, 
                    string chargeAmount06, 
                    string localChqCount, 
                    string localChqNettAmount, 
                    string foreignChqCount, 
                    string foreignChqNettAmt, 
                    string wireCount, 
                    string wireNettAmount, 
                    string directBankingCount, 
                    string directBankNettAmt, 
                    string employerCount, 
                    string employerNettAmount, 
                    string companyCharges, 
                    string companyTax, 
                    string holderCharges, 
                    string holderTax, 
                    string reportCharges, 
                    string reportTax, 
                    string paymentAccount, 
                    string bankType, 
                    string branchNumber, 
                    string accountNumber, 
                    string paymentAccount1, 
                    string orderNO, 
                    string ident, 
                    string classCode, 
                    string nbrTrades, 
                    string tradeGrossAmount, 
                    string tradeFrom, 
                    string tradeTO, 
                    string settlementFrom, 
                    string settlementTO, 
                    string menuSelection1, 
                    string confirmStatus1, 
                    string tradingID, 
                    string status, 
                    string price, 
                    string transCount, 
                    string transTotal, 
                    string moneyTotal, 
                    string applyTaxInd, 
                    string paymentMethodDesc, 
                    string currency, 
                    string sellUnits, 
                    string orderType, 
                    string bulkType, 
                    string bulkTypeDesc, 
                    string statusDesc, 
                    string totalCount, 
                    string orderTransUnits, 
                    string totalMoney, 
                    string reqdSettlementDate, 
                    string actualSettlementDate, 
                    string reconciliationCode, 
                    string cshtrnReference, 
                    string minimumDeal, 
                    string maximumDeal, 
                    string cutOffTime, 
                    string counterpartyClass, 
                    string counterRegisterCode, 
                    string orderType1, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string action, 
                    string locateArgument, 
                    string paymentDate, 
                    string currencyDesc, 
                    string paymentMethod1, 
                    string totalCharges, 
                    string gstTaxTotal, 
                    string bankCode, 
                    string payeeAccountNumber, 
                    string accountName, 
                    string cover01, 
                    string cover02, 
                    string cover03, 
                    string cover04, 
                    string cover05, 
                    string cover06, 
                    string cover07, 
                    string cover08, 
                    string cover09, 
                    string cover10, 
                    string cover11, 
                    string cover12, 
                    string cover13, 
                    string cover14, 
                    string cover15, 
                    string units1, 
                    string sellAll01, 
                    string units01, 
                    string sellAll02, 
                    string units02, 
                    string sellAll03, 
                    string units03, 
                    string sellAll04, 
                    string units04, 
                    string sellAll05, 
                    string units05, 
                    string sellAll06, 
                    string units06, 
                    string sellAll07, 
                    string units07, 
                    string sellAll08, 
                    string units08, 
                    string sellAll09, 
                    string units09, 
                    string remainingBalance, 
                    string remBalIndDesc, 
                    string transfereeHolder, 
                    string transfereeClass, 
                    string tradeControlCode, 
                    string tradeUnits, 
                    string transMoney, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "AESSPlanSales",
                    "TFS538234",
                    "TS_TradingSystem",
                    "30108"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 30108: Deferred Real Time Sale", @__tags);
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
  testRunner.And("I go to \"Trading Control Codes\" Control Code Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
  testRunner.And(string.Format("In TRD24000 I select the Trade Control Code \"{0}\"", tradeControlCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
  testRunner.And(string.Format("In TRD24001 I perform a Change for On Market Trade \"{0}\", \"{1}\", \"{2}\", \"{3}\", \"{" +
                        "4}\" and Top Up \"{5}\", \"{6}\" and Remaining Balance Options \"{7}\", \"{8}\", \"{9}\", \"" +
                        "{10}\" and World Link Number \"{11}\"", onMarketTrade, brokerCode, brokerAccountID, connectionCode, realTimeTrading, topupPercentage, sellSelected, option, tranType, @class, reg, worldLinkNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
  testRunner.And(string.Format("I go to the Trading system Sales and trade control code \"{0}\"", tradeControlCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
  testRunner.And(string.Format("In TRS00501 I Add Postal Transaction Entry details as \"{0}\"", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
  testRunner.And(string.Format("In TRS00502 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\"", sellOption, units, paymentMethod, prefCurrency, notificationReqdInd, balance, availBalance), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
  testRunner.And(string.Format("In TRS00507 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}" +
                        "\" \"{17}\"", sellAll01, units01, sellAll02, units02, sellAll03, units03, sellAll04, units04, sellAll05, units05, sellAll06, units06, sellAll07, units07, sellAll08, units08, sellAll09, units09), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
  testRunner.And(string.Format("In TRS00511 I Add Postal Transaction Entry details as \"{0}\" \"{1}\"", durationType, estMarketValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
  testRunner.And(string.Format("In TRS00513 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\"", cover01, cover02, cover03, cover04, cover05, cover06, cover07, cover08, cover09, cover10, cover11, cover12, cover13, cover14, cover15), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
  testRunner.And(string.Format("In TRS00504 I Verify Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" " +
                        "\"{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\"", unitsSell, estMarketValue, marketValue, purchResidueAmt, federalTaxWithheld, loanAmt, chargeAmount1, chargeAmount2, chargeAmount3, totalGst, estimatedProceeds), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
  testRunner.And(string.Format("In TRS00512 I Add Postal Transaction Entry details as \"{0}\" \"{1}\"", overrideEmailInd, emailAddress), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
  testRunner.And(string.Format("In TRS00503 I Add Postal Transaction Entry details as \"{0}\" \"{1}\"", confirmUnits, confirmWarningFlag5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
  testRunner.And(string.Format("In TRD00401 I Change Order Status to \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\"", menuSelection, confirmStatus, tradeDate, tradeTimeHH, tradeTimeMM, settlementDate, finalPrice), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.Then(string.Format("In TRD004CS I Verify Change Order Status details1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\" \"{18}\"", unitsTraded, totalCost, finalPrice, tradePrice, priceATAudit, grossAmount, purchaseResidue, holderCharges1, loanAmount, optionCost, gst, taxWithheld, nettAmount, chargeAmount01, chargeAmount02, chargeAmount03, chargeAmount04, chargeAmount05, chargeAmount06), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 27
  testRunner.And(string.Format("In TRD004CS I Verify Change Order Status details2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\" \"{18}\"", localChqCount, localChqNettAmount, foreignChqCount, foreignChqNettAmt, wireCount, wireNettAmount, directBankingCount, directBankNettAmt, employerCount, employerNettAmount, companyCharges, companyTax, holderCharges, holderTax, reportCharges, reportTax, bankType, branchNumber, accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.When(string.Format("In TRD00101 I Run the Generate Output Job as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" " +
                        "\"{6}\" \"{7}\" \"{8}\" \"{9}\"", paymentAccount1, orderNO, ident, classCode, nbrTrades, tradeGrossAmount, tradeFrom, tradeTO, settlementFrom, settlementTO), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria",
                        "PassCriteriaLNX",
                        "FailCriteriaLNX"});
            table1.AddRow(new string[] {
                        "completion",
                        "240",
                        "error",
                        "DONE",
                        "EXIT"});
#line 29
  testRunner.And("I wait for  GenerateOutput job to complete", ((string)(null)), table1, "And ");
#line 32
  testRunner.And(string.Format("In TRD00401 I Force Settle the Order as \"{0}\" \"{1}\"", menuSelection1, confirmStatus1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
 testRunner.Then(string.Format("In TRS01010 I Verify Transaction Enquiry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        " \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\"", tradingID, status, price, classCode, transCount, transTotal, moneyTotal, settlementDate, applyTaxInd, paymentMethod, paymentMethodDesc, currency, sellUnits, orderType, tradeUnits, transMoney), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 34
  testRunner.And(string.Format("In TRDSCH02 I Verify Transaction Enquiry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        " \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" " +
                        "\"{17}\" \"{18}\"", tradingID, bulkType, bulkTypeDesc, statusDesc, totalCount, orderTransUnits, totalMoney, tradeDate, reqdSettlementDate, actualSettlementDate, finalPrice, reconciliationCode, cshtrnReference, minimumDeal, maximumDeal, cutOffTime, counterpartyClass, counterRegisterCode, orderType1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
  testRunner.And(string.Format("In TRDSCHCS I Verify Transaction Enquiry details1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\"", unitsTraded, totalCost, finalPrice, priceATAudit, grossAmount, purchaseResidue, holderCharges1, loanAmount, optionCost, gst, taxWithheld, nettAmount, chargeAmount01, chargeAmount02, chargeAmount03, chargeAmount04, chargeAmount05, chargeAmount06), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
  testRunner.And(string.Format("In TRDSCHCS I Verify Transaction Enquiry details2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\" \"{18}\"", localChqCount, localChqNettAmount, foreignChqCount, foreignChqNettAmt, wireCount, wireNettAmount, directBankingCount, directBankNettAmt, employerCount, employerNettAmount, companyCharges, companyTax, holderCharges, holderTax, reportCharges, reportTax, bankType, branchNumber, accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
  testRunner.And("I go the Main Menu From Trading System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 40
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "Action",
                        "TH"});
            table2.AddRow(new string[] {
                        "Locate Argument",
                        "/ATS"});
#line 41
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table2, "And ");
#line 45
 testRunner.Then(string.Format("In ENSTRD48 I should see trading history summary as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        "", line1, line2, line3, line4, line5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 46
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 47
  testRunner.And(string.Format("In ENSTRDSH I Verify Trade History details1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"{17}" +
                        "\"", units1, unitsSell, finalPrice, grossAmount, purchaseResidue, loanAmount, optionCost, gst, taxWithheld, nettAmount, chargeAmount01, chargeAmount02, chargeAmount03, chargeAmount04, chargeAmount05, chargeAmount06, paymentDate, paymentAccount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
  testRunner.And(string.Format("In ENSTRDSH I Verify Trade History details2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"{17}" +
                        "\"", prefCurrency, currencyDesc, paymentMethod1, holderCharges, holderTax, companyCharges, companyTax, reportCharges, reportTax, totalCharges, gstTaxTotal, bankCode, payeeAccountNumber, accountName, remainingBalance, remBalIndDesc, transfereeHolder, transfereeClass), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 30522: Options Real Time Sale")]
        [NUnit.Framework.CategoryAttribute("TS_TradingSystem")]
        [NUnit.Framework.CategoryAttribute("OptionsPlanSales")]
        [NUnit.Framework.CategoryAttribute("30522")]
        [NUnit.Framework.TestCaseAttribute("ExerciseAll_WHT_Test2", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036534397", "", "", "", "Y", "", "", "", "", "", "", "", "", "A", "", "C", "AUD", "N", "4000.000000", "4000.000000", "1", "30.00", "1000.000000", "1000.000000", "30000.00", "", "11052.00", "10000.00", "", "90.00", "100.00", "15.00", "19.00", "8724.00", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "1000.000000", "1000.000000", "30000.00", "30.000000", "30.000000", "30.000000", "30000.00", "", "205.00", "", "19.00", "11052.00", "8724.00", "90.00", "100.00", "", "", "15.00", "", "1", "8724.00", "", "", "", "", "", "", "", "", "", "", "205.00", "19.00", "", "", "", "", "", "", "TSSAL", "OPT2", "NDF", "OPT", "1", "1000.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "1000.000000", "8724.00", "Y", "Cheque Loc", "AUD", "1000.000000", "Sell All", "S", "SALE", "Settled", "1", "1000.000000", "8724.00", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "AUSTRALIAN DOLLAR", "Cheque/Unpres", "205.00", "19.00", "R", "R", "TH", "/OPT", "", "", "", "", "", "", "", "ROPT", "1000.000000", "8724.00", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseSelected_Test3", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036534591", "", "699", "", "", "", "", "", "", "", "", "", "", "A", "", "E", "", "N", "4000.000000", "4000.000000", "1", "30.00", "699.000000", "699.000000", "20970.00", "", "", "13281.00", "", "62.91", "100.00", "", "16.29", "7509.80", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "699.000000", "699.000000", "20970.00", "30.000000", "30.000000", "30.000000", "20970.00", "", "162.91", "", "16.29", "", "7509.80", "62.91", "100.00", "", "", "", "", "", "", "", "", "", "", "", "", "1", "7509.80", "", "", "162.91", "16.29", "", "", "", "", "", "", "TSSAL", "OPT3", "NDF", "OPT", "1", "699.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "699.000000", "7509.80", "Y", "Employer", "AUD", "699.000000", "Sell Specific", "S", "SALE", "Settled", "1", "699.000000", "7509.80", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "AUSTRALIAN DOLLAR", "Employer", "162.91", "16.29", "R", "R", "TH", "/OPT", "", "", "", "", "", "", "", "ROPT", "699.000000", "7509.80", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseSelected_WHT_Test4", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036534125", "", "", "", "", "", "", "", "799", "", "", "", "", "A", "", "E", "", "N", "4000.000000", "4000.000000", "1", "30.00", "799.000000", "799.000000", "23970.00", "", "10628.29", "3995.00", "", "71.91", "100.00", "", "17.19", "9157.61", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "799.000000", "799.000000", "23970.00", "30.000000", "30.000000", "30.000000", "23970.00", "", "171.91", "", "17.19", "10628.29", "9157.61", "71.91", "100.00", "", "", "", "", "", "", "", "", "", "", "", "", "1", "9157.61", "", "", "171.91", "17.19", "", "", "", "", "", "", "TSSAL", "OPT4", "NDF", "OPT", "1", "799.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "799.000000", "9157.61", "Y", "Employer", "AUD", "799.000000", "Sell Specific", "S", "SALE", "Settled", "1", "799.000000", "9157.61", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "AUSTRALIAN DOLLAR", "Employer", "171.91", "17.19", "R", "R", "TH", "/OPT", "", "", "", "", "", "", "", "ROPT", "799.000000", "9157.61", null)]
        [NUnit.Framework.TestCaseAttribute("ExercisePartial_Test5", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036534711", "", "", "", "", "", "", "", "", "", "", "1000", "899", "P", "C", "C", "USD", "N", "4000.000000", "4000.000000", "1", "30.00", "1000.000000", "899.000000", "26970.00", "", "", "10000.00", "", "80.91", "100.00", "40.00", "18.09", "16731.00", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "1000.000000", "899.000000", "26970.00", "30.000000", "30.000000", "30.000000", "26970.00", "", "220.91", "", "18.09", "", "16731.00", "80.91", "100.00", "", "", "", "40.00", "", "", "1", "16731.00", "", "", "", "", "", "", "", "", "220.91", "18.09", "", "", "", "", "", "", "TSSAL", "OPT5", "NDF", "OPT", "1", "1000.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "1000.000000", "16731.00", "Y", "Cheque For", "USD", "899.000000", "Sell Partial", "S", "SALE", "Settled", "1", "1000.000000", "16731.00", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "US DOLLAR", "Foreign/Unpres", "220.91", "18.09", "R", "R", "TH", "/OPT", "", "", "", "101.000000", "Issuer", "I0036534711", "ORD", "ROPT", "1000.000000", "16731.00", null)]
        [NUnit.Framework.TestCaseAttribute("ExercisePartial_WHT_Test6", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036534958", "", "900", "899", "", "", "", "", "", "", "", "", "", "P", "C", "C", "USD", "N", "4000.000000", "4000.000000", "1", "30.00", "900.000000", "899.000000", "26970.00", "", "6301.80", "17100.00", "", "80.91", "100.00", "40.00", "18.09", "3329.20", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "900.000000", "899.000000", "26970.00", "30.000000", "30.000000", "30.000000", "26970.00", "", "220.91", "", "18.09", "6301.80", "3329.20", "80.91", "100.00", "", "", "", "40.00", "", "", "1", "3329.20", "", "", "", "", "", "", "", "", "220.91", "18.09", "", "", "", "", "", "", "TSSAL", "OPT6", "NDF", "OPT", "1", "900.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "900.000000", "3329.20", "Y", "Cheque For", "USD", "899.000000", "Sell Partial", "S", "SALE", "Settled", "1", "900.000000", "3329.20", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "US DOLLAR", "Foreign/Unpres", "220.91", "18.09", "R", "R", "TH", "/OPT", "", "", "", "1.000000", "Issuer", "I0036534958", "ORD", "ROPT", "900.000000", "3329.20", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_Test7", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036534753", "Y", "", "", "", "", "", "", "", "", "", "", "", "C", "C", "W", "", "N", "4000.000000", "4000.000000", "1", "30.00", "1000.000000", "640.000000", "19200.00", "", "", "19000.00", "", "57.60", "100.00", "10.00", "15.76", "16.64", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "1000.000000", "640.000000", "19200.00", "30.000000", "30.000000", "30.000000", "19200.00", "", "167.60", "", "15.76", "", "16.64", "57.60", "100.00", "10.00", "", "", "", "", "", "", "", "1", "16.64", "", "", "", "", "", "", "167.60", "15.76", "", "", "", "", "", "", "TSSAL", "OPT7", "NDF", "OPT", "1", "1000.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "1000.000000", "16.64", "Y", "Wire", "NZD", "640.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "1000.000000", "16.64", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "NEW ZEALAND DOLLAR", "Wire", "167.60", "15.76", "R", "R", "TH", "/OPT", "", "", "", "360.000000", "Issuer", "I0036534753", "ORD", "ROPT", "1000.000000", "16.64", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_WHT_Test8", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036534320", "", "", "", "", "899", "", "", "", "", "", "", "", "C", "C", "W", "", "N", "4000.000000", "4000.000000", "1", "30.00", "899.000000", "637.000000", "19110.00", "", "9935.74", "8990.00", "", "57.33", "100.00", "10.00", "15.73", "1.20", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "899.000000", "637.000000", "19110.00", "30.000000", "30.000000", "30.000000", "19110.00", "", "167.33", "", "15.73", "9935.74", "1.20", "57.33", "100.00", "10.00", "", "", "", "", "", "", "", "1", "1.20", "", "", "", "", "", "", "167.33", "15.73", "", "", "", "", "", "", "TSSAL", "OPT8", "NDF", "OPT", "1", "899.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "899.000000", "1.20", "Y", "Wire", "NZD", "637.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "899.000000", "1.20", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "NEW ZEALAND DOLLAR", "Wire", "167.33", "15.73", "R", "R", "TH", "/OPT", "", "", "", "262.000000", "Issuer", "I0036534320", "ORD", "ROPT", "899.000000", "1.20", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_TopUp_Test9", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "2.00", "", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036534265", "Y", "", "", "", "", "", "", "", "", "", "", "", "C", "C", "W", "", "N", "4000.000000", "4000.000000", "1", "30.00", "1000.000000", "654.000000", "19620.00", "", "", "19000.00", "", "58.86", "100.00", "10.00", "15.89", "435.25", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "1000.000000", "654.000000", "19620.00", "30.000000", "30.000000", "30.000000", "19620.00", "", "168.86", "", "15.89", "", "435.25", "58.86", "100.00", "10.00", "", "", "", "", "", "", "", "1", "435.25", "", "", "", "", "", "", "168.86", "15.89", "", "", "", "", "", "", "TSSAL", "OPT9", "NDF", "OPT", "1", "1000.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "1000.000000", "435.25", "Y", "Wire", "NZD", "654.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "1000.000000", "435.25", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "NEW ZEALAND DOLLAR", "Wire", "168.86", "15.89", "R", "R", "TH", "/OPT", "", "", "", "346.000000", "Issuer", "I0036534265", "ORD", "ROPT", "1000.000000", "435.25", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_WHT_TopUp_Test10", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "2.00", "", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036534133", "", "", "", "", "899", "", "", "", "", "", "", "", "C", "C", "W", "", "N", "4000.000000", "4000.000000", "1", "30.00", "899.000000", "651.000000", "19530.00", "", "9935.74", "8990.00", "", "58.59", "100.00", "10.00", "15.86", "419.81", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "899.000000", "651.000000", "19530.00", "30.000000", "30.000000", "30.000000", "19530.00", "", "168.59", "", "15.86", "9935.74", "419.81", "58.59", "100.00", "10.00", "", "", "", "", "", "", "", "1", "419.81", "", "", "", "", "", "", "168.59", "15.86", "", "", "", "", "", "", "TSSAL", "OP10", "NDF", "OPT", "1", "899.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "899.000000", "419.81", "Y", "Wire", "NZD", "651.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "899.000000", "419.81", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "NEW ZEALAND DOLLAR", "Wire", "168.59", "15.86", "R", "R", "TH", "/OPT", "", "", "", "248.000000", "Issuer", "I0036534133", "ORD", "ROPT", "899.000000", "419.81", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseAll_Test11", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "Y", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036534664", "", "", "", "", "", "", "", "", "", "", "", "", "A", "", "C", "AUD", "N", "4000.000000", "4000.000000", "1", "30.00", "4000.000000", "4000.000000", "120000.00", "", "", "44000.00", "", "360.00", "100.00", "15.00", "46.00", "75479.00", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "4000.000000", "4000.000000", "120000.00", "30.000000", "30.000000", "30.000000", "120000.00", "", "475.00", "", "46.00", "", "75479.00", "360.00", "100.00", "", "", "15.00", "", "1", "75479.00", "", "", "", "", "", "", "", "", "", "", "475.00", "46.00", "", "", "", "", "", "", "TSSAL", "OP11", "NDF", "OPT", "1", "4000.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "4000.000000", "75479.00", "Y", "Cheque Loc", "AUD", "4000.000000", "Sell All", "S", "SALE", "Settled", "1", "4000.000000", "75479.00", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "AUSTRALIAN DOLLAR", "Cheque/Unpres", "475.00", "46.00", "R", "R", "TH", "/OPT", "", "", "", "", "", "", "", "ROPT", "4000.000000", "75479.00", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseAll_WHT_Test12", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "Y", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036534516", "", "", "", "", "", "", "", "", "", "", "", "", "A", "", "C", "AUD", "N", "4000.000000", "4000.000000", "1", "30.00", "4000.000000", "4000.000000", "120000.00", "", "42408.00", "44000.00", "", "360.00", "100.00", "15.00", "46.00", "33071.00", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "4000.000000", "4000.000000", "120000.00", "30.000000", "30.000000", "30.000000", "120000.00", "", "475.00", "", "46.00", "42408.00", "33071.00", "360.00", "100.00", "", "", "15.00", "", "1", "33071.00", "", "", "", "", "", "", "", "", "", "", "475.00", "46.00", "", "", "", "", "", "", "TSSAL", "OP12", "NDF", "OPT", "1", "4000.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "4000.000000", "33071.00", "Y", "Cheque Loc", "AUD", "4000.000000", "Sell All", "S", "SALE", "Settled", "1", "4000.000000", "33071.00", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "AUSTRALIAN DOLLAR", "Cheque/Unpres", "475.00", "46.00", "R", "R", "TH", "/OPT", "", "", "", "", "", "", "", "ROPT", "4000.000000", "33071.00", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseSelected_Test13", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "Y", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036534605", "", "", "", "", "", "", "Y", "", "", "", "99", "", "S", "", "E", "", "N", "4000.000000", "4000.000000", "1", "30.00", "1099.000000", "1099.000000", "32970.00", "", "", "5990.00", "", "98.91", "100.00", "", "19.89", "26761.20", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "1099.000000", "1099.000000", "32970.00", "30.000000", "30.000000", "30.000000", "32970.00", "", "198.91", "", "19.89", "", "26761.20", "98.91", "100.00", "", "", "", "", "", "", "", "", "", "", "", "", "1", "26761.20", "", "", "198.91", "19.89", "", "", "", "", "", "", "TSSAL", "OP13", "NDF", "OPT", "1", "1099.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "1099.000000", "26761.20", "Y", "Employer", "AUD", "1099.000000", "Sell Specific", "S", "SALE", "Settled", "1", "1099.000000", "26761.20", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "AUSTRALIAN DOLLAR", "Employer", "198.91", "19.89", "R", "R", "TH", "/OPT", "", "", "", "", "", "", "", "ROPT", "1099.000000", "26761.20", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseSelected_WHT_Test14", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "Y", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036534770", "Y", "", "", "", "999", "", "", "899", "", "", "1", "", "S", "", "E", "", "N", "4000.000000", "4000.000000", "1", "30.00", "2899.000000", "2899.000000", "86970.00", "", "30012.48", "33495.00", "", "260.91", "100.00", "", "36.09", "23065.52", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "2899.000000", "2899.000000", "86970.00", "30.000000", "30.000000", "30.000000", "86970.00", "", "360.91", "", "36.09", "30012.48", "23065.52", "260.91", "100.00", "", "", "", "", "", "", "", "", "", "", "", "", "1", "23065.52", "", "", "360.91", "36.09", "", "", "", "", "", "", "TSSAL", "OP14", "NDF", "OPT", "1", "2899.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "2899.000000", "23065.52", "Y", "Employer", "AUD", "2899.000000", "Sell Specific", "S", "SALE", "Settled", "1", "2899.000000", "23065.52", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "AUSTRALIAN DOLLAR", "Employer", "360.91", "36.09", "R", "R", "TH", "/OPT", "", "", "", "", "", "", "", "ROPT", "2899.000000", "23065.52", null)]
        [NUnit.Framework.TestCaseAttribute("ExercisePartial_Test15", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "Y", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036535008", "Y", "", "", "", "900", "799", "", "800", "601", "", "1", "", "P", "C", "C", "USD", "N", "4000.000000", "4000.000000", "1", "30.00", "2701.000000", "2400.000000", "72000.00", "", "", "32010.00", "", "216.00", "100.00", "40.00", "31.60", "39602.40", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "2701.000000", "2400.000000", "72000.00", "30.000000", "30.000000", "30.000000", "72000.00", "", "356.00", "", "31.60", "", "39602.40", "216.00", "100.00", "", "", "", "40.00", "", "", "1", "39602.40", "", "", "", "", "", "", "", "", "356.00", "31.60", "", "", "", "", "", "", "TSSAL", "OP15", "NDF", "OPT", "1", "2701.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "2701.000000", "39602.40", "Y", "Cheque For", "USD", "2400.000000", "Sell Partial", "S", "SALE", "Settled", "1", "2701.000000", "39602.40", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "US DOLLAR", "Foreign/Unpres", "356.00", "31.60", "R", "R", "TH", "/OPT", "", "", "", "301.000000", "Issuer", "I0036535008", "ORD", "ROPT", "2701.000000", "39602.40", null)]
        [NUnit.Framework.TestCaseAttribute("ExercisePartial_WHT_Test16", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "Y", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036534346", "", "1000", "999", "", "900", "899", "", "800", "799", "", "700", "699", "P", "C", "C", "USD", "N", "4000.000000", "4000.000000", "1", "30.00", "3400.000000", "3396.000000", "101880.00", "", "35326.80", "39000.00", "", "305.64", "100.00", "40.00", "40.56", "27067.00", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "3400.000000", "3396.000000", "101880.00", "30.000000", "30.000000", "30.000000", "101880.00", "", "445.64", "", "40.56", "35326.80", "27067.00", "305.64", "100.00", "", "", "", "40.00", "", "", "1", "27067.00", "", "", "", "", "", "", "", "", "445.64", "40.56", "", "", "", "", "", "", "TSSAL", "OP16", "NDF", "OPT", "1", "3400.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "3400.000000", "27067.00", "Y", "Cheque For", "USD", "3396.000000", "Sell Partial", "S", "SALE", "Settled", "1", "3400.000000", "27067.00", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "US DOLLAR", "Foreign/Unpres", "445.64", "40.56", "R", "R", "TH", "/OPT", "", "", "", "4.000000", "Issuer", "I0036534346", "ORD", "ROPT", "3400.000000", "27067.00", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_Test17", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "Y", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036534257", "Y", "", "", "", "1", "", "", "1", "", "", "1", "", "C", "C", "W", "", "N", "4000.000000", "4000.000000", "1", "30.00", "1003.000000", "641.000000", "19230.00", "", "", "19025.00", "", "57.69", "100.00", "10.00", "15.77", "21.54", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "1003.000000", "641.000000", "19230.00", "30.000000", "30.000000", "30.000000", "19230.00", "", "167.69", "", "15.77", "", "21.54", "57.69", "100.00", "10.00", "", "", "", "", "", "", "", "1", "21.54", "", "", "", "", "", "", "167.69", "15.77", "", "", "", "", "", "", "TSSAL", "OP17", "NDF", "OPT", "1", "1003.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "1003.000000", "21.54", "Y", "Wire", "GBP", "641.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "1003.000000", "21.54", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "BRITISH POUND", "Wire", "167.69", "15.77", "R", "R", "TH", "/OPT", "", "", "", "362.000000", "Issuer", "I0036534257", "ORD", "ROPT", "1003.000000", "21.54", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_WHT_Test18", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "Y", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036534737", "Y", "", "", "Y", "", "", "", "499", "", "", "199", "", "C", "C", "W", "", "N", "4000.000000", "4000.000000", "1", "30.00", "2698.000000", "2024.000000", "60720.00", "", "26891.03", "33485.00", "", "182.16", "100.00", "10.00", "28.22", "23.59", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "2698.000000", "2024.000000", "60720.00", "30.000000", "30.000000", "30.000000", "60720.00", "", "292.16", "", "28.22", "26891.03", "23.59", "182.16", "100.00", "10.00", "", "", "", "", "", "", "", "1", "23.59", "", "", "", "", "", "", "292.16", "28.22", "", "", "", "", "", "", "TSSAL", "OP18", "NDF", "OPT", "1", "2698.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "2698.000000", "23.59", "Y", "Wire", "GBP", "2024.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "2698.000000", "23.59", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "BRITISH POUND", "Wire", "292.16", "28.22", "R", "R", "TH", "/OPT", "", "", "", "674.000000", "Issuer", "I0036534737", "ORD", "ROPT", "2698.000000", "23.59", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_TopUp_Test19", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "2.00", "Y", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036534672", "Y", "", "", "", "1", "", "", "1", "", "", "1", "", "C", "C", "W", "", "N", "4000.000000", "4000.000000", "1", "30.00", "1003.000000", "657.000000", "19710.00", "", "", "19025.00", "", "59.13", "100.00", "10.00", "15.91", "499.96", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "1003.000000", "657.000000", "19710.00", "30.000000", "30.000000", "30.000000", "19710.00", "", "169.13", "", "15.91", "", "499.96", "59.13", "100.00", "10.00", "", "", "", "", "", "", "", "1", "499.96", "", "", "", "", "", "", "169.13", "15.91", "", "", "", "", "", "", "TSSAL", "OP19", "NDF", "OPT", "1", "1003.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "1003.000000", "499.96", "Y", "Wire", "GBP", "657.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "1003.000000", "499.96", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "BRITISH POUND", "Wire", "169.13", "15.91", "R", "R", "TH", "/OPT", "", "", "", "346.000000", "Issuer", "I0036534672", "ORD", "ROPT", "1003.000000", "499.96", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_WHT_TopUp_Test20", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "2.00", "Y", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036536900", "Y", "", "", "Y", "", "", "", "499", "", "", "199", "", "C", "C", "W", "", "N", "4000.000000", "4000.000000", "1", "30.00", "2698.000000", "2066.000000", "61980.00", "", "26891.03", "33485.00", "", "185.94", "100.00", "10.00", "28.59", "1279.44", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "2698.000000", "2066.000000", "61980.00", "30.000000", "30.000000", "30.000000", "61980.00", "", "295.94", "", "28.59", "26891.03", "1279.44", "185.94", "100.00", "10.00", "", "", "", "", "", "", "", "1", "1279.44", "", "", "", "", "", "", "295.94", "28.59", "", "", "", "", "", "", "TSSAL", "OP20", "NDF", "OPT", "1", "2698.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "2698.000000", "1279.44", "Y", "Wire", "GBP", "2066.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "2698.000000", "1279.44", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "BRITISH POUND", "Wire", "295.94", "28.59", "R", "R", "TH", "/OPT", "", "", "", "632.000000", "Issuer", "I0036536900", "ORD", "ROPT", "2698.000000", "1279.44", null)]
        [NUnit.Framework.TestCaseAttribute("ExercisePartial_Test21", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "", "V", "ESOXR", "", "", "123451234", "", "I0036534443", "", "", "", "", "", "", "", "", "", "", "1000", "899", "P", "V", "C", "USD", "N", "4000.000000", "4000.000000", "1", "30.00", "1000.000000", "899.000000", "26970.00", "", "", "10000.00", "", "80.91", "100.00", "40.00", "18.09", "16731.00", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "1000.000000", "899.000000", "26970.00", "30.000000", "30.000000", "30.000000", "26970.00", "", "220.91", "", "18.09", "", "16731.00", "80.91", "100.00", "", "", "", "40.00", "", "", "1", "16731.00", "", "", "", "", "", "", "", "", "220.91", "18.09", "", "", "", "", "", "", "TSSAL", "OP21", "NDF", "OPT", "1", "1000.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "1000.000000", "16731.00", "Y", "Cheque For", "USD", "899.000000", "Sell Partial", "S", "SALE", "Settled", "1", "1000.000000", "16731.00", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "US DOLLAR", "Foreign/Unpres", "220.91", "18.09", "R", "R", "TH", "/OPT", "", "", "", "101.000000", "Transfer to VSA", "I0036534443", "ESU", "ROPT", "1000.000000", "16731.00", null)]
        [NUnit.Framework.TestCaseAttribute("ExercisePartial_WHT_Test22", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "", "V", "ESOXR", "", "", "123451234", "", "I0036534184", "", "900", "899", "", "", "", "", "", "", "", "", "", "P", "V", "C", "USD", "N", "4000.000000", "4000.000000", "1", "30.00", "900.000000", "899.000000", "26970.00", "", "6301.80", "17100.00", "", "80.91", "100.00", "40.00", "18.09", "3329.20", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "900.000000", "899.000000", "26970.00", "30.000000", "30.000000", "30.000000", "26970.00", "", "220.91", "", "18.09", "6301.80", "3329.20", "80.91", "100.00", "", "", "", "40.00", "", "", "1", "3329.20", "", "", "", "", "", "", "", "", "220.91", "18.09", "", "", "", "", "", "", "TSSAL", "OP22", "NDF", "OPT", "1", "900.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "900.000000", "3329.20", "Y", "Cheque For", "USD", "899.000000", "Sell Partial", "S", "SALE", "Settled", "1", "900.000000", "3329.20", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "US DOLLAR", "Foreign/Unpres", "220.91", "18.09", "R", "R", "TH", "/OPT", "", "", "", "1.000000", "Transfer to VSA", "I0036534184", "ESU", "ROPT", "900.000000", "3329.20", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_Test23", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "", "V", "ESOXR", "", "", "123451234", "", "I0036534389", "Y", "", "", "", "", "", "", "", "", "", "", "", "C", "V", "W", "", "N", "4000.000000", "4000.000000", "1", "30.00", "1000.000000", "640.000000", "19200.00", "", "", "19000.00", "", "57.60", "100.00", "10.00", "15.76", "16.64", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "1000.000000", "640.000000", "19200.00", "30.000000", "30.000000", "30.000000", "19200.00", "", "167.60", "", "15.76", "", "16.64", "57.60", "100.00", "10.00", "", "", "", "", "", "", "", "1", "16.64", "", "", "", "", "", "", "167.60", "15.76", "", "", "", "", "", "", "TSSAL", "OP23", "NDF", "OPT", "1", "1000.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "1000.000000", "16.64", "Y", "Wire", "NZD", "640.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "1000.000000", "16.64", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "NEW ZEALAND DOLLAR", "Wire", "167.60", "15.76", "R", "R", "TH", "/OPT", "", "", "", "360.000000", "Transfer to VSA", "I0036534389", "ESU", "ROPT", "1000.000000", "16.64", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_WHT_Test24", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "", "V", "ESOXR", "", "", "123451234", "", "I0036534176", "", "", "", "", "899", "", "", "", "", "", "", "", "C", "V", "W", "", "N", "4000.000000", "4000.000000", "1", "30.00", "899.000000", "637.000000", "19110.00", "", "9935.74", "8990.00", "", "57.33", "100.00", "10.00", "15.73", "1.20", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "899.000000", "637.000000", "19110.00", "30.000000", "30.000000", "30.000000", "19110.00", "", "167.33", "", "15.73", "9935.74", "1.20", "57.33", "100.00", "10.00", "", "", "", "", "", "", "", "1", "1.20", "", "", "", "", "", "", "167.33", "15.73", "", "", "", "", "", "", "TSSAL", "OP24", "NDF", "OPT", "1", "899.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "899.000000", "1.20", "Y", "Wire", "NZD", "637.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "899.000000", "1.20", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "NEW ZEALAND DOLLAR", "Wire", "167.33", "15.73", "R", "R", "TH", "/OPT", "", "", "", "262.000000", "Transfer to VSA", "I0036534176", "ESU", "ROPT", "899.000000", "1.20", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_TopUp_Test25", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "2.00", "", "V", "ESOXR", "", "", "123451234", "", "I0036534974", "Y", "", "", "", "", "", "", "", "", "", "", "", "C", "V", "W", "", "N", "4000.000000", "4000.000000", "1", "30.00", "1000.000000", "654.000000", "19620.00", "", "", "19000.00", "", "58.86", "100.00", "10.00", "15.89", "435.25", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "1000.000000", "654.000000", "19620.00", "30.000000", "30.000000", "30.000000", "19620.00", "", "168.86", "", "15.89", "", "435.25", "58.86", "100.00", "10.00", "", "", "", "", "", "", "", "1", "435.25", "", "", "", "", "", "", "168.86", "15.89", "", "", "", "", "", "", "TSSAL", "OP25", "NDF", "OPT", "1", "1000.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "1000.000000", "435.25", "Y", "Wire", "NZD", "654.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "1000.000000", "435.25", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "NEW ZEALAND DOLLAR", "Wire", "168.86", "15.89", "R", "R", "TH", "/OPT", "", "", "", "346.000000", "Transfer to VSA", "I0036534974", "ESU", "ROPT", "1000.000000", "435.25", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_WHT_TopUp_Test26", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "2.00", "", "V", "ESOXR", "", "", "123451234", "", "I0036534681", "", "", "", "", "899", "", "", "", "", "", "", "", "C", "V", "W", "", "N", "4000.000000", "4000.000000", "1", "30.00", "899.000000", "651.000000", "19530.00", "", "9935.74", "8990.00", "", "58.59", "100.00", "10.00", "15.86", "419.81", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "899.000000", "651.000000", "19530.00", "30.000000", "30.000000", "30.000000", "19530.00", "", "168.59", "", "15.86", "9935.74", "419.81", "58.59", "100.00", "10.00", "", "", "", "", "", "", "", "1", "419.81", "", "", "", "", "", "", "168.59", "15.86", "", "", "", "", "", "", "TSSAL", "OP26", "NDF", "OPT", "1", "899.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "899.000000", "419.81", "Y", "Wire", "NZD", "651.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "899.000000", "419.81", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "NEW ZEALAND DOLLAR", "Wire", "168.59", "15.86", "R", "R", "TH", "/OPT", "", "", "", "248.000000", "Transfer to VSA", "I0036534681", "ESU", "ROPT", "899.000000", "419.81", null)]
        [NUnit.Framework.TestCaseAttribute("ExercisePartial_Test27", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "Y", "V", "ESOXR", "", "", "123451234", "", "I0036535172", "Y", "", "", "", "900", "799", "", "800", "601", "", "1", "", "P", "V", "C", "USD", "N", "4000.000000", "4000.000000", "1", "30.00", "2701.000000", "2400.000000", "72000.00", "", "", "32010.00", "", "216.00", "100.00", "40.00", "31.60", "39602.40", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "2701.000000", "2400.000000", "72000.00", "30.000000", "30.000000", "30.000000", "72000.00", "", "356.00", "", "31.60", "", "39602.40", "216.00", "100.00", "", "", "", "40.00", "", "", "1", "39602.40", "", "", "", "", "", "", "", "", "356.00", "31.60", "", "", "", "", "", "", "TSSAL", "OP27", "NDF", "OPT", "1", "2701.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "2701.000000", "39602.40", "Y", "Cheque For", "USD", "2400.000000", "Sell Partial", "S", "SALE", "Settled", "1", "2701.000000", "39602.40", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "US DOLLAR", "Foreign/Unpres", "356.00", "31.60", "R", "R", "TH", "/OPT", "", "", "", "301.000000", "Transfer to VSA", "I0036535172", "ESU", "ROPT", "2701.000000", "39602.40", null)]
        [NUnit.Framework.TestCaseAttribute("ExercisePartial_WHT_Test28", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "Y", "V", "ESOXR", "", "", "123451234", "", "I0036535261", "", "1000", "999", "", "900", "899", "", "800", "799", "", "700", "699", "P", "V", "C", "USD", "N", "4000.000000", "4000.000000", "1", "30.00", "3400.000000", "3396.000000", "101880.00", "", "35326.80", "39000.00", "", "305.64", "100.00", "40.00", "40.56", "27067.00", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "3400.000000", "3396.000000", "101880.00", "30.000000", "30.000000", "30.000000", "101880.00", "", "445.64", "", "40.56", "35326.80", "27067.00", "305.64", "100.00", "", "", "", "40.00", "", "", "1", "27067.00", "", "", "", "", "", "", "", "", "445.64", "40.56", "", "", "", "", "", "", "TSSAL", "OP28", "NDF", "OPT", "1", "3400.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "3400.000000", "27067.00", "Y", "Cheque For", "USD", "3396.000000", "Sell Partial", "S", "SALE", "Settled", "1", "3400.000000", "27067.00", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "US DOLLAR", "Foreign/Unpres", "445.64", "40.56", "R", "R", "TH", "/OPT", "", "", "", "4.000000", "Transfer to VSA", "I0036535261", "ESU", "ROPT", "3400.000000", "27067.00", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_Test29", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "Y", "V", "ESOXR", "", "", "123451234", "", "I0036534923", "Y", "", "", "", "1", "", "", "1", "", "", "1", "", "C", "V", "W", "", "N", "4000.000000", "4000.000000", "1", "30.00", "1003.000000", "641.000000", "19230.00", "", "", "19025.00", "", "57.69", "100.00", "10.00", "15.77", "21.54", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "1003.000000", "641.000000", "19230.00", "30.000000", "30.000000", "30.000000", "19230.00", "", "167.69", "", "15.77", "", "21.54", "57.69", "100.00", "10.00", "", "", "", "", "", "", "", "1", "21.54", "", "", "", "", "", "", "167.69", "15.77", "", "", "", "", "", "", "TSSAL", "OP29", "NDF", "OPT", "1", "1003.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "1003.000000", "21.54", "Y", "Wire", "NZD", "641.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "1003.000000", "21.54", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "NEW ZEALAND DOLLAR", "Wire", "167.69", "15.77", "R", "R", "TH", "/OPT", "", "", "", "362.000000", "Transfer to VSA", "I0036534923", "ESU", "ROPT", "1003.000000", "21.54", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_WHT_Test30", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "Y", "V", "ESOXR", "", "", "123451234", "", "I0036534249", "Y", "", "", "Y", "", "", "", "499", "", "", "199", "", "C", "V", "W", "", "N", "4000.000000", "4000.000000", "1", "30.00", "2698.000000", "2024.000000", "60720.00", "", "26891.03", "33485.00", "", "182.16", "100.00", "10.00", "28.22", "23.59", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "2698.000000", "2024.000000", "60720.00", "30.000000", "30.000000", "30.000000", "60720.00", "", "292.16", "", "28.22", "26891.03", "23.59", "182.16", "100.00", "10.00", "", "", "", "", "", "", "", "1", "23.59", "", "", "", "", "", "", "292.16", "28.22", "", "", "", "", "", "", "TSSAL", "OP30", "NDF", "OPT", "1", "2698.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "2698.000000", "23.59", "Y", "Wire", "NZD", "2024.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "2698.000000", "23.59", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "NEW ZEALAND DOLLAR", "Wire", "292.16", "28.22", "R", "R", "TH", "/OPT", "", "", "", "674.000000", "Transfer to VSA", "I0036534249", "ESU", "ROPT", "2698.000000", "23.59", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_TopUp_Test31", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "2.00", "Y", "V", "ESOXR", "", "", "123451234", "", "I0036534966", "Y", "", "", "", "1", "", "", "1", "", "", "1", "", "C", "V", "W", "", "N", "4000.000000", "4000.000000", "1", "30.00", "1003.000000", "657.000000", "19710.00", "", "", "19025.00", "", "59.13", "100.00", "10.00", "15.91", "499.96", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "1003.000000", "657.000000", "19710.00", "30.000000", "30.000000", "30.000000", "19710.00", "", "169.13", "", "15.91", "", "499.96", "59.13", "100.00", "10.00", "", "", "", "", "", "", "", "1", "499.96", "", "", "", "", "", "", "169.13", "15.91", "", "", "", "", "", "", "TSSAL", "OP19", "NDF", "OPT", "1", "1003.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "1003.000000", "499.96", "Y", "Wire", "NZD", "657.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "1003.000000", "499.96", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "NEW ZEALAND DOLLAR", "Wire", "169.13", "15.91", "R", "R", "TH", "/OPT", "", "", "", "346.000000", "Transfer to VSA", "I0036534966", "ESU", "ROPT", "1003.000000", "499.96", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_WHT_TopUp_Test32", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "2.00", "Y", "V", "ESOXR", "", "", "123451234", "", "I0036537205", "Y", "", "", "Y", "", "", "", "499", "", "", "199", "", "C", "V", "W", "", "N", "4000.000000", "4000.000000", "1", "30.00", "2698.000000", "2066.000000", "61980.00", "", "26891.03", "33485.00", "", "185.94", "100.00", "10.00", "28.59", "1279.44", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "2698.000000", "2066.000000", "61980.00", "30.000000", "30.000000", "30.000000", "61980.00", "", "295.94", "", "28.59", "26891.03", "1279.44", "185.94", "100.00", "10.00", "", "", "", "", "", "", "", "1", "1279.44", "", "", "", "", "", "", "295.94", "28.59", "", "", "", "", "", "", "TSSAL", "OP20", "NDF", "OPT", "1", "2698.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "2698.000000", "1279.44", "Y", "Wire", "NZD", "2066.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "2698.000000", "1279.44", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "NEW ZEALAND DOLLAR", "Wire", "295.94", "28.59", "R", "R", "TH", "/OPT", "", "", "", "632.000000", "Transfer to VSA", "I0036537205", "ESU", "ROPT", "2698.000000", "1279.44", null)]
        public virtual void TestCase30522OptionsRealTimeSale(
                    string exerciseType, 
                    string cOY, 
                    string multi_Cert, 
                    string onMarketTrade, 
                    string brokerCode, 
                    string brokerAccountID, 
                    string connectionCode, 
                    string realTimeTrading, 
                    string topupPercentage, 
                    string sellSelected, 
                    string option, 
                    string tranType, 
                    string @class, 
                    string reg, 
                    string worldLinkNumber, 
                    string transNumber, 
                    string searchName, 
                    string sellAll01, 
                    string exerciseUnits01, 
                    string units01, 
                    string sellAll02, 
                    string exerciseUnits02, 
                    string units02, 
                    string sellAll03, 
                    string exerciseUnits03, 
                    string units03, 
                    string sellAll04, 
                    string exerciseUnits04, 
                    string units04, 
                    string sellOption, 
                    string remainingBalInd, 
                    string paymentMethod, 
                    string prefCurrency, 
                    string notificationReqdInd, 
                    string balance, 
                    string availBalance, 
                    string durationType, 
                    string estMarketValue, 
                    string unitsExercise, 
                    string unitsSell, 
                    string marketValue, 
                    string purchResidueAmt, 
                    string federalTaxWithheld, 
                    string optionCost, 
                    string loanAmt, 
                    string chargeAmount1, 
                    string chargeAmount2, 
                    string chargeAmount3, 
                    string totalGst, 
                    string estimatedProceeds, 
                    string confirmUnits, 
                    string confirmWarningFlag5, 
                    string menuSelection, 
                    string confirmStatus, 
                    string tradeDate, 
                    string tradeTimeHH, 
                    string tradeTimeMM, 
                    string settlementDate, 
                    string totalUnits, 
                    string unitsTraded, 
                    string totalCost, 
                    string finalPrice, 
                    string tradePrice, 
                    string priceATAudit, 
                    string grossAmount, 
                    string purchaseResidue, 
                    string holderCharges1, 
                    string loanAmount, 
                    string gst, 
                    string taxWithheld, 
                    string nettAmount, 
                    string chargeAmount01, 
                    string chargeAmount02, 
                    string chargeAmount03, 
                    string chargeAmount04, 
                    string chargeAmount05, 
                    string chargeAmount06, 
                    string localChqCount, 
                    string localChqNettAmount, 
                    string foreignChqCount, 
                    string foreignChqNettAmt, 
                    string wireCount, 
                    string wireNettAmount, 
                    string directBankingCount, 
                    string directBankNettAmt, 
                    string employerCount, 
                    string employerNettAmount, 
                    string companyCharges, 
                    string companyTax, 
                    string holderCharges, 
                    string holderTax, 
                    string reportCharges, 
                    string reportTax, 
                    string paymentAccount, 
                    string bankType, 
                    string branchNumber, 
                    string accountNumber, 
                    string paymentAccount1, 
                    string orderNO, 
                    string ident, 
                    string classCode, 
                    string nbrTrades, 
                    string tradeGrossAmount, 
                    string tradeFrom, 
                    string tradeTO, 
                    string settlementFrom, 
                    string settlementTO, 
                    string menuSelection1, 
                    string confirmStatus1, 
                    string tradingID, 
                    string status, 
                    string price, 
                    string transCount, 
                    string transTotal, 
                    string moneyTotal, 
                    string applyTaxInd, 
                    string paymentMethodDesc, 
                    string currency, 
                    string sellUnits, 
                    string orderType, 
                    string bulkType, 
                    string bulkTypeDesc, 
                    string statusDesc, 
                    string totalCount, 
                    string orderTransUnits, 
                    string totalMoney, 
                    string reqdSettlementDate, 
                    string actualSettlementDate, 
                    string reconciliationCode, 
                    string cshtrnReference, 
                    string minimumDeal, 
                    string maximumDeal, 
                    string cutOffTime, 
                    string counterpartyClass, 
                    string counterRegisterCode, 
                    string orderType1, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string action, 
                    string locateArgument, 
                    string paymentDate, 
                    string currencyDesc, 
                    string paymentMethod1, 
                    string totalCharges, 
                    string gstTaxTotal, 
                    string menuSelection2, 
                    string confirmStatus2, 
                    string action1, 
                    string locateArgument1, 
                    string bankCode, 
                    string payeeAccountNumber, 
                    string accountName, 
                    string remainingBalance, 
                    string remBalIndDesc, 
                    string transfereeHolder, 
                    string transfereeClass, 
                    string tradeControlCode, 
                    string tradeUnits, 
                    string transMoney, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TS_TradingSystem",
                    "OptionsPlanSales",
                    "30522"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 30522: Options Real Time Sale", @__tags);
#line 60
this.ScenarioSetup(scenarioInfo);
#line 61
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 62
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 63
  testRunner.And("I go to \"Company Options\" Control Code Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
  testRunner.And(string.Format("In HKS01516 I set the Multi-Cert Flag to \"{0}\"", multi_Cert), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
  testRunner.And("I go to \"Trading Control Codes\" Control Code Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 66
  testRunner.And(string.Format("In TRD24000 I select the Trade Control Code \"{0}\"", tradeControlCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
  testRunner.And(string.Format("In TRD24001 I perform a Change for On Market Trade \"{0}\", \"{1}\", \"{2}\", \"{3}\", \"{" +
                        "4}\" and Top Up \"{5}\", \"{6}\" and Remaining Balance Options \"{7}\", \"{8}\", \"{9}\", \"" +
                        "{10}\" and World Link Number \"{11}\"", onMarketTrade, brokerCode, brokerAccountID, connectionCode, realTimeTrading, topupPercentage, sellSelected, option, tranType, @class, reg, worldLinkNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
  testRunner.And(string.Format("I go to the Trading system Sales and trade control code \"{0}\"", tradeControlCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
  testRunner.And(string.Format("In TRS00701 I Add Postal Transaction Entry details as \"{0}\" \"{1}\"", transNumber, searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
 testRunner.When(string.Format("In TRS00702 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\"", sellOption, remainingBalInd, paymentMethod, prefCurrency, notificationReqdInd, balance, availBalance), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 72
  testRunner.And(string.Format("In TRS00707 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", sellAll01, exerciseUnits01, units01, sellAll02, exerciseUnits02, units02, sellAll03, exerciseUnits03, units03, sellAll04, exerciseUnits04, units04), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
  testRunner.And(string.Format("In TRS00511 I Add Postal Transaction Entry details as \"{0}\" \"{1}\"", durationType, estMarketValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
  testRunner.And(string.Format("In TRS00704 I Verify Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" " +
                        "\"{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", unitsExercise, unitsSell, estMarketValue, marketValue, purchResidueAmt, federalTaxWithheld, optionCost, chargeAmount1, chargeAmount2, chargeAmount3, totalGst, estimatedProceeds), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
  testRunner.And(string.Format("In TRS00703 I Add Postal Transaction Entry details as \"<ExerciseUnits>\" \"{0}\" \"{1" +
                        "}\"", confirmUnits, confirmWarningFlag5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
  testRunner.And(string.Format("In TRD00401 I Change Order Status to \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\"", menuSelection, confirmStatus, tradeDate, tradeTimeHH, tradeTimeMM, settlementDate, finalPrice), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
 testRunner.Then(string.Format("In TRD004CS I Verify Change Order Status details1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\" \"{18}\"", unitsTraded, totalCost, finalPrice, tradePrice, priceATAudit, grossAmount, purchaseResidue, holderCharges1, loanAmount, optionCost, gst, taxWithheld, nettAmount, chargeAmount01, chargeAmount02, chargeAmount03, chargeAmount04, chargeAmount05, chargeAmount06), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 78
  testRunner.And(string.Format("In TRD004CS I Verify Change Order Status details2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\" \"{18}\"", localChqCount, localChqNettAmount, foreignChqCount, foreignChqNettAmt, wireCount, wireNettAmount, directBankingCount, directBankNettAmt, employerCount, employerNettAmount, companyCharges, companyTax, holderCharges, holderTax, reportCharges, reportTax, bankType, branchNumber, accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
 testRunner.When(string.Format("In TRD00101 I Run the Generate Output Job as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" " +
                        "\"{6}\" \"{7}\" \"{8}\" \"{9}\"", paymentAccount1, orderNO, ident, classCode, nbrTrades, tradeGrossAmount, tradeFrom, tradeTO, settlementFrom, settlementTO), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria",
                        "PassCriteriaLNX",
                        "FailCriteriaLNX"});
            table3.AddRow(new string[] {
                        "completion",
                        "240",
                        "error",
                        "DONE",
                        "EXIT"});
#line 80
  testRunner.And("I wait for  GenerateOutput job to complete", ((string)(null)), table3, "And ");
#line 83
  testRunner.And(string.Format("In TRD00401 I Apply Exercise Transaction as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"" +
                        "{6}\"", menuSelection2, confirmStatus2, tradeDate, tradeTimeHH, tradeTimeMM, settlementDate, finalPrice), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
  testRunner.And(string.Format("In TRD00401 I Force Settle the Order as \"{0}\" \"{1}\"", menuSelection1, confirmStatus1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 85
 testRunner.Then(string.Format("In TRS01010 I Verify Transaction Enquiry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        " \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\"", tradingID, status, price, classCode, transCount, transTotal, moneyTotal, settlementDate, applyTaxInd, paymentMethod, paymentMethodDesc, currency, sellUnits, orderType, tradeUnits, transMoney), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 86
  testRunner.And(string.Format("In TRDSCH02 I Verify Transaction Enquiry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        " \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" " +
                        "\"{17}\" \"{18}\"", tradingID, bulkType, bulkTypeDesc, statusDesc, totalCount, orderTransUnits, totalMoney, tradeDate, reqdSettlementDate, actualSettlementDate, finalPrice, reconciliationCode, cshtrnReference, minimumDeal, maximumDeal, cutOffTime, counterpartyClass, counterRegisterCode, orderType1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
  testRunner.And(string.Format("In TRDSCHCS I Verify Transaction Enquiry details1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\"", unitsTraded, totalCost, finalPrice, priceATAudit, grossAmount, purchaseResidue, holderCharges1, loanAmount, optionCost, gst, taxWithheld, nettAmount, chargeAmount01, chargeAmount02, chargeAmount03, chargeAmount04, chargeAmount05, chargeAmount06), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
  testRunner.And(string.Format("In TRDSCHCS I Verify Transaction Enquiry details2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\" \"{18}\"", localChqCount, localChqNettAmount, foreignChqCount, foreignChqNettAmt, wireCount, wireNettAmount, directBankingCount, directBankNettAmt, employerCount, employerNettAmount, companyCharges, companyTax, holderCharges, holderTax, reportCharges, reportTax, bankType, branchNumber, accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
  testRunner.And("I go the Main Menu From Trading System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 91
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 92
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
 testRunner.Then(string.Format("In ENSTRD48 I should see trading history summary as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        "", line1, line2, line3, line4, line5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 95
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 96
  testRunner.And(string.Format("In ENSTRDSH I Verify Trade History details1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"{17}" +
                        "\"", orderTransUnits, unitsSell, finalPrice, grossAmount, purchaseResidue, loanAmount, optionCost, gst, taxWithheld, nettAmount, chargeAmount01, chargeAmount02, chargeAmount03, chargeAmount04, chargeAmount05, chargeAmount06, paymentDate, paymentAccount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 97
  testRunner.And(string.Format("In ENSTRDSH I Verify Trade History details2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"{17}" +
                        "\"", prefCurrency, currencyDesc, paymentMethod1, holderCharges, holderTax, companyCharges, companyTax, reportCharges, reportTax, totalCharges, gstTaxTotal, bankCode, payeeAccountNumber, accountName, remainingBalance, remBalIndDesc, transfereeHolder, transfereeClass), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 30881: Loan Real Time Sale")]
        [NUnit.Framework.CategoryAttribute("TS_TradingSystem")]
        [NUnit.Framework.CategoryAttribute("LoanPlanSales")]
        [NUnit.Framework.CategoryAttribute("30881")]
        [NUnit.Framework.TestCaseAttribute("SelltoCover", "NAB2_AUTO", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "Y", "C", "ESTSC", "ORD", "VIC", "123451234", "I0036534028", "C", "", "W", "", "E", "1500.000000", "1500.000000", "1", "30.00", "104.000000", "3120.00", "", "", "3000.00", "9.36", "100.00", "10.00", "0.00", ".64", "N", "REAL-TIME-HOLDER3@TEST.COM", "", "Y", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "1500.000000", "104.000000", "3120.00", "30.000000", "30.000000", "30.000000", "3120.00", "", "119.36", "3000.00", "", "", "", ".64", "9.36", "100.00", "10.00", "", "", "", "", "", "", "", "1", ".64", "", "", "", "", "", "", "119.36", "", "", "", "", "", "", "", "TSSAL", "ELA3", "NDF", "ELA", "1", "1500.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "1500.000000", ".64", "N", "Wire", "GBP", "104.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "1500.000000", ".64", "20/08/2015", "20/08/2015", "ESSOPT", "1576", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "ELA Sale     RELA0000004  79269004 20/08/15 Set          104.000000           .64" +
            "      30.000000", "", "", "", "", "01", "", "20/08/2015", "BRITISH POUND", "Wire", "119.36", "", "", "GB96MIDL40271522859882", "REAL-TIME LOAN-HOLDER3", "Y", "Y", "Y", "", "", "", "", "", "", "", "", "", "", "", "", "1500.000000", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "1396.000000", "Issuer", "I0036534028", "ORD", "RELA", "1500.000000", ".64", null)]
        [NUnit.Framework.TestCaseAttribute("SelltoCover_Topup", "NAB2_AUTO", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "2.00", "Y", "C", "ESTSC", "ORD", "VIC", "123451234", "I0036534044", "C", "", "E", "", "E", "1500.000000", "1500.000000", "1", "30.00", "108.000000", "3240.00", "", "", "3000.00", "9.72", "100.00", "", "10.97", "119.31", "N", "REAL-TIME-HOLDER4@TEST.COM", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "1500.000000", "108.000000", "3240.00", "30.000000", "30.000000", "30.000000", "3240.00", "", "109.72", "3000.00", "", "10.97", "", "119.31", "9.72", "100.00", "", "", "", "", "", "", "", "", "", "", "", "", "1", "119.31", "", "", "109.72", "10.97", "", "", "", "", "", "", "TSSAL", "ELA4", "NDF", "ELA", "1", "1500.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "1500.000000", "119.31", "Y", "Employer", "AUD", "108.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "1500.000000", "119.31", "20/08/2015", "20/08/2015", "ESSOPT", "1579", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "ELA Sale     RELA0000005  79269004 20/08/15 Set          108.000000        119.31" +
            "      30.000000", "", "", "", "", "01", "", "20/08/2015", "AUSTRALIAN DOLLAR", "Employer", "109.72", "10.97", "", "", "", "Y", "Y", "Y", "", "", "", "", "", "", "", "", "", "", "", "", "1500.000000", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "1392.000000", "Issuer", "I0036534044", "ORD", "RELA", "1500.000000", "119.31", null)]
        [NUnit.Framework.TestCaseAttribute("SellSpecific", "NAB2_AUTO", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "Y", "C", "ESTSC", "ORD", "VIC", "123451234", "I0036534052", "S", "", "C", "NZD", "E", "1500.000000", "1500.000000", "1", "30.00", "799.000000", "23970.00", "", "", "2000.00", "71.91", "100.00", "40.00", "17.19", "21740.90", "N", "REAL-TIME-HOLDER5@TEST.COM", "799.000000", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "799.000000", "799.000000", "23970.00", "30.000000", "30.000000", "30.000000", "23970.00", "", "211.91", "2000.00", "", "17.19", "", "21740.90", "71.91", "100.00", "", "", "", "40.00", "", "", "1", "21740.90", "", "", "", "", "", "", "", "", "211.91", "17.19", "", "", "", "", "", "", "TSSAL", "ELA5", "NDF", "ELA", "1", "799.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "799.000000", "21740.90", "Y", "Cheque For", "NZD", "799.000000", "Sell Specific", "S", "SALE", "Settled", "1", "799.000000", "21740.90", "20/08/2015", "20/08/2015", "ESSOPT", "4910", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "ELA Sale     RELA0000006  79269043 20/08/15 Set          799.000000      21740.90" +
            "      30.000000", "", "", "", "", "01", "", "20/08/2015", "NEW ZEALAND DOLLAR", "Foreign/Unpres", "211.91", "17.19", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "799.000000", "Y", "", "", "299", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "RELA", "799.000000", "21740.90", null)]
        public virtual void TestCase30881LoanRealTimeSale(
                    string saleType, 
                    string cOY, 
                    string onMarketTrade, 
                    string brokerCode, 
                    string brokerAccountID, 
                    string connectionCode, 
                    string realTimeTrading, 
                    string topupPercentage, 
                    string sellSelected, 
                    string option, 
                    string tranType, 
                    string @class, 
                    string reg, 
                    string worldLinkNumber, 
                    string searchName, 
                    string sellOption, 
                    string units, 
                    string paymentMethod, 
                    string prefCurrency, 
                    string notificationReqdInd, 
                    string balance, 
                    string availBalance, 
                    string durationType, 
                    string estMarketValue, 
                    string unitsSell, 
                    string marketValue, 
                    string purchResidueAmt, 
                    string federalTaxWithheld, 
                    string loanAmt, 
                    string chargeAmount1, 
                    string chargeAmount2, 
                    string chargeAmount3, 
                    string totalGst, 
                    string estimatedProceeds, 
                    string overrideEmailInd, 
                    string emailAddress, 
                    string confirmUnits, 
                    string confirmWarningFlag5, 
                    string menuSelection, 
                    string confirmStatus, 
                    string tradeDate, 
                    string tradeTimeHH, 
                    string tradeTimeMM, 
                    string settlementDate, 
                    string totalUnits, 
                    string unitsTraded, 
                    string totalCost, 
                    string finalPrice, 
                    string tradePrice, 
                    string priceATAudit, 
                    string grossAmount, 
                    string purchaseResidue, 
                    string holderCharges1, 
                    string loanAmount, 
                    string optionCost, 
                    string gst, 
                    string taxWithheld, 
                    string nettAmount, 
                    string chargeAmount01, 
                    string chargeAmount02, 
                    string chargeAmount03, 
                    string chargeAmount04, 
                    string chargeAmount05, 
                    string chargeAmount06, 
                    string localChqCount, 
                    string localChqNettAmount, 
                    string foreignChqCount, 
                    string foreignChqNettAmt, 
                    string wireCount, 
                    string wireNettAmount, 
                    string directBankingCount, 
                    string directBankNettAmt, 
                    string employerCount, 
                    string employerNettAmount, 
                    string companyCharges, 
                    string companyTax, 
                    string holderCharges, 
                    string holderTax, 
                    string reportCharges, 
                    string reportTax, 
                    string paymentAccount, 
                    string bankType, 
                    string branchNumber, 
                    string accountNumber, 
                    string paymentAccount1, 
                    string orderNO, 
                    string ident, 
                    string classCode, 
                    string nbrTrades, 
                    string tradeGrossAmount, 
                    string tradeFrom, 
                    string tradeTO, 
                    string settlementFrom, 
                    string settlementTO, 
                    string menuSelection1, 
                    string confirmStatus1, 
                    string tradingID, 
                    string status, 
                    string price, 
                    string transCount, 
                    string transTotal, 
                    string moneyTotal, 
                    string applyTaxInd, 
                    string paymentMethodDesc, 
                    string currency, 
                    string sellUnits, 
                    string orderType, 
                    string bulkType, 
                    string bulkTypeDesc, 
                    string statusDesc, 
                    string totalCount, 
                    string orderTransUnits, 
                    string totalMoney, 
                    string reqdSettlementDate, 
                    string actualSettlementDate, 
                    string reconciliationCode, 
                    string cshtrnReference, 
                    string minimumDeal, 
                    string maximumDeal, 
                    string cutOffTime, 
                    string counterpartyClass, 
                    string counterRegisterCode, 
                    string orderType1, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string action, 
                    string locateArgument, 
                    string paymentDate, 
                    string currencyDesc, 
                    string paymentMethod1, 
                    string totalCharges, 
                    string gstTaxTotal, 
                    string bankCode, 
                    string payeeAccountNumber, 
                    string accountName, 
                    string cover01, 
                    string cover02, 
                    string cover03, 
                    string cover04, 
                    string cover05, 
                    string cover06, 
                    string cover07, 
                    string cover08, 
                    string cover09, 
                    string cover10, 
                    string cover11, 
                    string cover12, 
                    string cover13, 
                    string cover14, 
                    string cover15, 
                    string unitsTraded1, 
                    string sellAll01, 
                    string units01, 
                    string sellAll02, 
                    string units02, 
                    string sellAll03, 
                    string units03, 
                    string sellAll04, 
                    string units04, 
                    string sellAll05, 
                    string units05, 
                    string sellAll06, 
                    string units06, 
                    string sellAll07, 
                    string units07, 
                    string sellAll08, 
                    string units08, 
                    string sellAll09, 
                    string units09, 
                    string remainingBalance, 
                    string remBalIndDesc, 
                    string transfereeHolder, 
                    string transfereeClass, 
                    string tradeControlCode, 
                    string tradeUnits, 
                    string tradeMoney, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TS_TradingSystem",
                    "LoanPlanSales",
                    "30881"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 30881: Loan Real Time Sale", @__tags);
#line 149
this.ScenarioSetup(scenarioInfo);
#line 150
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 151
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 154
  testRunner.And("I go to \"Trading Control Codes\" Control Code Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 155
  testRunner.And(string.Format("In TRD24000 I select the Trade Control Code \"{0}\"", tradeControlCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 156
  testRunner.And(string.Format("In TRD24001 I perform a Change for On Market Trade \"{0}\", \"{1}\", \"{2}\", \"{3}\", \"{" +
                        "4}\" and Top Up \"{5}\", \"{6}\" and Remaining Balance Options \"{7}\", \"{8}\", \"{9}\", \"" +
                        "{10}\" and World Link Number \"{11}\"", onMarketTrade, brokerCode, brokerAccountID, connectionCode, realTimeTrading, topupPercentage, sellSelected, option, tranType, @class, reg, worldLinkNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 157
  testRunner.And(string.Format("I go to the Trading system Sales and trade control code \"{0}\"", tradeControlCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 158
  testRunner.And(string.Format("In TRS00501 I Add Postal Transaction Entry details as \"{0}\"", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 159
  testRunner.And(string.Format("In TRS00502 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\"", sellOption, units, paymentMethod, prefCurrency, notificationReqdInd, balance, availBalance), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 160
  testRunner.And(string.Format("In TRS00507 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}" +
                        "\" \"{17}\"", sellAll01, units01, sellAll02, units02, sellAll03, units03, sellAll04, units04, sellAll05, units05, sellAll06, units06, sellAll07, units07, sellAll08, units08, sellAll09, units09), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 161
  testRunner.And(string.Format("In TRS00511 I Add Postal Transaction Entry details as \"{0}\" \"{1}\"", durationType, estMarketValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 162
  testRunner.And(string.Format("In TRS00513 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\"", cover01, cover02, cover03, cover04, cover05, cover06, cover07, cover08, cover09, cover10, cover11, cover12, cover13, cover14, cover15), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 163
  testRunner.And(string.Format("In TRS00504 I Verify Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" " +
                        "\"{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\"", unitsSell, estMarketValue, marketValue, purchResidueAmt, federalTaxWithheld, loanAmt, chargeAmount1, chargeAmount2, chargeAmount3, totalGst, estimatedProceeds), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
  testRunner.And(string.Format("In TRS00512 I Add Postal Transaction Entry details as \"{0}\" \"{1}\"", overrideEmailInd, emailAddress), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 165
  testRunner.And(string.Format("In TRS00503 I Add Postal Transaction Entry details as \"{0}\" \"{1}\"", confirmUnits, confirmWarningFlag5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 166
  testRunner.And(string.Format("In TRD00401 I Change Order Status to \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\"", menuSelection, confirmStatus, tradeDate, tradeTimeHH, tradeTimeMM, settlementDate, finalPrice), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 167
 testRunner.Then(string.Format("In TRD004CS I Verify Change Order Status details1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\" \"{18}\"", unitsTraded, totalCost, finalPrice, tradePrice, priceATAudit, grossAmount, purchaseResidue, holderCharges1, loanAmount, optionCost, gst, taxWithheld, nettAmount, chargeAmount01, chargeAmount02, chargeAmount03, chargeAmount04, chargeAmount05, chargeAmount06), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 168
  testRunner.And(string.Format("In TRD004CS I Verify Change Order Status details2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\" \"{18}\"", localChqCount, localChqNettAmount, foreignChqCount, foreignChqNettAmt, wireCount, wireNettAmount, directBankingCount, directBankNettAmt, employerCount, employerNettAmount, companyCharges, companyTax, holderCharges, holderTax, reportCharges, reportTax, bankType, branchNumber, accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 169
 testRunner.When(string.Format("In TRD00101 I Run the Generate Output Job as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" " +
                        "\"{6}\" \"{7}\" \"{8}\" \"{9}\"", paymentAccount1, orderNO, ident, classCode, nbrTrades, tradeGrossAmount, tradeFrom, tradeTO, settlementFrom, settlementTO), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria",
                        "PassCriteriaLNX",
                        "FailCriteriaLNX"});
            table4.AddRow(new string[] {
                        "completion",
                        "240",
                        "error",
                        "DONE",
                        "EXIT"});
#line 170
  testRunner.And("I wait for  GenerateOutput job to complete", ((string)(null)), table4, "And ");
#line 173
  testRunner.And(string.Format("In TRD00401 I Force Settle the Order as \"{0}\" \"{1}\"", menuSelection1, confirmStatus1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 174
 testRunner.Then(string.Format("In TRS01010 I Verify Transaction Enquiry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        " \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\"", tradingID, status, price, classCode, transCount, transTotal, moneyTotal, settlementDate, applyTaxInd, paymentMethod, paymentMethodDesc, currency, sellUnits, orderType, tradeUnits, tradeMoney), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 175
  testRunner.And(string.Format("In TRDSCH02 I Verify Transaction Enquiry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        " \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" " +
                        "\"{17}\" \"{18}\"", tradingID, bulkType, bulkTypeDesc, statusDesc, totalCount, orderTransUnits, totalMoney, tradeDate, reqdSettlementDate, actualSettlementDate, finalPrice, reconciliationCode, cshtrnReference, minimumDeal, maximumDeal, cutOffTime, counterpartyClass, counterRegisterCode, orderType1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 176
  testRunner.And(string.Format("In TRDSCHCS I Verify Transaction Enquiry details1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\"", unitsTraded, totalCost, finalPrice, priceATAudit, grossAmount, purchaseResidue, holderCharges1, loanAmount, optionCost, gst, taxWithheld, nettAmount, chargeAmount01, chargeAmount02, chargeAmount03, chargeAmount04, chargeAmount05, chargeAmount06), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 177
  testRunner.And(string.Format("In TRDSCHCS I Verify Transaction Enquiry details2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\" \"{18}\"", localChqCount, localChqNettAmount, foreignChqCount, foreignChqNettAmt, wireCount, wireNettAmount, directBankingCount, directBankNettAmt, employerCount, employerNettAmount, companyCharges, companyTax, holderCharges, holderTax, reportCharges, reportTax, bankType, branchNumber, accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 178
  testRunner.And("I go the Main Menu From Trading System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 180
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 181
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table5.AddRow(new string[] {
                        "Action",
                        "TH"});
            table5.AddRow(new string[] {
                        "Locate Argument",
                        "/ELA"});
#line 182
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table5, "And ");
#line 186
 testRunner.Then(string.Format("In ENSTRD48 I should see trading history summary as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        "", line1, line2, line3, line4, line5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 187
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 188
  testRunner.And(string.Format("In ENSTRDSH I Verify Trade History details1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"{17}" +
                        "\"", totalUnits, unitsSell, finalPrice, grossAmount, purchaseResidue, loanAmount, optionCost, gst, taxWithheld, nettAmount, chargeAmount01, chargeAmount02, chargeAmount03, chargeAmount04, chargeAmount05, chargeAmount06, paymentDate, paymentAccount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 189
  testRunner.And(string.Format("In ENSTRDSH I Verify Trade History details2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"{17}" +
                        "\"", prefCurrency, currencyDesc, paymentMethod1, holderCharges, holderTax, companyCharges, companyTax, reportCharges, reportTax, totalCharges, gstTaxTotal, bankCode, payeeAccountNumber, accountName, remainingBalance, remBalIndDesc, transfereeHolder, transfereeClass), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 31035: Rights Real Time Sale")]
        [NUnit.Framework.CategoryAttribute("TS_TradingSystem")]
        [NUnit.Framework.CategoryAttribute("RightsPlanSales")]
        [NUnit.Framework.CategoryAttribute("31035")]
        [NUnit.Framework.TestCaseAttribute("ExerciseAll_Test1", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036536357", "Y", "", "", "", "", "", "", "", "", "", "", "", "A", "", "C", "AUD", "N", "4000.000000", "3900.000000", "1", "30.00", "900.000000", "900.000000", "27000.00", "", "", "", "", "81.00", "100.00", "15.00", "18.10", "26785.90", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "900.000000", "900.000000", "27000.00", "30.000000", "30.000000", "30.000000", "27000.00", "", "196.00", "", "18.10", "", "26785.90", "81.00", "100.00", "", "", "15.00", "", "1", "26785.90", "", "", "", "", "", "", "", "", "", "", "196.00", "18.10", "", "", "", "", "", "", "TSSAL", "RGT1", "NDF", "PRS", "1", "900.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "900.000000", "26785.90", "Y", "Cheque Loc", "AUD", "900.000000", "Sell All", "S", "SALE", "Settled", "1", "900.000000", "26785.90", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "AUSTRALIAN DOLLAR", "Cheque/Unpres", "196.00", "18.10", "R", "R", "TH", "/PRS", "", "", "", "", "", "", "", "RPRS", "900.000000", "26785.90", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseAll_WHT_Test2", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036535512", "", "", "", "Y", "", "", "", "", "", "", "", "", "A", "", "C", "AUD", "N", "4000.000000", "3900.000000", "1", "30.00", "1000.000000", "1000.000000", "30000.00", "", "15552.00", "", "", "90.00", "100.00", "15.00", "19.00", "14224.00", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "1000.000000", "1000.000000", "30000.00", "30.000000", "30.000000", "30.000000", "30000.00", "", "205.00", "", "19.00", "15552.00", "14224.00", "90.00", "100.00", "", "", "15.00", "", "1", "14224.00", "", "", "", "", "", "", "", "", "", "", "205.00", "19.00", "", "", "", "", "", "", "TSSAL", "RGT2", "NDF", "PRS", "1", "1000.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "1000.000000", "14224.00", "Y", "Cheque Loc", "AUD", "1000.000000", "Sell All", "S", "SALE", "Settled", "1", "1000.000000", "14224.00", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "AUSTRALIAN DOLLAR", "Cheque/Unpres", "205.00", "19.00", "R", "R", "TH", "/PRS", "", "", "", "", "", "", "", "RPRS", "1000.000000", "14224.00", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseSelected_Test3", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036535521", "", "699", "", "", "", "", "", "", "", "", "", "", "A", "", "E", "", "N", "4000.000000", "3900.000000", "1", "30.00", "699.000000", "699.000000", "20970.00", "", "", "", "", "62.91", "100.00", "", "16.29", "20790.80", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "699.000000", "699.000000", "20970.00", "30.000000", "30.000000", "30.000000", "20970.00", "", "162.91", "", "16.29", "", "20790.80", "62.91", "100.00", "", "", "", "", "", "", "", "", "", "", "", "", "1", "20790.80", "", "", "162.91", "16.29", "", "", "", "", "", "", "TSSAL", "RGT3", "NDF", "PRS", "1", "699.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "699.000000", "20790.80", "Y", "Employer", "AUD", "699.000000", "Sell Specific", "S", "SALE", "Settled", "1", "699.000000", "20790.80", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "AUSTRALIAN DOLLAR", "Employer", "162.91", "16.29", "R", "R", "TH", "/PRS", "", "", "", "", "", "", "", "RPRS", "699.000000", "20790.80", null)]
        [NUnit.Framework.TestCaseAttribute("ExercisePartial_WHT_Test6", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036535873", "", "900", "899", "", "", "", "", "", "", "", "", "", "P", "C", "C", "USD", "N", "4000.000000", "3900.000000", "1", "30.00", "900.000000", "899.000000", "26970.00", "", "13996.80", "", "", "80.91", "100.00", "40.00", "18.09", "12734.20", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "900.000000", "899.000000", "26970.00", "30.000000", "30.000000", "30.000000", "26970.00", "", "220.91", "", "18.09", "13996.80", "12734.20", "80.91", "100.00", "", "", "", "40.00", "", "", "1", "12734.20", "", "", "", "", "", "", "", "", "220.91", "18.09", "", "", "", "", "", "", "TSSAL", "RGT6", "NDF", "PRS", "1", "900.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "900.000000", "12734.20", "Y", "Cheque For", "USD", "899.000000", "Sell Partial", "S", "SALE", "Settled", "1", "900.000000", "12734.20", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "US DOLLAR", "Foreign/Unpres", "220.91", "18.09", "R", "R", "TH", "/PRS", "", "", "", "1.000000", "Issuer", "I0036535873", "ORD", "RPRS", "900.000000", "12734.20", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_Test7", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036535555", "Y", "", "", "", "", "", "", "", "", "", "", "", "C", "C", "W", "", "N", "4000.000000", "3900.000000", "1", "30.00", "900.000000", "5.000000", "150.00", "", "", "", "", ".45", "100.00", "10.00", "10.05", "29.50", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "900.000000", "5.000000", "150.00", "30.000000", "30.000000", "30.000000", "150.00", "", "110.45", "", "10.05", "", "29.50", ".45", "100.00", "10.00", "", "", "", "", "", "", "", "1", "29.50", "", "", "", "", "", "", "110.45", "10.05", "", "", "", "", "", "", "TSSAL", "RGT7", "NDF", "PRS", "1", "900.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "900.000000", "29.50", "Y", "Wire", "NZD", "5.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "900.000000", "29.50", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "NEW ZEALAND DOLLAR", "Wire", "110.45", "10.05", "R", "R", "TH", "/PRS", "", "", "", "895.000000", "Issuer", "I0036535555", "ORD", "RPRS", "900.000000", "29.50", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_WHT_Test8", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036535661", "", "", "", "", "899", "", "", "", "", "", "", "", "C", "C", "W", "", "N", "4000.000000", "3900.000000", "1", "30.00", "899.000000", "472.000000", "14160.00", "", "13981.24", "", "", "42.48", "100.00", "10.00", "14.25", "12.03", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "899.000000", "472.000000", "14160.00", "30.000000", "30.000000", "30.000000", "14160.00", "", "152.48", "", "14.25", "13981.24", "12.03", "42.48", "100.00", "10.00", "", "", "", "", "", "", "", "1", "12.03", "", "", "", "", "", "", "152.48", "14.25", "", "", "", "", "", "", "TSSAL", "RGT8", "NDF", "PRS", "1", "899.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "899.000000", "12.03", "Y", "Wire", "NZD", "472.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "899.000000", "12.03", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "NEW ZEALAND DOLLAR", "Wire", "152.48", "14.25", "R", "R", "TH", "/PRS", "", "", "", "427.000000", "Issuer", "I0036535661", "ORD", "RPRS", "899.000000", "12.03", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_TopUp_Test9", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "2.00", "", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036535997", "Y", "", "", "", "", "", "", "", "", "", "", "", "C", "C", "W", "", "N", "4000.000000", "3900.000000", "1", "30.00", "900.000000", "7.000000", "210.00", "", "", "", "", ".63", "100.00", "10.00", "10.06", "89.31", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "900.000000", "7.000000", "210.00", "30.000000", "30.000000", "30.000000", "210.00", "", "110.63", "", "10.06", "", "89.31", ".63", "100.00", "10.00", "", "", "", "", "", "", "", "1", "89.31", "", "", "", "", "", "", "110.63", "10.06", "", "", "", "", "", "", "TSSAL", "RGT9", "NDF", "PRS", "1", "900.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "900.000000", "89.31", "Y", "Wire", "NZD", "7.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "900.000000", "89.31", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "NEW ZEALAND DOLLAR", "Wire", "110.63", "10.06", "R", "R", "TH", "/PRS", "", "", "", "893.000000", "Issuer", "I0036535997", "ORD", "RPRS", "900.000000", "89.31", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_WHT_TopUp_Test10", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "2.00", "", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036536128", "", "", "", "", "899", "", "", "", "", "", "", "", "C", "C", "W", "", "N", "4000.000000", "3900.000000", "1", "30.00", "899.000000", "482.000000", "14460.00", "", "13981.24", "", "", "43.38", "100.00", "10.00", "14.34", "311.04", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "899.000000", "482.000000", "14460.00", "30.000000", "30.000000", "30.000000", "14460.00", "", "153.38", "", "14.34", "13981.24", "311.04", "43.38", "100.00", "10.00", "", "", "", "", "", "", "", "1", "311.04", "", "", "", "", "", "", "153.38", "14.34", "", "", "", "", "", "", "TSSAL", "RG10", "NDF", "PRS", "1", "899.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "899.000000", "311.04", "Y", "Wire", "NZD", "482.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "899.000000", "311.04", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "NEW ZEALAND DOLLAR", "Wire", "153.38", "14.34", "R", "R", "TH", "/PRS", "", "", "", "417.000000", "Issuer", "I0036536128", "ORD", "RPRS", "899.000000", "311.04", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseAll_Test11", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "Y", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036535962", "", "", "", "", "", "", "", "", "", "", "", "", "A", "", "C", "AUD", "N", "4000.000000", "3900.000000", "1", "30.00", "3900.000000", "3900.000000", "117000.00", "", "", "", "", "351.00", "100.00", "15.00", "45.10", "116488.90", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "3900.000000", "3900.000000", "117000.00", "30.000000", "30.000000", "30.000000", "117000.00", "", "466.00", "", "45.10", "", "116488.90", "351.00", "100.00", "", "", "15.00", "", "1", "116488.90", "", "", "", "", "", "", "", "", "", "", "466.00", "45.10", "", "", "", "", "", "", "TSSAL", "RG11", "NDF", "PRS", "1", "3900.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "3900.000000", "116488.90", "Y", "Cheque Loc", "AUD", "3900.000000", "Sell All", "S", "SALE", "Settled", "1", "3900.000000", "116488.90", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "AUSTRALIAN DOLLAR", "Cheque/Unpres", "466.00", "45.10", "R", "R", "TH", "/PRS", "", "", "", "", "", "", "", "RPRS", "3900.000000", "116488.90", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseAll_WHT_Test12", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "Y", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036535865", "", "", "", "", "", "", "", "", "", "", "", "", "A", "", "C", "AUD", "N", "4000.000000", "3900.000000", "1", "30.00", "3900.000000", "3900.000000", "117000.00", "", "60652.80", "", "", "351.00", "100.00", "15.00", "45.10", "55836.10", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "3900.000000", "3900.000000", "117000.00", "30.000000", "30.000000", "30.000000", "117000.00", "", "466.00", "", "45.10", "60652.80", "55836.10", "351.00", "100.00", "", "", "15.00", "", "1", "55836.10", "", "", "", "", "", "", "", "", "", "", "466.00", "45.10", "", "", "", "", "", "", "TSSAL", "RG12", "NDF", "PRS", "1", "3900.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "3900.000000", "55836.10", "Y", "Cheque Loc", "AUD", "3900.000000", "Sell All", "S", "SALE", "Settled", "1", "3900.000000", "55836.10", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "AUSTRALIAN DOLLAR", "Cheque/Unpres", "466.00", "45.10", "R", "R", "TH", "/PRS", "", "", "", "", "", "", "", "RPRS", "3900.000000", "55836.10", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseSelected_Test13", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "Y", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036536055", "", "", "", "", "", "", "Y", "", "", "", "99", "", "S", "", "E", "", "N", "4000.000000", "3900.000000", "1", "30.00", "1099.000000", "1099.000000", "32970.00", "", "", "", "", "98.91", "100.00", "", "19.89", "32751.20", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "1099.000000", "1099.000000", "32970.00", "30.000000", "30.000000", "30.000000", "32970.00", "", "198.91", "", "19.89", "", "32751.20", "98.91", "100.00", "", "", "", "", "", "", "", "", "", "", "", "", "1", "32751.20", "", "", "198.91", "19.89", "", "", "", "", "", "", "TSSAL", "RG13", "NDF", "PRS", "1", "1099.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "1099.000000", "32751.20", "Y", "Employer", "AUD", "1099.000000", "Sell Specific", "S", "SALE", "Settled", "1", "1099.000000", "32751.20", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "AUSTRALIAN DOLLAR", "Employer", "198.91", "19.89", "R", "R", "TH", "/PRS", "", "", "", "", "", "", "", "RPRS", "1099.000000", "32751.20", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseSelected_WHT_Test14", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "Y", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036535989", "Y", "", "", "", "999", "", "", "899", "", "", "1", "", "S", "", "E", "", "N", "4000.000000", "3900.000000", "1", "30.00", "2799.000000", "2799.000000", "83970.00", "", "43530.03", "", "", "251.91", "100.00", "", "35.19", "40052.87", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "2799.000000", "2799.000000", "83970.00", "30.000000", "30.000000", "30.000000", "83970.00", "", "351.91", "", "35.19", "43530.03", "40052.87", "251.91", "100.00", "", "", "", "", "", "", "", "", "", "", "", "", "1", "40052.87", "", "", "351.91", "35.19", "", "", "", "", "", "", "TSSAL", "RG14", "NDF", "PRS", "1", "2799.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "2799.000000", "40052.87", "Y", "Employer", "AUD", "2799.000000", "Sell Specific", "S", "SALE", "Settled", "1", "2799.000000", "40052.87", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "AUSTRALIAN DOLLAR", "Employer", "351.91", "35.19", "R", "R", "TH", "/PRS", "", "", "", "", "", "", "", "RPRS", "2799.000000", "40052.87", null)]
        [NUnit.Framework.TestCaseAttribute("ExercisePartial_Test15", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "Y", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036535784", "Y", "", "", "", "900", "799", "", "800", "601", "", "1", "", "P", "C", "C", "USD", "N", "4000.000000", "3900.000000", "1", "30.00", "2601.000000", "2300.000000", "69000.00", "", "", "", "", "207.00", "100.00", "40.00", "30.70", "68622.30", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "2601.000000", "2300.000000", "69000.00", "30.000000", "30.000000", "30.000000", "69000.00", "", "347.00", "", "30.70", "", "68622.30", "207.00", "100.00", "", "", "", "40.00", "", "", "1", "68622.30", "", "", "", "", "", "", "", "", "347.00", "30.70", "", "", "", "", "", "", "TSSAL", "RG15", "NDF", "PRS", "1", "2601.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "2601.000000", "68622.30", "Y", "Cheque For", "USD", "2300.000000", "Sell Partial", "S", "SALE", "Settled", "1", "2601.000000", "68622.30", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "US DOLLAR", "Foreign/Unpres", "347.00", "30.70", "R", "R", "TH", "/PRS", "", "", "", "301.000000", "Issuer", "I0036535784", "ORD", "RPRS", "2601.000000", "68622.30", null)]
        [NUnit.Framework.TestCaseAttribute("ExercisePartial_WHT_Test16", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "Y", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036536004", "", "900", "899", "", "1000", "999", "", "800", "799", "", "700", "699", "P", "C", "C", "USD", "N", "4000.000000", "3900.000000", "1", "30.00", "3400.000000", "3396.000000", "101880.00", "", "52876.80", "", "", "305.64", "100.00", "40.00", "40.56", "48517.00", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "3400.000000", "3396.000000", "101880.00", "30.000000", "30.000000", "30.000000", "101880.00", "", "445.64", "", "40.56", "52876.80", "48517.00", "305.64", "100.00", "", "", "", "40.00", "", "", "1", "48517.00", "", "", "", "", "", "", "", "", "445.64", "40.56", "", "", "", "", "", "", "TSSAL", "RG16", "NDF", "PRS", "1", "3400.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "3400.000000", "48517.00", "Y", "Cheque For", "USD", "3396.000000", "Sell Partial", "S", "SALE", "Settled", "1", "3400.000000", "48517.00", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "US DOLLAR", "Foreign/Unpres", "445.64", "40.56", "R", "R", "TH", "/PRS", "", "", "", "4.000000", "Issuer", "I0036536004", "ORD", "RPRS", "3400.000000", "48517.00", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_Test17", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "Y", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036535750", "Y", "", "", "", "1", "", "", "1", "", "", "1", "", "C", "C", "W", "", "N", "4000.000000", "3900.000000", "1", "30.00", "903.000000", "5.000000", "150.00", "", "", "", "", ".45", "100.00", "10.00", "10.05", "29.50", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "903.000000", "5.000000", "150.00", "30.000000", "30.000000", "30.000000", "150.00", "", "110.45", "", "10.05", "", "29.50", ".45", "100.00", "10.00", "", "", "", "", "", "", "", "1", "29.50", "", "", "", "", "", "", "110.45", "10.05", "", "", "", "", "", "", "TSSAL", "RG17", "NDF", "PRS", "1", "903.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "903.000000", "29.50", "Y", "Wire", "GBP", "5.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "903.000000", "29.50", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "BRITISH POUND", "Wire", "110.45", "10.05", "R", "R", "TH", "/PRS", "", "", "", "898.000000", "Issuer", "I0036535750", "ORD", "RPRS", "903.000000", "29.50", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_WHT_Test18", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "Y", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036535539", "Y", "", "", "Y", "", "", "", "499", "", "", "199", "", "C", "C", "W", "", "N", "4000.000000", "3900.000000", "1", "30.00", "2598.000000", "1356.000000", "40680.00", "", "40404.08", "", "", "122.04", "100.00", "10.00", "22.20", "21.68", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "2598.000000", "1356.000000", "40680.00", "30.000000", "30.000000", "30.000000", "40680.00", "", "232.04", "", "22.20", "40404.08", "21.68", "122.04", "100.00", "10.00", "", "", "", "", "", "", "", "1", "21.68", "", "", "", "", "", "", "232.04", "22.20", "", "", "", "", "", "", "TSSAL", "RG18", "NDF", "PRS", "1", "2598.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "2598.000000", "21.68", "Y", "Wire", "GBP", "1356.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "2598.000000", "21.68", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "BRITISH POUND", "Wire", "232.04", "22.20", "R", "R", "TH", "/PRS", "", "", "", "1242.000000", "Issuer", "I0036535539", "ORD", "RPRS", "2598.000000", "21.68", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_TopUp_Test19", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "2.00", "Y", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036535431", "Y", "", "", "", "1", "", "", "1", "", "", "1", "", "C", "C", "W", "", "N", "4000.000000", "3900.000000", "1", "30.00", "903.000000", "7.000000", "210.00", "", "", "", "", ".63", "100.00", "10.00", "10.06", "89.31", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "903.000000", "7.000000", "210.00", "30.000000", "30.000000", "30.000000", "210.00", "", "110.63", "", "10.06", "", "89.31", ".63", "100.00", "10.00", "", "", "", "", "", "", "", "1", "89.31", "", "", "", "", "", "", "110.63", "10.06", "", "", "", "", "", "", "TSSAL", "RG19", "NDF", "PRS", "1", "903.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "903.000000", "89.31", "Y", "Wire", "GBP", "7.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "903.000000", "89.31", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "BRITISH POUND", "Wire", "110.63", "10.06", "R", "R", "TH", "/PRS", "", "", "", "896.000000", "Issuer", "I0036535431", "ORD", "RPRS", "903.000000", "89.31", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_WHT_TopUp_Test20", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "2.00", "Y", "C", "ESOXR", "ORD", "VIC", "123451234", "", "I0036536527", "Y", "", "", "Y", "", "", "", "499", "", "", "199", "", "C", "C", "W", "", "N", "4000.000000", "3900.000000", "1", "30.00", "2598.000000", "1386.000000", "41580.00", "", "40404.08", "", "", "124.74", "100.00", "10.00", "22.47", "918.71", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "2598.000000", "1386.000000", "41580.00", "30.000000", "30.000000", "30.000000", "41580.00", "", "234.74", "", "22.47", "40404.08", "918.71", "124.74", "100.00", "10.00", "", "", "", "", "", "", "", "1", "918.71", "", "", "", "", "", "", "234.74", "22.47", "", "", "", "", "", "", "TSSAL", "RG20", "NDF", "PRS", "1", "2598.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "2598.000000", "918.71", "Y", "Wire", "GBP", "1386.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "2598.000000", "918.71", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "BRITISH POUND", "Wire", "234.74", "22.47", "R", "R", "TH", "/PRS", "", "", "", "1212.000000", "Issuer", "I0036536527", "ORD", "RPRS", "2598.000000", "918.71", null)]
        [NUnit.Framework.TestCaseAttribute("ExercisePartial_Test21", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "", "V", "ESOXR", "", "", "123451234", "", "I0036535652", "", "", "", "", "", "", "", "", "", "", "1000", "899", "P", "V", "C", "USD", "N", "4000.000000", "3900.000000", "1", "30.00", "1000.000000", "899.000000", "26970.00", "", "", "", "", "80.91", "100.00", "40.00", "18.09", "26731.00", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "1000.000000", "899.000000", "26970.00", "30.000000", "30.000000", "30.000000", "26970.00", "", "220.91", "", "18.09", "", "26731.00", "80.91", "100.00", "", "", "", "40.00", "", "", "1", "26731.00", "", "", "", "", "", "", "", "", "220.91", "18.09", "", "", "", "", "", "", "TSSAL", "RGT5", "NDF", "PRS", "1", "1000.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "1000.000000", "26731.00", "Y", "Cheque For", "USD", "899.000000", "Sell Partial", "S", "SALE", "Settled", "1", "1000.000000", "26731.00", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "US DOLLAR", "Foreign/Unpres", "220.91", "18.09", "R", "R", "TH", "/PRS", "", "", "", "101.000000", "Transfer to VSA", "I0036535652", "ESO", "RPRS", "1000.000000", "26731.00", null)]
        [NUnit.Framework.TestCaseAttribute("ExercisePartial_WHT_Test22", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "", "V", "ESOXR", "", "", "123451234", "", "I0036536322", "", "900", "899", "", "", "", "", "", "", "", "", "", "P", "V", "C", "USD", "N", "4000.000000", "3900.000000", "1", "30.00", "900.000000", "899.000000", "26970.00", "", "13996.80", "", "", "80.91", "100.00", "40.00", "18.09", "12734.20", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "900.000000", "899.000000", "26970.00", "30.000000", "30.000000", "30.000000", "26970.00", "", "220.91", "", "18.09", "13996.80", "12734.20", "80.91", "100.00", "", "", "", "40.00", "", "", "1", "12734.20", "", "", "", "", "", "", "", "", "220.91", "18.09", "", "", "", "", "", "", "TSSAL", "RGT6", "NDF", "PRS", "1", "900.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "900.000000", "12734.20", "Y", "Cheque For", "USD", "899.000000", "Sell Partial", "S", "SALE", "Settled", "1", "900.000000", "12734.20", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "US DOLLAR", "Foreign/Unpres", "220.91", "18.09", "R", "R", "TH", "/PRS", "", "", "", "1.000000", "Transfer to VSA", "I0036536322", "ESO", "RPRS", "900.000000", "12734.20", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_Test23", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "", "V", "ESOXR", "", "", "123451234", "", "I0036536438", "Y", "", "", "", "", "", "", "", "", "", "", "", "C", "V", "W", "", "N", "4000.000000", "3900.000000", "1", "30.00", "900.000000", "5.000000", "150.00", "", "", "", "", ".45", "100.00", "10.00", "10.05", "29.50", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "900.000000", "5.000000", "150.00", "30.000000", "30.000000", "30.000000", "150.00", "", "110.45", "", "10.05", "", "29.50", ".45", "100.00", "10.00", "", "", "", "", "", "", "", "1", "29.50", "", "", "", "", "", "", "110.45", "10.05", "", "", "", "", "", "", "TSSAL", "RGT7", "NDF", "PRS", "1", "900.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "900.000000", "29.50", "Y", "Wire", "NZD", "5.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "900.000000", "29.50", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "NEW ZEALAND DOLLAR", "Wire", "110.45", "10.05", "R", "R", "TH", "/PRS", "", "", "", "895.000000", "Transfer to VSA", "I0036536438", "ESO", "RPRS", "900.000000", "29.50", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_WHT_Test24", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "", "V", "ESOXR", "", "", "123451234", "", "I0036535644", "", "", "", "", "899", "", "", "", "", "", "", "", "C", "V", "W", "", "N", "4000.000000", "3900.000000", "1", "30.00", "899.000000", "472.000000", "14160.00", "", "13981.24", "", "", "42.48", "100.00", "10.00", "14.25", "12.03", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "899.000000", "472.000000", "14160.00", "30.000000", "30.000000", "30.000000", "14160.00", "", "152.48", "", "14.25", "13981.24", "12.03", "42.48", "100.00", "10.00", "", "", "", "", "", "", "", "1", "12.03", "", "", "", "", "", "", "152.48", "14.25", "", "", "", "", "", "", "TSSAL", "RGT8", "NDF", "PRS", "1", "899.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "899.000000", "12.03", "Y", "Wire", "NZD", "472.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "899.000000", "12.03", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "NEW ZEALAND DOLLAR", "Wire", "152.48", "14.25", "R", "R", "TH", "/PRS", "", "", "", "427.000000", "Transfer to VSA", "I0036535644", "ESO", "RPRS", "899.000000", "12.03", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_TopUp_Test25", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "2.00", "", "V", "ESOXR", "", "", "123451234", "", "I0036536039", "Y", "", "", "", "", "", "", "", "", "", "", "", "C", "V", "W", "", "N", "4000.000000", "3900.000000", "1", "30.00", "900.000000", "7.000000", "210.00", "", "", "", "", ".63", "100.00", "10.00", "10.06", "89.31", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "900.000000", "7.000000", "210.00", "30.000000", "30.000000", "30.000000", "210.00", "", "110.63", "", "10.06", "", "89.31", ".63", "100.00", "10.00", "", "", "", "", "", "", "", "1", "89.31", "", "", "", "", "", "", "110.63", "10.06", "", "", "", "", "", "", "TSSAL", "RGT9", "NDF", "PRS", "1", "900.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "900.000000", "89.31", "Y", "Wire", "NZD", "7.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "900.000000", "89.31", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "NEW ZEALAND DOLLAR", "Wire", "110.63", "10.06", "R", "R", "TH", "/PRS", "", "", "", "893.000000", "Transfer to VSA", "I0036536039", "ESO", "RPRS", "900.000000", "89.31", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_WHT_TopUp_Test26", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "2.00", "", "V", "ESOXR", "", "", "123451234", "", "I0036535920", "", "", "", "", "899", "", "", "", "", "", "", "", "C", "V", "W", "", "N", "4000.000000", "3900.000000", "1", "30.00", "899.000000", "482.000000", "14460.00", "", "13981.24", "", "", "43.38", "100.00", "10.00", "14.34", "311.04", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "899.000000", "482.000000", "14460.00", "30.000000", "30.000000", "30.000000", "14460.00", "", "153.38", "", "14.34", "13981.24", "311.04", "43.38", "100.00", "10.00", "", "", "", "", "", "", "", "1", "311.04", "", "", "", "", "", "", "153.38", "14.34", "", "", "", "", "", "", "TSSAL", "RG10", "NDF", "PRS", "1", "899.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "899.000000", "311.04", "Y", "Wire", "NZD", "482.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "899.000000", "311.04", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "NEW ZEALAND DOLLAR", "Wire", "153.38", "14.34", "R", "R", "TH", "/PRS", "", "", "", "417.000000", "Transfer to VSA", "I0036535920", "ESO", "RPRS", "899.000000", "311.04", null)]
        [NUnit.Framework.TestCaseAttribute("ExercisePartial_Test27", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "Y", "V", "ESOXR", "", "", "123451234", "", "I0036535440", "Y", "", "", "", "900", "799", "", "800", "601", "", "1", "", "P", "V", "C", "USD", "N", "4000.000000", "3900.000000", "1", "30.00", "2601.000000", "2300.000000", "69000.00", "", "", "", "", "207.00", "100.00", "40.00", "30.70", "68622.30", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "2601.000000", "2300.000000", "69000.00", "30.000000", "30.000000", "30.000000", "69000.00", "", "347.00", "", "30.70", "", "68622.30", "207.00", "100.00", "", "", "", "40.00", "", "", "1", "68622.30", "", "", "", "", "", "", "", "", "347.00", "30.70", "", "", "", "", "", "", "TSSAL", "RG15", "NDF", "PRS", "1", "2601.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "2601.000000", "68622.30", "Y", "Cheque For", "USD", "2300.000000", "Sell Partial", "S", "SALE", "Settled", "1", "2601.000000", "68622.30", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "US DOLLAR", "Foreign/Unpres", "347.00", "30.70", "R", "R", "TH", "/PRS", "", "", "", "301.000000", "Transfer to VSA", "I0036535440", "ESO", "RPRS", "2601.000000", "68622.30", null)]
        [NUnit.Framework.TestCaseAttribute("ExercisePartial_WHT_Test28", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "Y", "V", "ESOXR", "", "", "123451234", "", "I0036536381", "", "900", "899", "", "1000", "999", "", "800", "799", "", "700", "699", "P", "V", "C", "USD", "N", "4000.000000", "3900.000000", "1", "30.00", "3400.000000", "3396.000000", "101880.00", "", "52876.80", "", "", "305.64", "100.00", "40.00", "40.56", "48517.00", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "3400.000000", "3396.000000", "101880.00", "30.000000", "30.000000", "30.000000", "101880.00", "", "445.64", "", "40.56", "52876.80", "48517.00", "305.64", "100.00", "", "", "", "40.00", "", "", "1", "48517.00", "", "", "", "", "", "", "", "", "445.64", "40.56", "", "", "", "", "", "", "TSSAL", "RG16", "NDF", "PRS", "1", "3400.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "3400.000000", "48517.00", "Y", "Cheque For", "USD", "3396.000000", "Sell Partial", "S", "SALE", "Settled", "1", "3400.000000", "48517.00", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "US DOLLAR", "Foreign/Unpres", "445.64", "40.56", "R", "R", "TH", "/PRS", "", "", "", "4.000000", "Transfer to VSA", "I0036536381", "ESO", "RPRS", "3400.000000", "48517.00", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_Test29", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "Y", "V", "ESOXR", "", "", "123451234", "", "I0036535415", "Y", "", "", "", "1", "", "", "1", "", "", "1", "", "C", "V", "W", "", "N", "4000.000000", "3900.000000", "1", "30.00", "903.000000", "5.000000", "150.00", "", "", "", "", ".45", "100.00", "10.00", "10.05", "29.50", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "903.000000", "5.000000", "150.00", "30.000000", "30.000000", "30.000000", "150.00", "", "110.45", "", "10.05", "", "29.50", ".45", "100.00", "10.00", "", "", "", "", "", "", "", "1", "29.50", "", "", "", "", "", "", "110.45", "10.05", "", "", "", "", "", "", "TSSAL", "RG17", "NDF", "PRS", "1", "903.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "903.000000", "29.50", "Y", "Wire", "GBP", "5.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "903.000000", "29.50", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "BRITISH POUND", "Wire", "110.45", "10.05", "R", "R", "TH", "/PRS", "", "", "", "898.000000", "Transfer to VSA", "I0036535415", "ESO", "RPRS", "903.000000", "29.50", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_WHT_Test30", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "0.00", "Y", "V", "ESOXR", "", "", "123451234", "", "I0036535717", "Y", "", "", "Y", "", "", "", "499", "", "", "199", "", "C", "V", "W", "", "N", "4000.000000", "3900.000000", "1", "30.00", "2598.000000", "1356.000000", "40680.00", "", "40404.08", "", "", "122.04", "100.00", "10.00", "22.20", "21.68", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "2598.000000", "1356.000000", "40680.00", "30.000000", "30.000000", "30.000000", "40680.00", "", "232.04", "", "22.20", "40404.08", "21.68", "122.04", "100.00", "10.00", "", "", "", "", "", "", "", "1", "21.68", "", "", "", "", "", "", "232.04", "22.20", "", "", "", "", "", "", "TSSAL", "RG18", "NDF", "PRS", "1", "2598.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "2598.000000", "21.68", "Y", "Wire", "GBP", "1356.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "2598.000000", "21.68", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "BRITISH POUND", "Wire", "232.04", "22.20", "R", "R", "TH", "/PRS", "", "", "", "1242.000000", "Transfer to VSA", "I0036535717", "ESO", "RPRS", "2598.000000", "21.68", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_TopUp_Test31", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "2.00", "Y", "V", "ESOXR", "", "", "123451234", "", "I0036535741", "Y", "", "", "", "1", "", "", "1", "", "", "1", "", "C", "V", "W", "", "N", "4000.000000", "3900.000000", "1", "30.00", "903.000000", "7.000000", "210.00", "", "", "", "", ".63", "100.00", "10.00", "10.06", "89.31", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "903.000000", "7.000000", "210.00", "30.000000", "30.000000", "30.000000", "210.00", "", "110.63", "", "10.06", "", "89.31", ".63", "100.00", "10.00", "", "", "", "", "", "", "", "1", "89.31", "", "", "", "", "", "", "110.63", "10.06", "", "", "", "", "", "", "TSSAL", "RG19", "NDF", "PRS", "1", "903.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "903.000000", "89.31", "Y", "Wire", "GBP", "7.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "903.000000", "89.31", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "BRITISH POUND", "Wire", "110.63", "10.06", "R", "R", "TH", "/PRS", "", "", "", "896.000000", "Transfer to VSA", "I0036535741", "ESO", "RPRS", "903.000000", "89.31", null)]
        [NUnit.Framework.TestCaseAttribute("ExerciseToCover_WHT_TopUp_Test32", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "Y", "2.00", "Y", "V", "ESOXR", "", "", "123451234", "", "I0036536811", "Y", "", "", "Y", "", "", "", "499", "", "", "199", "", "C", "V", "W", "", "N", "4000.000000", "3900.000000", "1", "30.00", "2598.000000", "1386.000000", "41580.00", "", "40404.08", "", "", "124.74", "100.00", "10.00", "22.47", "918.71", "", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "2598.000000", "1386.000000", "41580.00", "30.000000", "30.000000", "30.000000", "41580.00", "", "234.74", "", "22.47", "40404.08", "918.71", "124.74", "100.00", "10.00", "", "", "", "", "", "", "", "1", "918.71", "", "", "", "", "", "", "234.74", "22.47", "", "", "", "", "", "", "TSSAL", "RG20", "NDF", "PRS", "1", "2598.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "2598.000000", "918.71", "Y", "Wire", "GBP", "1386.000000", "Sell to Cover", "S", "SALE", "Settled", "1", "2598.000000", "918.71", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "", "", "", "", "", "01", "", "20/08/2015", "BRITISH POUND", "Wire", "234.74", "22.47", "R", "R", "TH", "/PRS", "", "", "", "1212.000000", "Transfer to VSA", "I0036536811", "ESO", "RPRS", "2598.000000", "918.71", null)]
        public virtual void TestCase31035RightsRealTimeSale(
                    string exerciseType, 
                    string cOY, 
                    string multi_Cert, 
                    string onMarketTrade, 
                    string brokerCode, 
                    string brokerAccountID, 
                    string connectionCode, 
                    string realTimeTrading, 
                    string topupPercentage, 
                    string sellSelected, 
                    string option, 
                    string tranType, 
                    string @class, 
                    string reg, 
                    string worldLinkNumber, 
                    string transNumber, 
                    string searchName, 
                    string sellAll01, 
                    string exerciseUnits01, 
                    string units01, 
                    string sellAll02, 
                    string exerciseUnits02, 
                    string units02, 
                    string sellAll03, 
                    string exerciseUnits03, 
                    string units03, 
                    string sellAll04, 
                    string exerciseUnits04, 
                    string units04, 
                    string sellOption, 
                    string remainingBalInd, 
                    string paymentMethod, 
                    string prefCurrency, 
                    string notificationReqdInd, 
                    string balance, 
                    string availBalance, 
                    string durationType, 
                    string estMarketValue, 
                    string unitsExercise, 
                    string unitsSell, 
                    string marketValue, 
                    string purchResidueAmt, 
                    string federalTaxWithheld, 
                    string optionCost, 
                    string loanAmt, 
                    string chargeAmount1, 
                    string chargeAmount2, 
                    string chargeAmount3, 
                    string totalGst, 
                    string estimatedProceeds, 
                    string confirmUnits, 
                    string confirmWarningFlag5, 
                    string menuSelection, 
                    string confirmStatus, 
                    string tradeDate, 
                    string tradeTimeHH, 
                    string tradeTimeMM, 
                    string settlementDate, 
                    string totalUnits, 
                    string unitsTraded, 
                    string totalCost, 
                    string finalPrice, 
                    string tradePrice, 
                    string priceATAudit, 
                    string grossAmount, 
                    string purchaseResidue, 
                    string holderCharges1, 
                    string loanAmount, 
                    string gst, 
                    string taxWithheld, 
                    string nettAmount, 
                    string chargeAmount01, 
                    string chargeAmount02, 
                    string chargeAmount03, 
                    string chargeAmount04, 
                    string chargeAmount05, 
                    string chargeAmount06, 
                    string localChqCount, 
                    string localChqNettAmount, 
                    string foreignChqCount, 
                    string foreignChqNettAmt, 
                    string wireCount, 
                    string wireNettAmount, 
                    string directBankingCount, 
                    string directBankNettAmt, 
                    string employerCount, 
                    string employerNettAmount, 
                    string companyCharges, 
                    string companyTax, 
                    string holderCharges, 
                    string holderTax, 
                    string reportCharges, 
                    string reportTax, 
                    string paymentAccount, 
                    string bankType, 
                    string branchNumber, 
                    string accountNumber, 
                    string paymentAccount1, 
                    string orderNO, 
                    string ident, 
                    string classCode, 
                    string nbrTrades, 
                    string tradeGrossAmount, 
                    string tradeFrom, 
                    string tradeTO, 
                    string settlementFrom, 
                    string settlementTO, 
                    string menuSelection1, 
                    string confirmStatus1, 
                    string tradingID, 
                    string status, 
                    string price, 
                    string transCount, 
                    string transTotal, 
                    string moneyTotal, 
                    string applyTaxInd, 
                    string paymentMethodDesc, 
                    string currency, 
                    string sellUnits, 
                    string orderType, 
                    string bulkType, 
                    string bulkTypeDesc, 
                    string statusDesc, 
                    string totalCount, 
                    string orderTransUnits, 
                    string totalMoney, 
                    string reqdSettlementDate, 
                    string actualSettlementDate, 
                    string reconciliationCode, 
                    string cshtrnReference, 
                    string minimumDeal, 
                    string maximumDeal, 
                    string cutOffTime, 
                    string counterpartyClass, 
                    string counterRegisterCode, 
                    string orderType1, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string action, 
                    string locateArgument, 
                    string paymentDate, 
                    string currencyDesc, 
                    string paymentMethod1, 
                    string totalCharges, 
                    string gstTaxTotal, 
                    string menuSelection2, 
                    string confirmStatus2, 
                    string action1, 
                    string locateArgument1, 
                    string bankCode, 
                    string payeeAccountNumber, 
                    string accountName, 
                    string remainingBalance, 
                    string remBalIndDesc, 
                    string transfereeHolder, 
                    string transfereeClass, 
                    string tradeControlCode, 
                    string tradeUnits, 
                    string transMoney, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TS_TradingSystem",
                    "RightsPlanSales",
                    "31035"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 31035: Rights Real Time Sale", @__tags);
#line 202
this.ScenarioSetup(scenarioInfo);
#line 203
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 204
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 205
  testRunner.And("I go to \"Company Options\" Control Code Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 206
  testRunner.And(string.Format("In HKS01516 I set the Multi-Cert Flag to \"{0}\"", multi_Cert), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 207
  testRunner.And("I go to \"Trading Control Codes\" Control Code Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 208
  testRunner.And(string.Format("In TRD24000 I select the Trade Control Code \"{0}\"", tradeControlCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 209
  testRunner.And(string.Format("In TRD24001 I perform a Change for On Market Trade \"{0}\", \"{1}\", \"{2}\", \"{3}\", \"{" +
                        "4}\" and Top Up \"{5}\", \"{6}\" and Remaining Balance Options \"{7}\", \"{8}\", \"{9}\", \"" +
                        "{10}\" and World Link Number \"{11}\"", onMarketTrade, brokerCode, brokerAccountID, connectionCode, realTimeTrading, topupPercentage, sellSelected, option, tranType, @class, reg, worldLinkNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 210
  testRunner.And(string.Format("I go to the Trading system Sales and trade control code \"{0}\"", tradeControlCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 211
  testRunner.And(string.Format("In TRS00701 I Add Postal Transaction Entry details as \"{0}\" \"{1}\"", transNumber, searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 213
 testRunner.When(string.Format("In TRS00702 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\"", sellOption, remainingBalInd, paymentMethod, prefCurrency, notificationReqdInd, balance, availBalance), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 214
  testRunner.And(string.Format("In TRS00707 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", sellAll01, exerciseUnits01, units01, sellAll02, exerciseUnits02, units02, sellAll03, exerciseUnits03, units03, sellAll04, exerciseUnits04, units04), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 215
  testRunner.And(string.Format("In TRS00511 I Add Postal Transaction Entry details as \"{0}\" \"{1}\"", durationType, estMarketValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 216
  testRunner.And(string.Format("In TRS00704 I Verify Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" " +
                        "\"{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", unitsExercise, unitsSell, estMarketValue, marketValue, purchResidueAmt, federalTaxWithheld, optionCost, chargeAmount1, chargeAmount2, chargeAmount3, totalGst, estimatedProceeds), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 217
  testRunner.And(string.Format("In TRS00703 I Add Postal Transaction Entry details as \"<ExerciseUnits>\" \"{0}\" \"{1" +
                        "}\"", confirmUnits, confirmWarningFlag5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 218
  testRunner.And(string.Format("In TRD00401 I Change Order Status to \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\"", menuSelection, confirmStatus, tradeDate, tradeTimeHH, tradeTimeMM, settlementDate, finalPrice), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 219
 testRunner.Then(string.Format("In TRD004CS I Verify Change Order Status details1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\" \"{18}\"", unitsTraded, totalCost, finalPrice, tradePrice, priceATAudit, grossAmount, purchaseResidue, holderCharges1, loanAmount, optionCost, gst, taxWithheld, nettAmount, chargeAmount01, chargeAmount02, chargeAmount03, chargeAmount04, chargeAmount05, chargeAmount06), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 220
  testRunner.And(string.Format("In TRD004CS I Verify Change Order Status details2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\" \"{18}\"", localChqCount, localChqNettAmount, foreignChqCount, foreignChqNettAmt, wireCount, wireNettAmount, directBankingCount, directBankNettAmt, employerCount, employerNettAmount, companyCharges, companyTax, holderCharges, holderTax, reportCharges, reportTax, bankType, branchNumber, accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 221
 testRunner.When(string.Format("In TRD00101 I Run the Generate Output Job as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" " +
                        "\"{6}\" \"{7}\" \"{8}\" \"{9}\"", paymentAccount1, orderNO, ident, classCode, nbrTrades, tradeGrossAmount, tradeFrom, tradeTO, settlementFrom, settlementTO), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria",
                        "PassCriteriaLNX",
                        "FailCriteriaLNX"});
            table6.AddRow(new string[] {
                        "completion",
                        "240",
                        "error",
                        "DONE",
                        "EXIT"});
#line 222
  testRunner.And("I wait for  GenerateOutput job to complete", ((string)(null)), table6, "And ");
#line 225
  testRunner.And(string.Format("In TRD00401 I Apply Exercise Transaction as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"" +
                        "{6}\"", menuSelection2, confirmStatus2, tradeDate, tradeTimeHH, tradeTimeMM, settlementDate, finalPrice), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 226
  testRunner.And(string.Format("In TRD00401 I Force Settle the Order as \"{0}\" \"{1}\"", menuSelection1, confirmStatus1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 227
 testRunner.Then(string.Format("In TRS01010 I Verify Transaction Enquiry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        " \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\"", tradingID, status, price, classCode, transCount, transTotal, moneyTotal, settlementDate, applyTaxInd, paymentMethod, paymentMethodDesc, currency, sellUnits, orderType, tradeUnits, transMoney), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 228
  testRunner.And(string.Format("In TRDSCH02 I Verify Transaction Enquiry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        " \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" " +
                        "\"{17}\" \"{18}\"", tradingID, bulkType, bulkTypeDesc, statusDesc, totalCount, orderTransUnits, totalMoney, tradeDate, reqdSettlementDate, actualSettlementDate, finalPrice, reconciliationCode, cshtrnReference, minimumDeal, maximumDeal, cutOffTime, counterpartyClass, counterRegisterCode, orderType1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 229
  testRunner.And(string.Format("In TRDSCHCS I Verify Transaction Enquiry details1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\"", unitsTraded, totalCost, finalPrice, priceATAudit, grossAmount, purchaseResidue, holderCharges1, loanAmount, optionCost, gst, taxWithheld, nettAmount, chargeAmount01, chargeAmount02, chargeAmount03, chargeAmount04, chargeAmount05, chargeAmount06), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 230
  testRunner.And(string.Format("In TRDSCHCS I Verify Transaction Enquiry details2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\" \"{18}\"", localChqCount, localChqNettAmount, foreignChqCount, foreignChqNettAmt, wireCount, wireNettAmount, directBankingCount, directBankNettAmt, employerCount, employerNettAmount, companyCharges, companyTax, holderCharges, holderTax, reportCharges, reportTax, bankType, branchNumber, accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 231
  testRunner.And("I go the Main Menu From Trading System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 233
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 234
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 235
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 236
 testRunner.Then(string.Format("In ENSTRD48 I should see trading history summary as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        "", line1, line2, line3, line4, line5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 237
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 238
  testRunner.And(string.Format("In ENSTRDSH I Verify Trade History details1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"{17}" +
                        "\"", tradeUnits, unitsSell, finalPrice, grossAmount, purchaseResidue, loanAmount, optionCost, gst, taxWithheld, nettAmount, chargeAmount01, chargeAmount02, chargeAmount03, chargeAmount04, chargeAmount05, chargeAmount06, paymentDate, paymentAccount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 239
  testRunner.And(string.Format("In ENSTRDSH I Verify Trade History details2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"{17}" +
                        "\"", prefCurrency, currencyDesc, paymentMethod1, holderCharges, holderTax, companyCharges, companyTax, reportCharges, reportTax, totalCharges, gstTaxTotal, bankCode, payeeAccountNumber, accountName, remainingBalance, remBalIndDesc, transfereeHolder, transfereeClass), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 31188: Investor Trade Real Time Sale")]
        [NUnit.Framework.CategoryAttribute("TS_TradingSystem")]
        [NUnit.Framework.CategoryAttribute("InvestorPlanSales")]
        [NUnit.Framework.CategoryAttribute("31188")]
        [NUnit.Framework.TestCaseAttribute("SellAll", "NAB2_AUTO", "I0036279826", "A", "", "C", "AUD", "E", "777.000000", "777.000000", "1", "30.00", "777.000000", "23310.00", "", "", "", "69.93", "100.00", "15.00", "16.99", "23108.08", "Y", "TESTAUTOMATION@COMPUTERSHARE.COM.AU", "777.000000", "", "C", "C", "20/08/2015", "10", "00", "20/08/2015", "777.000000", "777.000000", "23310.00", "30.000000", "30.000000", "30.000000", "23310.00", "", "184.93", "", "", "16.99", "", "23108.08", "69.93", "100.00", "", "", "15.00", "", "1", "23108.08", "", "", "", "", "", "", "", "", "", "", "184.93", "16.99", "", "", "", "", "", "", "ITNAB", "ORD1", "NDF", "ORD", "1", "777.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "777.000000", "23108.08", "Y", "Cheque Loc", "AUD", "777.000000", "Sell All", "S", "SALE", "Settled", "1", "777.000000", "23108.08", "20/08/2015", "20/08/2015", "INVMSW", "34", "1.000000", "99999999999999.999900", "10:00", "ORD", "VIC", "Market", "ORD Sale     RORD0000002  79269010 20/08/15 Set          777.000000      23108.08" +
            "      30.000000", "", "", "", "", "01", "", "20/08/2015", "AUSTRALIAN DOLLAR", "Cheque/Unpres", "184.93", "16.99", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "777.000000", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "RORD", "777.000000", "23108.08", null)]
        public virtual void TestCase31188InvestorTradeRealTimeSale(
                    string saleType, 
                    string cOY, 
                    string searchName, 
                    string sellOption, 
                    string units, 
                    string paymentMethod, 
                    string prefCurrency, 
                    string notificationReqdInd, 
                    string balance, 
                    string availBalance, 
                    string durationType, 
                    string estMarketValue, 
                    string unitsSell, 
                    string marketValue, 
                    string purchResidueAmt, 
                    string federalTaxWithheld, 
                    string loanAmt, 
                    string chargeAmount1, 
                    string chargeAmount2, 
                    string chargeAmount3, 
                    string totalGst, 
                    string estimatedProceeds, 
                    string overrideEmailInd, 
                    string emailAddress, 
                    string confirmUnits, 
                    string confirmWarningFlag5, 
                    string menuSelection, 
                    string confirmStatus, 
                    string tradeDate, 
                    string tradeTimeHH, 
                    string tradeTimeMM, 
                    string settlementDate, 
                    string totalUnits, 
                    string unitsTraded, 
                    string totalCost, 
                    string finalPrice, 
                    string tradePrice, 
                    string priceATAudit, 
                    string grossAmount, 
                    string purchaseResidue, 
                    string holderCharges1, 
                    string loanAmount, 
                    string optionCost, 
                    string gst, 
                    string taxWithheld, 
                    string nettAmount, 
                    string chargeAmount01, 
                    string chargeAmount02, 
                    string chargeAmount03, 
                    string chargeAmount04, 
                    string chargeAmount05, 
                    string chargeAmount06, 
                    string localChqCount, 
                    string localChqNettAmount, 
                    string foreignChqCount, 
                    string foreignChqNettAmt, 
                    string wireCount, 
                    string wireNettAmount, 
                    string directBankingCount, 
                    string directBankNettAmt, 
                    string employerCount, 
                    string employerNettAmount, 
                    string companyCharges, 
                    string companyTax, 
                    string holderCharges, 
                    string holderTax, 
                    string reportCharges, 
                    string reportTax, 
                    string paymentAccount, 
                    string bankType, 
                    string branchNumber, 
                    string accountNumber, 
                    string paymentAccount1, 
                    string orderNO, 
                    string ident, 
                    string classCode, 
                    string nbrTrades, 
                    string tradeGrossAmount, 
                    string tradeFrom, 
                    string tradeTO, 
                    string settlementFrom, 
                    string settlementTO, 
                    string menuSelection1, 
                    string confirmStatus1, 
                    string tradingID, 
                    string status, 
                    string price, 
                    string transCount, 
                    string transTotal, 
                    string moneyTotal, 
                    string applyTaxInd, 
                    string paymentMethodDesc, 
                    string currency, 
                    string sellUnits, 
                    string orderType, 
                    string bulkType, 
                    string bulkTypeDesc, 
                    string statusDesc, 
                    string totalCount, 
                    string orderTransUnits, 
                    string totalMoney, 
                    string reqdSettlementDate, 
                    string actualSettlementDate, 
                    string reconciliationCode, 
                    string cshtrnReference, 
                    string minimumDeal, 
                    string maximumDeal, 
                    string cutOffTime, 
                    string counterpartyClass, 
                    string counterRegisterCode, 
                    string orderType1, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string action, 
                    string locateArgument, 
                    string paymentDate, 
                    string currencyDesc, 
                    string paymentMethod1, 
                    string totalCharges, 
                    string gstTaxTotal, 
                    string bankCode, 
                    string payeeAccountNumber, 
                    string accountName, 
                    string cover01, 
                    string cover02, 
                    string cover03, 
                    string cover04, 
                    string cover05, 
                    string cover06, 
                    string cover07, 
                    string cover08, 
                    string cover09, 
                    string cover10, 
                    string cover11, 
                    string cover12, 
                    string cover13, 
                    string cover14, 
                    string cover15, 
                    string units1, 
                    string sellAll01, 
                    string units01, 
                    string sellAll02, 
                    string units02, 
                    string sellAll03, 
                    string units03, 
                    string sellAll04, 
                    string units04, 
                    string sellAll05, 
                    string units05, 
                    string sellAll06, 
                    string units06, 
                    string sellAll07, 
                    string units07, 
                    string sellAll08, 
                    string units08, 
                    string sellAll09, 
                    string units09, 
                    string remainingBalance, 
                    string remBalIndDesc, 
                    string transfereeHolder, 
                    string transfereeClass, 
                    string tradeControlCode, 
                    string tradeUnits, 
                    string transMoney, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TS_TradingSystem",
                    "InvestorPlanSales",
                    "31188"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 31188: Investor Trade Real Time Sale", @__tags);
#line 290
this.ScenarioSetup(scenarioInfo);
#line 291
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 292
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 295
  testRunner.And(string.Format("I go to the Trading system Sales and trade control code \"{0}\"", tradeControlCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 296
  testRunner.And(string.Format("In TRS00501 I Add Postal Transaction Entry details as \"{0}\"", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 297
  testRunner.And(string.Format("In TRS00502 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\"", sellOption, units, paymentMethod, prefCurrency, notificationReqdInd, balance, availBalance), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 298
  testRunner.And(string.Format("In TRS00507 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}" +
                        "\" \"{17}\"", sellAll01, units01, sellAll02, units02, sellAll03, units03, sellAll04, units04, sellAll05, units05, sellAll06, units06, sellAll07, units07, sellAll08, units08, sellAll09, units09), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 299
  testRunner.And(string.Format("In TRS00511 I Add Postal Transaction Entry details as \"{0}\" \"{1}\"", durationType, estMarketValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 300
  testRunner.And(string.Format("In TRS00513 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\"", cover01, cover02, cover03, cover04, cover05, cover06, cover07, cover08, cover09, cover10, cover11, cover12, cover13, cover14, cover15), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 301
  testRunner.And(string.Format("In TRS00504 I Verify Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" " +
                        "\"{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\"", unitsSell, estMarketValue, marketValue, purchResidueAmt, federalTaxWithheld, loanAmt, chargeAmount1, chargeAmount2, chargeAmount3, totalGst, estimatedProceeds), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 302
  testRunner.And(string.Format("In TRS00512 I Add Postal Transaction Entry details as \"{0}\" \"{1}\"", overrideEmailInd, emailAddress), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 303
  testRunner.And(string.Format("In TRS00503 I Add Postal Transaction Entry details as \"{0}\" \"{1}\"", confirmUnits, confirmWarningFlag5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 304
  testRunner.And(string.Format("In TRD00401 I Change Order Status to \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\"", menuSelection, confirmStatus, tradeDate, tradeTimeHH, tradeTimeMM, settlementDate, finalPrice), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 305
 testRunner.Then(string.Format("In TRD004CS I Verify Change Order Status details1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\" \"{18}\"", unitsTraded, totalCost, finalPrice, tradePrice, priceATAudit, grossAmount, purchaseResidue, holderCharges1, loanAmount, optionCost, gst, taxWithheld, nettAmount, chargeAmount01, chargeAmount02, chargeAmount03, chargeAmount04, chargeAmount05, chargeAmount06), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 306
  testRunner.And(string.Format("In TRD004CS I Verify Change Order Status details2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\" \"{18}\"", localChqCount, localChqNettAmount, foreignChqCount, foreignChqNettAmt, wireCount, wireNettAmount, directBankingCount, directBankNettAmt, employerCount, employerNettAmount, companyCharges, companyTax, holderCharges, holderTax, reportCharges, reportTax, bankType, branchNumber, accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 307
 testRunner.When(string.Format("In TRD00101 I Run the Generate Output Job as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" " +
                        "\"{6}\" \"{7}\" \"{8}\" \"{9}\"", paymentAccount1, orderNO, ident, classCode, nbrTrades, tradeGrossAmount, tradeFrom, tradeTO, settlementFrom, settlementTO), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria",
                        "PassCriteriaLNX",
                        "FailCriteriaLNX"});
            table7.AddRow(new string[] {
                        "completion",
                        "240",
                        "error",
                        "DONE",
                        "EXIT"});
#line 308
  testRunner.And("I wait for  GenerateOutput job to complete", ((string)(null)), table7, "And ");
#line 311
  testRunner.And(string.Format("In TRD00401 I Force Settle the Order as \"{0}\" \"{1}\"", menuSelection1, confirmStatus1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 312
 testRunner.Then(string.Format("In TRS01010 I Verify Transaction Enquiry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        " \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\"", tradingID, status, price, classCode, transCount, transTotal, moneyTotal, settlementDate, applyTaxInd, paymentMethod, paymentMethodDesc, currency, sellUnits, orderType, tradeUnits, transMoney), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 313
  testRunner.And(string.Format("In TRDSCH02 I Verify Transaction Enquiry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        " \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" " +
                        "\"{17}\" \"{18}\"", tradingID, bulkType, bulkTypeDesc, statusDesc, totalCount, orderTransUnits, totalMoney, tradeDate, reqdSettlementDate, actualSettlementDate, finalPrice, reconciliationCode, cshtrnReference, minimumDeal, maximumDeal, cutOffTime, counterpartyClass, counterRegisterCode, orderType1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 314
  testRunner.And(string.Format("In TRDSCHCS I Verify Transaction Enquiry details1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\"", unitsTraded, totalCost, finalPrice, priceATAudit, grossAmount, purchaseResidue, holderCharges1, loanAmount, optionCost, gst, taxWithheld, nettAmount, chargeAmount01, chargeAmount02, chargeAmount03, chargeAmount04, chargeAmount05, chargeAmount06), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 315
  testRunner.And(string.Format("In TRDSCHCS I Verify Transaction Enquiry details2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\" \"{18}\"", localChqCount, localChqNettAmount, foreignChqCount, foreignChqNettAmt, wireCount, wireNettAmount, directBankingCount, directBankNettAmt, employerCount, employerNettAmount, companyCharges, companyTax, holderCharges, holderTax, reportCharges, reportTax, bankType, branchNumber, accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 316
  testRunner.And("I go the Main Menu From Trading System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 318
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 319
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table8.AddRow(new string[] {
                        "Action",
                        "TH"});
            table8.AddRow(new string[] {
                        "Locate Argument",
                        "/ORD"});
#line 320
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table8, "And ");
#line 324
 testRunner.Then(string.Format("In ENSTRD48 I should see trading history summary as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        "", line1, line2, line3, line4, line5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 325
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 326
  testRunner.And(string.Format("In ENSTRDSH I Verify Trade History details1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"{17}" +
                        "\"", tradeUnits, unitsSell, finalPrice, grossAmount, purchaseResidue, loanAmount, optionCost, gst, taxWithheld, nettAmount, chargeAmount01, chargeAmount02, chargeAmount03, chargeAmount04, chargeAmount05, chargeAmount06, paymentDate, paymentAccount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 327
  testRunner.And(string.Format("In ENSTRDSH I Verify Trade History details2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"{17}" +
                        "\"", prefCurrency, currencyDesc, paymentMethod1, holderCharges, holderTax, companyCharges, companyTax, reportCharges, reportTax, totalCharges, gstTaxTotal, bankCode, payeeAccountNumber, accountName, remainingBalance, remBalIndDesc, transfereeHolder, transfereeClass), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Deferred Batch Sale SmokeTest")]
        [NUnit.Framework.CategoryAttribute("TS_TradingSystem")]
        [NUnit.Framework.CategoryAttribute("AESSPlanSales")]
        [NUnit.Framework.CategoryAttribute("31233")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        [NUnit.Framework.CategoryAttribute("SmokeTestTradingDeferredBatch")]
        [NUnit.Framework.TestCaseAttribute("BatchSale", "NAB2_AUTO", "M", "3383", "CLS.GAP", "ORMSAUUAT", "N", "0.00", "Y", "C", "ESTSC", "ORD", "VIC", "123451234", "BATS", "20/08/2015", "20/08/2015", "Y", "2000001", "I0030226810", "A", "", "C", "AUD", "N", "600.000000", "600.000000", "600.000000", "Y", "2000002", "I0030542461", "P", "200", "D", "", "N", "600.000000", "600.000000", "200.000000", "Y", "2000003", "I0030798635", "C", "", "E", "", "N", "700.000000", "700.000000", "", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "N", "", "", "", "", "", "", "", "", "2000004", "I0031306604", "S", "", "W", "", "N", "1000.000000", "900.000000", "750.000000", "Y", "Y", "", "Y", "", "Y", "", "Y", "", "Y", "", "Y", "", "", "50", "", "50", "", "50", "B", "B", "10", "00", "30.000000", "A", "A", "C", "C", "1554.000000", "46620.00", "30.000000", "30.000000", "46620.00", "", "574.86", "", "", "53.99", "", "45991.15", "139.86", "400.00", "10.00", "10.00", "15.00", "", "1", "17815.60", "", "", "1", "22305.75", "1", "5860.20", "1", "9.60", "", "", "574.86", "53.99", "", "", "", "", "", "TSSAL", "ATS5", "NDF", "ATS", "1", "2150.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "4", "2150.000000", "45991.15", "Y", "C", "Cheque Loc", "AUD", "600.000000", "Sell All", "S", "SALE", "Settled", "4", "2150.000000", "45991.15", "20/08/2015", "20/08/2015", "ESSOPT", "1832", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "ANZ", "013-100", "23232323", "600.000000", "17815.60", null)]
        public virtual void DeferredBatchSaleSmokeTest(
                    string saleType, 
                    string cOY, 
                    string onMarketTrade, 
                    string brokerCode, 
                    string brokerAccountID, 
                    string connectionCode, 
                    string realTimeTrading, 
                    string topupPercentage, 
                    string sellSelected, 
                    string option, 
                    string tranType, 
                    string @class, 
                    string reg, 
                    string worldLinkNumber, 
                    string tradeControlCode, 
                    string tradeDate, 
                    string settlementDate, 
                    string applyTax, 
                    string transNumber1, 
                    string searchName1, 
                    string sellOption1, 
                    string units1, 
                    string paymentMethod1, 
                    string prefCurrency1, 
                    string notificationReqdInd1, 
                    string balance1, 
                    string availBalance1, 
                    string confirmUnits1, 
                    string confirmWarningFlag51, 
                    string transNumber2, 
                    string searchName2, 
                    string sellOption2, 
                    string units2, 
                    string paymentMethod2, 
                    string prefCurrency2, 
                    string notificationReqdInd2, 
                    string balance2, 
                    string availBalance2, 
                    string confirmUnits2, 
                    string confirmWarningFlag52, 
                    string transNumber3, 
                    string searchName3, 
                    string sellOption3, 
                    string units3, 
                    string paymentMethod3, 
                    string prefCurrency3, 
                    string notificationReqdInd3, 
                    string balance3, 
                    string availBalance3, 
                    string confirmUnits3, 
                    string confirmWarningFlag53, 
                    string cover01, 
                    string cover02, 
                    string cover03, 
                    string cover04, 
                    string cover05, 
                    string cover06, 
                    string cover07, 
                    string cover08, 
                    string cover09, 
                    string cover10, 
                    string cover11, 
                    string cover12, 
                    string cover13, 
                    string cover14, 
                    string cover15, 
                    string transNumber4, 
                    string searchName4, 
                    string sellOption4, 
                    string units4, 
                    string paymentMethod4, 
                    string prefCurrency4, 
                    string notificationReqdInd4, 
                    string balance4, 
                    string availBalance4, 
                    string confirmUnits4, 
                    string confirmWarningFlag54, 
                    string sellAll01, 
                    string units01, 
                    string sellAll02, 
                    string units02, 
                    string sellAll03, 
                    string units03, 
                    string sellAll04, 
                    string units04, 
                    string sellAll05, 
                    string units05, 
                    string sellAll06, 
                    string units06, 
                    string sellAll07, 
                    string units07, 
                    string sellAll08, 
                    string units08, 
                    string sellAll09, 
                    string units09, 
                    string menuSelection1, 
                    string confirmStatus1, 
                    string tradeTimeHH, 
                    string tradeTimeMM, 
                    string finalPrice, 
                    string menuSelection2, 
                    string confirmStatus2, 
                    string menuSelection3, 
                    string confirmStatus3, 
                    string unitsTraded, 
                    string totalCost, 
                    string tradePrice, 
                    string priceATAudit, 
                    string grossAmount, 
                    string purchaseResidue, 
                    string holderCharges1, 
                    string loanAmount, 
                    string optionCost, 
                    string gst, 
                    string taxWithheld, 
                    string nettAmount, 
                    string chargeAmount01, 
                    string chargeAmount02, 
                    string chargeAmount03, 
                    string chargeAmount04, 
                    string chargeAmount05, 
                    string chargeAmount06, 
                    string localChqCount, 
                    string localChqNettAmount, 
                    string foreignChqCount, 
                    string foreignChqNettAmt, 
                    string wireCount, 
                    string wireNettAmount, 
                    string directBankingCount, 
                    string directBankNettAmt, 
                    string employerCount, 
                    string employerNettAmount, 
                    string companyCharges, 
                    string companyTax, 
                    string holderCharges, 
                    string holderTax, 
                    string reportCharges, 
                    string reportTax, 
                    string bankType, 
                    string branchNumber, 
                    string accountNumber, 
                    string paymentAccount1, 
                    string orderNO, 
                    string ident, 
                    string classCode, 
                    string nbrTrades, 
                    string tradeGrossAmount, 
                    string tradeFrom, 
                    string tradeTO, 
                    string settlementFrom, 
                    string settlementTO, 
                    string menuSelection4, 
                    string confirmStatus4, 
                    string tradingID, 
                    string status, 
                    string price, 
                    string transCount, 
                    string transTotal, 
                    string moneyTotal, 
                    string applyTaxInd, 
                    string paymentMethod, 
                    string paymentMethodDesc, 
                    string currency, 
                    string sellUnits, 
                    string orderType, 
                    string bulkType, 
                    string bulkTypeDesc, 
                    string statusDesc, 
                    string totalCount, 
                    string orderTransUnits, 
                    string totalMoney, 
                    string reqdSettlementDate, 
                    string actualSettlementDate, 
                    string reconciliationCode, 
                    string cshtrnReference, 
                    string minimumDeal, 
                    string maximumDeal, 
                    string cutOffTime, 
                    string counterpartyClass, 
                    string counterRegisterCode, 
                    string orderType1, 
                    string bankType1, 
                    string branchNumber1, 
                    string accountNumber1, 
                    string tradeUnits, 
                    string transMoney, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TS_TradingSystem",
                    "AESSPlanSales",
                    "31233",
                    "FullSmokeTest",
                    "SmokeTestTradingDeferredBatch"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Deferred Batch Sale SmokeTest", @__tags);
#line 339
this.ScenarioSetup(scenarioInfo);
#line 340
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 341
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 344
  testRunner.And("I go to \"Trading Control Codes\" Control Code Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 345
  testRunner.And(string.Format("In TRD24000 I select the Trade Control Code \"{0}\"", tradeControlCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 346
  testRunner.And(string.Format("In TRD24001 I perform a Change for On Market Trade \"{0}\", \"{1}\", \"{2}\", \"{3}\", \"{" +
                        "4}\" and Top Up \"{5}\", \"{6}\" and Remaining Balance Options \"{7}\", \"{8}\", \"{9}\", \"" +
                        "{10}\" and World Link Number \"{11}\"", onMarketTrade, brokerCode, brokerAccountID, connectionCode, realTimeTrading, topupPercentage, sellSelected, option, tranType, @class, reg, worldLinkNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 347
  testRunner.And(string.Format("I go to the Trading system Sales and trade control code \"{0}\"", tradeControlCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 348
  testRunner.And(string.Format("In TRD00201 I create a New Order as \"{0}\" \"{1}\" \"{2}\"", tradeDate, settlementDate, applyTax), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 349
  testRunner.And(string.Format("In TRS00501 I Add Batch Postal Transaction Entry details as \"{0}\" \"{1}\"", transNumber1, searchName1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 350
  testRunner.And(string.Format("In TRS00502 I Add Batch Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3" +
                        "}\" \"{4}\" \"{5}\" \"{6}\"", sellOption1, units1, paymentMethod1, prefCurrency1, notificationReqdInd1, balance1, availBalance1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 351
  testRunner.And(string.Format("In TRS00503 I Add Postal Transaction Entry details as \"{0}\" \"{1}\"", confirmUnits1, confirmWarningFlag51), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 352
  testRunner.And(string.Format("In TRS00501 I Add Batch Postal Transaction Entry details as \"{0}\" \"{1}\"", transNumber2, searchName2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 353
  testRunner.And(string.Format("In TRS00502 I Add Batch Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3" +
                        "}\" \"{4}\" \"{5}\" \"{6}\"", sellOption2, units2, paymentMethod2, prefCurrency2, notificationReqdInd2, balance2, availBalance2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 354
  testRunner.And(string.Format("In TRS00503 I Add Postal Transaction Entry details as \"{0}\" \"{1}\"", confirmUnits2, confirmWarningFlag52), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 355
  testRunner.And(string.Format("In TRS00501 I Add Batch Postal Transaction Entry details as \"{0}\" \"{1}\"", transNumber3, searchName3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 356
  testRunner.And(string.Format("In TRS00502 I Add Batch Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3" +
                        "}\" \"{4}\" \"{5}\" \"{6}\"", sellOption3, units3, paymentMethod3, prefCurrency3, notificationReqdInd3, balance3, availBalance3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 357
  testRunner.And(string.Format("In TRS00513 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\"", cover01, cover02, cover03, cover04, cover05, cover06, cover07, cover08, cover09, cover10, cover11, cover12, cover13, cover14, cover15), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 358
  testRunner.And(string.Format("In TRS00503 I Add Postal Transaction Entry details as \"{0}\" \"{1}\"", confirmUnits3, confirmWarningFlag53), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 359
  testRunner.And(string.Format("In TRS00501 I Add Batch Postal Transaction Entry details as \"{0}\" \"{1}\"", transNumber4, searchName4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 360
  testRunner.And(string.Format("In TRS00502 I Add Batch Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3" +
                        "}\" \"{4}\" \"{5}\" \"{6}\"", sellOption4, units4, paymentMethod4, prefCurrency4, notificationReqdInd4, balance4, availBalance4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 361
  testRunner.And(string.Format("In TRS00507 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}" +
                        "\" \"{17}\"", sellAll01, units01, sellAll02, units02, sellAll03, units03, sellAll04, units04, sellAll05, units05, sellAll06, units06, sellAll07, units07, sellAll08, units08, sellAll09, units09), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 362
  testRunner.And(string.Format("In TRS00503 I Add Postal Transaction Entry details as \"{0}\" \"{1}\"", confirmUnits4, confirmWarningFlag54), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 363
  testRunner.And(string.Format("In TRD00401 I Change Batch Order Status to \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{" +
                        "6}\"", menuSelection1, confirmStatus1, tradeDate, tradeTimeHH, tradeTimeMM, settlementDate, finalPrice), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 364
  testRunner.And(string.Format("In TRD00401 I Change Batch Order Status to \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{" +
                        "6}\"", menuSelection2, confirmStatus2, tradeDate, tradeTimeHH, tradeTimeMM, settlementDate, finalPrice), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 365
  testRunner.And(string.Format("In TRD00401 I Change Order Status to \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\"", menuSelection3, confirmStatus3, tradeDate, tradeTimeHH, tradeTimeMM, settlementDate, finalPrice), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 366
 testRunner.Then(string.Format("In TRD004CS I Verify Change Order Status details1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\" \"{18}\"", unitsTraded, totalCost, finalPrice, tradePrice, priceATAudit, grossAmount, purchaseResidue, holderCharges1, loanAmount, optionCost, gst, taxWithheld, nettAmount, chargeAmount01, chargeAmount02, chargeAmount03, chargeAmount04, chargeAmount05, chargeAmount06), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 367
  testRunner.And(string.Format("In TRD004CS I Verify Change Order Status details2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\" \"{18}\"", localChqCount, localChqNettAmount, foreignChqCount, foreignChqNettAmt, wireCount, wireNettAmount, directBankingCount, directBankNettAmt, employerCount, employerNettAmount, companyCharges, companyTax, holderCharges, holderTax, reportCharges, reportTax, bankType, branchNumber, accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 368
 testRunner.When(string.Format("In TRD00101 I Run the Generate Output Job as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" " +
                        "\"{6}\" \"{7}\" \"{8}\" \"{9}\"", paymentAccount1, orderNO, ident, classCode, nbrTrades, tradeGrossAmount, tradeFrom, tradeTO, settlementFrom, settlementTO), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria",
                        "PassCriteriaLNX",
                        "FailCriteriaLNX"});
            table9.AddRow(new string[] {
                        "completion",
                        "240",
                        "error",
                        "DONE",
                        "EXIT"});
#line 369
  testRunner.And("I wait for  GenerateOutput job to complete", ((string)(null)), table9, "And ");
#line 372
  testRunner.And(string.Format("In TRD00401 I Force Settle the Order as \"{0}\" \"{1}\"", menuSelection4, confirmStatus4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 373
 testRunner.Then(string.Format("In TRS01010 I Verify Transaction Enquiry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        " \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\"", tradingID, status, price, classCode, transCount, transTotal, moneyTotal, settlementDate, applyTaxInd, paymentMethod, paymentMethodDesc, currency, sellUnits, orderType, tradeUnits, transMoney), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 374
  testRunner.And(string.Format("In TRDSCH02 I Verify Transaction Enquiry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        " \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" " +
                        "\"{17}\" \"{18}\"", tradingID, bulkType, bulkTypeDesc, statusDesc, totalCount, orderTransUnits, totalMoney, tradeDate, reqdSettlementDate, actualSettlementDate, finalPrice, reconciliationCode, cshtrnReference, minimumDeal, maximumDeal, cutOffTime, counterpartyClass, counterRegisterCode, orderType1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 375
  testRunner.And(string.Format("In TRDSCHCS I Verify Transaction Enquiry details1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\"", unitsTraded, totalCost, finalPrice, priceATAudit, grossAmount, purchaseResidue, holderCharges1, loanAmount, optionCost, gst, taxWithheld, nettAmount, chargeAmount01, chargeAmount02, chargeAmount03, chargeAmount04, chargeAmount05, chargeAmount06), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 376
  testRunner.And(string.Format("In TRDSCHCS I Verify Transaction Enquiry details2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\" \"{18}\"", localChqCount, localChqNettAmount, foreignChqCount, foreignChqNettAmt, wireCount, wireNettAmount, directBankingCount, directBankNettAmt, employerCount, employerNettAmount, companyCharges, companyTax, holderCharges, holderTax, reportCharges, reportTax, bankType1, branchNumber1, accountNumber1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 31881: Loan Batch Sale")]
        [NUnit.Framework.CategoryAttribute("TS_TradingSystem")]
        [NUnit.Framework.CategoryAttribute("LoanPlanSales")]
        [NUnit.Framework.CategoryAttribute("31881")]
        [NUnit.Framework.TestCaseAttribute("BatchSale", "NAB2_AUTO", "M", "3383", "CLS.GAP", "ORMSAUUAT", "N", "0.00", "Y", "C", "ESTSC", "ORD", "VIC", "123451234", "BELA", "20/08/2015", "20/08/2015", "Y", "3000001", "I0036534061", "A", "", "C", "AUD", "N", "1500.000000", "1500.000000", "1500.000000", "", "3000002", "I0036534079", "P", "999", "D", "", "N", "1500.000000", "1500.000000", "999.000000", "", "3000003", "I0036534095", "C", "", "E", "", "N", "1500.000000", "1500.000000", "", "", "Y", "Y", "Y", "", "", "", "", "", "", "", "", "", "", "", "", "3000004", "I0036534087", "S", "", "W", "", "N", "1500.000000", "1500.000000", "1199.000000", "", "Y", "", "Y", "", "", "199", "", "", "", "", "", "", "", "", "", "", "", "", "B", "B", "10", "00", "30.000000", "A", "A", "C", "C", "3803.000000", "114090.00", "30.000000", "30.000000", "114090.00", "", "777.27", "11000.00", "", "74.23", "", "102238.50", "342.27", "400.00", "10.00", "10.00", "15.00", "", "1", "41726.50", "", "", "1", "32731.30", "1", "27751.10", "1", "29.60", "", "", "777.27", "74.23", "", "", "", "", "", "TSSAL", "ELA5", "NDF", "ELA", "1", "5198.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "4", "5198.000000", "102238.50", "Y", "C", "Cheque Loc", "AUD", "1500.000000", "Sell All", "S", "SALE", "Settled", "4", "5198.000000", "102238.50", "20/08/2015", "20/08/2015", "ESSOPT", "1835", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "ANZ", "013-100", "23232323", "1500.000000", "41726.50", null)]
        [NUnit.Framework.TestCaseAttribute("BatchSale_ORMS_TOPUP", "NAB2_AUTO", "O", "3383", "CLS.GAP", "ORMSAUUAT", "N", "2.00", "Y", "C", "ESTSC", "ORD", "VIC", "123451234", "BELA", "20/08/2015", "20/08/2015", "Y", "4000001", "I0036533960", "A", "", "C", "AUD", "N", "1500.000000", "1500.000000", "1500.000000", "", "4000002", "I0036533978", "P", "999", "D", "", "N", "1500.000000", "1500.000000", "999.000000", "", "4000003", "I0036533986", "C", "", "E", "", "N", "1500.000000", "1500.000000", "", "", "Y", "Y", "Y", "", "", "", "", "", "", "", "", "", "", "", "", "4000004", "I0036533994", "S", "", "W", "", "N", "1500.000000", "1500.000000", "1199.000000", "", "Y", "", "Y", "", "", "199", "", "", "", "", "", "", "", "", "", "", "", "", "B", "B", "10", "00", "30.000000", "A", "A", "C", "C", "3806.000000", "114180.00", "30.000000", "30.000000", "114180.00", "", "777.54", "11000.00", "", "74.25", "", "102328.21", "342.54", "400.00", "10.00", "10.00", "15.00", "", "1", "41726.50", "", "", "1", "32731.30", "1", "27751.10", "1", "119.31", "", "", "777.54", "74.25", "", "", "", "", "", "TSSAL", "ELA6", "NDF", "ELA", "1", "5198.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "4", "5198.000000", "102328.21", "Y", "C", "Cheque Loc", "AUD", "1500.000000", "Sell All", "S", "SALE", "Settled", "4", "5198.000000", "102328.21", "20/08/2015", "20/08/2015", "ESSOPT", "1835", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", "ANZ", "013-100", "23232323", "1500.000000", "41726.50", null)]
        public virtual void TestCase31881LoanBatchSale(
                    string saleType, 
                    string cOY, 
                    string onMarketTrade, 
                    string brokerCode, 
                    string brokerAccountID, 
                    string connectionCode, 
                    string realTimeTrading, 
                    string topupPercentage, 
                    string sellSelected, 
                    string option, 
                    string tranType, 
                    string @class, 
                    string reg, 
                    string worldLinkNumber, 
                    string tradeControlCode, 
                    string tradeDate, 
                    string settlementDate, 
                    string applyTax, 
                    string transNumber1, 
                    string searchName1, 
                    string sellOption1, 
                    string units1, 
                    string paymentMethod1, 
                    string prefCurrency1, 
                    string notificationReqdInd1, 
                    string balance1, 
                    string availBalance1, 
                    string confirmUnits1, 
                    string confirmWarningFlag51, 
                    string transNumber2, 
                    string searchName2, 
                    string sellOption2, 
                    string units2, 
                    string paymentMethod2, 
                    string prefCurrency2, 
                    string notificationReqdInd2, 
                    string balance2, 
                    string availBalance2, 
                    string confirmUnits2, 
                    string confirmWarningFlag52, 
                    string transNumber3, 
                    string searchName3, 
                    string sellOption3, 
                    string units3, 
                    string paymentMethod3, 
                    string prefCurrency3, 
                    string notificationReqdInd3, 
                    string balance3, 
                    string availBalance3, 
                    string confirmUnits3, 
                    string confirmWarningFlag53, 
                    string cover01, 
                    string cover02, 
                    string cover03, 
                    string cover04, 
                    string cover05, 
                    string cover06, 
                    string cover07, 
                    string cover08, 
                    string cover09, 
                    string cover10, 
                    string cover11, 
                    string cover12, 
                    string cover13, 
                    string cover14, 
                    string cover15, 
                    string transNumber4, 
                    string searchName4, 
                    string sellOption4, 
                    string units4, 
                    string paymentMethod4, 
                    string prefCurrency4, 
                    string notificationReqdInd4, 
                    string balance4, 
                    string availBalance4, 
                    string confirmUnits4, 
                    string confirmWarningFlag54, 
                    string sellAll01, 
                    string units01, 
                    string sellAll02, 
                    string units02, 
                    string sellAll03, 
                    string units03, 
                    string sellAll04, 
                    string units04, 
                    string sellAll05, 
                    string units05, 
                    string sellAll06, 
                    string units06, 
                    string sellAll07, 
                    string units07, 
                    string sellAll08, 
                    string units08, 
                    string sellAll09, 
                    string units09, 
                    string menuSelection1, 
                    string confirmStatus1, 
                    string tradeTimeHH, 
                    string tradeTimeMM, 
                    string finalPrice, 
                    string menuSelection2, 
                    string confirmStatus2, 
                    string menuSelection3, 
                    string confirmStatus3, 
                    string unitsTraded, 
                    string totalCost, 
                    string tradePrice, 
                    string priceATAudit, 
                    string grossAmount, 
                    string purchaseResidue, 
                    string holderCharges1, 
                    string loanAmount, 
                    string optionCost, 
                    string gst, 
                    string taxWithheld, 
                    string nettAmount, 
                    string chargeAmount01, 
                    string chargeAmount02, 
                    string chargeAmount03, 
                    string chargeAmount04, 
                    string chargeAmount05, 
                    string chargeAmount06, 
                    string localChqCount, 
                    string localChqNettAmount, 
                    string foreignChqCount, 
                    string foreignChqNettAmt, 
                    string wireCount, 
                    string wireNettAmount, 
                    string directBankingCount, 
                    string directBankNettAmt, 
                    string employerCount, 
                    string employerNettAmount, 
                    string companyCharges, 
                    string companyTax, 
                    string holderCharges, 
                    string holderTax, 
                    string reportCharges, 
                    string reportTax, 
                    string bankType, 
                    string branchNumber, 
                    string accountNumber, 
                    string paymentAccount1, 
                    string orderNO, 
                    string ident, 
                    string classCode, 
                    string nbrTrades, 
                    string tradeGrossAmount, 
                    string tradeFrom, 
                    string tradeTO, 
                    string settlementFrom, 
                    string settlementTO, 
                    string menuSelection4, 
                    string confirmStatus4, 
                    string tradingID, 
                    string status, 
                    string price, 
                    string transCount, 
                    string transTotal, 
                    string moneyTotal, 
                    string applyTaxInd, 
                    string paymentMethod, 
                    string paymentMethodDesc, 
                    string currency, 
                    string sellUnits, 
                    string orderType, 
                    string bulkType, 
                    string bulkTypeDesc, 
                    string statusDesc, 
                    string totalCount, 
                    string orderTransUnits, 
                    string totalMoney, 
                    string reqdSettlementDate, 
                    string actualSettlementDate, 
                    string reconciliationCode, 
                    string cshtrnReference, 
                    string minimumDeal, 
                    string maximumDeal, 
                    string cutOffTime, 
                    string counterpartyClass, 
                    string counterRegisterCode, 
                    string orderType1, 
                    string bankType1, 
                    string branchNumber1, 
                    string accountNumber1, 
                    string tradeUnits, 
                    string transMoney, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TS_TradingSystem",
                    "LoanPlanSales",
                    "31881"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 31881: Loan Batch Sale", @__tags);
#line 387
this.ScenarioSetup(scenarioInfo);
#line 388
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 389
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 392
  testRunner.And("I go to \"Trading Control Codes\" Control Code Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 393
  testRunner.And(string.Format("In TRD24000 I select the Trade Control Code \"{0}\"", tradeControlCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 394
  testRunner.And(string.Format("In TRD24001 I perform a Change for On Market Trade \"{0}\", \"{1}\", \"{2}\", \"{3}\", \"{" +
                        "4}\" and Top Up \"{5}\", \"{6}\" and Remaining Balance Options \"{7}\", \"{8}\", \"{9}\", \"" +
                        "{10}\" and World Link Number \"{11}\"", onMarketTrade, brokerCode, brokerAccountID, connectionCode, realTimeTrading, topupPercentage, sellSelected, option, tranType, @class, reg, worldLinkNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 395
  testRunner.And(string.Format("I go to the Trading system Sales and trade control code \"{0}\"", tradeControlCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 396
  testRunner.And(string.Format("In TRD00201 I create a New Order as \"{0}\" \"{1}\" \"{2}\"", tradeDate, settlementDate, applyTax), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 397
  testRunner.And(string.Format("In TRS00501 I Add Batch Postal Transaction Entry details as \"{0}\" \"{1}\"", transNumber1, searchName1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 398
  testRunner.And(string.Format("In TRS00502 I Add Batch Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3" +
                        "}\" \"{4}\" \"{5}\" \"{6}\"", sellOption1, units1, paymentMethod1, prefCurrency1, notificationReqdInd1, balance1, availBalance1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 399
  testRunner.And(string.Format("In TRS00503 I Add Postal Transaction Entry details as \"{0}\" \"{1}\"", confirmUnits1, confirmWarningFlag51), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 400
  testRunner.And(string.Format("In TRS00501 I Add Batch Postal Transaction Entry details as \"{0}\" \"{1}\"", transNumber2, searchName2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 401
  testRunner.And(string.Format("In TRS00502 I Add Batch Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3" +
                        "}\" \"{4}\" \"{5}\" \"{6}\"", sellOption2, units2, paymentMethod2, prefCurrency2, notificationReqdInd2, balance2, availBalance2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 402
  testRunner.And(string.Format("In TRS00503 I Add Postal Transaction Entry details as \"{0}\" \"{1}\"", confirmUnits2, confirmWarningFlag52), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 403
  testRunner.And(string.Format("In TRS00501 I Add Batch Postal Transaction Entry details as \"{0}\" \"{1}\"", transNumber3, searchName3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 404
  testRunner.And(string.Format("In TRS00502 I Add Batch Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3" +
                        "}\" \"{4}\" \"{5}\" \"{6}\"", sellOption3, units3, paymentMethod3, prefCurrency3, notificationReqdInd3, balance3, availBalance3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 405
  testRunner.And(string.Format("In TRS00513 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\"", cover01, cover02, cover03, cover04, cover05, cover06, cover07, cover08, cover09, cover10, cover11, cover12, cover13, cover14, cover15), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 406
  testRunner.And(string.Format("In TRS00503 I Add Postal Transaction Entry details as \"{0}\" \"{1}\"", confirmUnits3, confirmWarningFlag53), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 407
  testRunner.And(string.Format("In TRS00501 I Add Batch Postal Transaction Entry details as \"{0}\" \"{1}\"", transNumber4, searchName4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 408
  testRunner.And(string.Format("In TRS00502 I Add Batch Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3" +
                        "}\" \"{4}\" \"{5}\" \"{6}\"", sellOption4, units4, paymentMethod4, prefCurrency4, notificationReqdInd4, balance4, availBalance4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 409
  testRunner.And(string.Format("In TRS00507 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}" +
                        "\" \"{17}\"", sellAll01, units01, sellAll02, units02, sellAll03, units03, sellAll04, units04, sellAll05, units05, sellAll06, units06, sellAll07, units07, sellAll08, units08, sellAll09, units09), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 410
  testRunner.And(string.Format("In TRS00503 I Add Postal Transaction Entry details as \"{0}\" \"{1}\"", confirmUnits4, confirmWarningFlag54), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 411
  testRunner.And(string.Format("In TRD00401 I Change Batch Order Status to \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{" +
                        "6}\"", menuSelection1, confirmStatus1, tradeDate, tradeTimeHH, tradeTimeMM, settlementDate, finalPrice), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 412
  testRunner.And(string.Format("In TRD00401 I Change Batch Order Status to \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{" +
                        "6}\"", menuSelection2, confirmStatus2, tradeDate, tradeTimeHH, tradeTimeMM, settlementDate, finalPrice), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 413
  testRunner.And(string.Format("In TRD00401 I Change Order Status to \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\"", menuSelection3, confirmStatus3, tradeDate, tradeTimeHH, tradeTimeMM, settlementDate, finalPrice), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 414
 testRunner.Then(string.Format("In TRD004CS I Verify Change Order Status details1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\" \"{18}\"", unitsTraded, totalCost, finalPrice, tradePrice, priceATAudit, grossAmount, purchaseResidue, holderCharges1, loanAmount, optionCost, gst, taxWithheld, nettAmount, chargeAmount01, chargeAmount02, chargeAmount03, chargeAmount04, chargeAmount05, chargeAmount06), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 415
  testRunner.And(string.Format("In TRD004CS I Verify Change Order Status details2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\" \"{18}\"", localChqCount, localChqNettAmount, foreignChqCount, foreignChqNettAmt, wireCount, wireNettAmount, directBankingCount, directBankNettAmt, employerCount, employerNettAmount, companyCharges, companyTax, holderCharges, holderTax, reportCharges, reportTax, bankType, branchNumber, accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 416
 testRunner.When(string.Format("In TRD00101 I Run the Generate Output Job as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" " +
                        "\"{6}\" \"{7}\" \"{8}\" \"{9}\"", paymentAccount1, orderNO, ident, classCode, nbrTrades, tradeGrossAmount, tradeFrom, tradeTO, settlementFrom, settlementTO), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria",
                        "PassCriteriaLNX",
                        "FailCriteriaLNX"});
            table10.AddRow(new string[] {
                        "completion",
                        "240",
                        "error",
                        "DONE",
                        "EXIT"});
#line 417
  testRunner.And("I wait for  GenerateOutput job to complete", ((string)(null)), table10, "And ");
#line 420
  testRunner.And(string.Format("In TRD00401 I Force Settle the Order as \"{0}\" \"{1}\"", menuSelection4, confirmStatus4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 421
 testRunner.Then(string.Format("In TRS01010 I Verify Transaction Enquiry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        " \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\"", tradingID, status, price, classCode, transCount, transTotal, moneyTotal, settlementDate, applyTaxInd, paymentMethod, paymentMethodDesc, currency, sellUnits, orderType, tradeUnits, transMoney), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 422
  testRunner.And(string.Format("In TRDSCH02 I Verify Transaction Enquiry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        " \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" " +
                        "\"{17}\" \"{18}\"", tradingID, bulkType, bulkTypeDesc, statusDesc, totalCount, orderTransUnits, totalMoney, tradeDate, reqdSettlementDate, actualSettlementDate, finalPrice, reconciliationCode, cshtrnReference, minimumDeal, maximumDeal, cutOffTime, counterpartyClass, counterRegisterCode, orderType1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 423
  testRunner.And(string.Format("In TRDSCHCS I Verify Transaction Enquiry details1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\"", unitsTraded, totalCost, finalPrice, priceATAudit, grossAmount, purchaseResidue, holderCharges1, loanAmount, optionCost, gst, taxWithheld, nettAmount, chargeAmount01, chargeAmount02, chargeAmount03, chargeAmount04, chargeAmount05, chargeAmount06), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 424
  testRunner.And(string.Format("In TRDSCHCS I Verify Transaction Enquiry details2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\" \"{18}\"", localChqCount, localChqNettAmount, foreignChqCount, foreignChqNettAmt, wireCount, wireNettAmount, directBankingCount, directBankNettAmt, employerCount, employerNettAmount, companyCharges, companyTax, holderCharges, holderTax, reportCharges, reportTax, bankType1, branchNumber1, accountNumber1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 32236: Options Batch Sale")]
        [NUnit.Framework.CategoryAttribute("TS_TradingSystem")]
        [NUnit.Framework.CategoryAttribute("OptionsPlanSales")]
        [NUnit.Framework.CategoryAttribute("32236")]
        [NUnit.Framework.TestCaseAttribute("BatSale_NOORMS_NoTopUp_Test1", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "N", "0.00", "", "C", "ESOXR", "ORD", "VIC", "123451234", "BOPT", "20/08/2015", "20/08/2015", "Y", "4120001", "I0036535164", "A", "", "C", "AUD", "N", "4000.000000", "4000.000000", "Y", "", "", "", "", "", "", "", "", "", "", "", "", "", "4120002", "I0036534338", "A", "", "E", "", "N", "4000.000000", "4000.000000", "", "699", "", "", "", "", "", "", "", "", "", "", "", "", "4120003", "I0036534869", "P", "C", "C", "USD", "N", "4000.000000", "4000.000000", "", "", "", "", "", "", "", "", "", "", "1000", "899", "", "", "4120004", "I0036535202", "C", "C", "W", "", "N", "4000.000000", "4000.000000", "Y", "", "", "", "", "", "", "", "", "", "", "", "", "", "B", "B", "10", "00", "30.000000", "A", "A", "C", "C", "3238.000000", "97140.00", "30.000000", "30.000000", "97140.00", "", "756.42", "", "61281.00", "69.14", "", "35033.44", "291.42", "400.00", "10.00", "", "15.00", "40.00", "1", "10776.00", "1", "16731.00", "1", "16.64", "", "", "1", "7509.80", "", "", "756.42", "69.14", "", "", "", "", "", "TSSAL", "BOP1", "NDF", "OPT", "1", "3699.000000", "", "", "20/08/2015", "20/08/2015", "R", "R", "S", "S", "Settled", "30.000000", "4", "3699.000000", "35033.44", "Y", "C", "Cheque Loc", "AUD", "1000.000000", "Sell All", "ANZ", "013-100", "23232323", "1000.000000", "10776.00", "S", "SALE", "Settled", "4", "3699.000000", "35033.44", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", null)]
        [NUnit.Framework.TestCaseAttribute("BatSale_ORMS_TopUp_Test2", "NAB2_AUTO", "N", "O", "3383", "CLS.GAP", "ORMSAUUAT", "N", "2.00", "", "C", "ESOXR", "ORD", "VIC", "123451234", "BOPT", "20/08/2015", "20/08/2015", "Y", "4130001", "I0036534796", "A", "", "C", "AUD", "N", "4000.000000", "4000.000000", "", "", "", "Y", "", "", "", "", "", "", "", "", "", "", "4130002", "I0036535113", "A", "", "E", "", "N", "4000.000000", "4000.000000", "", "", "", "", "799", "", "", "", "", "", "", "", "", "", "4130003", "I0036534834", "P", "C", "C", "USD", "N", "4000.000000", "4000.000000", "", "", "", "", "", "", "", "1000", "899", "", "", "", "", "", "4130004", "I0036534222", "C", "C", "W", "", "N", "4000.000000", "4000.000000", "", "", "", "", "", "", "", "", "", "Y", "", "", "", "", "B", "B", "10", "00", "30.000000", "A", "A", "C", "C", "3045.000000", "91350.00", "30.000000", "30.000000", "91350.00", "", "739.05", "", "32990.00", "67.40", "", "57553.55", "274.05", "400.00", "10.00", "", "15.00", "40.00", "1", "19776.00", "1", "21731.00", "1", "255.65", "", "", "1", "15790.90", "", "", "739.05", "67.40", "", "", "", "", "", "TSSAL", "BOP2", "NDF", "OPT", "1", "3799.000000", "", "", "20/08/2015", "20/08/2015", "R", "R", "S", "S", "Settled", "30.000000", "4", "3799.000000", "57553.55", "Y", "C", "Cheque Loc", "AUD", "1000.000000", "Sell All", "ANZ", "013-100", "23232323", "1000.000000", "19776.00", "S", "SALE", "Settled", "4", "3799.000000", "57553.55", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", null)]
        [NUnit.Framework.TestCaseAttribute("BatSale_NOORMS_NoTopUp_WHT_Test3", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "N", "0.00", "", "C", "ESOXR", "ORD", "VIC", "123451234", "BOPT", "20/08/2015", "20/08/2015", "Y", "4140001", "I0036534788", "A", "", "C", "AUD", "N", "4000.000000", "4000.000000", "", "", "", "", "", "", "Y", "", "", "", "", "", "", "", "4140002", "I0036534842", "A", "", "E", "", "N", "4000.000000", "4000.000000", "", "", "", "", "", "", "", "899", "", "", "", "", "", "", "4140003", "I0036534494", "P", "C", "C", "USD", "N", "4000.000000", "4000.000000", "", "", "", "", "", "", "", "", "", "", "1000", "899", "", "", "4140004", "I0036535148", "C", "C", "W", "", "N", "4000.000000", "4000.000000", "", "", "", "Y", "", "", "", "", "", "", "", "", "", "", "B", "B", "10", "00", "30.000000", "A", "A", "C", "C", "3507.000000", "105210.00", "30.000000", "30.000000", "105210.00", "", "780.63", "", "29495.00", "71.56", "47364.49", "27498.32", "315.63", "400.00", "10.00", "", "15.00", "40.00", "1", "11474.00", "1", "5679.00", "1", "27.81", "", "", "1", "10317.51", "", "", "780.63", "71.56", "", "", "", "", "", "TSSAL", "BOP3", "NDF", "OPT", "1", "3899.000000", "", "", "20/08/2015", "20/08/2015", "R", "R", "S", "S", "Settled", "30.000000", "4", "3899.000000", "27498.32", "Y", "C", "Cheque Loc", "AUD", "1000.000000", "Sell All", "ANZ", "013-100", "23232323", "1000.000000", "11474.00", "S", "SALE", "Settled", "4", "3899.000000", "27498.32", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", null)]
        [NUnit.Framework.TestCaseAttribute("BatSale_ORMS_TopUp_WHT_Test4", "NAB2_AUTO", "N", "O", "3383", "CLS.GAP", "ORMSAUUAT", "N", "2.00", "", "C", "ESOXR", "ORD", "VIC", "123451234", "BOPT", "20/08/2015", "20/08/2015", "Y", "4150001", "I0036534621", "A", "", "C", "AUD", "N", "4000.000000", "4000.000000", "", "", "", "", "", "", "Y", "", "", "", "", "", "", "", "4150002", "I0036534150", "A", "", "E", "", "N", "4000.000000", "4000.000000", "", "", "", "", "", "", "", "899", "", "", "", "", "", "", "4150003", "I0036534893", "P", "C", "C", "USD", "N", "4000.000000", "4000.000000", "", "", "", "", "", "", "", "", "", "", "1000", "899", "", "", "4150004", "I0036535041", "C", "C", "W", "", "N", "4000.000000", "4000.000000", "", "", "", "Y", "", "", "", "", "", "", "", "", "", "", "B", "B", "10", "00", "30.000000", "A", "A", "C", "C", "3522.000000", "105660.00", "30.000000", "30.000000", "105660.00", "", "781.98", "", "29495.00", "71.70", "47364.49", "27946.83", "316.98", "400.00", "10.00", "", "15.00", "40.00", "1", "11474.00", "1", "5679.00", "1", "476.32", "", "", "1", "10317.51", "", "", "781.98", "71.70", "", "", "", "", "", "TSSAL", "BOP4", "NDF", "OPT", "1", "3899.000000", "", "", "20/08/2015", "20/08/2015", "R", "R", "S", "S", "Settled", "30.000000", "4", "3899.000000", "27946.83", "Y", "C", "Cheque Loc", "AUD", "1000.000000", "Sell All", "ANZ", "013-100", "23232323", "1000.000000", "11474.00", "S", "SALE", "Settled", "4", "3899.000000", "27946.83", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", null)]
        [NUnit.Framework.TestCaseAttribute("BatSale_NOORMS_NoTopUp_VSA_Test5", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "N", "0.00", "", "V", "ESOXR", "", "", "123451234", "BOPT", "20/08/2015", "20/08/2015", "Y", "4160001", "I0036534460", "P", "V", "C", "AUD", "N", "4000.000000", "4000.000000", "", "1000", "899", "", "", "", "", "", "", "", "", "", "", "", "4160002", "I0036535156", "C", "V", "C", "USD", "N", "4000.000000", "4000.000000", "", "", "", "Y", "", "", "", "", "", "", "", "", "", "", "4160003", "I0036534532", "P", "V", "E", "", "N", "4000.000000", "4000.000000", "", "", "", "", "", "", "", "901", "799", "", "", "", "", "", "4160004", "I0036534192", "C", "V", "C", "AUD", "N", "4000.000000", "4000.000000", "", "", "", "", "", "", "Y", "", "", "", "", "", "", "", "B", "B", "10", "00", "30.000000", "A", "A", "C", "C", "2655.000000", "79650.00", "30.000000", "30.000000", "79650.00", "", "708.95", "", "38505.00", "63.89", "25287.10", "15085.06", "238.95", "400.00", "", "", "30.00", "40.00", "2", "7777.92", "1", "16.34", "", "", "", "", "1", "7290.80", "", "", "708.95", "63.89", "", "", "", "", "", "TSSAL", "BOP5", "NDF", "OPT", "1", "3901.000000", "", "", "20/08/2015", "20/08/2015", "R", "R", "S", "S", "Settled", "30.000000", "4", "3901.000000", "15085.06", "Y", "C", "Cheque Loc", "AUD", "899.000000", "Sell Partial", "ANZ", "013-100", "23232323", "1000.000000", "7756.00", "S", "SALE", "Settled", "4", "3901.000000", "15085.06", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", null)]
        [NUnit.Framework.TestCaseAttribute("BatSale_ORMS_TopUp_VSA_Test7", "NAB2_AUTO", "N", "O", "3383", "CLS.GAP", "ORMSAUUAT", "N", "2.00", "", "V", "ESOXR", "", "", "123451234", "BOPT", "20/08/2015", "20/08/2015", "Y", "4180001", "I0036534648", "P", "V", "C", "AUD", "N", "4000.000000", "4000.000000", "", "951", "801", "", "", "", "", "", "", "", "", "", "", "", "4180002", "I0036534559", "C", "V", "C", "USD", "N", "4000.000000", "4000.000000", "", "", "", "", "899", "", "", "", "", "", "", "", "", "", "4180003", "I0036535059", "P", "V", "E", "", "N", "4000.000000", "4000.000000", "", "", "", "", "", "", "", "999", "899", "", "", "", "", "", "4180004", "I0036534931", "C", "V", "C", "USD", "N", "4000.000000", "4000.000000", "", "", "", "", "", "", "", "881", "", "", "", "", "", "", "B", "B", "10", "00", "30.000000", "A", "A", "C", "C", "2569.000000", "77070.00", "30.000000", "30.000000", "77070.00", "", "726.21", "", "36459.00", "63.12", "25007.75", "14813.92", "231.21", "400.00", "", "", "15.00", "80.00", "1", "5756.70", "2", "569.91", "", "", "", "", "1", "8487.31", "", "", "726.21", "63.12", "", "", "", "", "", "TSSAL", "BOP7", "NDF", "OPT", "1", "3730.000000", "", "", "20/08/2015", "20/08/2015", "R", "R", "S", "S", "Settled", "30.000000", "4", "3730.000000", "14813.92", "Y", "C", "Cheque Loc", "AUD", "801.000000", "Sell Partial", "ANZ", "013-100", "23232323", "951.000000", "5756.70", "S", "SALE", "Settled", "4", "3730.000000", "14813.92", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", null)]
        [NUnit.Framework.TestCaseAttribute("BatSale_NOORMS_NoTopUp_Test9", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "N", "0.00", "Y", "C", "ESOXR", "ORD", "VIC", "123451234", "BOPT", "20/08/2015", "20/08/2015", "Y", "4220001", "I0036535091", "A", "", "C", "AUD", "N", "4000.000000", "4000.000000", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "4220002", "I0036534508", "S", "", "E", "", "N", "4000.000000", "4000.000000", "", "699", "", "", "599", "", "", "499", "", "", "1", "", "", "", "4220003", "I0036534214", "P", "C", "C", "USD", "N", "4000.000000", "4000.000000", "Y", "", "", "", "1000", "799", "", "801", "699", "Y", "", "", "", "", "4220004", "I0036535105", "C", "C", "W", "", "N", "4000.000000", "4000.000000", "Y", "", "", "Y", "", "", "", "799", "", "", "1", "", "", "", "B", "B", "10", "00", "30.000000", "A", "A", "C", "C", "10404.000000", "312120.00", "30.000000", "30.000000", "312120.00", "", "1401.36", "", "141786.00", "133.63", "", "168799.01", "936.36", "400.00", "10.00", "", "15.00", "40.00", "1", "75479.00", "1", "61438.70", "1", "5.31", "", "", "1", "31876.00", "", "", "1401.36", "133.63", "", "", "", "", "", "TSSAL", "BOP9", "NDF", "OPT", "1", "12399.000000", "", "", "20/08/2015", "20/08/2015", "R", "R", "S", "S", "Settled", "30.000000", "4", "12399.000000", "168799.01", "Y", "C", "Cheque Loc", "AUD", "4000.000000", "Sell All", "ANZ", "013-100", "23232323", "4000.000000", "75479.00", "S", "SALE", "Settled", "4", "12399.000000", "168799.01", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", null)]
        [NUnit.Framework.TestCaseAttribute("BatSale_ORMS_TopUp_Test10", "NAB2_AUTO", "Y", "O", "3383", "CLS.GAP", "ORMSAUUAT", "N", "2.00", "Y", "C", "ESOXR", "ORD", "VIC", "123451234", "BOPT", "20/08/2015", "20/08/2015", "Y", "4230001", "I0036535067", "A", "", "C", "AUD", "N", "4000.000000", "4000.000000", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "4230002", "I0036535237", "S", "", "E", "", "N", "4000.000000", "4000.000000", "", "699", "", "", "599", "", "", "499", "", "", "1", "", "", "", "4230003", "I0036535016", "P", "C", "C", "USD", "N", "4000.000000", "4000.000000", "Y", "", "", "", "1000", "799", "", "801", "699", "Y", "", "", "", "", "4230004", "I0036534800", "C", "C", "W", "", "N", "4000.000000", "4000.000000", "Y", "", "", "Y", "", "", "", "799", "", "", "1", "", "", "", "B", "B", "10", "00", "30.000000", "A", "A", "C", "C", "10430.000000", "312900.00", "30.000000", "30.000000", "312900.00", "", "1403.70", "", "141786.00", "133.87", "", "169576.43", "938.70", "400.00", "10.00", "", "15.00", "40.00", "1", "75479.00", "1", "61438.70", "1", "782.73", "", "", "1", "31876.00", "", "", "1403.70", "133.87", "", "", "", "", "", "TSSAL", "BO10", "NDF", "OPT", "1", "12399.000000", "", "", "20/08/2015", "20/08/2015", "R", "R", "S", "S", "Settled", "30.000000", "4", "12399.000000", "169576.43", "Y", "C", "Cheque Loc", "AUD", "4000.000000", "Sell All", "ANZ", "013-100", "23232323", "4000.000000", "75479.00", "S", "SALE", "Settled", "4", "12399.000000", "169576.43", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", null)]
        [NUnit.Framework.TestCaseAttribute("BatSale_NOORMS_NoTopUp_WHT_Test11", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "N", "0.00", "Y", "C", "ESOXR", "ORD", "VIC", "123451234", "BOPT", "20/08/2015", "20/08/2015", "Y", "4240001", "I0036537043", "A", "", "C", "AUD", "N", "4000.000000", "4000.000000", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "4240002", "I0036537191", "S", "", "E", "", "N", "4000.000000", "4000.000000", "", "699", "", "", "599", "", "", "499", "", "", "", "", "", "", "4240003", "I0036537141", "P", "C", "C", "USD", "N", "4000.000000", "4000.000000", "Y", "", "", "", "899", "801", "", "799", "702", "Y", "", "", "", "", "4240004", "I0036537019", "C", "C", "W", "", "N", "4000.000000", "4000.000000", "Y", "", "", "Y", "", "", "", "801", "", "", "", "", "", "", "B", "B", "10", "00", "30.000000", "A", "A", "C", "C", "11368.000000", "341040.00", "30.000000", "30.000000", "341040.00", "", "1488.12", "", "140756.00", "142.31", "127887.15", "70766.42", "1023.12", "400.00", "10.00", "", "15.00", "40.00", "1", "33071.00", "1", "23990.17", "1", "1.37", "", "", "1", "13703.88", "", "", "1488.12", "142.31", "", "", "", "", "", "TSSAL", "BO11", "NDF", "OPT", "1", "12296.000000", "", "", "20/08/2015", "20/08/2015", "R", "R", "S", "S", "Settled", "30.000000", "4", "12296.000000", "70766.42", "Y", "C", "Cheque Loc", "AUD", "4000.000000", "Sell All", "ANZ", "013-100", "23232323", "4000.000000", "33071.00", "S", "SALE", "Settled", "4", "12296.000000", "70766.42", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", null)]
        [NUnit.Framework.TestCaseAttribute("BatSale_ORMS_TopUp_WHT_Test12", "NAB2_AUTO", "Y", "O", "3383", "CLS.GAP", "ORMSAUUAT", "N", "2.00", "Y", "C", "ESOXR", "ORD", "VIC", "123451234", "BOPT", "20/08/2015", "20/08/2015", "Y", "4250001", "I0036536845", "A", "", "C", "AUD", "N", "4000.000000", "4000.000000", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "4250002", "I0036537108", "S", "", "E", "", "N", "4000.000000", "4000.000000", "", "699", "", "", "599", "", "", "499", "", "", "", "", "", "", "4250003", "I0036537035", "P", "C", "C", "USD", "N", "4000.000000", "4000.000000", "Y", "", "", "", "899", "801", "", "799", "702", "Y", "", "", "", "", "4250004", "I0036536993", "C", "C", "W", "", "N", "4000.000000", "4000.000000", "Y", "", "", "Y", "", "", "", "801", "", "", "", "", "", "", "B", "B", "10", "00", "30.000000", "A", "A", "C", "C", "11411.000000", "342330.00", "30.000000", "30.000000", "342330.00", "", "1491.99", "", "140756.00", "142.70", "127887.15", "72052.16", "1026.99", "400.00", "10.00", "", "15.00", "40.00", "1", "33071.00", "1", "23990.17", "1", "1287.11", "", "", "1", "13703.88", "", "", "1491.99", "142.70", "", "", "", "", "", "TSSAL", "BO12", "NDF", "OPT", "1", "12296.000000", "", "", "20/08/2015", "20/08/2015", "R", "R", "S", "S", "Settled", "30.000000", "4", "12296.000000", "72052.16", "Y", "C", "Cheque Loc", "AUD", "4000.000000", "Sell All", "ANZ", "013-100", "23232323", "4000.000000", "33071.00", "S", "SALE", "Settled", "4", "12296.000000", "72052.16", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", null)]
        [NUnit.Framework.TestCaseAttribute("BatSale_NOORMS_NoTopUp_VSA_Test13", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "N", "0.00", "Y", "V", "ESOXR", "", "", "123451234", "BOPT", "20/08/2015", "20/08/2015", "Y", "4260001", "I0036534354", "P", "V", "C", "AUD", "N", "4000.000000", "4000.000000", "Y", "", "", "", "899", "801", "", "799", "704", "", "", "", "", "", "4260002", "I0036535253", "C", "V", "C", "USD", "N", "4000.000000", "4000.000000", "Y", "", "", "Y", "", "", "Y", "", "", "", "901", "", "", "", "4260003", "I0036537116", "P", "V", "E", "", "N", "4000.000000", "4000.000000", "", "901", "899", "", "901", "899", "", "1000", "999", "", "1", "", "", "", "4260004", "I0036537027", "C", "V", "C", "AUD", "N", "4000.000000", "4000.000000", "Y", "", "", "Y", "", "", "", "1", "", "", "1", "", "", "", "B", "B", "10", "00", "30.000000", "A", "A", "C", "C", "8326.000000", "249780.00", "30.000000", "30.000000", "249780.00", "", "1219.34", "", "135149.00", "114.94", "47658.05", "65638.67", "749.34", "400.00", "", "", "30.00", "40.00", "2", "42817.23", "1", "17.04", "", "", "", "", "1", "22804.40", "", "", "1219.34", "114.94", "", "", "", "", "", "TSSAL", "BO13", "NDF", "OPT", "1", "11404.000000", "", "", "20/08/2015", "20/08/2015", "R", "R", "S", "S", "Settled", "30.000000", "4", "11404.000000", "65638.67", "Y", "C", "Cheque Loc", "AUD", "2505.000000", "Sell Partial", "ANZ", "013-100", "23232323", "2698.000000", "42792.00", "S", "SALE", "Settled", "4", "11404.000000", "65638.67", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", null)]
        [NUnit.Framework.TestCaseAttribute("BatSale_ORMS_TopUp_VSA_Test15", "NAB2_AUTO", "Y", "O", "3383", "CLS.GAP", "ORMSAUUAT", "N", "2.00", "Y", "V", "ESOXR", "", "", "123451234", "BOPT", "20/08/2015", "20/08/2015", "Y", "4280001", "I0036534281", "P", "V", "C", "AUD", "N", "4000.000000", "4000.000000", "", "951", "801", "", "999", "1", "Y", "", "", "Y", "", "", "", "", "4280002", "I0036534729", "C", "V", "C", "USD", "N", "4000.000000", "4000.000000", "Y", "", "", "Y", "", "", "Y", "", "", "", "", "", "", "", "4280003", "I0036536861", "P", "V", "E", "", "N", "4000.000000", "4000.000000", "Y", "", "", "", "999", "998", "", "899", "898", "Y", "", "", "", "", "4280004", "I0036536918", "C", "V", "C", "USD", "N", "4000.000000", "4000.000000", "Y", "", "", "Y", "", "", "", "881", "", "Y", "", "", "", "", "B", "B", "10", "00", "30.000000", "A", "A", "C", "C", "10746.000000", "322380.00", "30.000000", "30.000000", "322380.00", "", "1462.14", "", "163949.00", "136.71", "81878.49", "74953.66", "967.14", "400.00", "", "", "15.00", "80.00", "1", "40598.60", "2", "2509.19", "", "", "", "", "1", "31845.87", "", "", "1462.14", "136.71", "", "", "", "", "", "TSSAL", "BO14", "NDF", "OPT", "1", "14729.000000", "", "", "20/08/2015", "20/08/2015", "R", "R", "S", "S", "Settled", "30.000000", "4", "14729.000000", "74953.66", "Y", "C", "Cheque Loc", "AUD", "2802.000000", "Sell Partial", "ANZ", "013-100", "23232323", "3950.000000", "44887.32", "S", "SALE", "Settled", "4", "14729.000000", "74953.66", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", null)]
        public virtual void TestCase32236OptionsBatchSale(
                    string type, 
                    string cOY, 
                    string multi_Cert, 
                    string onMarketTrade, 
                    string brokerCode, 
                    string brokerAccountID, 
                    string connectionCode, 
                    string realTimeTrading, 
                    string topupPercentage, 
                    string sellSelected, 
                    string option, 
                    string tranType, 
                    string @class, 
                    string reg, 
                    string worldLinkNumber, 
                    string tradeControlCode, 
                    string tradeDate, 
                    string settlementDate, 
                    string applyTax, 
                    string transNumber1, 
                    string searchName1, 
                    string sellOption1, 
                    string remainingBalInd1, 
                    string paymentMethod1, 
                    string prefCurrency1, 
                    string notificationReqdInd1, 
                    string balance1, 
                    string availBalance1, 
                    string holder1SellAll01, 
                    string holder1ExerciseUnits01, 
                    string holder1Units01, 
                    string holder1SellAll02, 
                    string holder1ExerciseUnits02, 
                    string holder1Units02, 
                    string holder1SellAll03, 
                    string holder1ExerciseUnits03, 
                    string holder1Units03, 
                    string holder1SellAll04, 
                    string holder1ExerciseUnits04, 
                    string holder1Units04, 
                    string confirmUnits1, 
                    string confirmWarningFlag51, 
                    string transNumber2, 
                    string searchName2, 
                    string sellOption2, 
                    string remainingBalInd2, 
                    string paymentMethod2, 
                    string prefCurrency2, 
                    string notificationReqdInd2, 
                    string balance2, 
                    string availBalance2, 
                    string holder2SellAll01, 
                    string holder2ExerciseUnits01, 
                    string holder2Units01, 
                    string holder2SellAll02, 
                    string holder2ExerciseUnits02, 
                    string holder2Units02, 
                    string holder2SellAll03, 
                    string holder2ExerciseUnits03, 
                    string holder2Units03, 
                    string holder2SellAll04, 
                    string holder2ExerciseUnits04, 
                    string holder2Units04, 
                    string confirmUnits2, 
                    string confirmWarningFlag52, 
                    string transNumber3, 
                    string searchName3, 
                    string sellOption3, 
                    string remainingBalInd3, 
                    string paymentMethod3, 
                    string prefCurrency3, 
                    string notificationReqdInd3, 
                    string balance3, 
                    string availBalance3, 
                    string holder3SellAll01, 
                    string holder3ExerciseUnits01, 
                    string holder3Units01, 
                    string holder3SellAll02, 
                    string holder3ExerciseUnits02, 
                    string holder3Units02, 
                    string holder3SellAll03, 
                    string holder3ExerciseUnits03, 
                    string holder3Units03, 
                    string holder3SellAll04, 
                    string holder3ExerciseUnits04, 
                    string holder3Units04, 
                    string confirmUnits3, 
                    string confirmWarningFlag53, 
                    string transNumber4, 
                    string searchName4, 
                    string sellOption4, 
                    string remainingBalInd4, 
                    string paymentMethod4, 
                    string prefCurrency4, 
                    string notificationReqdInd4, 
                    string balance4, 
                    string availBalance4, 
                    string holder4SellAll01, 
                    string holder4ExerciseUnits01, 
                    string holder4Units01, 
                    string holder4SellAll02, 
                    string holder4ExerciseUnits02, 
                    string holder4Units02, 
                    string holder4SellAll03, 
                    string holder4ExerciseUnits03, 
                    string holder4Units03, 
                    string holder4SellAll04, 
                    string holder4ExerciseUnits04, 
                    string holder4Units04, 
                    string confirmUnits4, 
                    string confirmWarningFlag54, 
                    string menuSelection1, 
                    string confirmStatus1, 
                    string tradeTimeHH, 
                    string tradeTimeMM, 
                    string finalPrice, 
                    string menuSelection2, 
                    string confirmStatus2, 
                    string menuSelection3, 
                    string confirmStatus3, 
                    string unitsTraded, 
                    string totalCost, 
                    string tradePrice, 
                    string priceATAudit, 
                    string grossAmount, 
                    string purchaseResidue, 
                    string holderCharges1, 
                    string loanAmount, 
                    string optionCost, 
                    string gst, 
                    string taxWithheld, 
                    string nettAmount, 
                    string chargeAmount01, 
                    string chargeAmount02, 
                    string chargeAmount03, 
                    string chargeAmount04, 
                    string chargeAmount05, 
                    string chargeAmount06, 
                    string localChqCount, 
                    string localChqNettAmount, 
                    string foreignChqCount, 
                    string foreignChqNettAmt, 
                    string wireCount, 
                    string wireNettAmount, 
                    string directBankingCount, 
                    string directBankNettAmt, 
                    string employerCount, 
                    string employerNettAmount, 
                    string companyCharges, 
                    string companyTax, 
                    string holderCharges, 
                    string holderTax, 
                    string reportCharges, 
                    string reportTax, 
                    string bankType, 
                    string branchNumber, 
                    string accountNumber, 
                    string paymentAccount1, 
                    string orderNO, 
                    string ident, 
                    string classCode, 
                    string nbrTrades, 
                    string tradeGrossAmount, 
                    string tradeFrom, 
                    string tradeTO, 
                    string settlementFrom, 
                    string settlementTO, 
                    string menuSelection4, 
                    string confirmStatus4, 
                    string menuSelection5, 
                    string confirmStatus5, 
                    string status, 
                    string price, 
                    string transCount, 
                    string transTotal, 
                    string moneyTotal, 
                    string applyTaxInd, 
                    string paymentMethod, 
                    string paymentMethodDesc, 
                    string currency, 
                    string sellUnits, 
                    string orderType, 
                    string bankType1, 
                    string branchNumber1, 
                    string accountNumber1, 
                    string tradeUnits, 
                    string transMoney, 
                    string bulkType, 
                    string bulkTypeDesc, 
                    string statusDesc, 
                    string totalCount, 
                    string orderTransUnits, 
                    string totalMoney, 
                    string reqdSettlementDate, 
                    string actualSettlementDate, 
                    string reconciliationCode, 
                    string cshtrnReference, 
                    string minimumDeal, 
                    string maximumDeal, 
                    string cutOffTime, 
                    string counterpartyClass, 
                    string counterRegisterCode, 
                    string orderType1, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TS_TradingSystem",
                    "OptionsPlanSales",
                    "32236"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 32236: Options Batch Sale", @__tags);
#line 436
this.ScenarioSetup(scenarioInfo);
#line 437
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 438
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 439
  testRunner.And("I go to \"Company Options\" Control Code Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 440
  testRunner.And(string.Format("In HKS01516 I set the Multi-Cert Flag to \"{0}\"", multi_Cert), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 441
  testRunner.And("I go to \"Trading Control Codes\" Control Code Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 442
  testRunner.And(string.Format("In TRD24000 I select the Trade Control Code \"{0}\"", tradeControlCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 443
  testRunner.And(string.Format("In TRD24001 I perform a Change for On Market Trade \"{0}\", \"{1}\", \"{2}\", \"{3}\", \"{" +
                        "4}\" and Top Up \"{5}\", \"{6}\" and Remaining Balance Options \"{7}\", \"{8}\", \"{9}\", \"" +
                        "{10}\" and World Link Number \"{11}\"", onMarketTrade, brokerCode, brokerAccountID, connectionCode, realTimeTrading, topupPercentage, sellSelected, option, tranType, @class, reg, worldLinkNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 444
  testRunner.And(string.Format("I go to the Trading system Sales and trade control code \"{0}\"", tradeControlCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 445
  testRunner.And(string.Format("In TRD00201 I create a New Order as \"{0}\" \"{1}\" \"{2}\"", tradeDate, settlementDate, applyTax), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 446
  testRunner.And(string.Format("I transmit to TRS00701 to enter Postal Transaction Entry Details as \"{0}\" \"{1}\"", transNumber1, searchName1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 448
  testRunner.And(string.Format("In TRS00702 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\"", sellOption1, remainingBalInd1, paymentMethod1, prefCurrency1, notificationReqdInd1, balance1, availBalance1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 449
  testRunner.And(string.Format("In TRS00707 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", holder1SellAll01, holder1ExerciseUnits01, holder1Units01, holder1SellAll02, holder1ExerciseUnits02, holder1Units02, holder1SellAll03, holder1ExerciseUnits03, holder1Units03, holder1SellAll04, holder1ExerciseUnits04, holder1Units04), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 450
  testRunner.And(string.Format("In TRS00703 I Add Postal Transaction Entry details as \"<ExerciseUnits1>\" \"{0}\" \"{" +
                        "1}\"", confirmUnits1, confirmWarningFlag51), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 451
  testRunner.And(string.Format("In TRS00701 I Add Batch Postal Transaction Entry details as \"{0}\" \"{1}\"", transNumber2, searchName2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 452
  testRunner.And(string.Format("In TRS00702 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\"", sellOption2, remainingBalInd2, paymentMethod2, prefCurrency2, notificationReqdInd2, balance2, availBalance2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 453
  testRunner.And(string.Format("In TRS00707 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", holder2SellAll01, holder2ExerciseUnits01, holder2Units01, holder2SellAll02, holder2ExerciseUnits02, holder2Units02, holder2SellAll03, holder2ExerciseUnits03, holder2Units03, holder2SellAll04, holder2ExerciseUnits04, holder2Units04), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 454
  testRunner.And(string.Format("In TRS00703 I Add Postal Transaction Entry details as \"<ExerciseUnits2>\" \"{0}\" \"{" +
                        "1}\"", confirmUnits2, confirmWarningFlag52), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 455
  testRunner.And(string.Format("In TRS00701 I Add Batch Postal Transaction Entry details as \"{0}\" \"{1}\"", transNumber3, searchName3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 456
  testRunner.And(string.Format("In TRS00702 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\"", sellOption3, remainingBalInd3, paymentMethod3, prefCurrency3, notificationReqdInd3, balance3, availBalance3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 457
  testRunner.And(string.Format("In TRS00707 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", holder3SellAll01, holder3ExerciseUnits01, holder3Units01, holder3SellAll02, holder3ExerciseUnits02, holder3Units02, holder3SellAll03, holder3ExerciseUnits03, holder3Units03, holder3SellAll04, holder3ExerciseUnits04, holder3Units04), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 458
  testRunner.And(string.Format("In TRS00703 I Add Postal Transaction Entry details as \"<ExerciseUnits3>\" \"{0}\" \"{" +
                        "1}\"", confirmUnits3, confirmWarningFlag53), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 459
  testRunner.And(string.Format("In TRS00701 I Add Batch Postal Transaction Entry details as \"{0}\" \"{1}\"", transNumber4, searchName4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 460
  testRunner.And(string.Format("In TRS00702 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\"", sellOption4, remainingBalInd4, paymentMethod4, prefCurrency4, notificationReqdInd4, balance4, availBalance4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 461
  testRunner.And(string.Format("In TRS00707 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", holder4SellAll01, holder4ExerciseUnits01, holder4Units01, holder4SellAll02, holder4ExerciseUnits02, holder4Units02, holder4SellAll03, holder4ExerciseUnits03, holder4Units03, holder4SellAll04, holder4ExerciseUnits04, holder4Units04), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 462
  testRunner.And(string.Format("In TRS00703 I Add Postal Transaction Entry details as \"<ExerciseUnits4>\" \"{0}\" \"{" +
                        "1}\"", confirmUnits4, confirmWarningFlag54), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 463
  testRunner.And(string.Format("In TRD00401 I Change Batch Order Status to \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{" +
                        "6}\"", menuSelection1, confirmStatus1, tradeDate, tradeTimeHH, tradeTimeMM, settlementDate, finalPrice), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 464
  testRunner.And(string.Format("In TRD00401 I Change Batch Order Status to \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{" +
                        "6}\"", menuSelection2, confirmStatus2, tradeDate, tradeTimeHH, tradeTimeMM, settlementDate, finalPrice), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 465
  testRunner.And(string.Format("In TRD00401 I Change Order Status to \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\"", menuSelection3, confirmStatus3, tradeDate, tradeTimeHH, tradeTimeMM, settlementDate, finalPrice), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 466
 testRunner.Then(string.Format("In TRD004CS I Verify Change Order Status details1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\" \"{18}\"", unitsTraded, totalCost, finalPrice, tradePrice, priceATAudit, grossAmount, purchaseResidue, holderCharges1, loanAmount, optionCost, gst, taxWithheld, nettAmount, chargeAmount01, chargeAmount02, chargeAmount03, chargeAmount04, chargeAmount05, chargeAmount06), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 467
  testRunner.And(string.Format("In TRD004CS I Verify Change Order Status details2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\" \"{18}\"", localChqCount, localChqNettAmount, foreignChqCount, foreignChqNettAmt, wireCount, wireNettAmount, directBankingCount, directBankNettAmt, employerCount, employerNettAmount, companyCharges, companyTax, holderCharges, holderTax, reportCharges, reportTax, bankType, branchNumber, accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 468
 testRunner.When(string.Format("In TRD00101 I Run the Generate Output Job as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" " +
                        "\"{6}\" \"{7}\" \"{8}\" \"{9}\"", paymentAccount1, orderNO, ident, classCode, nbrTrades, tradeGrossAmount, tradeFrom, tradeTO, settlementFrom, settlementTO), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria",
                        "PassCriteriaLNX",
                        "FailCriteriaLNX"});
            table11.AddRow(new string[] {
                        "completion",
                        "240",
                        "error",
                        "DONE",
                        "EXIT"});
#line 469
  testRunner.And("I wait for  GenerateOutput job to complete", ((string)(null)), table11, "And ");
#line 472
  testRunner.And(string.Format("In TRD00401 I Apply Exercise Transaction as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"" +
                        "{6}\"", menuSelection4, confirmStatus4, tradeDate, tradeTimeHH, tradeTimeMM, settlementDate, finalPrice), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 473
  testRunner.And(string.Format("In TRD00401 I Force Settle the Order as \"{0}\" \"{1}\"", menuSelection5, confirmStatus5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 474
 testRunner.Then(string.Format("In TRS01010 I Verify Transaction Enquiry details as \"<TradingID>\" \"{0}\" \"{1}\" \"{2" +
                        "}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\"", status, price, classCode, transCount, transTotal, moneyTotal, settlementDate, applyTaxInd, paymentMethod, paymentMethodDesc, currency, sellUnits, orderType, tradeUnits, transMoney), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 475
  testRunner.And(string.Format("In TRDSCH02 I Verify Transaction Enquiry details as \"<TradingID>\" \"{0}\" \"{1}\" \"{2" +
                        "}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" " +
                        "\"{15}\" \"{16}\" \"{17}\"", bulkType, bulkTypeDesc, statusDesc, totalCount, orderTransUnits, totalMoney, tradeDate, reqdSettlementDate, actualSettlementDate, finalPrice, reconciliationCode, cshtrnReference, minimumDeal, maximumDeal, cutOffTime, counterpartyClass, counterRegisterCode, orderType1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 476
  testRunner.And(string.Format("In TRDSCHCS I Verify Transaction Enquiry details1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\"", unitsTraded, totalCost, finalPrice, priceATAudit, grossAmount, purchaseResidue, holderCharges1, loanAmount, optionCost, gst, taxWithheld, nettAmount, chargeAmount01, chargeAmount02, chargeAmount03, chargeAmount04, chargeAmount05, chargeAmount06), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 477
  testRunner.And(string.Format("In TRDSCHCS I Verify Transaction Enquiry details2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\" \"{18}\"", localChqCount, localChqNettAmount, foreignChqCount, foreignChqNettAmt, wireCount, wireNettAmount, directBankingCount, directBankNettAmt, employerCount, employerNettAmount, companyCharges, companyTax, holderCharges, holderTax, reportCharges, reportTax, bankType1, branchNumber1, accountNumber1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 32237: Rights Batch Sale")]
        [NUnit.Framework.CategoryAttribute("TS_TradingSystem")]
        [NUnit.Framework.CategoryAttribute("RightsPlanSales")]
        [NUnit.Framework.CategoryAttribute("32237")]
        [NUnit.Framework.TestCaseAttribute("BatSale_NOORMS_NoTopUp_Test1", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "N", "0.00", "", "C", "ESOXR", "ORD", "VIC", "123451234", "BPRS", "20/08/2015", "20/08/2015", "Y", "7120001", "I0036535369", "A", "", "C", "AUD", "N", "4000.000000", "3900.000000", "Y", "", "", "", "", "", "", "", "", "", "", "", "", "", "7120002", "I0036536225", "A", "", "E", "", "N", "4000.000000", "3900.000000", "", "699", "", "", "", "", "", "", "", "", "", "", "", "", "7120003", "I0036536063", "P", "C", "C", "USD", "N", "4000.000000", "3900.000000", "", "", "", "", "", "", "", "", "", "", "1000", "899", "", "", "7120004", "I0036535903", "C", "C", "W", "", "N", "4000.000000", "3900.000000", "Y", "", "", "", "", "", "", "", "", "", "", "", "", "", "B", "B", "10", "00", "30.000000", "A", "A", "C", "C", "2503.000000", "75090.00", "30.000000", "30.000000", "75090.00", "", "690.27", "", "", "62.53", "", "74337.20", "225.27", "400.00", "10.00", "", "15.00", "40.00", "1", "26785.90", "1", "26731.00", "1", "29.50", "", "", "1", "20790.80", "", "", "690.27", "62.53", "", "", "", "", "", "TSSAL", "BPR1", "NDF", "PRS", "1", "3499.000000", "", "", "20/08/2015", "20/08/2015", "R", "R", "S", "S", "Settled", "30.000000", "4", "3499.000000", "74337.20", "Y", "C", "Cheque Loc", "AUD", "900.000000", "Sell All", "ANZ", "013-100", "23232323", "900.000000", "26785.90", "S", "SALE", "Settled", "4", "3499.000000", "74337.20", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", null)]
        [NUnit.Framework.TestCaseAttribute("BatSale_ORMS_TopUp_Test2", "NAB2_AUTO", "N", "O", "3383", "CLS.GAP", "ORMSAUUAT", "N", "2.00", "", "C", "ESOXR", "ORD", "VIC", "123451234", "BPRS", "20/08/2015", "20/08/2015", "Y", "7130001", "I0036535393", "A", "", "C", "AUD", "N", "4000.000000", "3900.000000", "", "", "", "Y", "", "", "", "", "", "", "", "", "", "", "7130002", "I0036535911", "A", "", "E", "", "N", "4000.000000", "3900.000000", "", "", "", "", "799", "", "", "", "", "", "", "", "", "", "7130003", "I0036535679", "P", "C", "C", "USD", "N", "4000.000000", "3900.000000", "", "", "", "", "", "", "", "1000", "899", "", "", "", "", "", "7130004", "I0036535687", "C", "C", "W", "", "N", "4000.000000", "3900.000000", "", "", "", "", "", "", "", "", "", "Y", "", "", "", "", "B", "B", "10", "00", "30.000000", "A", "A", "C", "C", "2705.000000", "81150.00", "30.000000", "30.000000", "81150.00", "", "708.45", "", "", "64.34", "", "80377.21", "243.45", "400.00", "10.00", "", "15.00", "40.00", "1", "29776.00", "1", "26731.00", "1", "89.31", "", "", "1", "23780.90", "", "", "708.45", "64.34", "", "", "", "", "", "TSSAL", "BPR2", "NDF", "PRS", "1", "3799.000000", "", "", "20/08/2015", "20/08/2015", "R", "R", "S", "S", "Settled", "30.000000", "4", "3799.000000", "80377.21", "Y", "C", "Cheque Loc", "AUD", "1000.000000", "Sell All", "ANZ", "013-100", "23232323", "1000.000000", "29776.00", "S", "SALE", "Settled", "4", "3799.000000", "80377.21", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", null)]
        [NUnit.Framework.TestCaseAttribute("BatSale_NOORMS_NoTopUp_WHT_Test3", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "N", "0.00", "", "C", "ESOXR", "ORD", "VIC", "123451234", "BPRS", "20/08/2015", "20/08/2015", "Y", "7140001", "I0036535385", "A", "", "C", "AUD", "N", "4000.000000", "3900.000000", "", "", "", "", "", "", "Y", "", "", "", "", "", "", "", "7140002", "I0036535300", "A", "", "E", "", "N", "4000.000000", "3900.000000", "", "", "", "", "", "", "", "899", "", "", "", "", "", "", "7140003", "I0036535938", "P", "C", "C", "USD", "N", "4000.000000", "3900.000000", "", "", "", "", "", "", "", "", "", "", "1000", "899", "", "", "7140004", "I0036535571", "C", "C", "W", "", "N", "4000.000000", "3900.000000", "", "", "", "Y", "", "", "", "", "", "", "", "", "", "", "B", "B", "10", "00", "30.000000", "A", "A", "C", "C", "3323.000000", "99690.00", "30.000000", "30.000000", "99690.00", "", "764.07", "", "", "69.91", "60637.24", "38218.78", "299.07", "400.00", "10.00", "", "15.00", "40.00", "1", "14224.00", "1", "11179.00", "1", "26.02", "", "", "1", "12789.76", "", "", "764.07", "69.91", "", "", "", "", "", "TSSAL", "BPR3", "NDF", "PRS", "1", "3899.000000", "", "", "20/08/2015", "20/08/2015", "R", "R", "S", "S", "Settled", "30.000000", "4", "3899.000000", "38218.78", "Y", "C", "Cheque Loc", "AUD", "1000.000000", "Sell All", "ANZ", "013-100", "23232323", "1000.000000", "14224.00", "S", "SALE", "Settled", "4", "3899.000000", "38218.78", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", null)]
        [NUnit.Framework.TestCaseAttribute("BatSale_ORMS_TopUp_WHT_Test4", "NAB2_AUTO", "N", "O", "3383", "CLS.GAP", "ORMSAUUAT", "N", "2.00", "", "C", "ESOXR", "ORD", "VIC", "123451234", "BPRS", "20/08/2015", "20/08/2015", "Y", "7150001", "I0036536292", "A", "", "C", "AUD", "N", "4000.000000", "3900.000000", "", "", "", "", "", "", "Y", "", "", "", "", "", "", "", "7150002", "I0036536209", "A", "", "E", "", "N", "4000.000000", "3900.000000", "", "", "", "", "", "", "", "899", "", "", "", "", "", "", "7150003", "I0036536047", "P", "C", "C", "USD", "N", "4000.000000", "3900.000000", "", "", "", "", "", "", "", "", "", "", "1000", "899", "", "", "7150004", "I0036535318", "C", "C", "W", "", "N", "4000.000000", "3900.000000", "", "", "", "Y", "", "", "", "", "", "", "", "", "", "", "B", "B", "10", "00", "30.000000", "A", "A", "C", "C", "3334.000000", "100020.00", "30.000000", "30.000000", "100020.00", "", "765.06", "", "", "70.00", "60637.24", "38547.70", "300.06", "400.00", "10.00", "", "15.00", "40.00", "1", "14224.00", "1", "11179.00", "1", "354.94", "", "", "1", "12789.76", "", "", "765.06", "70.00", "", "", "", "", "", "TSSAL", "BPR4", "NDF", "PRS", "1", "3899.000000", "", "", "20/08/2015", "20/08/2015", "R", "R", "S", "S", "Settled", "30.000000", "4", "3899.000000", "38547.70", "Y", "C", "Cheque Loc", "AUD", "1000.000000", "Sell All", "ANZ", "013-100", "23232323", "1000.000000", "14224.00", "S", "SALE", "Settled", "4", "3899.000000", "38547.70", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", null)]
        [NUnit.Framework.TestCaseAttribute("BatSale_NOORMS_NoTopUp_VSA_Test5", "NAB2_AUTO", "N", "M", "3383", "CLS.GAP", "ORMSAUUAT", "N", "0.00", "", "V", "ESOXR", "", "", "123451234", "BPRS", "20/08/2015", "20/08/2015", "Y", "7160001", "I0036535458", "P", "V", "C", "AUD", "N", "4000.000000", "3900.000000", "", "900", "899", "", "", "", "", "", "", "", "", "", "", "", "7160002", "I0036535563", "C", "V", "C", "USD", "N", "4000.000000", "3900.000000", "", "", "", "Y", "", "", "", "", "", "", "", "", "", "", "7160003", "I0036535733", "P", "V", "E", "", "N", "4000.000000", "3900.000000", "", "", "", "", "", "", "", "901", "799", "", "", "", "", "", "7160004", "I0036536012", "C", "V", "C", "AUD", "N", "4000.000000", "3900.000000", "", "", "", "", "", "", "Y", "", "", "", "", "", "", "", "B", "B", "10", "00", "30.000000", "A", "A", "C", "C", "2229.000000", "66870.00", "30.000000", "30.000000", "66870.00", "", "670.61", "", "", "60.06", "29564.35", "36574.98", "200.61", "400.00", "", "", "30.00", "40.00", "2", "26777.02", "1", "29.41", "", "", "", "", "1", "9768.55", "", "", "670.61", "60.06", "", "", "", "", "", "TSSAL", "BPR5", "NDF", "PRS", "1", "3801.000000", "", "", "20/08/2015", "20/08/2015", "R", "R", "S", "S", "Settled", "30.000000", "4", "3801.000000", "36574.98", "Y", "C", "Cheque Loc", "AUD", "899.000000", "Sell Partial", "ANZ", "013-100", "23232323", "900.000000", "26756.00", "S", "SALE", "Settled", "4", "3801.000000", "36574.98", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", null)]
        [NUnit.Framework.TestCaseAttribute("BatSale_ORMS_TopUp_VSA_Test7", "NAB2_AUTO", "N", "O", "3383", "CLS.GAP", "ORMSAUUAT", "N", "2.00", "", "V", "ESOXR", "", "", "123451234", "BPRS", "20/08/2015", "20/08/2015", "Y", "7180001", "I0036536241", "P", "V", "C", "AUD", "N", "4000.000000", "3900.000000", "", "851", "801", "", "", "", "", "", "", "", "", "", "", "", "7180002", "I0036536195", "C", "V", "C", "USD", "N", "4000.000000", "3900.000000", "", "", "", "", "899", "", "", "", "", "", "", "", "", "", "7180003", "I0036535636", "P", "V", "E", "", "N", "4000.000000", "3900.000000", "", "", "", "", "", "", "", "999", "899", "", "", "", "", "", "7180004", "I0036535954", "C", "V", "C", "USD", "N", "4000.000000", "3900.000000", "", "", "", "", "", "", "", "881", "", "", "", "", "", "", "B", "B", "10", "00", "30.000000", "A", "A", "C", "C", "2182.000000", "65460.00", "30.000000", "30.000000", "65460.00", "", "691.38", "", "", "59.64", "29237.75", "35471.23", "196.38", "400.00", "", "", "15.00", "80.00", "1", "23825.70", "2", "410.97", "", "", "", "", "1", "11234.56", "", "", "691.38", "59.64", "", "", "", "", "", "TSSAL", "BPR7", "NDF", "PRS", "1", "3630.000000", "", "", "20/08/2015", "20/08/2015", "R", "R", "S", "S", "Settled", "30.000000", "4", "3630.000000", "35471.23", "Y", "C", "Cheque Loc", "AUD", "801.000000", "Sell Partial", "ANZ", "013-100", "23232323", "851.000000", "23825.70", "S", "SALE", "Settled", "4", "3630.000000", "35471.23", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", null)]
        [NUnit.Framework.TestCaseAttribute("BatSale_NOORMS_NoTopUp_Test9", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "N", "0.00", "Y", "C", "ESOXR", "ORD", "VIC", "123451234", "BPRS", "20/08/2015", "20/08/2015", "Y", "7220001", "I0036535776", "A", "", "C", "AUD", "N", "4000.000000", "3900.000000", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "7220002", "I0036536446", "S", "", "E", "", "N", "4000.000000", "3900.000000", "", "699", "", "", "599", "", "", "499", "", "", "1", "", "", "", "7220003", "I0036536250", "P", "C", "C", "USD", "N", "4000.000000", "3900.000000", "Y", "", "", "", "1000", "799", "", "801", "699", "Y", "", "", "", "", "7220004", "I0036535725", "C", "C", "W", "", "N", "4000.000000", "3900.000000", "Y", "", "", "Y", "", "", "", "799", "", "", "1", "", "", "", "B", "B", "10", "00", "30.000000", "A", "A", "C", "C", "9101.000000", "273030.00", "30.000000", "30.000000", "273030.00", "", "1284.09", "", "", "121.91", "", "271624.00", "819.09", "400.00", "10.00", "", "15.00", "40.00", "1", "116488.90", "1", "101453.60", "1", "29.50", "", "", "1", "53652.00", "", "", "1284.09", "121.91", "", "", "", "", "", "TSSAL", "BPR9", "NDF", "PRS", "1", "12099.000000", "", "", "20/08/2015", "20/08/2015", "R", "R", "S", "S", "Settled", "30.000000", "4", "12099.000000", "271624.00", "Y", "C", "Cheque Loc", "AUD", "3900.000000", "Sell All", "ANZ", "013-100", "23232323", "3900.000000", "116488.90", "S", "SALE", "Settled", "4", "12099.000000", "271624.00", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", null)]
        [NUnit.Framework.TestCaseAttribute("BatSale_ORMS_TopUp_Test10", "NAB2_AUTO", "Y", "O", "3383", "CLS.GAP", "ORMSAUUAT", "N", "2.00", "Y", "C", "ESOXR", "ORD", "VIC", "123451234", "BPRS", "20/08/2015", "20/08/2015", "Y", "7230001", "I0036535474", "A", "", "C", "AUD", "N", "4000.000000", "3900.000000", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "7230002", "I0036535598", "S", "", "E", "", "N", "4000.000000", "3900.000000", "", "699", "", "", "599", "", "", "499", "", "", "1", "", "", "", "7230003", "I0036535482", "P", "C", "C", "USD", "N", "4000.000000", "3900.000000", "Y", "", "", "", "1000", "799", "", "801", "699", "Y", "", "", "", "", "7230004", "I0036536101", "C", "C", "W", "", "N", "4000.000000", "3900.000000", "Y", "", "", "Y", "", "", "", "799", "", "", "1", "", "", "", "B", "B", "10", "00", "30.000000", "A", "A", "C", "C", "9103.000000", "273090.00", "30.000000", "30.000000", "273090.00", "", "1284.27", "", "", "121.92", "", "271683.81", "819.27", "400.00", "10.00", "", "15.00", "40.00", "1", "116488.90", "1", "101453.60", "1", "89.31", "", "", "1", "53652.00", "", "", "1284.27", "121.92", "", "", "", "", "", "TSSAL", "BP10", "NDF", "PRS", "1", "12099.000000", "", "", "20/08/2015", "20/08/2015", "R", "R", "S", "S", "Settled", "30.000000", "4", "12099.000000", "271683.81", "Y", "C", "Cheque Loc", "AUD", "3900.000000", "Sell All", "ANZ", "013-100", "23232323", "3900.000000", "116488.90", "S", "SALE", "Settled", "4", "12099.000000", "271683.81", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", null)]
        [NUnit.Framework.TestCaseAttribute("BatSale_NOORMS_NoTopUp_WHT_Test11", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "N", "0.00", "Y", "C", "ESOXR", "ORD", "VIC", "123451234", "BPRS", "20/08/2015", "20/08/2015", "Y", "7240001", "I0036536667", "A", "", "C", "AUD", "N", "4000.000000", "3900.000000", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "7240002", "I0036536802", "S", "", "E", "", "N", "4000.000000", "3900.000000", "", "699", "", "", "599", "", "", "499", "", "", "", "", "", "", "7240003", "I0036536756", "P", "C", "C", "USD", "N", "4000.000000", "3900.000000", "Y", "", "", "", "899", "801", "", "799", "702", "Y", "", "", "", "", "7240004", "I0036536632", "C", "C", "W", "", "N", "4000.000000", "3900.000000", "Y", "", "", "Y", "", "", "", "801", "", "", "", "", "", "", "B", "B", "10", "00", "30.000000", "A", "A", "C", "C", "10509.000000", "315270.00", "30.000000", "30.000000", "315270.00", "", "1410.81", "", "", "134.58", "186561.75", "127162.86", "945.81", "400.00", "10.00", "", "15.00", "40.00", "1", "55836.10", "1", "45647.02", "1", "4.56", "", "", "1", "25675.18", "", "", "1410.81", "134.58", "", "", "", "", "", "TSSAL", "BP11", "NDF", "PRS", "1", "11996.000000", "", "", "20/08/2015", "20/08/2015", "R", "R", "S", "S", "Settled", "30.000000", "4", "11996.000000", "127162.86", "Y", "C", "Cheque Loc", "AUD", "3900.000000", "Sell All", "ANZ", "013-100", "23232323", "3900.000000", "55836.10", "S", "SALE", "Settled", "4", "11996.000000", "127162.86", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", null)]
        [NUnit.Framework.TestCaseAttribute("BatSale_ORMS_TopUp_WHT_Test12", "NAB2_AUTO", "Y", "O", "3383", "CLS.GAP", "ORMSAUUAT", "N", "2.00", "Y", "C", "ESOXR", "ORD", "VIC", "123451234", "BPRS", "20/08/2015", "20/08/2015", "Y", "7250001", "I0036536462", "A", "", "C", "AUD", "N", "4000.000000", "3900.000000", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "7250002", "I0036536713", "S", "", "E", "", "N", "4000.000000", "3900.000000", "", "699", "", "", "599", "", "", "499", "", "", "", "", "", "", "7250003", "I0036536659", "P", "C", "C", "USD", "N", "4000.000000", "3900.000000", "Y", "", "", "", "899", "801", "", "799", "702", "Y", "", "", "", "", "7250004", "I0036536616", "C", "C", "W", "", "N", "4000.000000", "3900.000000", "Y", "", "", "Y", "", "", "", "801", "", "", "", "", "", "", "B", "B", "10", "00", "30.000000", "A", "A", "C", "C", "10540.000000", "316200.00", "30.000000", "30.000000", "316200.00", "", "1413.60", "", "", "134.86", "186561.75", "128089.79", "948.60", "400.00", "10.00", "", "15.00", "40.00", "1", "55836.10", "1", "45647.02", "1", "931.49", "", "", "1", "25675.18", "", "", "1413.60", "134.86", "", "", "", "", "", "TSSAL", "BP12", "NDF", "PRS", "1", "11996.000000", "", "", "20/08/2015", "20/08/2015", "R", "R", "S", "S", "Settled", "30.000000", "4", "11996.000000", "128089.79", "Y", "C", "Cheque Loc", "AUD", "3900.000000", "Sell All", "ANZ", "013-100", "23232323", "3900.000000", "55836.10", "S", "SALE", "Settled", "4", "11996.000000", "128089.79", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", null)]
        [NUnit.Framework.TestCaseAttribute("BatSale_NOORMS_NoTopUp_VSA_Test13", "NAB2_AUTO", "Y", "M", "3383", "CLS.GAP", "ORMSAUUAT", "N", "0.00", "Y", "V", "ESOXR", "", "", "123451234", "BPRS", "20/08/2015", "20/08/2015", "Y", "7260001", "I0036535610", "P", "V", "C", "AUD", "N", "4000.000000", "3900.000000", "Y", "", "", "", "899", "801", "", "799", "704", "", "", "", "", "", "7260002", "I0036535407", "C", "V", "C", "USD", "N", "4000.000000", "3900.000000", "Y", "", "", "Y", "", "", "Y", "", "", "", "901", "", "", "", "7260003", "I0036536721", "P", "V", "E", "", "N", "4000.000000", "3900.000000", "", "801", "799", "", "901", "899", "", "1000", "999", "", "1", "", "", "", "7260004", "I0036536641", "C", "V", "C", "AUD", "N", "4000.000000", "3900.000000", "Y", "", "", "Y", "", "", "", "1", "", "", "1", "", "", "", "B", "B", "10", "00", "30.000000", "A", "A", "C", "C", "6102.000000", "183060.00", "30.000000", "30.000000", "183060.00", "", "1019.18", "", "", "94.92", "71616.95", "110328.95", "549.18", "400.00", "", "", "30.00", "40.00", "2", "71803.59", "1", "29.41", "", "", "", "", "1", "38495.95", "", "", "1019.18", "94.92", "", "", "", "", "", "TSSAL", "BP13", "NDF", "PRS", "1", "11004.000000", "", "", "20/08/2015", "20/08/2015", "R", "R", "S", "S", "Settled", "30.000000", "4", "11004.000000", "110328.95", "Y", "C", "Cheque Loc", "AUD", "2405.000000", "Sell Partial", "ANZ", "013-100", "23232323", "2598.000000", "71786.90", "S", "SALE", "Settled", "4", "11004.000000", "110328.95", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", null)]
        [NUnit.Framework.TestCaseAttribute("BatSale_ORMS_TopUp_VSA_Test15", "NAB2_AUTO", "Y", "O", "3383", "CLS.GAP", "ORMSAUUAT", "N", "2.00", "Y", "V", "ESOXR", "", "", "123451234", "BPRS", "20/08/2015", "20/08/2015", "Y", "7280001", "I0036536161", "P", "V", "C", "AUD", "N", "4000.000000", "3900.000000", "", "851", "801", "", "999", "1", "Y", "", "", "Y", "", "", "", "", "7280002", "I0036535881", "C", "V", "C", "USD", "N", "4000.000000", "3900.000000", "Y", "", "", "Y", "", "", "Y", "", "", "", "", "", "", "", "7280003", "I0036536489", "P", "V", "E", "", "N", "4000.000000", "3900.000000", "Y", "", "", "", "999", "998", "", "899", "898", "Y", "", "", "", "", "7280004", "I0036536535", "C", "V", "C", "USD", "N", "4000.000000", "3900.000000", "Y", "", "", "Y", "", "", "", "881", "", "Y", "", "", "", "", "B", "B", "10", "00", "30.000000", "A", "A", "C", "C", "8620.000000", "258600.00", "30.000000", "30.000000", "258600.00", "", "1270.80", "", "", "117.58", "117868.59", "139343.03", "775.80", "400.00", "", "", "15.00", "80.00", "1", "83657.60", "2", "1357.71", "", "", "", "", "1", "54327.72", "", "", "1270.80", "117.58", "", "", "", "", "", "TSSAL", "BP14", "NDF", "PRS", "1", "14329.000000", "", "", "20/08/2015", "20/08/2015", "R", "R", "S", "S", "Settled", "30.000000", "4", "14329.000000", "139343.03", "Y", "C", "Cheque Loc", "AUD", "2802.000000", "Sell Partial", "ANZ", "013-100", "23232323", "3850.000000", "86523.84", "S", "SALE", "Settled", "4", "14329.000000", "139343.03", "20/08/2015", "20/08/2015", "ESSOPT", "", "1.000000", "99999999999.000000", "10:00", "ORD", "VIC", "Market", null)]
        public virtual void TestCase32237RightsBatchSale(
                    string type, 
                    string cOY, 
                    string multi_Cert, 
                    string onMarketTrade, 
                    string brokerCode, 
                    string brokerAccountID, 
                    string connectionCode, 
                    string realTimeTrading, 
                    string topupPercentage, 
                    string sellSelected, 
                    string option, 
                    string tranType, 
                    string @class, 
                    string reg, 
                    string worldLinkNumber, 
                    string tradeControlCode, 
                    string tradeDate, 
                    string settlementDate, 
                    string applyTax, 
                    string transNumber1, 
                    string searchName1, 
                    string sellOption1, 
                    string remainingBalInd1, 
                    string paymentMethod1, 
                    string prefCurrency1, 
                    string notificationReqdInd1, 
                    string balance1, 
                    string availBalance1, 
                    string holder1SellAll01, 
                    string holder1ExerciseUnits01, 
                    string holder1Units01, 
                    string holder1SellAll02, 
                    string holder1ExerciseUnits02, 
                    string holder1Units02, 
                    string holder1SellAll03, 
                    string holder1ExerciseUnits03, 
                    string holder1Units03, 
                    string holder1SellAll04, 
                    string holder1ExerciseUnits04, 
                    string holder1Units04, 
                    string confirmUnits1, 
                    string confirmWarningFlag51, 
                    string transNumber2, 
                    string searchName2, 
                    string sellOption2, 
                    string remainingBalInd2, 
                    string paymentMethod2, 
                    string prefCurrency2, 
                    string notificationReqdInd2, 
                    string balance2, 
                    string availBalance2, 
                    string holder2SellAll01, 
                    string holder2ExerciseUnits01, 
                    string holder2Units01, 
                    string holder2SellAll02, 
                    string holder2ExerciseUnits02, 
                    string holder2Units02, 
                    string holder2SellAll03, 
                    string holder2ExerciseUnits03, 
                    string holder2Units03, 
                    string holder2SellAll04, 
                    string holder2ExerciseUnits04, 
                    string holder2Units04, 
                    string confirmUnits2, 
                    string confirmWarningFlag52, 
                    string transNumber3, 
                    string searchName3, 
                    string sellOption3, 
                    string remainingBalInd3, 
                    string paymentMethod3, 
                    string prefCurrency3, 
                    string notificationReqdInd3, 
                    string balance3, 
                    string availBalance3, 
                    string holder3SellAll01, 
                    string holder3ExerciseUnits01, 
                    string holder3Units01, 
                    string holder3SellAll02, 
                    string holder3ExerciseUnits02, 
                    string holder3Units02, 
                    string holder3SellAll03, 
                    string holder3ExerciseUnits03, 
                    string holder3Units03, 
                    string holder3SellAll04, 
                    string holder3ExerciseUnits04, 
                    string holder3Units04, 
                    string confirmUnits3, 
                    string confirmWarningFlag53, 
                    string transNumber4, 
                    string searchName4, 
                    string sellOption4, 
                    string remainingBalInd4, 
                    string paymentMethod4, 
                    string prefCurrency4, 
                    string notificationReqdInd4, 
                    string balance4, 
                    string availBalance4, 
                    string holder4SellAll01, 
                    string holder4ExerciseUnits01, 
                    string holder4Units01, 
                    string holder4SellAll02, 
                    string holder4ExerciseUnits02, 
                    string holder4Units02, 
                    string holder4SellAll03, 
                    string holder4ExerciseUnits03, 
                    string holder4Units03, 
                    string holder4SellAll04, 
                    string holder4ExerciseUnits04, 
                    string holder4Units04, 
                    string confirmUnits4, 
                    string confirmWarningFlag54, 
                    string menuSelection1, 
                    string confirmStatus1, 
                    string tradeTimeHH, 
                    string tradeTimeMM, 
                    string finalPrice, 
                    string menuSelection2, 
                    string confirmStatus2, 
                    string menuSelection3, 
                    string confirmStatus3, 
                    string unitsTraded, 
                    string totalCost, 
                    string tradePrice, 
                    string priceATAudit, 
                    string grossAmount, 
                    string purchaseResidue, 
                    string holderCharges1, 
                    string loanAmount, 
                    string optionCost, 
                    string gst, 
                    string taxWithheld, 
                    string nettAmount, 
                    string chargeAmount01, 
                    string chargeAmount02, 
                    string chargeAmount03, 
                    string chargeAmount04, 
                    string chargeAmount05, 
                    string chargeAmount06, 
                    string localChqCount, 
                    string localChqNettAmount, 
                    string foreignChqCount, 
                    string foreignChqNettAmt, 
                    string wireCount, 
                    string wireNettAmount, 
                    string directBankingCount, 
                    string directBankNettAmt, 
                    string employerCount, 
                    string employerNettAmount, 
                    string companyCharges, 
                    string companyTax, 
                    string holderCharges, 
                    string holderTax, 
                    string reportCharges, 
                    string reportTax, 
                    string bankType, 
                    string branchNumber, 
                    string accountNumber, 
                    string paymentAccount1, 
                    string orderNO, 
                    string ident, 
                    string classCode, 
                    string nbrTrades, 
                    string tradeGrossAmount, 
                    string tradeFrom, 
                    string tradeTO, 
                    string settlementFrom, 
                    string settlementTO, 
                    string menuSelection4, 
                    string confirmStatus4, 
                    string menuSelection5, 
                    string confirmStatus5, 
                    string status, 
                    string price, 
                    string transCount, 
                    string transTotal, 
                    string moneyTotal, 
                    string applyTaxInd, 
                    string paymentMethod, 
                    string paymentMethodDesc, 
                    string currency, 
                    string sellUnits, 
                    string orderType, 
                    string bankType1, 
                    string branchNumber1, 
                    string accountNumber1, 
                    string tradeUnits, 
                    string transMoney, 
                    string bulkType, 
                    string bulkTypeDesc, 
                    string statusDesc, 
                    string totalCount, 
                    string orderTransUnits, 
                    string totalMoney, 
                    string reqdSettlementDate, 
                    string actualSettlementDate, 
                    string reconciliationCode, 
                    string cshtrnReference, 
                    string minimumDeal, 
                    string maximumDeal, 
                    string cutOffTime, 
                    string counterpartyClass, 
                    string counterRegisterCode, 
                    string orderType1, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TS_TradingSystem",
                    "RightsPlanSales",
                    "32237"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 32237: Rights Batch Sale", @__tags);
#line 502
this.ScenarioSetup(scenarioInfo);
#line 503
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 504
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 505
  testRunner.And("I go to \"Company Options\" Control Code Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 506
  testRunner.And(string.Format("In HKS01516 I set the Multi-Cert Flag to \"{0}\"", multi_Cert), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 507
  testRunner.And("I go to \"Trading Control Codes\" Control Code Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 508
  testRunner.And(string.Format("In TRD24000 I select the Trade Control Code \"{0}\"", tradeControlCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 509
  testRunner.And(string.Format("In TRD24001 I perform a Change for On Market Trade \"{0}\", \"{1}\", \"{2}\", \"{3}\", \"{" +
                        "4}\" and Top Up \"{5}\", \"{6}\" and Remaining Balance Options \"{7}\", \"{8}\", \"{9}\", \"" +
                        "{10}\" and World Link Number \"{11}\"", onMarketTrade, brokerCode, brokerAccountID, connectionCode, realTimeTrading, topupPercentage, sellSelected, option, tranType, @class, reg, worldLinkNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 510
  testRunner.And(string.Format("I go to the Trading system Sales and trade control code \"{0}\"", tradeControlCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 511
  testRunner.And(string.Format("In TRD00201 I create a New Order as \"{0}\" \"{1}\" \"{2}\"", tradeDate, settlementDate, applyTax), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 512
  testRunner.And(string.Format("I transmit to TRS00701 to enter Postal Transaction Entry Details as \"{0}\" \"{1}\"", transNumber1, searchName1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 514
  testRunner.And(string.Format("In TRS00702 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\"", sellOption1, remainingBalInd1, paymentMethod1, prefCurrency1, notificationReqdInd1, balance1, availBalance1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 515
  testRunner.And(string.Format("In TRS00707 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", holder1SellAll01, holder1ExerciseUnits01, holder1Units01, holder1SellAll02, holder1ExerciseUnits02, holder1Units02, holder1SellAll03, holder1ExerciseUnits03, holder1Units03, holder1SellAll04, holder1ExerciseUnits04, holder1Units04), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 516
  testRunner.And(string.Format("In TRS00703 I Add Postal Transaction Entry details as \"<ExerciseUnits1>\" \"{0}\" \"{" +
                        "1}\"", confirmUnits1, confirmWarningFlag51), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 517
  testRunner.And(string.Format("In TRS00701 I Add Batch Postal Transaction Entry details as \"{0}\" \"{1}\"", transNumber2, searchName2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 518
  testRunner.And(string.Format("In TRS00702 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\"", sellOption2, remainingBalInd2, paymentMethod2, prefCurrency2, notificationReqdInd2, balance2, availBalance2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 519
  testRunner.And(string.Format("In TRS00707 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", holder2SellAll01, holder2ExerciseUnits01, holder2Units01, holder2SellAll02, holder2ExerciseUnits02, holder2Units02, holder2SellAll03, holder2ExerciseUnits03, holder2Units03, holder2SellAll04, holder2ExerciseUnits04, holder2Units04), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 520
  testRunner.And(string.Format("In TRS00703 I Add Postal Transaction Entry details as \"<ExerciseUnits2>\" \"{0}\" \"{" +
                        "1}\"", confirmUnits2, confirmWarningFlag52), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 521
  testRunner.And(string.Format("In TRS00701 I Add Batch Postal Transaction Entry details as \"{0}\" \"{1}\"", transNumber3, searchName3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 522
  testRunner.And(string.Format("In TRS00702 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\"", sellOption3, remainingBalInd3, paymentMethod3, prefCurrency3, notificationReqdInd3, balance3, availBalance3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 523
  testRunner.And(string.Format("In TRS00707 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", holder3SellAll01, holder3ExerciseUnits01, holder3Units01, holder3SellAll02, holder3ExerciseUnits02, holder3Units02, holder3SellAll03, holder3ExerciseUnits03, holder3Units03, holder3SellAll04, holder3ExerciseUnits04, holder3Units04), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 524
  testRunner.And(string.Format("In TRS00703 I Add Postal Transaction Entry details as \"<ExerciseUnits3>\" \"{0}\" \"{" +
                        "1}\"", confirmUnits3, confirmWarningFlag53), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 525
  testRunner.And(string.Format("In TRS00701 I Add Batch Postal Transaction Entry details as \"{0}\" \"{1}\"", transNumber4, searchName4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 526
  testRunner.And(string.Format("In TRS00702 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\"", sellOption4, remainingBalInd4, paymentMethod4, prefCurrency4, notificationReqdInd4, balance4, availBalance4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 527
  testRunner.And(string.Format("In TRS00707 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", holder4SellAll01, holder4ExerciseUnits01, holder4Units01, holder4SellAll02, holder4ExerciseUnits02, holder4Units02, holder4SellAll03, holder4ExerciseUnits03, holder4Units03, holder4SellAll04, holder4ExerciseUnits04, holder4Units04), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 528
  testRunner.And(string.Format("In TRS00703 I Add Postal Transaction Entry details as \"<ExerciseUnits4>\" \"{0}\" \"{" +
                        "1}\"", confirmUnits4, confirmWarningFlag54), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 529
  testRunner.And(string.Format("In TRD00401 I Change Batch Order Status to \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{" +
                        "6}\"", menuSelection1, confirmStatus1, tradeDate, tradeTimeHH, tradeTimeMM, settlementDate, finalPrice), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 530
  testRunner.And(string.Format("In TRD00401 I Change Batch Order Status to \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{" +
                        "6}\"", menuSelection2, confirmStatus2, tradeDate, tradeTimeHH, tradeTimeMM, settlementDate, finalPrice), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 531
  testRunner.And(string.Format("In TRD00401 I Change Order Status to \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\"", menuSelection3, confirmStatus3, tradeDate, tradeTimeHH, tradeTimeMM, settlementDate, finalPrice), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 532
 testRunner.Then(string.Format("In TRD004CS I Verify Change Order Status details1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\" \"{18}\"", unitsTraded, totalCost, finalPrice, tradePrice, priceATAudit, grossAmount, purchaseResidue, holderCharges1, loanAmount, optionCost, gst, taxWithheld, nettAmount, chargeAmount01, chargeAmount02, chargeAmount03, chargeAmount04, chargeAmount05, chargeAmount06), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 533
  testRunner.And(string.Format("In TRD004CS I Verify Change Order Status details2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\" \"{18}\"", localChqCount, localChqNettAmount, foreignChqCount, foreignChqNettAmt, wireCount, wireNettAmount, directBankingCount, directBankNettAmt, employerCount, employerNettAmount, companyCharges, companyTax, holderCharges, holderTax, reportCharges, reportTax, bankType, branchNumber, accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 534
 testRunner.When(string.Format("In TRD00101 I Run the Generate Output Job as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" " +
                        "\"{6}\" \"{7}\" \"{8}\" \"{9}\"", paymentAccount1, orderNO, ident, classCode, nbrTrades, tradeGrossAmount, tradeFrom, tradeTO, settlementFrom, settlementTO), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria",
                        "PassCriteriaLNX",
                        "FailCriteriaLNX"});
            table12.AddRow(new string[] {
                        "completion",
                        "240",
                        "error",
                        "DONE",
                        "EXIT"});
#line 535
  testRunner.And("I wait for  GenerateOutput job to complete", ((string)(null)), table12, "And ");
#line 538
  testRunner.And(string.Format("In TRD00401 I Apply Exercise Transaction as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"" +
                        "{6}\"", menuSelection4, confirmStatus4, tradeDate, tradeTimeHH, tradeTimeMM, settlementDate, finalPrice), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 539
  testRunner.And(string.Format("In TRD00401 I Force Settle the Order as \"{0}\" \"{1}\"", menuSelection5, confirmStatus5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 540
 testRunner.Then(string.Format("In TRS01010 I Verify Transaction Enquiry details as \"<TradingID>\" \"{0}\" \"{1}\" \"{2" +
                        "}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\"", status, price, classCode, transCount, transTotal, moneyTotal, settlementDate, applyTaxInd, paymentMethod, paymentMethodDesc, currency, sellUnits, orderType, tradeUnits, transMoney), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 541
  testRunner.And(string.Format("In TRDSCH02 I Verify Transaction Enquiry details as \"<TradingID>\" \"{0}\" \"{1}\" \"{2" +
                        "}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" " +
                        "\"{15}\" \"{16}\" \"{17}\"", bulkType, bulkTypeDesc, statusDesc, totalCount, orderTransUnits, totalMoney, tradeDate, reqdSettlementDate, actualSettlementDate, finalPrice, reconciliationCode, cshtrnReference, minimumDeal, maximumDeal, cutOffTime, counterpartyClass, counterRegisterCode, orderType1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 542
  testRunner.And(string.Format("In TRDSCHCS I Verify Transaction Enquiry details1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\"", unitsTraded, totalCost, finalPrice, priceATAudit, grossAmount, purchaseResidue, holderCharges1, loanAmount, optionCost, gst, taxWithheld, nettAmount, chargeAmount01, chargeAmount02, chargeAmount03, chargeAmount04, chargeAmount05, chargeAmount06), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 543
  testRunner.And(string.Format("In TRDSCHCS I Verify Transaction Enquiry details2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\" \"{18}\"", localChqCount, localChqNettAmount, foreignChqCount, foreignChqNettAmt, wireCount, wireNettAmount, directBankingCount, directBankNettAmt, employerCount, employerNettAmount, companyCharges, companyTax, holderCharges, holderTax, reportCharges, reportTax, bankType1, branchNumber1, accountNumber1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 33714: Exempt Batch Sale")]
        [NUnit.Framework.CategoryAttribute("TS_TradingSystem")]
        [NUnit.Framework.CategoryAttribute("AESSPlanSales")]
        [NUnit.Framework.CategoryAttribute("33714")]
        [NUnit.Framework.TestCaseAttribute("BatchSale", "NAB2_AUTO", "M", "3383", "CLS.GAP", "ORMSAUUAT", "N", "0.00", "Y", "C", "ESTSC", "ORD", "VIC", "123451234", "1ESO", "20/08/2015", "20/08/2015", "Y", "6000001", "I0035719393", "A", "", "C", "AUD", "N", "92.000000", "92.000000", "92.000000", "", "6000002", "I0035161864", "P", "60", "D", "", "N", "92.000000", "92.000000", "60.000000", "Y", "6000003", "I0035719652", "C", "", "E", "", "N", "92.000000", "92.000000", "", "", "Y", "Y", "N", "", "", "", "", "", "", "", "", "", "", "", "", "6000004", "I0033798580", "S", "", "W", "", "N", "92.000000", "92.000000", "82.000000", "Y", "Y", "", "Y", "", "", "20", "", "", "", "", "", "", "", "", "", "", "", "", "B", "B", "10", "00", "30.000000", "A", "A", "C", "C", "238.000000", "7140.00", "30.000000", "30.000000", "7140.00", "", "456.42", "", "", "42.15", "", "6641.43", "21.42", "400.00", "10.00", "10.00", "15.00", "", "1", "2625.89", "", "", "1", "2331.88", "1", "1674.06", "1", "9.60", "", "", "456.42", "42.15", "", "", "", "", "", "TSSAL", "ESO1", "NDF", "ESO", "1", "296.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "4", "296.000000", "6641.43", "Y", "C", "Cheque Loc", "AUD", "92.000000", "Sell All", "S", "SALE", "Settled", "4", "296.000000", "6641.43", "20/08/2015", "20/08/2015", "ESSOPT", "1963", "1.000000", "99999999999999.990000", "10:00", "ORD", "VIC", "Market", "ANZ", "013-100", "23232323", "92.000000", "2625.89", null)]
        public virtual void TestCase33714ExemptBatchSale(
                    string saleType, 
                    string cOY, 
                    string onMarketTrade, 
                    string brokerCode, 
                    string brokerAccountID, 
                    string connectionCode, 
                    string realTimeTrading, 
                    string topupPercentage, 
                    string sellSelected, 
                    string option, 
                    string tranType, 
                    string @class, 
                    string reg, 
                    string worldLinkNumber, 
                    string tradeControlCode, 
                    string tradeDate, 
                    string settlementDate, 
                    string applyTax, 
                    string transNumber1, 
                    string searchName1, 
                    string sellOption1, 
                    string units1, 
                    string paymentMethod1, 
                    string prefCurrency1, 
                    string notificationReqdInd1, 
                    string balance1, 
                    string availBalance1, 
                    string confirmUnits1, 
                    string confirmWarningFlag51, 
                    string transNumber2, 
                    string searchName2, 
                    string sellOption2, 
                    string units2, 
                    string paymentMethod2, 
                    string prefCurrency2, 
                    string notificationReqdInd2, 
                    string balance2, 
                    string availBalance2, 
                    string confirmUnits2, 
                    string confirmWarningFlag52, 
                    string transNumber3, 
                    string searchName3, 
                    string sellOption3, 
                    string units3, 
                    string paymentMethod3, 
                    string prefCurrency3, 
                    string notificationReqdInd3, 
                    string balance3, 
                    string availBalance3, 
                    string confirmUnits3, 
                    string confirmWarningFlag53, 
                    string cover01, 
                    string cover02, 
                    string cover03, 
                    string cover04, 
                    string cover05, 
                    string cover06, 
                    string cover07, 
                    string cover08, 
                    string cover09, 
                    string cover10, 
                    string cover11, 
                    string cover12, 
                    string cover13, 
                    string cover14, 
                    string cover15, 
                    string transNumber4, 
                    string searchName4, 
                    string sellOption4, 
                    string units4, 
                    string paymentMethod4, 
                    string prefCurrency4, 
                    string notificationReqdInd4, 
                    string balance4, 
                    string availBalance4, 
                    string confirmUnits4, 
                    string confirmWarningFlag54, 
                    string sellAll01, 
                    string units01, 
                    string sellAll02, 
                    string units02, 
                    string sellAll03, 
                    string units03, 
                    string sellAll04, 
                    string units04, 
                    string sellAll05, 
                    string units05, 
                    string sellAll06, 
                    string units06, 
                    string sellAll07, 
                    string units07, 
                    string sellAll08, 
                    string units08, 
                    string sellAll09, 
                    string units09, 
                    string menuSelection1, 
                    string confirmStatus1, 
                    string tradeTimeHH, 
                    string tradeTimeMM, 
                    string finalPrice, 
                    string menuSelection2, 
                    string confirmStatus2, 
                    string menuSelection3, 
                    string confirmStatus3, 
                    string unitsTraded, 
                    string totalCost, 
                    string tradePrice, 
                    string priceATAudit, 
                    string grossAmount, 
                    string purchaseResidue, 
                    string holderCharges1, 
                    string loanAmount, 
                    string optionCost, 
                    string gst, 
                    string taxWithheld, 
                    string nettAmount, 
                    string chargeAmount01, 
                    string chargeAmount02, 
                    string chargeAmount03, 
                    string chargeAmount04, 
                    string chargeAmount05, 
                    string chargeAmount06, 
                    string localChqCount, 
                    string localChqNettAmount, 
                    string foreignChqCount, 
                    string foreignChqNettAmt, 
                    string wireCount, 
                    string wireNettAmount, 
                    string directBankingCount, 
                    string directBankNettAmt, 
                    string employerCount, 
                    string employerNettAmount, 
                    string companyCharges, 
                    string companyTax, 
                    string holderCharges, 
                    string holderTax, 
                    string reportCharges, 
                    string reportTax, 
                    string bankType, 
                    string branchNumber, 
                    string accountNumber, 
                    string paymentAccount1, 
                    string orderNO, 
                    string ident, 
                    string classCode, 
                    string nbrTrades, 
                    string tradeGrossAmount, 
                    string tradeFrom, 
                    string tradeTO, 
                    string settlementFrom, 
                    string settlementTO, 
                    string menuSelection4, 
                    string confirmStatus4, 
                    string tradingID, 
                    string status, 
                    string price, 
                    string transCount, 
                    string transTotal, 
                    string moneyTotal, 
                    string applyTaxInd, 
                    string paymentMethod, 
                    string paymentMethodDesc, 
                    string currency, 
                    string sellUnits, 
                    string orderType, 
                    string bulkType, 
                    string bulkTypeDesc, 
                    string statusDesc, 
                    string totalCount, 
                    string orderTransUnits, 
                    string totalMoney, 
                    string reqdSettlementDate, 
                    string actualSettlementDate, 
                    string reconciliationCode, 
                    string cshtrnReference, 
                    string minimumDeal, 
                    string maximumDeal, 
                    string cutOffTime, 
                    string counterpartyClass, 
                    string counterRegisterCode, 
                    string orderType1, 
                    string bankType1, 
                    string branchNumber1, 
                    string accountNumber1, 
                    string tradeUnits, 
                    string transMoney, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TS_TradingSystem",
                    "AESSPlanSales",
                    "33714"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 33714: Exempt Batch Sale", @__tags);
#line 568
this.ScenarioSetup(scenarioInfo);
#line 569
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 570
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 573
  testRunner.And("I go to \"Trading Control Codes\" Control Code Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 574
  testRunner.And(string.Format("In TRD24000 I select the Trade Control Code \"{0}\"", tradeControlCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 575
  testRunner.And(string.Format("In TRD24001 I perform a Change for On Market Trade \"{0}\", \"{1}\", \"{2}\", \"{3}\", \"{" +
                        "4}\" and Top Up \"{5}\", \"{6}\" and Remaining Balance Options \"{7}\", \"{8}\", \"{9}\", \"" +
                        "{10}\" and World Link Number \"{11}\"", onMarketTrade, brokerCode, brokerAccountID, connectionCode, realTimeTrading, topupPercentage, sellSelected, option, tranType, @class, reg, worldLinkNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 576
  testRunner.And(string.Format("I go to the Trading system Sales and trade control code \"{0}\"", tradeControlCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 577
  testRunner.And(string.Format("In TRD00201 I create a New Order as \"{0}\" \"{1}\" \"{2}\"", tradeDate, settlementDate, applyTax), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 578
  testRunner.And(string.Format("In TRS00501 I Add Batch Postal Transaction Entry details as \"{0}\" \"{1}\"", transNumber1, searchName1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 579
  testRunner.And(string.Format("In TRS00502 I Add Batch Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3" +
                        "}\" \"{4}\" \"{5}\" \"{6}\"", sellOption1, units1, paymentMethod1, prefCurrency1, notificationReqdInd1, balance1, availBalance1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 580
  testRunner.And(string.Format("In TRS00503 I Add Postal Transaction Entry details as \"{0}\" \"{1}\"", confirmUnits1, confirmWarningFlag51), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 581
  testRunner.And(string.Format("In TRS00501 I Add Batch Postal Transaction Entry details as \"{0}\" \"{1}\"", transNumber2, searchName2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 582
  testRunner.And(string.Format("In TRS00502 I Add Batch Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3" +
                        "}\" \"{4}\" \"{5}\" \"{6}\"", sellOption2, units2, paymentMethod2, prefCurrency2, notificationReqdInd2, balance2, availBalance2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 583
  testRunner.And(string.Format("In TRS00503 I Add Postal Transaction Entry details as \"{0}\" \"{1}\"", confirmUnits2, confirmWarningFlag52), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 584
  testRunner.And(string.Format("In TRS00501 I Add Batch Postal Transaction Entry details as \"{0}\" \"{1}\"", transNumber3, searchName3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 585
  testRunner.And(string.Format("In TRS00502 I Add Batch Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3" +
                        "}\" \"{4}\" \"{5}\" \"{6}\"", sellOption3, units3, paymentMethod3, prefCurrency3, notificationReqdInd3, balance3, availBalance3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 586
  testRunner.And(string.Format("In TRS00513 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\"", cover01, cover02, cover03, cover04, cover05, cover06, cover07, cover08, cover09, cover10, cover11, cover12, cover13, cover14, cover15), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 587
  testRunner.And(string.Format("In TRS00503 I Add Postal Transaction Entry details as \"{0}\" \"{1}\"", confirmUnits3, confirmWarningFlag53), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 588
  testRunner.And(string.Format("In TRS00501 I Add Batch Postal Transaction Entry details as \"{0}\" \"{1}\"", transNumber4, searchName4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 589
  testRunner.And(string.Format("In TRS00502 I Add Batch Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3" +
                        "}\" \"{4}\" \"{5}\" \"{6}\"", sellOption4, units4, paymentMethod4, prefCurrency4, notificationReqdInd4, balance4, availBalance4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 590
  testRunner.And(string.Format("In TRS00507 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}" +
                        "\" \"{17}\"", sellAll01, units01, sellAll02, units02, sellAll03, units03, sellAll04, units04, sellAll05, units05, sellAll06, units06, sellAll07, units07, sellAll08, units08, sellAll09, units09), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 591
  testRunner.And(string.Format("In TRS00503 I Add Postal Transaction Entry details as \"{0}\" \"{1}\"", confirmUnits4, confirmWarningFlag54), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 592
  testRunner.And(string.Format("In TRD00401 I Change Batch Order Status to \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{" +
                        "6}\"", menuSelection1, confirmStatus1, tradeDate, tradeTimeHH, tradeTimeMM, settlementDate, finalPrice), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 593
  testRunner.And(string.Format("In TRD00401 I Change Batch Order Status to \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{" +
                        "6}\"", menuSelection2, confirmStatus2, tradeDate, tradeTimeHH, tradeTimeMM, settlementDate, finalPrice), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 594
  testRunner.And(string.Format("In TRD00401 I Change Order Status to \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\"", menuSelection3, confirmStatus3, tradeDate, tradeTimeHH, tradeTimeMM, settlementDate, finalPrice), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 595
 testRunner.Then(string.Format("In TRD004CS I Verify Change Order Status details1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\" \"{18}\"", unitsTraded, totalCost, finalPrice, tradePrice, priceATAudit, grossAmount, purchaseResidue, holderCharges1, loanAmount, optionCost, gst, taxWithheld, nettAmount, chargeAmount01, chargeAmount02, chargeAmount03, chargeAmount04, chargeAmount05, chargeAmount06), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 596
  testRunner.And(string.Format("In TRD004CS I Verify Change Order Status details2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\" \"{18}\"", localChqCount, localChqNettAmount, foreignChqCount, foreignChqNettAmt, wireCount, wireNettAmount, directBankingCount, directBankNettAmt, employerCount, employerNettAmount, companyCharges, companyTax, holderCharges, holderTax, reportCharges, reportTax, bankType, branchNumber, accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 597
 testRunner.When(string.Format("In TRD00101 I Run the Exempt Generate Output Job as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        " \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\"", paymentAccount1, orderNO, ident, classCode, nbrTrades, tradeGrossAmount, tradeFrom, tradeTO, settlementFrom, settlementTO), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria",
                        "PassCriteriaLNX",
                        "FailCriteriaLNX"});
            table13.AddRow(new string[] {
                        "completion",
                        "240",
                        "error",
                        "DONE",
                        "EXIT"});
#line 598
  testRunner.And("I wait for  GenerateOutput job to complete", ((string)(null)), table13, "And ");
#line 601
  testRunner.And(string.Format("In TRD00401 I Force Settle the Order as \"{0}\" \"{1}\"", menuSelection4, confirmStatus4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 602
 testRunner.Then(string.Format("In TRS01010 I Verify Transaction Enquiry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        " \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\"", tradingID, status, price, classCode, transCount, transTotal, moneyTotal, settlementDate, applyTaxInd, paymentMethod, paymentMethodDesc, currency, sellUnits, orderType, tradeUnits, transMoney), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 603
  testRunner.And(string.Format("In TRDSCH02 I Verify Transaction Enquiry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        " \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" " +
                        "\"{17}\" \"{18}\"", tradingID, bulkType, bulkTypeDesc, statusDesc, totalCount, orderTransUnits, totalMoney, tradeDate, reqdSettlementDate, actualSettlementDate, finalPrice, reconciliationCode, cshtrnReference, minimumDeal, maximumDeal, cutOffTime, counterpartyClass, counterRegisterCode, orderType1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 604
  testRunner.And(string.Format("In TRDSCHCS I Verify Transaction Enquiry details1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\"", unitsTraded, totalCost, finalPrice, priceATAudit, grossAmount, purchaseResidue, holderCharges1, loanAmount, optionCost, gst, taxWithheld, nettAmount, chargeAmount01, chargeAmount02, chargeAmount03, chargeAmount04, chargeAmount05, chargeAmount06), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 605
  testRunner.And(string.Format("In TRDSCHCS I Verify Transaction Enquiry details2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}" +
                        "\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"" +
                        " \"{17}\" \"{18}\"", localChqCount, localChqNettAmount, foreignChqCount, foreignChqNettAmt, wireCount, wireNettAmount, directBankingCount, directBankNettAmt, employerCount, employerNettAmount, companyCharges, companyTax, holderCharges, holderTax, reportCharges, reportTax, bankType1, branchNumber1, accountNumber1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Options Transfers")]
        [NUnit.Framework.CategoryAttribute("TS_TradingSystem")]
        [NUnit.Framework.CategoryAttribute("OptionsTransfers")]
        [NUnit.Framework.TestCaseAttribute("HoldSpec_Multi_N_Test2", "NAB2_AUTO", "N", "C", "ESOXH", "ORD", "VIC", "", "I0036534117", "", "", "", "", "999", "", "", "", "", "", "", "", "S", "C", "", "", "N", "4000.000000", "4000.000000", "", "", "", "A", "A", "20/08/2015", "10", "00", "", "30.000000", "TSSAL", "TOP2", "NDF", "OPT", "1", "999.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "999.000000", "19861.30", "Y", "", "AUD", "999.000000", "Tran Specific", "T", "TRADE", "Settled", "1", "999.000000", "19861.30", "20/08/2015", "20/08/2015", "", "", "1.000000", "99999999999999.990000", "", "", "", "", "", "", "", "", "", "01", "", "999.000000", "29970.00", "", "", "9990.00", "10.79", "", "10108.70", "89.91", "18.00", "", "", "", "", "", "", "", "", "107.91", "10.79", "", "", "", "", "107.91", "10.79", "TH", "/OPT", "", "", "", "999.000000", "Issuer", "I0036534117", "ORD", "TOPT", "999.000000", "", null)]
        [NUnit.Framework.TestCaseAttribute("HoldAll_Multi_N_WHT_Test3", "NAB2_AUTO", "N", "C", "ESOXH", "ORD", "VIC", "", "I0036534907", "", "", "", "", "", "", "Y", "", "", "", "", "", "A", "C", "", "", "N", "4000.000000", "4000.000000", "", "", "", "A", "A", "20/08/2015", "10", "00", "", "30.000000", "TSSAL", "TOP3", "NDF", "OPT", "1", "1000.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "1000.000000", "11579.20", "Y", "", "AUD", "1000.000000", "Transfer All", "T", "TRADE", "Settled", "1", "1000.000000", "11579.20", "20/08/2015", "20/08/2015", "", "", "1.000000", "99999999999999.990000", "", "", "", "", "", "", "", "", "", "01", "", "1000.000000", "30000.00", "", "", "5000.00", "10.80", "13302.00", "18420.80", "90.00", "18.00", "", "", "", "", "", "", "", "", "108.00", "10.80", "", "", "", "", "108.00", "10.80", "TH", "/OPT", "", "", "", "1000.000000", "Issuer", "I0036534907", "ORD", "TOPT", "1000.000000", "", null)]
        [NUnit.Framework.TestCaseAttribute("HoldSpec_Multi_N_WHT_Test4", "NAB2_AUTO", "N", "C", "ESOXH", "ORD", "VIC", "", "I0036534435", "", "", "", "", "999", "", "", "", "", "", "", "", "S", "C", "", "", "N", "4000.000000", "4000.000000", "", "", "", "A", "A", "20/08/2015", "10", "00", "", "30.000000", "TSSAL", "TOP4", "NDF", "OPT", "1", "999.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "999.000000", "8820.36", "Y", "", "AUD", "999.000000", "Tran Specific", "T", "TRADE", "Settled", "1", "999.000000", "8820.36", "20/08/2015", "20/08/2015", "", "", "1.000000", "99999999999999.990000", "", "", "", "", "", "", "", "", "", "01", "", "999.000000", "29970.00", "", "", "9990.00", "10.79", "11040.94", "21149.64", "89.91", "18.00", "", "", "", "", "", "", "", "", "107.91", "10.79", "", "", "", "", "107.91", "10.79", "TH", "/OPT", "", "", "", "999.000000", "Issuer", "I0036534435", "ORD", "TOPT", "999.000000", "", null)]
        [NUnit.Framework.TestCaseAttribute("HoldAll_Multi_N_Test5", "NAB2_AUTO", "N", "V", "ESOXH", "", "", "", "I0036534419", "Y", "", "", "", "", "", "", "", "", "", "", "", "A", "V", "", "", "N", "4000.000000", "4000.000000", "", "", "", "A", "A", "20/08/2015", "10", "00", "", "30.000000", "TSSAL", "TOP5", "NDF", "OPT", "1", "1000.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "1000.000000", "10881.20", "Y", "", "AUD", "1000.000000", "Transfer All", "T", "TRADE", "Settled", "1", "1000.000000", "10881.20", "20/08/2015", "20/08/2015", "", "", "1.000000", "99999999999999.990000", "", "", "", "", "", "", "", "", "", "01", "", "1000.000000", "30000.00", "", "", "19000.00", "10.80", "", "19118.80", "90.00", "18.00", "", "", "", "", "", "", "", "", "108.00", "10.80", "", "", "", "", "108.00", "10.80", "TH", "/OPT", "", "", "", "1000.000000", "Transfer to VSA", "I0036534419", "ESU", "TOPT", "1000.000000", "", null)]
        [NUnit.Framework.TestCaseAttribute("HoldSpec_Multi_N_Test6", "NAB2_AUTO", "N", "V", "ESOXH", "", "", "", "I0036534371", "", "", "", "", "999", "", "", "", "", "", "", "", "S", "V", "", "", "N", "4000.000000", "4000.000000", "", "", "", "A", "A", "20/08/2015", "10", "00", "", "30.000000", "TSSAL", "TOP6", "NDF", "OPT", "1", "999.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "999.000000", "19861.30", "Y", "", "AUD", "999.000000", "Tran Specific", "T", "TRADE", "Settled", "1", "999.000000", "19861.30", "20/08/2015", "20/08/2015", "", "", "1.000000", "99999999999999.990000", "", "", "", "", "", "", "", "", "", "01", "", "999.000000", "29970.00", "", "", "9990.00", "10.79", "", "10108.70", "89.91", "18.00", "", "", "", "", "", "", "", "", "107.91", "10.79", "", "", "", "", "107.91", "10.79", "TH", "/OPT", "", "", "", "999.000000", "Transfer to VSA", "I0036534371", "ESU", "TOPT", "999.000000", "", null)]
        [NUnit.Framework.TestCaseAttribute("HoldAll_Multi_N_WHT_Test7", "NAB2_AUTO", "N", "V", "ESOXH", "", "", "", "I0036534231", "", "", "", "", "", "", "Y", "", "", "", "", "", "A", "V", "", "", "N", "4000.000000", "4000.000000", "", "", "", "A", "A", "20/08/2015", "10", "00", "", "30.000000", "TSSAL", "TOP7", "NDF", "OPT", "1", "1000.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "1000.000000", "11579.20", "Y", "", "AUD", "1000.000000", "Transfer All", "T", "TRADE", "Settled", "1", "1000.000000", "11579.20", "20/08/2015", "20/08/2015", "", "", "1.000000", "99999999999999.990000", "", "", "", "", "", "", "", "", "", "01", "", "1000.000000", "30000.00", "", "", "5000.00", "10.80", "13302.00", "18420.80", "90.00", "18.00", "", "", "", "", "", "", "", "", "108.00", "10.80", "", "", "", "", "108.00", "10.80", "TH", "/OPT", "", "", "", "1000.000000", "Transfer to VSA", "I0036534231", "ESU", "TOPT", "1000.000000", "", null)]
        [NUnit.Framework.TestCaseAttribute("HoldSpec_Multi_N_WHT_Test8", "NAB2_AUTO", "N", "V", "ESOXH", "", "", "", "I0036534583", "", "", "", "", "999", "", "", "", "", "", "", "", "S", "V", "", "", "N", "4000.000000", "4000.000000", "", "", "", "A", "A", "20/08/2015", "10", "00", "", "30.000000", "TSSAL", "TOP8", "NDF", "OPT", "1", "999.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "999.000000", "8820.36", "Y", "", "AUD", "999.000000", "Tran Specific", "T", "TRADE", "Settled", "1", "999.000000", "8820.36", "20/08/2015", "20/08/2015", "", "", "1.000000", "99999999999999.990000", "", "", "", "", "", "", "", "", "", "01", "", "999.000000", "29970.00", "", "", "9990.00", "10.79", "11040.94", "21149.64", "89.91", "18.00", "", "", "", "", "", "", "", "", "107.91", "10.79", "", "", "", "", "107.91", "10.79", "TH", "/OPT", "", "", "", "999.000000", "Transfer to VSA", "I0036534583", "ESU", "TOPT", "999.000000", "", null)]
        [NUnit.Framework.TestCaseAttribute("HoldAll_Multi_Y_Test13", "NAB2_AUTO", "Y", "C", "ESOXH", "ORD", "VIC", "", "I0036536853", "", "", "", "", "", "", "", "", "", "", "", "", "A", "C", "", "", "N", "4000.000000", "4000.000000", "", "", "", "A", "A", "20/08/2015", "10", "00", "", "30.000000", "TSSAL", "TO13", "NDF", "OPT", "1", "4000.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "4000.000000", "75584.20", "Y", "", "AUD", "4000.000000", "Transfer All", "T", "TRADE", "Settled", "1", "4000.000000", "75584.20", "20/08/2015", "20/08/2015", "", "", "1.000000", "99999999999999.990000", "", "", "", "", "", "", "", "", "", "01", "", "4000.000000", "120000.00", "", "", "44000.00", "37.80", "", "44415.80", "360.00", "18.00", "", "", "", "", "", "", "", "", "378.00", "37.80", "", "", "", "", "378.00", "37.80", "TH", "/OPT", "", "", "", "4000.000000", "Issuer", "I0036536853", "ORD", "TOPT", "4000.000000", "", null)]
        [NUnit.Framework.TestCaseAttribute("HoldSpec_Multi_Y_Test14", "NAB2_AUTO", "Y", "C", "ESOXH", "ORD", "VIC", "", "I0036537124", "", "999", "", "", "899", "", "", "799", "", "", "1", "", "S", "C", "", "", "N", "4000.000000", "4000.000000", "", "", "", "A", "A", "20/08/2015", "10", "00", "", "30.000000", "TSSAL", "TO14", "NDF", "OPT", "1", "2698.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "2698.000000", "48677.10", "Y", "", "AUD", "2698.000000", "Tran Specific", "T", "TRADE", "Settled", "1", "2698.000000", "48677.10", "20/08/2015", "20/08/2015", "", "", "1.000000", "99999999999999.990000", "", "", "", "", "", "", "", "", "", "01", "", "2698.000000", "80940.00", "", "", "31976.00", "26.08", "", "32262.90", "242.82", "18.00", "", "", "", "", "", "", "", "", "260.82", "26.08", "", "", "", "", "260.82", "26.08", "TH", "/OPT", "", "", "", "2698.000000", "Issuer", "I0036537124", "ORD", "TOPT", "2698.000000", "", null)]
        [NUnit.Framework.TestCaseAttribute("HoldAll_Multi_Y_WHT_Test15", "NAB2_AUTO", "Y", "C", "ESOXH", "ORD", "VIC", "", "I0036537094", "", "", "", "", "", "", "", "", "", "", "", "", "A", "C", "", "", "N", "4000.000000", "4000.000000", "", "", "", "A", "A", "20/08/2015", "10", "00", "", "30.000000", "TSSAL", "TO15", "NDF", "OPT", "1", "4000.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "4000.000000", "33176.20", "Y", "", "AUD", "4000.000000", "Transfer All", "T", "TRADE", "Settled", "1", "4000.000000", "33176.20", "20/08/2015", "20/08/2015", "", "", "1.000000", "99999999999999.990000", "", "", "", "", "", "", "", "", "", "01", "", "4000.000000", "120000.00", "", "", "44000.00", "37.80", "42408.00", "86823.80", "360.00", "18.00", "", "", "", "", "", "", "", "", "378.00", "37.80", "", "", "", "", "378.00", "37.80", "TH", "/OPT", "", "", "", "4000.000000", "Issuer", "I0036537094", "ORD", "TOPT", "4000.000000", "", null)]
        [NUnit.Framework.TestCaseAttribute("HoldSpec_Multi_Y_WHT_Test16", "NAB2_AUTO", "Y", "C", "ESOXH", "ORD", "VIC", "", "I0036537159", "", "999", "", "", "899", "", "", "", "", "", "799", "", "S", "C", "", "", "N", "4000.000000", "4000.000000", "", "", "", "A", "A", "20/08/2015", "10", "00", "", "30.000000", "TSSAL", "TO16", "NDF", "OPT", "1", "2697.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "2697.000000", "18900.93", "Y", "", "AUD", "2697.000000", "Tran Specific", "T", "TRADE", "Settled", "1", "2697.000000", "18900.93", "20/08/2015", "20/08/2015", "", "", "1.000000", "99999999999999.990000", "", "", "", "", "", "", "", "", "", "01", "", "2697.000000", "80910.00", "", "", "35961.00", "26.07", "25761.27", "62009.07", "242.73", "18.00", "", "", "", "", "", "", "", "", "260.73", "26.07", "", "", "", "", "260.73", "26.07", "TH", "/OPT", "", "", "", "2697.000000", "Issuer", "I0036537159", "ORD", "TOPT", "2697.000000", "", null)]
        [NUnit.Framework.TestCaseAttribute("HoldAll_Multi_Y_Test17", "NAB2_AUTO", "Y", "V", "ESOXH", "", "", "", "I0036537001", "", "", "", "", "", "", "", "", "", "", "", "", "A", "V", "", "", "N", "4000.000000", "4000.000000", "", "", "", "A", "A", "20/08/2015", "10", "00", "", "30.000000", "TSSAL", "TO17", "NDF", "OPT", "1", "4000.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "4000.000000", "75584.20", "Y", "", "AUD", "4000.000000", "Transfer All", "T", "TRADE", "Settled", "1", "4000.000000", "75584.20", "20/08/2015", "20/08/2015", "", "", "1.000000", "99999999999999.990000", "", "", "", "", "", "", "", "", "", "01", "", "4000.000000", "120000.00", "", "", "44000.00", "37.80", "", "44415.80", "360.00", "18.00", "", "", "", "", "", "", "", "", "378.00", "37.80", "", "", "", "", "378.00", "37.80", "TH", "/OPT", "", "", "", "4000.000000", "Transfer to VSA", "I0036537001", "ESU", "TOPT", "4000.000000", "", null)]
        [NUnit.Framework.TestCaseAttribute("HoldSpec_Multi_Y_Test18", "NAB2_AUTO", "Y", "V", "ESOXH", "", "", "", "I0036537132", "", "999", "", "", "899", "", "", "799", "", "", "1", "", "S", "V", "", "", "N", "4000.000000", "4000.000000", "", "", "", "A", "A", "20/08/2015", "10", "00", "", "30.000000", "TSSAL", "TO18", "NDF", "OPT", "1", "2698.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "2698.000000", "48677.10", "Y", "", "AUD", "2698.000000", "Tran Specific", "T", "TRADE", "Settled", "1", "2698.000000", "48677.10", "20/08/2015", "20/08/2015", "", "", "1.000000", "99999999999999.990000", "", "", "", "", "", "", "", "", "", "01", "", "2698.000000", "80940.00", "", "", "31976.00", "26.08", "", "32262.90", "242.82", "18.00", "", "", "", "", "", "", "", "", "260.82", "26.08", "", "", "", "", "260.82", "26.08", "TH", "/OPT", "", "", "", "2698.000000", "Transfer to VSA", "I0036537132", "ESU", "TOPT", "2698.000000", "", null)]
        [NUnit.Framework.TestCaseAttribute("HoldAll_Multi_Y_WHT_Test19", "NAB2_AUTO", "Y", "V", "ESOXH", "", "", "", "I0036537051", "", "", "", "", "", "", "", "", "", "", "", "", "A", "V", "", "", "N", "4000.000000", "4000.000000", "", "", "", "A", "A", "20/08/2015", "10", "00", "", "30.000000", "TSSAL", "TO19", "NDF", "OPT", "1", "4000.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "4000.000000", "33176.20", "Y", "", "AUD", "4000.000000", "Transfer All", "T", "TRADE", "Settled", "1", "4000.000000", "33176.20", "20/08/2015", "20/08/2015", "", "", "1.000000", "99999999999999.990000", "", "", "", "", "", "", "", "", "", "01", "", "4000.000000", "120000.00", "", "", "44000.00", "37.80", "42408.00", "86823.80", "360.00", "18.00", "", "", "", "", "", "", "", "", "378.00", "37.80", "", "", "", "", "378.00", "37.80", "TH", "/OPT", "", "", "", "4000.000000", "Transfer to VSA", "I0036537051", "ESU", "TOPT", "4000.000000", "", null)]
        [NUnit.Framework.TestCaseAttribute("HoldSpec_Multi_Y_WHT_Test20", "NAB2_AUTO", "Y", "V", "ESOXH", "", "", "", "I0036536985", "", "999", "", "", "899", "", "", "", "", "", "799", "", "S", "V", "", "", "N", "4000.000000", "4000.000000", "", "", "", "A", "A", "20/08/2015", "10", "00", "", "30.000000", "TSSAL", "TO20", "NDF", "OPT", "1", "2697.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "2697.000000", "18900.93", "Y", "", "AUD", "2697.000000", "Tran Specific", "T", "TRADE", "Settled", "1", "2697.000000", "18900.93", "20/08/2015", "20/08/2015", "", "", "1.000000", "99999999999999.990000", "", "", "", "", "", "", "", "", "", "01", "", "2697.000000", "80910.00", "", "", "35961.00", "26.07", "25761.27", "62009.07", "242.73", "18.00", "", "", "", "", "", "", "", "", "260.73", "26.07", "", "", "", "", "260.73", "26.07", "TH", "/OPT", "", "", "", "2697.000000", "Transfer to VSA", "I0036536985", "ESU", "TOPT", "2697.000000", "", null)]
        public virtual void OptionsTransfers(
                    string exerciseType, 
                    string cOY, 
                    string multi_Cert, 
                    string option, 
                    string tranType, 
                    string @class, 
                    string reg, 
                    string transNumber, 
                    string searchName, 
                    string sellAll01, 
                    string exerciseUnits01, 
                    string units01, 
                    string sellAll02, 
                    string exerciseUnits02, 
                    string units02, 
                    string sellAll03, 
                    string exerciseUnits03, 
                    string units03, 
                    string sellAll04, 
                    string exerciseUnits04, 
                    string units04, 
                    string transferOption, 
                    string remainingBalInd, 
                    string paymentMethod, 
                    string prefCurrency, 
                    string notificationReqdInd, 
                    string balance, 
                    string availBalance, 
                    string exerciseUnits, 
                    string confirmUnits, 
                    string confirmWarningFlag5, 
                    string menuSelection, 
                    string confirmStatus, 
                    string tradeDate, 
                    string tradeTimeHH, 
                    string tradeTimeMM, 
                    string settlementDate, 
                    string finalPrice, 
                    string paymentAccount1, 
                    string orderNO, 
                    string ident, 
                    string classCode, 
                    string nbrTrades, 
                    string tradeGrossAmount, 
                    string tradeFrom, 
                    string tradeTO, 
                    string settlementFrom, 
                    string settlementTO, 
                    string menuSelection1, 
                    string confirmStatus1, 
                    string tradingID, 
                    string status, 
                    string price, 
                    string transCount, 
                    string transTotal, 
                    string moneyTotal, 
                    string applyTaxInd, 
                    string paymentMethodDesc, 
                    string currency, 
                    string sellUnits, 
                    string orderType, 
                    string bulkType, 
                    string bulkTypeDesc, 
                    string statusDesc, 
                    string totalCount, 
                    string orderTransUnits, 
                    string totalMoney, 
                    string reqdSettlementDate, 
                    string actualSettlementDate, 
                    string reconciliationCode, 
                    string cshtrnReference, 
                    string minimumDeal, 
                    string maximumDeal, 
                    string cutOffTime, 
                    string counterpartyClass, 
                    string counterRegisterCode, 
                    string orderType1, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string action, 
                    string locateArgument, 
                    string unitsSell, 
                    string grossAmount, 
                    string purchaseResidue, 
                    string loanAmount, 
                    string optionCost, 
                    string gst, 
                    string taxWithheld, 
                    string nettAmount, 
                    string chargeAmount01, 
                    string chargeAmount02, 
                    string chargeAmount03, 
                    string chargeAmount04, 
                    string chargeAmount05, 
                    string chargeAmount06, 
                    string paymentDate, 
                    string paymentAccount, 
                    string currencyDesc, 
                    string paymentMethod1, 
                    string holderCharges, 
                    string holderTax, 
                    string companyCharges, 
                    string companyTax, 
                    string reportCharges, 
                    string reportTax, 
                    string totalCharges, 
                    string gstTaxTotal, 
                    string action1, 
                    string locateArgument1, 
                    string bankCode, 
                    string payeeAccountNumber, 
                    string accountName, 
                    string remainingBalance, 
                    string remBalIndDesc, 
                    string transfereeHolder, 
                    string transfereeClass, 
                    string tradeControlCode, 
                    string tradeUnits, 
                    string tradeMoney, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TS_TradingSystem",
                    "OptionsTransfers"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Options Transfers", @__tags);
#line 615
this.ScenarioSetup(scenarioInfo);
#line 616
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 617
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 618
  testRunner.And("I go to \"Company Options\" Control Code Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 619
  testRunner.And(string.Format("In HKS01516 I set the Multi-Cert Flag to \"{0}\"", multi_Cert), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 620
  testRunner.And("I go to \"Trading Control Codes\" Control Code Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 621
  testRunner.And(string.Format("In TRD24000 I select the Trade Control Code \"{0}\"", tradeControlCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 622
  testRunner.And(string.Format("In TRD24001 I perform a Change for Remaining Balance Options \"{0}\" \"{1}\" \"{2}\" \"{" +
                        "3}\"", option, tranType, @class, reg), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 623
  testRunner.And(string.Format("I go to the Trading system Transfers and trade control code \"{0}\"", tradeControlCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 624
  testRunner.And(string.Format("In TRS00701 I Add Postal Transaction Entry details as \"{0}\" \"{1}\"", transNumber, searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 625
  testRunner.And(string.Format("In TRS00702 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\"", transferOption, remainingBalInd, paymentMethod, prefCurrency, notificationReqdInd, balance, availBalance), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 626
  testRunner.And(string.Format("In TRS00707 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", sellAll01, exerciseUnits01, units01, sellAll02, exerciseUnits02, units02, sellAll03, exerciseUnits03, units03, sellAll04, exerciseUnits04, units04), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 627
  testRunner.And(string.Format("In TRS00703 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\"", exerciseUnits, confirmUnits, confirmWarningFlag5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 628
  testRunner.And(string.Format("In TRD00401 I Change Transfer Order Status to \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\"" +
                        "", menuSelection, confirmStatus, tradeDate, tradeTimeHH, tradeTimeMM, finalPrice), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 629
 testRunner.When(string.Format("In TRD00101 I Run the Generate Output Job as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" " +
                        "\"{6}\" \"{7}\" \"{8}\" \"{9}\"", paymentAccount1, orderNO, ident, classCode, nbrTrades, tradeGrossAmount, tradeFrom, tradeTO, settlementFrom, settlementTO), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria",
                        "PassCriteriaLNX",
                        "FailCriteriaLNX"});
            table14.AddRow(new string[] {
                        "completion",
                        "240",
                        "error",
                        "DONE",
                        "EXIT"});
#line 630
  testRunner.And("I wait for  GenerateOutput job to complete", ((string)(null)), table14, "And ");
#line 633
  testRunner.And(string.Format("In TRD00401 I Force Settle the Order as \"{0}\" \"{1}\"", menuSelection1, confirmStatus1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 634
 testRunner.Then(string.Format("In TRS01010 I Verify Transaction Enquiry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        " \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"<TransMoney>\"" +
                        "", tradingID, status, price, classCode, transCount, transTotal, moneyTotal, settlementDate, applyTaxInd, paymentMethod, paymentMethodDesc, currency, sellUnits, orderType, tradeUnits), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 635
  testRunner.And(string.Format("In TRDSCH02 I Verify Transaction Enquiry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        " \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" " +
                        "\"{17}\" \"{18}\"", tradingID, bulkType, bulkTypeDesc, statusDesc, totalCount, orderTransUnits, totalMoney, tradeDate, reqdSettlementDate, actualSettlementDate, finalPrice, reconciliationCode, cshtrnReference, minimumDeal, maximumDeal, cutOffTime, counterpartyClass, counterRegisterCode, orderType1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 636
  testRunner.And("I go the Main Menu From Trading System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 637
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 638
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 639
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 640
 testRunner.Then(string.Format("In ENSTRD48 I should see trading history summary as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        "", line1, line2, line3, line4, line5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 641
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 642
  testRunner.And(string.Format("In ENSTRDSH I Verify Trade History details1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"{17}" +
                        "\"", tradeUnits, unitsSell, finalPrice, grossAmount, purchaseResidue, loanAmount, optionCost, gst, taxWithheld, nettAmount, chargeAmount01, chargeAmount02, chargeAmount03, chargeAmount04, chargeAmount05, chargeAmount06, paymentDate, paymentAccount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 643
  testRunner.And(string.Format("In ENSTRDSH I Verify Trade History details2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"{17}" +
                        "\"", prefCurrency, currencyDesc, paymentMethod1, holderCharges, holderTax, companyCharges, companyTax, reportCharges, reportTax, totalCharges, gstTaxTotal, bankCode, payeeAccountNumber, accountName, remainingBalance, remBalIndDesc, transfereeHolder, transfereeClass), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Rights Transfers")]
        [NUnit.Framework.CategoryAttribute("TS_TradingSystem")]
        [NUnit.Framework.CategoryAttribute("RightsTransfers")]
        [NUnit.Framework.TestCaseAttribute("HoldAll_Multi_N_Test1", "NAB2_AUTO", "N", "C", "ESOXH", "ORD", "VIC", "", "I0036535326", "Y", "", "", "", "", "", "", "", "", "", "", "", "A", "C", "", "", "N", "4000.000000", "3900.000000", "", "", "", "A", "A", "20/08/2015", "10", "00", "", "30.000000", "TSSAL", "TRT1", "NDF", "PRS", "1", "900.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "900.000000", "26891.10", "Y", "", "AUD", "900.000000", "Transfer All", "T", "TRADE", "Settled", "1", "900.000000", "26891.10", "20/08/2015", "20/08/2015", "", "", "1.000000", "99999999999999.990000", "", "", "", "", "", "", "", "", "", "01", "", "900.000000", "27000.00", "", "", "", "9.90", "", "108.90", "81.00", "18.00", "", "", "", "", "", "", "", "", "99.00", "9.90", "", "", "", "", "99.00", "9.90", "TH", "/PRS", "", "", "", "900.000000", "Issuer", "I0036535326", "ORD", "TPRS", "900.000000", "", null)]
        [NUnit.Framework.TestCaseAttribute("HoldAll_Multi_N_WHT_Test3", "NAB2_AUTO", "N", "C", "ESOXH", "ORD", "VIC", "", "I0036535890", "", "", "", "", "", "", "Y", "", "", "", "", "", "A", "C", "", "", "N", "4000.000000", "3900.000000", "", "", "", "A", "A", "20/08/2015", "10", "00", "", "30.000000", "TSSAL", "TRT3", "NDF", "PRS", "1", "1000.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "1000.000000", "14329.20", "Y", "", "AUD", "1000.000000", "Transfer All", "T", "TRADE", "Settled", "1", "1000.000000", "14329.20", "20/08/2015", "20/08/2015", "", "", "1.000000", "99999999999999.990000", "", "", "", "", "", "", "", "", "", "01", "", "1000.000000", "30000.00", "", "", "", "10.80", "15552.00", "15670.80", "90.00", "18.00", "", "", "", "", "", "", "", "", "108.00", "10.80", "", "", "", "", "108.00", "10.80", "TH", "/PRS", "", "", "", "1000.000000", "Issuer", "I0036535890", "ORD", "TPRS", "1000.000000", "", null)]
        [NUnit.Framework.TestCaseAttribute("HoldSpec_Multi_N_WHT_Test4", "NAB2_AUTO", "N", "C", "ESOXH", "ORD", "VIC", "", "I0036536373", "", "", "", "", "999", "", "", "", "", "", "", "", "S", "C", "", "", "N", "4000.000000", "3900.000000", "", "", "", "A", "A", "20/08/2015", "10", "00", "", "30.000000", "TSSAL", "TRT4", "NDF", "PRS", "1", "999.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "999.000000", "14314.86", "Y", "", "AUD", "999.000000", "Tran Specific", "T", "TRADE", "Settled", "1", "999.000000", "14314.86", "20/08/2015", "20/08/2015", "", "", "1.000000", "99999999999999.990000", "", "", "", "", "", "", "", "", "", "01", "", "999.000000", "29970.00", "", "", "", "10.79", "15536.44", "15655.14", "89.91", "18.00", "", "", "", "", "", "", "", "", "107.91", "10.79", "", "", "", "", "107.91", "10.79", "TH", "/PRS", "", "", "", "999.000000", "Issuer", "I0036536373", "ORD", "TPRS", "999.000000", "", null)]
        [NUnit.Framework.TestCaseAttribute("HoldAll_Multi_N_Test5", "NAB2_AUTO", "N", "V", "ESOXH", "", "", "", "I0036535466", "Y", "", "", "", "", "", "", "", "", "", "", "", "A", "V", "", "", "N", "4000.000000", "3900.000000", "", "", "", "A", "A", "20/08/2015", "10", "00", "", "30.000000", "TSSAL", "TRT5", "NDF", "PRS", "1", "900.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "900.000000", "26891.10", "Y", "", "AUD", "900.000000", "Transfer All", "T", "TRADE", "Settled", "1", "900.000000", "26891.10", "20/08/2015", "20/08/2015", "", "", "1.000000", "99999999999999.990000", "", "", "", "", "", "", "", "", "", "01", "", "900.000000", "27000.00", "", "", "", "9.90", "", "108.90", "81.00", "18.00", "", "", "", "", "", "", "", "", "99.00", "9.90", "", "", "", "", "99.00", "9.90", "TH", "/PRS", "", "", "", "900.000000", "Transfer to VSA", "I0036535466", "ESO", "TPRS", "900.000000", "", null)]
        [NUnit.Framework.TestCaseAttribute("HoldSpec_Multi_N_Test6", "NAB2_AUTO", "N", "V", "ESOXH", "", "", "", "I0036535377", "", "", "", "", "999", "", "", "", "", "", "", "", "S", "V", "", "", "N", "4000.000000", "3900.000000", "", "", "", "A", "A", "20/08/2015", "10", "00", "", "30.000000", "TSSAL", "TRT6", "NDF", "PRS", "1", "999.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "999.000000", "29851.30", "Y", "", "AUD", "999.000000", "Tran Specific", "T", "TRADE", "Settled", "1", "999.000000", "29851.30", "20/08/2015", "20/08/2015", "", "", "1.000000", "99999999999999.990000", "", "", "", "", "", "", "", "", "", "01", "", "999.000000", "29970.00", "", "", "", "10.79", "", "118.70", "89.91", "18.00", "", "", "", "", "", "", "", "", "107.91", "10.79", "", "", "", "", "107.91", "10.79", "TH", "/PRS", "", "", "", "999.000000", "Transfer to VSA", "I0036535377", "ESO", "TPRS", "999.000000", "", null)]
        [NUnit.Framework.TestCaseAttribute("HoldAll_Multi_N_WHT_Test7", "NAB2_AUTO", "N", "V", "ESOXH", "", "", "", "I0036536306", "", "", "", "", "", "", "Y", "", "", "", "", "", "A", "V", "", "", "N", "4000.000000", "3900.000000", "", "", "", "A", "A", "20/08/2015", "10", "00", "", "30.000000", "TSSAL", "TRT7", "NDF", "PRS", "1", "1000.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "1000.000000", "14329.20", "Y", "", "AUD", "1000.000000", "Transfer All", "T", "TRADE", "Settled", "1", "1000.000000", "14329.20", "20/08/2015", "20/08/2015", "", "", "1.000000", "99999999999999.990000", "", "", "", "", "", "", "", "", "", "01", "", "1000.000000", "30000.00", "", "", "", "10.80", "15552.00", "15670.80", "90.00", "18.00", "", "", "", "", "", "", "", "", "108.00", "10.80", "", "", "", "", "108.00", "10.80", "TH", "/PRS", "", "", "", "1000.000000", "Transfer to VSA", "I0036536306", "ESO", "TPRS", "1000.000000", "", null)]
        [NUnit.Framework.TestCaseAttribute("HoldSpec_Multi_N_WHT_Test8", "NAB2_AUTO", "N", "V", "ESOXH", "", "", "", "I0036536144", "", "", "", "", "999", "", "", "", "", "", "", "", "S", "V", "", "", "N", "4000.000000", "3900.000000", "", "", "", "A", "A", "20/08/2015", "10", "00", "", "30.000000", "TSSAL", "TRT8", "NDF", "PRS", "1", "999.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "999.000000", "14314.86", "Y", "", "AUD", "999.000000", "Tran Specific", "T", "TRADE", "Settled", "1", "999.000000", "14314.86", "20/08/2015", "20/08/2015", "", "", "1.000000", "99999999999999.990000", "", "", "", "", "", "", "", "", "", "01", "", "999.000000", "29970.00", "", "", "", "10.79", "15536.44", "15655.14", "89.91", "18.00", "", "", "", "", "", "", "", "", "107.91", "10.79", "", "", "", "", "107.91", "10.79", "TH", "/PRS", "", "", "", "999.000000", "Transfer to VSA", "I0036536144", "ESO", "TPRS", "999.000000", "", null)]
        [NUnit.Framework.TestCaseAttribute("HoldAll_Multi_Y_Test13", "NAB2_AUTO", "Y", "C", "ESOXH", "ORD", "VIC", "", "I0036536471", "", "", "", "", "", "", "", "", "", "", "", "", "A", "C", "", "", "N", "4000.000000", "3900.000000", "", "", "", "A", "A", "20/08/2015", "10", "00", "", "30.000000", "TSSAL", "TR13", "NDF", "PRS", "1", "3900.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "3900.000000", "116594.10", "Y", "", "AUD", "3900.000000", "Transfer All", "T", "TRADE", "Settled", "1", "3900.000000", "116594.10", "20/08/2015", "20/08/2015", "", "", "1.000000", "99999999999999.990000", "", "", "", "", "", "", "", "", "", "01", "", "3900.000000", "117000.00", "", "", "", "36.90", "", "405.90", "351.00", "18.00", "", "", "", "", "", "", "", "", "369.00", "36.90", "", "", "", "", "369.00", "36.90", "TH", "/PRS", "", "", "", "3900.000000", "Issuer", "I0036536471", "ORD", "TPRS", "3900.000000", "", null)]
        [NUnit.Framework.TestCaseAttribute("HoldSpec_Multi_Y_Test14", "NAB2_AUTO", "Y", "C", "ESOXH", "ORD", "VIC", "", "I0036536730", "", "899", "", "", "799", "", "", "699", "", "", "1", "", "S", "C", "", "", "N", "4000.000000", "3900.000000", "", "", "", "A", "A", "20/08/2015", "10", "00", "", "30.000000", "TSSAL", "TR14", "NDF", "PRS", "1", "2398.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "2398.000000", "71682.80", "Y", "", "AUD", "2398.000000", "Tran Specific", "T", "TRADE", "Settled", "1", "2398.000000", "71682.80", "20/08/2015", "20/08/2015", "", "", "1.000000", "99999999999999.990000", "", "", "", "", "", "", "", "", "", "01", "", "2398.000000", "71940.00", "", "", "", "23.38", "", "257.20", "215.82", "18.00", "", "", "", "", "", "", "", "", "233.82", "23.38", "", "", "", "", "233.82", "23.38", "TH", "/PRS", "", "", "", "2398.000000", "Issuer", "I0036536730", "ORD", "TPRS", "2398.000000", "", null)]
        [NUnit.Framework.TestCaseAttribute("HoldAll_Multi_Y_WHT_Test15", "NAB2_AUTO", "Y", "C", "ESOXH", "ORD", "VIC", "", "I0036536705", "", "", "", "", "", "", "", "", "", "", "", "", "A", "C", "", "", "N", "4000.000000", "3900.000000", "", "", "", "A", "A", "20/08/2015", "10", "00", "", "30.000000", "TSSAL", "TR15", "NDF", "PRS", "1", "3900.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "3900.000000", "55941.30", "Y", "", "AUD", "3900.000000", "Transfer All", "T", "TRADE", "Settled", "1", "3900.000000", "55941.30", "20/08/2015", "20/08/2015", "", "", "1.000000", "99999999999999.990000", "", "", "", "", "", "", "", "", "", "01", "", "3900.000000", "117000.00", "", "", "", "36.90", "60652.80", "61058.70", "351.00", "18.00", "", "", "", "", "", "", "", "", "369.00", "36.90", "", "", "", "", "369.00", "36.90", "TH", "/PRS", "", "", "", "3900.000000", "Issuer", "I0036536705", "ORD", "TPRS", "3900.000000", "", null)]
        [NUnit.Framework.TestCaseAttribute("HoldSpec_Multi_Y_WHT_Test16", "NAB2_AUTO", "Y", "C", "ESOXH", "ORD", "VIC", "", "I0036536764", "", "899", "", "", "799", "", "", "", "", "", "699", "", "S", "C", "", "", "N", "4000.000000", "3900.000000", "", "", "", "A", "A", "20/08/2015", "10", "00", "", "30.000000", "TSSAL", "TR16", "NDF", "PRS", "1", "2397.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "2397.000000", "34374.78", "Y", "", "AUD", "2397.000000", "Tran Specific", "T", "TRADE", "Settled", "1", "2397.000000", "34374.78", "20/08/2015", "20/08/2015", "", "", "1.000000", "99999999999999.990000", "", "", "", "", "", "", "", "", "", "01", "", "2397.000000", "71910.00", "", "", "", "23.37", "37278.12", "37535.22", "215.73", "18.00", "", "", "", "", "", "", "", "", "233.73", "23.37", "", "", "", "", "233.73", "23.37", "TH", "/PRS", "", "", "", "2397.000000", "Issuer", "I0036536764", "ORD", "TPRS", "2397.000000", "", null)]
        [NUnit.Framework.TestCaseAttribute("HoldAll_Multi_Y_Test17", "NAB2_AUTO", "Y", "V", "ESOXH", "", "", "", "I0036536624", "", "", "", "", "", "", "", "", "", "", "", "", "A", "V", "", "", "N", "4000.000000", "3900.000000", "", "", "", "A", "A", "20/08/2015", "10", "00", "", "30.000000", "TSSAL", "TR17", "NDF", "PRS", "1", "3900.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "3900.000000", "116594.10", "Y", "", "AUD", "3900.000000", "Transfer All", "T", "TRADE", "Settled", "1", "3900.000000", "116594.10", "20/08/2015", "20/08/2015", "", "", "1.000000", "99999999999999.990000", "", "", "", "", "", "", "", "", "", "01", "", "3900.000000", "117000.00", "", "", "", "36.90", "", "405.90", "351.00", "18.00", "", "", "", "", "", "", "", "", "369.00", "36.90", "", "", "", "", "369.00", "36.90", "TH", "/PRS", "", "", "", "3900.000000", "Transfer to VSA", "I0036536624", "ESO", "TPRS", "3900.000000", "", null)]
        [NUnit.Framework.TestCaseAttribute("HoldSpec_Multi_Y_Test18", "NAB2_AUTO", "Y", "V", "ESOXH", "", "", "", "I0036536748", "", "899", "", "", "799", "", "", "699", "", "", "1", "", "S", "V", "", "", "N", "4000.000000", "3900.000000", "", "", "", "A", "A", "20/08/2015", "10", "00", "", "30.000000", "TSSAL", "TR18", "NDF", "PRS", "1", "2398.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "2398.000000", "71682.80", "Y", "", "AUD", "2398.000000", "Tran Specific", "T", "TRADE", "Settled", "1", "2398.000000", "71682.80", "20/08/2015", "20/08/2015", "", "", "1.000000", "99999999999999.990000", "", "", "", "", "", "", "", "", "", "01", "", "2398.000000", "71940.00", "", "", "", "23.38", "", "257.20", "215.82", "18.00", "", "", "", "", "", "", "", "", "233.82", "23.38", "", "", "", "", "233.82", "23.38", "TH", "/PRS", "", "", "", "2398.000000", "Transfer to VSA", "I0036536748", "ESO", "TPRS", "2398.000000", "", null)]
        [NUnit.Framework.TestCaseAttribute("HoldAll_Multi_Y_WHT_Test19", "NAB2_AUTO", "Y", "V", "ESOXH", "", "", "", "I0036536675", "", "", "", "", "", "", "", "", "", "", "", "", "A", "V", "", "", "N", "4000.000000", "3900.000000", "", "", "", "A", "A", "20/08/2015", "10", "00", "", "30.000000", "TSSAL", "TR19", "NDF", "PRS", "1", "3900.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "3900.000000", "55941.30", "Y", "", "AUD", "3900.000000", "Transfer All", "T", "TRADE", "Settled", "1", "3900.000000", "55941.30", "20/08/2015", "20/08/2015", "", "", "1.000000", "99999999999999.990000", "", "", "", "", "", "", "", "", "", "01", "", "3900.000000", "117000.00", "", "", "", "36.90", "60652.80", "61058.70", "351.00", "18.00", "", "", "", "", "", "", "", "", "369.00", "36.90", "", "", "", "", "369.00", "36.90", "TH", "/PRS", "", "", "", "3900.000000", "Transfer to VSA", "I0036536675", "ESO", "TPRS", "3900.000000", "", null)]
        [NUnit.Framework.TestCaseAttribute("HoldSpec_Multi_Y_WHT_Test20", "NAB2_AUTO", "Y", "V", "ESOXH", "", "", "", "I0036536608", "", "899", "", "", "799", "", "", "", "", "", "699", "", "S", "V", "", "", "N", "4000.000000", "3900.000000", "", "", "", "A", "A", "20/08/2015", "10", "00", "", "30.000000", "TSSAL", "TR20", "NDF", "PRS", "1", "2397.000000", "", "", "20/08/2015", "20/08/2015", "S", "S", "", "Settled", "30.000000", "1", "2397.000000", "34374.78", "Y", "", "AUD", "2397.000000", "Tran Specific", "T", "TRADE", "Settled", "1", "2397.000000", "34374.78", "20/08/2015", "20/08/2015", "", "", "1.000000", "99999999999999.990000", "", "", "", "", "", "", "", "", "", "01", "", "2397.000000", "71910.00", "", "", "", "23.37", "37278.12", "37535.22", "215.73", "18.00", "", "", "", "", "", "", "", "", "233.73", "23.37", "", "", "", "", "233.73", "23.37", "TH", "/PRS", "", "", "", "2397.000000", "Transfer to VSA", "I0036536608", "ESO", "TPRS", "2397.000000", "", null)]
        public virtual void RightsTransfers(
                    string exerciseType, 
                    string cOY, 
                    string multi_Cert, 
                    string option, 
                    string tranType, 
                    string @class, 
                    string reg, 
                    string transNumber, 
                    string searchName, 
                    string sellAll01, 
                    string exerciseUnits01, 
                    string units01, 
                    string sellAll02, 
                    string exerciseUnits02, 
                    string units02, 
                    string sellAll03, 
                    string exerciseUnits03, 
                    string units03, 
                    string sellAll04, 
                    string exerciseUnits04, 
                    string units04, 
                    string transferOption, 
                    string remainingBalInd, 
                    string paymentMethod, 
                    string prefCurrency, 
                    string notificationReqdInd, 
                    string balance, 
                    string availBalance, 
                    string exerciseUnits, 
                    string confirmUnits, 
                    string confirmWarningFlag5, 
                    string menuSelection, 
                    string confirmStatus, 
                    string tradeDate, 
                    string tradeTimeHH, 
                    string tradeTimeMM, 
                    string settlementDate, 
                    string finalPrice, 
                    string paymentAccount1, 
                    string orderNO, 
                    string ident, 
                    string classCode, 
                    string nbrTrades, 
                    string tradeGrossAmount, 
                    string tradeFrom, 
                    string tradeTO, 
                    string settlementFrom, 
                    string settlementTO, 
                    string menuSelection1, 
                    string confirmStatus1, 
                    string tradingID, 
                    string status, 
                    string price, 
                    string transCount, 
                    string transTotal, 
                    string moneyTotal, 
                    string applyTaxInd, 
                    string paymentMethodDesc, 
                    string currency, 
                    string sellUnits, 
                    string orderType, 
                    string bulkType, 
                    string bulkTypeDesc, 
                    string statusDesc, 
                    string totalCount, 
                    string orderTransUnits, 
                    string totalMoney, 
                    string reqdSettlementDate, 
                    string actualSettlementDate, 
                    string reconciliationCode, 
                    string cshtrnReference, 
                    string minimumDeal, 
                    string maximumDeal, 
                    string cutOffTime, 
                    string counterpartyClass, 
                    string counterRegisterCode, 
                    string orderType1, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string action, 
                    string locateArgument, 
                    string unitsSell, 
                    string grossAmount, 
                    string purchaseResidue, 
                    string loanAmount, 
                    string optionCost, 
                    string gst, 
                    string taxWithheld, 
                    string nettAmount, 
                    string chargeAmount01, 
                    string chargeAmount02, 
                    string chargeAmount03, 
                    string chargeAmount04, 
                    string chargeAmount05, 
                    string chargeAmount06, 
                    string paymentDate, 
                    string paymentAccount, 
                    string currencyDesc, 
                    string paymentMethod1, 
                    string holderCharges, 
                    string holderTax, 
                    string companyCharges, 
                    string companyTax, 
                    string reportCharges, 
                    string reportTax, 
                    string totalCharges, 
                    string gstTaxTotal, 
                    string action1, 
                    string locateArgument1, 
                    string bankCode, 
                    string payeeAccountNumber, 
                    string accountName, 
                    string remainingBalance, 
                    string remBalIndDesc, 
                    string transfereeHolder, 
                    string transfereeClass, 
                    string tradeControlCode, 
                    string tradeUnits, 
                    string tradeMoney, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TS_TradingSystem",
                    "RightsTransfers"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Rights Transfers", @__tags);
#line 673
this.ScenarioSetup(scenarioInfo);
#line 674
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 675
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 676
  testRunner.And("I go to \"Company Options\" Control Code Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 677
  testRunner.And(string.Format("In HKS01516 I set the Multi-Cert Flag to \"{0}\"", multi_Cert), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 678
  testRunner.And("I go to \"Trading Control Codes\" Control Code Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 679
  testRunner.And(string.Format("In TRD24000 I select the Trade Control Code \"{0}\"", tradeControlCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 680
  testRunner.And(string.Format("In TRD24001 I perform a Change for Remaining Balance Options \"{0}\" \"{1}\" \"{2}\" \"{" +
                        "3}\"", option, tranType, @class, reg), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 681
  testRunner.And(string.Format("I go to the Trading system Transfers and trade control code \"{0}\"", tradeControlCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 682
  testRunner.And(string.Format("In TRS00701 I Add Postal Transaction Entry details as \"{0}\" \"{1}\"", transNumber, searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 683
  testRunner.And(string.Format("In TRS00702 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\"", transferOption, remainingBalInd, paymentMethod, prefCurrency, notificationReqdInd, balance, availBalance), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 684
  testRunner.And(string.Format("In TRS00707 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4" +
                        "}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", sellAll01, exerciseUnits01, units01, sellAll02, exerciseUnits02, units02, sellAll03, exerciseUnits03, units03, sellAll04, exerciseUnits04, units04), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 685
  testRunner.And(string.Format("In TRS00703 I Add Postal Transaction Entry details as \"{0}\" \"{1}\" \"{2}\"", exerciseUnits, confirmUnits, confirmWarningFlag5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 686
  testRunner.And(string.Format("In TRD00401 I Change Transfer Order Status to \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\"" +
                        "", menuSelection, confirmStatus, tradeDate, tradeTimeHH, tradeTimeMM, finalPrice), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 687
 testRunner.When(string.Format("In TRD00101 I Run the Generate Output Job as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" " +
                        "\"{6}\" \"{7}\" \"{8}\" \"{9}\"", paymentAccount1, orderNO, ident, classCode, nbrTrades, tradeGrossAmount, tradeFrom, tradeTO, settlementFrom, settlementTO), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria",
                        "PassCriteriaLNX",
                        "FailCriteriaLNX"});
            table15.AddRow(new string[] {
                        "completion",
                        "240",
                        "error",
                        "DONE",
                        "EXIT"});
#line 688
  testRunner.And("I wait for  GenerateOutput job to complete", ((string)(null)), table15, "And ");
#line 691
  testRunner.And(string.Format("In TRD00401 I Force Settle the Order as \"{0}\" \"{1}\"", menuSelection1, confirmStatus1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 692
 testRunner.Then(string.Format("In TRS01010 I Verify Transaction Enquiry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        " \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"<TransMoney>\"" +
                        "", tradingID, status, price, classCode, transCount, transTotal, moneyTotal, settlementDate, applyTaxInd, paymentMethod, paymentMethodDesc, currency, sellUnits, orderType, tradeUnits), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 693
  testRunner.And(string.Format("In TRDSCH02 I Verify Transaction Enquiry details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        " \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" " +
                        "\"{17}\" \"{18}\"", tradingID, bulkType, bulkTypeDesc, statusDesc, totalCount, orderTransUnits, totalMoney, tradeDate, reqdSettlementDate, actualSettlementDate, finalPrice, reconciliationCode, cshtrnReference, minimumDeal, maximumDeal, cutOffTime, counterpartyClass, counterRegisterCode, orderType1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 694
  testRunner.And("I go the Main Menu From Trading System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 695
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 696
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 697
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 698
 testRunner.Then(string.Format("In ENSTRD48 I should see trading history summary as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        "", line1, line2, line3, line4, line5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 699
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 700
  testRunner.And(string.Format("In ENSTRDSH I Verify Trade History details1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"{17}" +
                        "\"", tradeUnits, unitsSell, finalPrice, grossAmount, purchaseResidue, loanAmount, optionCost, gst, taxWithheld, nettAmount, chargeAmount01, chargeAmount02, chargeAmount03, chargeAmount04, chargeAmount05, chargeAmount06, paymentDate, paymentAccount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 701
  testRunner.And(string.Format("In ENSTRDSH I Verify Trade History details2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"{17}" +
                        "\"", prefCurrency, currencyDesc, paymentMethod1, holderCharges, holderTax, companyCharges, companyTax, reportCharges, reportTax, totalCharges, gstTaxTotal, bankCode, payeeAccountNumber, accountName, remainingBalance, remBalIndDesc, transfereeHolder, transfereeClass), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
