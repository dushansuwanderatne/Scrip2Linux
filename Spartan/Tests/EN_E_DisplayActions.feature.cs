// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SCRIPAU.Automation.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("EN_E_DisplayActions")]
    public partial class EN_E_DisplayActionsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "EN_E_DisplayActions.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "EN_E_DisplayActions", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View Holder Details")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("ViewHolderDetails")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        public virtual void ViewHolderDetails()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View Holder Details", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "CPU_AUTO",
                        "ViewHolderDetails",
                        "EN_E_DisplayActions",
                        "FullSmokeTest"});
#line 9
this.ScenarioSetup(scenarioInfo);
#line 11
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 12
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
  testRunner.And("I go to the Enquiry system for \"I0100007550\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "Action",
                        "A"});
            table1.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 14
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table1, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "HIN",
                        "I0100007550"});
            table2.AddRow(new string[] {
                        "Type",
                        "EMP"});
            table2.AddRow(new string[] {
                        "Post Code",
                        "3023"});
            table2.AddRow(new string[] {
                        "TAX Code",
                        "USA"});
            table2.AddRow(new string[] {
                        "TFN Desc",
                        "Non-Res"});
            table2.AddRow(new string[] {
                        "ABN Desc",
                        "Non-Res"});
            table2.AddRow(new string[] {
                        "Group",
                        ""});
            table2.AddRow(new string[] {
                        "Var field",
                        "1000"});
            table2.AddRow(new string[] {
                        "Broker Code",
                        "60109"});
            table2.AddRow(new string[] {
                        "Register",
                        ""});
            table2.AddRow(new string[] {
                        "Key Modifier",
                        "20000"});
            table2.AddRow(new string[] {
                        "DPID",
                        ""});
            table2.AddRow(new string[] {
                        "Alternate ID",
                        "1250"});
            table2.AddRow(new string[] {
                        "Key",
                        "RIXYE       KIXP        20000"});
            table2.AddRow(new string[] {
                        "Name",
                        "MR KIXP RIXYE"});
            table2.AddRow(new string[] {
                        "Address1",
                        "1 GIXRABISM DRIVE"});
            table2.AddRow(new string[] {
                        "Address2",
                        "2 GIXRABISM DRIVE"});
            table2.AddRow(new string[] {
                        "Address3",
                        "3 GIXRABISM DRIVE"});
            table2.AddRow(new string[] {
                        "Address4",
                        "4 GIXRABISM DRIVE"});
            table2.AddRow(new string[] {
                        "Address5",
                        "GIOYPMIO VIC"});
            table2.AddRow(new string[] {
                        "Deceased",
                        "N"});
            table2.AddRow(new string[] {
                        "Exception",
                        ""});
            table2.AddRow(new string[] {
                        "Suppress",
                        "N"});
            table2.AddRow(new string[] {
                        "Ret Mail",
                        ""});
            table2.AddRow(new string[] {
                        "A/Report",
                        "R"});
            table2.AddRow(new string[] {
                        "AR Nominated Text",
                        "(Default)"});
            table2.AddRow(new string[] {
                        "Birth Date",
                        "01/01/1982"});
            table2.AddRow(new string[] {
                        "Stop Trade",
                        "N"});
            table2.AddRow(new string[] {
                        "Div Source",
                        "D"});
            table2.AddRow(new string[] {
                        "Residency",
                        "D"});
            table2.AddRow(new string[] {
                        "Var Flag1",
                        "E"});
            table2.AddRow(new string[] {
                        "Var Flag2",
                        "R"});
            table2.AddRow(new string[] {
                        "Var Flag3",
                        ""});
            table2.AddRow(new string[] {
                        "Var Flag4",
                        "O"});
            table2.AddRow(new string[] {
                        "Var Flag5",
                        "02"});
            table2.AddRow(new string[] {
                        "Warning1",
                        "Non standard tax rates"});
            table2.AddRow(new string[] {
                        "Warning2",
                        "Payee instruction direct/bulk"});
            table2.AddRow(new string[] {
                        "Warning3",
                        "Holder Extra details present"});
            table2.AddRow(new string[] {
                        "Warning4",
                        "No DPID allocated"});
            table2.AddRow(new string[] {
                        "Warning5",
                        "ESS Participant"});
            table2.AddRow(new string[] {
                        "Warning6",
                        "Shareholder Review"});
            table2.AddRow(new string[] {
                        "Restrict Class info",
                        "* NOTICE 03/03/2014 *"});
#line 18
 testRunner.Then("In ENS01001 I should see holder details as below:", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View Holder Extra Details")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("ViewHolderExtraDetails")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        public virtual void ViewHolderExtraDetails()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View Holder Extra Details", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "CPU_AUTO",
                        "ViewHolderExtraDetails",
                        "EN_E_DisplayActions",
                        "FullSmokeTest"});
#line 69
this.ScenarioSetup(scenarioInfo);
#line 71
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 72
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 73
  testRunner.And("I go to the Enquiry system for \"I0100007550\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "Action",
                        "HE"});
            table3.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 74
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table4.AddRow(new string[] {
                        "Name Key",
                        "RIXYE       KIXP        20000"});
            table4.AddRow(new string[] {
                        "HIN",
                        "I0100007550"});
            table4.AddRow(new string[] {
                        "Holder Type",
                        "EMP"});
            table4.AddRow(new string[] {
                        "Extra Holder ID",
                        "300300"});
            table4.AddRow(new string[] {
                        "Name",
                        "MR KIXP RIXYE"});
            table4.AddRow(new string[] {
                        "Address1",
                        "1 GIXRABISM DRIVE"});
            table4.AddRow(new string[] {
                        "Address2",
                        "2 GIXRABISM DRIVE"});
            table4.AddRow(new string[] {
                        "Address3",
                        "3 GIXRABISM DRIVE"});
            table4.AddRow(new string[] {
                        "Address4",
                        "4 GIXRABISM DRIVE"});
            table4.AddRow(new string[] {
                        "Address5",
                        "GIOYPMIO VIC"});
            table4.AddRow(new string[] {
                        "Home Tell",
                        "124456789"});
            table4.AddRow(new string[] {
                        "Work Tell",
                        "124456789"});
            table4.AddRow(new string[] {
                        "Fax",
                        "124456789"});
            table4.AddRow(new string[] {
                        "Mobile",
                        "124456789"});
            table4.AddRow(new string[] {
                        "Email",
                        "KIXP.WECDU._test@computershare.com"});
            table4.AddRow(new string[] {
                        "Return Email",
                        ""});
            table4.AddRow(new string[] {
                        "Email Count",
                        "1"});
            table4.AddRow(new string[] {
                        "ABN1",
                        ""});
            table4.AddRow(new string[] {
                        "ABN2",
                        ""});
            table4.AddRow(new string[] {
                        "Type1",
                        ""});
            table4.AddRow(new string[] {
                        "Type2",
                        ""});
            table4.AddRow(new string[] {
                        "Flag1",
                        "S"});
            table4.AddRow(new string[] {
                        "Flag1 Desc",
                        "SPECIAL CIRCUMSTANCES"});
            table4.AddRow(new string[] {
                        "Flag2",
                        "F"});
            table4.AddRow(new string[] {
                        "Flag2 Desc",
                        "TEST F"});
            table4.AddRow(new string[] {
                        "Flag3",
                        "G"});
            table4.AddRow(new string[] {
                        "Flag3 Desc",
                        "TEST G"});
            table4.AddRow(new string[] {
                        "Flag4",
                        "H"});
            table4.AddRow(new string[] {
                        "Flag4 Desc",
                        "TEST H"});
            table4.AddRow(new string[] {
                        "Flag5",
                        "E2"});
            table4.AddRow(new string[] {
                        "Flag5 Desc",
                        "AML CPM Trust Participant"});
            table4.AddRow(new string[] {
                        "Flag6",
                        "I"});
            table4.AddRow(new string[] {
                        "Flag6 Desc",
                        "TEST I"});
            table4.AddRow(new string[] {
                        "Flag7",
                        "J"});
            table4.AddRow(new string[] {
                        "Flag7 Desc",
                        "TEST J"});
            table4.AddRow(new string[] {
                        "Flag8",
                        "K"});
            table4.AddRow(new string[] {
                        "Flag8 Desc",
                        "TEST K"});
            table4.AddRow(new string[] {
                        "Flag9",
                        "L"});
            table4.AddRow(new string[] {
                        "Flag9 Desc",
                        "TEST L"});
#line 78
 testRunner.Then("In ENS01020 I should see holder extra details as below:", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View Certificates")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("ViewCertificates")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        public virtual void ViewCertificates()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View Certificates", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "CPU_AUTO",
                        "ViewCertificates",
                        "EN_E_DisplayActions"});
#line 125
this.ScenarioSetup(scenarioInfo);
#line 127
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 128
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 129
  testRunner.And("I go to the Enquiry system for \"I0100007550\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table5.AddRow(new string[] {
                        "Action",
                        "C"});
            table5.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 130
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table5, "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table6.AddRow(new string[] {
                        "HIN",
                        "I0100007550"});
            table6.AddRow(new string[] {
                        "Page1 Line1",
                        "DEP/DEFERRED EMP SHARE PLAN - AU"});
            table6.AddRow(new string[] {
                        "Page1 Line2",
                        "02A 20020603EM   03/06/02          1498    02A 20020603EM   04/07/13           14" +
                            "98-"});
            table6.AddRow(new string[] {
                        "Page1 Line3",
                        "**** Total for 20020603EM                  0"});
            table6.AddRow(new string[] {
                        "Page2 Line1",
                        "DEP/DEFERRED EMP SHARE PLAN - AU   Cont\'d"});
            table6.AddRow(new string[] {
                        "Page2 Line2",
                        "02A 20021104EP   04/11/02           181    02A 20021104EP   04/07/13            1" +
                            "81-"});
            table6.AddRow(new string[] {
                        "Page2 Line3",
                        "**** Total for 20021104EP                  0"});
#line 134
 testRunner.Then("In ENS01012 I should see Certificate details as below:", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View Last Tran Details")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("ViewLastTranDetails")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        public virtual void ViewLastTranDetails()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View Last Tran Details", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "CPU_AUTO",
                        "ViewLastTranDetails",
                        "EN_E_DisplayActions"});
#line 149
this.ScenarioSetup(scenarioInfo);
#line 151
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 152
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 153
  testRunner.And("I go to the Enquiry system for \"I0100007550\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table7.AddRow(new string[] {
                        "Action",
                        "E"});
            table7.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 154
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table7, "And ");
#line 163
 testRunner.Then("In ENS01042 I should see the Last Tran details as \"02A 20020603EM   04/06/02     " +
                    "        0 | 04/07/13 ESTTS 4218/  964437          1498-\" and \"02A 20030404EP   0" +
                    "4/04/03             0 | 04/07/13 ESTTS 4218/  964437           269-\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View Dividend History")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("ViewDividendHistory")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        public virtual void ViewDividendHistory()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View Dividend History", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "CPU_AUTO",
                        "ViewDividendHistory",
                        "EN_E_DisplayActions",
                        "FullSmokeTest"});
#line 171
this.ScenarioSetup(scenarioInfo);
#line 173
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 174
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 175
  testRunner.And("I go to the Enquiry system for \"I0100007550\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table8.AddRow(new string[] {
                        "Action",
                        "DH"});
            table8.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 176
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table8, "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table9.AddRow(new string[] {
                        "HIN",
                        "I0100007550"});
            table9.AddRow(new string[] {
                        "Selection",
                        "1"});
            table9.AddRow(new string[] {
                        "Pay Date",
                        "24/05/2016"});
            table9.AddRow(new string[] {
                        "Pay Method",
                        "DIRECT CREDIT"});
            table9.AddRow(new string[] {
                        "Code",
                        "DIV2"});
            table9.AddRow(new string[] {
                        "Pay Account",
                        "PN002"});
            table9.AddRow(new string[] {
                        "Pay Type",
                        "PAYMENT"});
            table9.AddRow(new string[] {
                        "Gross Amount",
                        "245.00"});
            table9.AddRow(new string[] {
                        "Nett Amount",
                        "245.00"});
#line 180
 testRunner.Then("In ENSDIV01 I should see Dividend History as below:", ((string)(null)), table9, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table10.AddRow(new string[] {
                        "Action",
                        "3"});
            table10.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 191
  testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table10, "When ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table11.AddRow(new string[] {
                        "Name Key",
                        "RIXYE       KIXP        20000"});
            table11.AddRow(new string[] {
                        "HIN",
                        "I0100007550"});
            table11.AddRow(new string[] {
                        "Holder Type",
                        "EMP"});
            table11.AddRow(new string[] {
                        "Class",
                        "EXA"});
            table11.AddRow(new string[] {
                        "Regisrter",
                        "13A"});
            table11.AddRow(new string[] {
                        "Cert Nbr",
                        ""});
            table11.AddRow(new string[] {
                        "Units",
                        "4"});
            table11.AddRow(new string[] {
                        "Bulk ID",
                        "EXP0001668"});
            table11.AddRow(new string[] {
                        "Bulk Tran",
                        "12552678"});
            table11.AddRow(new string[] {
                        "Trade Date",
                        "12/02/2014"});
            table11.AddRow(new string[] {
                        "Settlement Date",
                        "17/02/2014"});
            table11.AddRow(new string[] {
                        "Price",
                        "11.64000"});
            table11.AddRow(new string[] {
                        "Cost of Shares",
                        "46.56"});
            table11.AddRow(new string[] {
                        "Charges",
                        ""});
            table11.AddRow(new string[] {
                        "Total Cost",
                        "46.56"});
            table11.AddRow(new string[] {
                        "Amount Received",
                        "49.82"});
            table11.AddRow(new string[] {
                        "Residue Paid",
                        ""});
            table11.AddRow(new string[] {
                        "Residue Kept",
                        "3.26"});
            table11.AddRow(new string[] {
                        "Commission",
                        ""});
            table11.AddRow(new string[] {
                        "Stamp Duty",
                        ""});
            table11.AddRow(new string[] {
                        "Other Charges",
                        ""});
#line 195
  testRunner.Then("In ENSSPLBP I should see Extra Dividend History as below:", ((string)(null)), table11, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View Register of Certificates")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("ViewRegisterCertificates")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        public virtual void ViewRegisterOfCertificates()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View Register of Certificates", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "CPU_AUTO",
                        "ViewRegisterCertificates",
                        "EN_E_DisplayActions",
                        "FullSmokeTest"});
#line 225
this.ScenarioSetup(scenarioInfo);
#line 227
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 228
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 229
  testRunner.And("I go to the Enquiry system for \"I0100007550\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table12.AddRow(new string[] {
                        "Action",
                        "R"});
            table12.AddRow(new string[] {
                        "Locate Argument",
                        "/DEP"});
#line 230
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table12, "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table13.AddRow(new string[] {
                        "HIN",
                        "I0100007550"});
            table13.AddRow(new string[] {
                        "Line1",
                        "DEP/DEFERRED EMP SHARE PLAN - AU"});
            table13.AddRow(new string[] {
                        "Line2",
                        "02A 20020603EM   03/06/02 ESAWB 1338/10457471           1498"});
            table13.AddRow(new string[] {
                        "Line3",
                        "04/07/13 ESTTS 4218/  964437           1498-                      SCANAL"});
            table13.AddRow(new string[] {
                        "Line4",
                        "*Certificate Balance             0"});
            table13.AddRow(new string[] {
                        "Line5",
                        "02A 20020604EP   04/06/02 ESAWP 1341/10456518            210"});
            table13.AddRow(new string[] {
                        "Line6",
                        "04/07/13 ESTTS 4218/  964437            210-                      SCANAL"});
#line 234
 testRunner.Then("In ENS01013 I should see Register details as below:", ((string)(null)), table13, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table14.AddRow(new string[] {
                        "Action",
                        "R19"});
            table14.AddRow(new string[] {
                        "Locate Argument",
                        "/DEP"});
#line 243
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table14, "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table15.AddRow(new string[] {
                        "HIN",
                        "I0100007550"});
            table15.AddRow(new string[] {
                        "Line1",
                        "DEP/DEFERRED EMP SHARE PLAN - AU   (Cont\'d)"});
            table15.AddRow(new string[] {
                        "Line2",
                        "13A 20130712EP   12/07/13 ESAWP 4228/12403605             40                     " +
                            "  SCRIP"});
            table15.AddRow(new string[] {
                        "Line3",
                        "13A 20130812EP   12/08/13 ESAWP 4249/12418775             40                     " +
                            "  SCRIP"});
            table15.AddRow(new string[] {
                        "Line4",
                        "13A 20130912EP   12/09/13 ESAWP 4283/12494657             41                     " +
                            "  SCRIP"});
            table15.AddRow(new string[] {
                        "Line5",
                        "13A 20131014EP   14/10/13 ESAWP 4306/12507171             42                     " +
                            "  SCRIP"});
            table15.AddRow(new string[] {
                        "Line6",
                        "13A 20131112EP   12/11/13 ESAWP 4326/12519870             38                     " +
                            "  SCRIP"});
#line 247
 testRunner.Then("In ENS01013 I should see Register details as below:", ((string)(null)), table15, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View Register of Certificates-RR")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("ViewRegisterForCertificates")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        public virtual void ViewRegisterOfCertificates_RR()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View Register of Certificates-RR", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "CPU_AUTO",
                        "ViewRegisterForCertificates",
                        "EN_E_DisplayActions"});
#line 262
this.ScenarioSetup(scenarioInfo);
#line 264
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 265
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 266
  testRunner.And("I go to the Enquiry system for \"I0100007550\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table16.AddRow(new string[] {
                        "Action",
                        "RR"});
            table16.AddRow(new string[] {
                        "Locate Argument",
                        "I0100007550/1338/10457471"});
#line 267
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table16, "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table17.AddRow(new string[] {
                        "HIN",
                        "I0100007550"});
            table17.AddRow(new string[] {
                        "Line1",
                        "DEP/DEFERRED EMP SHARE PLAN - AU"});
            table17.AddRow(new string[] {
                        "Line2",
                        "02A 20020603EM   03/06/02 ESAWB 1338/10457471           1498"});
#line 271
 testRunner.Then("In ENS01016 I should see Register details as below:", ((string)(null)), table17, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View Static Details History")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("ViewStaticDetailsHistory")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        public virtual void ViewStaticDetailsHistory()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View Static Details History", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "CPU_AUTO",
                        "ViewStaticDetailsHistory",
                        "EN_E_DisplayActions",
                        "FullSmokeTest"});
#line 283
this.ScenarioSetup(scenarioInfo);
#line 285
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 286
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 287
  testRunner.And("I go to the Enquiry system for \"I0100007550\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table18.AddRow(new string[] {
                        "Action",
                        "SH"});
            table18.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 288
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table18, "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table19.AddRow(new string[] {
                        "NameKey",
                        "RIXYE       KIXP        20000"});
            table19.AddRow(new string[] {
                        "HIN",
                        "I0100007550"});
            table19.AddRow(new string[] {
                        "Holder Type",
                        "EMP"});
            table19.AddRow(new string[] {
                        "Name",
                        "MR KIXP RIXYE"});
            table19.AddRow(new string[] {
                        "Address1",
                        "1 GIXRABISM DRIVE"});
            table19.AddRow(new string[] {
                        "Address2",
                        "2 GIXRABISM DRIVE"});
            table19.AddRow(new string[] {
                        "Address3",
                        "3 GIXRABISM DRIVE"});
            table19.AddRow(new string[] {
                        "Address4",
                        "4 GIXRABISM DRIVE"});
            table19.AddRow(new string[] {
                        "Address5",
                        "GIOYPMIO VIC"});
            table19.AddRow(new string[] {
                        "Date First SH",
                        "11/02/2000"});
            table19.AddRow(new string[] {
                        "Date First On",
                        "13/02/2001"});
            table19.AddRow(new string[] {
                        "Run",
                        "1253"});
            table19.AddRow(new string[] {
                        "Tran No",
                        "84631"});
            table19.AddRow(new string[] {
                        "Date",
                        "15/01/2002"});
            table19.AddRow(new string[] {
                        "Transaction Code",
                        "NAFLG"});
            table19.AddRow(new string[] {
                        "Transaction Desc",
                        "NAME & ADDRESS (FLAG CHANGE)"});
            table19.AddRow(new string[] {
                        "Reference",
                        ""});
            table19.AddRow(new string[] {
                        "Source",
                        ""});
#line 292
 testRunner.Then("In ENS01034 I should see Static History as below:", ((string)(null)), table19, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View Payee Instructions")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("ViewPayeeInstructions")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        public virtual void ViewPayeeInstructions()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View Payee Instructions", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "CPU_AUTO",
                        "ViewPayeeInstructions",
                        "EN_E_DisplayActions",
                        "FullSmokeTest"});
#line 319
this.ScenarioSetup(scenarioInfo);
#line 321
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 322
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 323
  testRunner.And("I go to the Enquiry system for \"I0100007550\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table20.AddRow(new string[] {
                        "Action",
                        "PI"});
            table20.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 324
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table20, "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table21.AddRow(new string[] {
                        "Name Key",
                        "RIXYE       KIXP        20000"});
            table21.AddRow(new string[] {
                        "HIN",
                        "I0100007550"});
            table21.AddRow(new string[] {
                        "Holder Type",
                        "EMP"});
            table21.AddRow(new string[] {
                        "Bank System",
                        "10"});
            table21.AddRow(new string[] {
                        "BSB Code",
                        "033-080"});
            table21.AddRow(new string[] {
                        "Account Number",
                        "567990"});
            table21.AddRow(new string[] {
                        "Account Name",
                        "KIXP RIXYE"});
            table21.AddRow(new string[] {
                        "Bank Address1",
                        "WESTPAC BANKING CORPORATION"});
            table21.AddRow(new string[] {
                        "Bank Address2",
                        "ST ALBANS VIC 3021"});
            table21.AddRow(new string[] {
                        "Name",
                        "MR KIXP RIXYE"});
            table21.AddRow(new string[] {
                        "Address1",
                        "1 GIXRABISM DRIVE"});
            table21.AddRow(new string[] {
                        "Address2",
                        "2 GIXRABISM DRIVE"});
            table21.AddRow(new string[] {
                        "Address3",
                        "3 GIXRABISM DRIVE"});
            table21.AddRow(new string[] {
                        "Address4",
                        "4 GIXRABISM DRIVE"});
            table21.AddRow(new string[] {
                        "Address5",
                        "GIOYPMIO VIC"});
#line 328
 testRunner.Then("In ENS01002 I should see the holder payee Instructions as below:", ((string)(null)), table21, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17325: 03_WR:Wire Instruction action")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("17325")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        public virtual void TestCase1732503_WRWireInstructionAction()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17325: 03_WR:Wire Instruction action", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "CPU_AUTO",
                        "17325",
                        "EN_E_DisplayActions"});
#line 351
this.ScenarioSetup(scenarioInfo);
#line 353
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 354
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 355
  testRunner.And("I go to the Enquiry system for \"I0100007525\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table22.AddRow(new string[] {
                        "Action",
                        "WR"});
            table22.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 356
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table22, "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table23.AddRow(new string[] {
                        "Name Key",
                        "CABCOEYH    YDIKUB"});
            table23.AddRow(new string[] {
                        "HIN",
                        "I0100007525"});
            table23.AddRow(new string[] {
                        "Holder Type",
                        "EMP"});
            table23.AddRow(new string[] {
                        "Country Code",
                        "GB"});
            table23.AddRow(new string[] {
                        "Country",
                        "UNITED KINGDOM"});
            table23.AddRow(new string[] {
                        "Bank System",
                        "75"});
            table23.AddRow(new string[] {
                        "Routing Code",
                        "01-00-53"});
            table23.AddRow(new string[] {
                        "Swift Code",
                        "RBOSGB12345"});
            table23.AddRow(new string[] {
                        "Account Number",
                        "GB96MIDL40271522859882"});
            table23.AddRow(new string[] {
                        "Account Name",
                        "AUTOMATION HOLDER"});
            table23.AddRow(new string[] {
                        "Currency Code",
                        "GBP"});
            table23.AddRow(new string[] {
                        "Currency",
                        "BRITISH POUND"});
            table23.AddRow(new string[] {
                        "Name",
                        "YDIKUB CABCOEYH,"});
            table23.AddRow(new string[] {
                        "Address1",
                        "3 UWBCUJAEM COURT"});
            table23.AddRow(new string[] {
                        "Address2",
                        "RABC KIMV VIC"});
            table23.AddRow(new string[] {
                        "Postcode",
                        "3082"});
#line 360
 testRunner.Then("In ENS01075 I should see Wire Instructions as below:", ((string)(null)), table23, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17133: 02_PD Action for Payment Details")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("17133")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        public virtual void TestCase1713302_PDActionForPaymentDetails()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17133: 02_PD Action for Payment Details", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "CPU_AUTO",
                        "17133",
                        "EN_E_DisplayActions",
                        "FullSmokeTest"});
#line 385
this.ScenarioSetup(scenarioInfo);
#line 387
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 388
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 389
  testRunner.And("I go to the Enquiry system for \"I0100007550\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table24.AddRow(new string[] {
                        "Action",
                        "PD"});
            table24.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 390
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table24, "And ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table25.AddRow(new string[] {
                        "Name Key",
                        "RIXYE       KIXP        20000"});
            table25.AddRow(new string[] {
                        "HIN",
                        "I0100007550"});
            table25.AddRow(new string[] {
                        "Name",
                        "MR KIXP RIXYE"});
            table25.AddRow(new string[] {
                        "Address",
                        "1 GIXRABISM DRIVE"});
            table25.AddRow(new string[] {
                        "PD Line1",
                        "PN002/TEST PAYMENT ACCOUNT FOR DIVIDEND2       R:00000256D        245.00:Net"});
            table25.AddRow(new string[] {
                        "PD Line2",
                        "245.00:Frk           0.00:Unf          0.00:TCr 24/05/16 Client Rec"});
            table25.AddRow(new string[] {
                        "PD Line3",
                        "PN001/PAYMENT ACCOUNT FOR DIVIDEND1            R:00000256D         49.00:Net"});
            table25.AddRow(new string[] {
                        "PD Line4",
                        "49.00:Frk           0.00:Unf          0.00:TCr 24/05/16 Presented"});
            table25.AddRow(new string[] {
                        "PD Line5",
                        "EFA13/EMP FINDIV 14CPS 20%FRK RD26/8 PD17/9/13 R:00801493D       1250.34:Net"});
            table25.AddRow(new string[] {
                        "PD Line6",
                        "250.07:Frk        1000.27:Unf        107.17*TCr 17/09/13 Presented"});
            table25.AddRow(new string[] {
                        "PD Line7",
                        "13EDA/EMP INTDIV 14CPS 20%FRK RD25/2 PD19/3/13 R:00801554D       2408.56:Net"});
            table25.AddRow(new string[] {
                        "PD Line8",
                        "481.71:Frk        1926.85:Unf        206.45*TCr 19/03/13 Presented"});
            table25.AddRow(new string[] {
                        "PD Line9",
                        "TOTAL        3952.90:Presented          0.00:Unpresented          0.00:Cancelled"});
#line 394
 testRunner.Then("In ENS01009 I should see Payment Details as below:", ((string)(null)), table25, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table26.AddRow(new string[] {
                        "Action",
                        "M"});
            table26.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 409
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table26, "When ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table27.AddRow(new string[] {
                        "Name Key",
                        "RIXYE       KIXP        20000"});
            table27.AddRow(new string[] {
                        "HIN",
                        "I0100007550"});
            table27.AddRow(new string[] {
                        "Name",
                        "MR KIXP RIXYE"});
            table27.AddRow(new string[] {
                        "Address",
                        "1 GIXRABISM DRIVE"});
            table27.AddRow(new string[] {
                        "PD Line1",
                        "12EDA/DEP/EXA FIN14CPS 60%FRK RD20/8 PD11/9/12 R:00801603D       2365.72:Net"});
            table27.AddRow(new string[] {
                        "PD Line2",
                        "1419.43:Frk         946.29:Unf        608.33*TCr 11/09/12 Presented"});
            table27.AddRow(new string[] {
                        "PD Line3",
                        "EDA12/DEP/EXA INT14CPS 60%FRK RD2/3 PD23/3/12  R:00801539D       2261.14:Net"});
            table27.AddRow(new string[] {
                        "PD Line4",
                        "1356.68:Frk         904.46:Unf        581.43*TCr 23/03/12 Presented"});
            table27.AddRow(new string[] {
                        "PD Line5",
                        "11EDA/DEP/EXA FIN14CPS 60%FRK RD22/8 PD13/9/11 R:00801473D       2211.86:Net"});
            table27.AddRow(new string[] {
                        "PD Line6",
                        "1327.11:Frk         884.75:Unf        568.76*TCr 13/09/11 Presented"});
            table27.AddRow(new string[] {
                        "PD Line7",
                        "EDA11/DEP/EXA INT14CPS 60%FRK RD21/2 PD15/3/11 R:00801398D       2122.96:Net"});
            table27.AddRow(new string[] {
                        "PD Line8",
                        "1273.78:Frk         849.18:Unf        545.91*TCr 15/03/11 Presented"});
            table27.AddRow(new string[] {
                        "PD Line9",
                        "TOTAL       12914.58:Presented          0.00:Unpresented          0.00:Cancelled"});
#line 413
 testRunner.Then("In ENS01009 I should see Payment Details as below:", ((string)(null)), table27, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17134: 03_MJ Action for Manual Journal")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("17134")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        public virtual void TestCase1713403_MJActionForManualJournal()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17134: 03_MJ Action for Manual Journal", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "CPU_AUTO",
                        "17134",
                        "EN_E_DisplayActions",
                        "FullSmokeTest"});
#line 435
this.ScenarioSetup(scenarioInfo);
#line 437
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 438
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 439
  testRunner.And("I go to the Enquiry system for \"I0100007550\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table28.AddRow(new string[] {
                        "Action",
                        "MJ"});
            table28.AddRow(new string[] {
                        "Locate Argument",
                        "FIN07"});
#line 440
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table28, "And ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table29.AddRow(new string[] {
                        "Name Key",
                        "RIXYE       KIXP        20000"});
            table29.AddRow(new string[] {
                        "HIN",
                        "I0100007550"});
            table29.AddRow(new string[] {
                        "Name",
                        "MR KIXP RIXYE"});
            table29.AddRow(new string[] {
                        "Address",
                        "1 GIXRABISM DRIVE"});
            table29.AddRow(new string[] {
                        "Pay Account Number",
                        "FIN07"});
            table29.AddRow(new string[] {
                        "Pay Account Desc",
                        "EMP DIV DEP/EXA 9CUNF RD06/09 PD21/09/07"});
            table29.AddRow(new string[] {
                        "Transaction Details1",
                        "00801252D           2641/00658938 25/09/07  DCRFM/DIRECT CREDIT FAILURE (MANUAL) " +
                            " S Nerpanda-----------(WINFRM)"});
            table29.AddRow(new string[] {
                        "Transaction Details2",
                        "00801252D           2645/00623902 05/10/07  REDCR/REPLACE PAYMENT WITH DCREDIT   " +
                            " T Ackerly------------(WINFRM)"});
#line 444
 testRunner.Then("In ENS01011 I should see Manual Journal as below:", ((string)(null)), table29, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table30.AddRow(new string[] {
                        "Action",
                        "."});
            table30.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 454
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table30, "When ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table31.AddRow(new string[] {
                        "BSB",
                        "033-080"});
            table31.AddRow(new string[] {
                        "Account Number",
                        "567990"});
            table31.AddRow(new string[] {
                        "Account Name",
                        "GIBK KIBCE"});
#line 458
 testRunner.Then("In ENS01017 I should see payment details as below:", ((string)(null)), table31, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View Noting Options")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("ViewNotingOptions")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        public virtual void ViewNotingOptions()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View Noting Options", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "CPU_AUTO",
                        "ViewNotingOptions",
                        "EN_E_DisplayActions",
                        "FullSmokeTest"});
#line 470
this.ScenarioSetup(scenarioInfo);
#line 472
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 473
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 474
  testRunner.And("I go to the Enquiry system for \"I0100007525\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table32.AddRow(new string[] {
                        "Action",
                        "N1"});
            table32.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 475
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table32, "And ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table33.AddRow(new string[] {
                        "Noting Nuber",
                        "1"});
            table33.AddRow(new string[] {
                        "Run",
                        "4398"});
            table33.AddRow(new string[] {
                        "Tran",
                        "9080"});
            table33.AddRow(new string[] {
                        "Name Key",
                        "CABCOEYH    YDIKUB"});
            table33.AddRow(new string[] {
                        "HIN",
                        "I0100007525"});
            table33.AddRow(new string[] {
                        "Holder Type",
                        "EMP"});
            table33.AddRow(new string[] {
                        "Comment",
                        "TEST NOTING1"});
            table33.AddRow(new string[] {
                        "Noting Line1",
                        "NOTING1 LINE1"});
            table33.AddRow(new string[] {
                        "Noting Line2",
                        "NOTING1 LINE2"});
            table33.AddRow(new string[] {
                        "Noting Line3",
                        "NOTING1 LINE3"});
#line 479
 testRunner.Then("In ENS01021 I should see Notings as below:", ((string)(null)), table33, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table34.AddRow(new string[] {
                        "Action",
                        "N2"});
            table34.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 491
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table34, "When ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table35.AddRow(new string[] {
                        "Noting Nuber",
                        "2"});
            table35.AddRow(new string[] {
                        "Run",
                        "4398"});
            table35.AddRow(new string[] {
                        "Tran",
                        "9081"});
            table35.AddRow(new string[] {
                        "Name Key",
                        "CABCOEYH    YDIKUB"});
            table35.AddRow(new string[] {
                        "HIN",
                        "I0100007525"});
            table35.AddRow(new string[] {
                        "Holder Type",
                        "EMP"});
            table35.AddRow(new string[] {
                        "Comment",
                        "TEST NOTING2"});
            table35.AddRow(new string[] {
                        "Noting Line1",
                        "NOTING2 LINE1"});
            table35.AddRow(new string[] {
                        "Noting Line2",
                        "NOTING2 LINE2"});
            table35.AddRow(new string[] {
                        "Noting Line3",
                        "NOTING2 LINE3"});
#line 495
 testRunner.Then("In ENS01021 I should see Notings as below:", ((string)(null)), table35, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 16775: GBR A action for Overseas and Local domiciles-GBR")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("16775GBR")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        public virtual void TestCase16775GBRAActionForOverseasAndLocalDomiciles_GBR()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 16775: GBR A action for Overseas and Local domiciles-GBR", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "NAB_AUTO",
                        "16775GBR",
                        "EN_E_DisplayActions"});
#line 513
this.ScenarioSetup(scenarioInfo);
#line 514
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 515
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 516
  testRunner.And("I go to the Enquiry system for \"C0003784642\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table36.AddRow(new string[] {
                        "Action",
                        "A"});
            table36.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 517
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table36, "And ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table37.AddRow(new string[] {
                        "HIN",
                        "C0003784642"});
            table37.AddRow(new string[] {
                        "Type",
                        "MAL"});
            table37.AddRow(new string[] {
                        "Post Code",
                        "GBR"});
            table37.AddRow(new string[] {
                        "TAX Code",
                        ""});
            table37.AddRow(new string[] {
                        "TFN Desc",
                        "Non-Res"});
            table37.AddRow(new string[] {
                        "ABN Desc",
                        "Non-Res"});
            table37.AddRow(new string[] {
                        "Group",
                        ""});
            table37.AddRow(new string[] {
                        "Var field",
                        ""});
            table37.AddRow(new string[] {
                        "Broker Code",
                        ""});
            table37.AddRow(new string[] {
                        "Register",
                        ""});
            table37.AddRow(new string[] {
                        "Key Modifier",
                        ""});
            table37.AddRow(new string[] {
                        "DPID",
                        ""});
            table37.AddRow(new string[] {
                        "Alternate ID",
                        ""});
            table37.AddRow(new string[] {
                        "Key",
                        "WELLINGTON  JOHN"});
            table37.AddRow(new string[] {
                        "Name",
                        "EST LATE JOHN WELLINGTON"});
            table37.AddRow(new string[] {
                        "Address1",
                        "TEST AUTOMATION"});
            table37.AddRow(new string[] {
                        "Address2",
                        "C/- CHARLES STANLEY & CO LTD"});
            table37.AddRow(new string[] {
                        "Address3",
                        "25 LUKE STREET"});
            table37.AddRow(new string[] {
                        "Address4",
                        "LONDON  EC2A 4AR"});
            table37.AddRow(new string[] {
                        "Address5",
                        "UNITED KINGDOM"});
            table37.AddRow(new string[] {
                        "Deceased",
                        "Y"});
            table37.AddRow(new string[] {
                        "Exception",
                        ""});
            table37.AddRow(new string[] {
                        "Suppress",
                        "N"});
            table37.AddRow(new string[] {
                        "Ret Mail",
                        ""});
            table37.AddRow(new string[] {
                        "A/Report",
                        "N"});
            table37.AddRow(new string[] {
                        "AR Nominated Text",
                        "(Default)"});
            table37.AddRow(new string[] {
                        "Birth Date",
                        ""});
            table37.AddRow(new string[] {
                        "Stop Trade",
                        "N"});
            table37.AddRow(new string[] {
                        "Div Source",
                        "U"});
            table37.AddRow(new string[] {
                        "Residency",
                        ""});
            table37.AddRow(new string[] {
                        "Var Flag1",
                        ""});
            table37.AddRow(new string[] {
                        "Var Flag2",
                        ""});
            table37.AddRow(new string[] {
                        "Var Flag3",
                        ""});
            table37.AddRow(new string[] {
                        "Var Flag4",
                        ""});
            table37.AddRow(new string[] {
                        "Var Flag5",
                        ""});
            table37.AddRow(new string[] {
                        "Warning1",
                        "Overseas domicile"});
            table37.AddRow(new string[] {
                        "Warning2",
                        "Deceased estate"});
            table37.AddRow(new string[] {
                        "Warning3",
                        "Noting:D1"});
            table37.AddRow(new string[] {
                        "Warning4",
                        "Nil holding on trading classes"});
            table37.AddRow(new string[] {
                        "Warning5",
                        "No Annual Report"});
            table37.AddRow(new string[] {
                        "Warning6",
                        ""});
            table37.AddRow(new string[] {
                        "Restrict Class info",
                        ""});
#line 521
 testRunner.Then("In ENS01001 I should see holder details as below:", ((string)(null)), table37, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 16775: USA A action for Overseas and Local domiciles-USA")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("16775USA")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        public virtual void TestCase16775USAAActionForOverseasAndLocalDomiciles_USA()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 16775: USA A action for Overseas and Local domiciles-USA", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "NAB_AUTO",
                        "16775USA",
                        "EN_E_DisplayActions"});
#line 571
this.ScenarioSetup(scenarioInfo);
#line 572
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 573
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 574
  testRunner.And("I go to the Enquiry system for \"I0030013930\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table38.AddRow(new string[] {
                        "Action",
                        "A"});
            table38.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 575
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table38, "And ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table39.AddRow(new string[] {
                        "HIN",
                        "I0030013930"});
            table39.AddRow(new string[] {
                        "Type",
                        "***"});
            table39.AddRow(new string[] {
                        "Post Code",
                        "USA"});
            table39.AddRow(new string[] {
                        "TAX Code",
                        ""});
            table39.AddRow(new string[] {
                        "TFN Desc",
                        "Non-Res"});
            table39.AddRow(new string[] {
                        "ABN Desc",
                        "Non-Res"});
            table39.AddRow(new string[] {
                        "Group",
                        ""});
            table39.AddRow(new string[] {
                        "Var field",
                        ""});
            table39.AddRow(new string[] {
                        "Broker Code",
                        "60254"});
            table39.AddRow(new string[] {
                        "Register",
                        ""});
            table39.AddRow(new string[] {
                        "Key Modifier",
                        ""});
            table39.AddRow(new string[] {
                        "DPID",
                        ""});
            table39.AddRow(new string[] {
                        "Alternate ID",
                        ""});
            table39.AddRow(new string[] {
                        "Key",
                        "ADKINS      THOMASEGGLES    ZZ"});
            table39.AddRow(new string[] {
                        "Name",
                        "MR THOMAS EGGLESTON ADKINS JR"});
            table39.AddRow(new string[] {
                        "Address1",
                        "8298 WOODGROVE ROAD"});
            table39.AddRow(new string[] {
                        "Address2",
                        "JACKSONVILLE FL 32256"});
            table39.AddRow(new string[] {
                        "Address3",
                        "UNITED STATES OF AMERICA"});
            table39.AddRow(new string[] {
                        "Address4",
                        ""});
            table39.AddRow(new string[] {
                        "Address5",
                        "<* Merged on 20 Nov 2001    *>"});
            table39.AddRow(new string[] {
                        "Deceased",
                        "N"});
            table39.AddRow(new string[] {
                        "Exception",
                        ""});
            table39.AddRow(new string[] {
                        "Suppress",
                        "N"});
            table39.AddRow(new string[] {
                        "Ret Mail",
                        ""});
            table39.AddRow(new string[] {
                        "A/Report",
                        "N"});
            table39.AddRow(new string[] {
                        "AR Nominated Text",
                        "(Default)"});
            table39.AddRow(new string[] {
                        "Birth Date",
                        ""});
            table39.AddRow(new string[] {
                        "Stop Trade",
                        "Y"});
            table39.AddRow(new string[] {
                        "Div Source",
                        "D"});
            table39.AddRow(new string[] {
                        "Residency",
                        ""});
            table39.AddRow(new string[] {
                        "Var Flag1",
                        ""});
            table39.AddRow(new string[] {
                        "Var Flag2",
                        ""});
            table39.AddRow(new string[] {
                        "Var Flag3",
                        ""});
            table39.AddRow(new string[] {
                        "Var Flag4",
                        ""});
            table39.AddRow(new string[] {
                        "Var Flag5",
                        ""});
            table39.AddRow(new string[] {
                        "Warning1",
                        "Overseas domicile"});
            table39.AddRow(new string[] {
                        "Warning2",
                        "Stop trade"});
            table39.AddRow(new string[] {
                        "Warning3",
                        "Nil holding on trading classes"});
            table39.AddRow(new string[] {
                        "Warning4",
                        "No Annual Report"});
            table39.AddRow(new string[] {
                        "Warning5",
                        ""});
            table39.AddRow(new string[] {
                        "Warning6",
                        ""});
            table39.AddRow(new string[] {
                        "Restrict Class info",
                        ""});
#line 579
 testRunner.Then("In ENS01001 I should see holder details as below:", ((string)(null)), table39, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 16775: NZL A action for Overseas and Local domiciles-NZL")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("16775NZL")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        public virtual void TestCase16775NZLAActionForOverseasAndLocalDomiciles_NZL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 16775: NZL A action for Overseas and Local domiciles-NZL", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "NAB_AUTO",
                        "16775NZL",
                        "EN_E_DisplayActions"});
#line 629
this.ScenarioSetup(scenarioInfo);
#line 630
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 631
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 632
  testRunner.And("I go to the Enquiry system for \"I0030153839\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table40.AddRow(new string[] {
                        "Action",
                        "A"});
            table40.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 633
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table40, "And ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table41.AddRow(new string[] {
                        "HIN",
                        "I0030153839"});
            table41.AddRow(new string[] {
                        "Type",
                        "STF"});
            table41.AddRow(new string[] {
                        "Post Code",
                        "NZL"});
            table41.AddRow(new string[] {
                        "TAX Code",
                        ""});
            table41.AddRow(new string[] {
                        "TFN Desc",
                        "Non-Res"});
            table41.AddRow(new string[] {
                        "ABN Desc",
                        "Non-Res"});
            table41.AddRow(new string[] {
                        "Group",
                        ""});
            table41.AddRow(new string[] {
                        "Var field",
                        ""});
            table41.AddRow(new string[] {
                        "Broker Code",
                        "60254"});
            table41.AddRow(new string[] {
                        "Register",
                        ""});
            table41.AddRow(new string[] {
                        "Key Modifier",
                        ""});
            table41.AddRow(new string[] {
                        "DPID",
                        ""});
            table41.AddRow(new string[] {
                        "Alternate ID",
                        "22620695"});
            table41.AddRow(new string[] {
                        "Key",
                        "BEGEJ       JEANNELORRAI"});
            table41.AddRow(new string[] {
                        "Name",
                        "MRS JEANNE LORRAINE BEGEJ"});
            table41.AddRow(new string[] {
                        "Address1",
                        "TEST AUTOMATION"});
            table41.AddRow(new string[] {
                        "Address2",
                        "CHRISTCHURCH"});
            table41.AddRow(new string[] {
                        "Address3",
                        "NEW ZEALAND"});
            table41.AddRow(new string[] {
                        "Address4",
                        ""});
            table41.AddRow(new string[] {
                        "Address5",
                        ""});
            table41.AddRow(new string[] {
                        "Deceased",
                        "N"});
            table41.AddRow(new string[] {
                        "Exception",
                        ""});
            table41.AddRow(new string[] {
                        "Suppress",
                        "N"});
            table41.AddRow(new string[] {
                        "Ret Mail",
                        ""});
            table41.AddRow(new string[] {
                        "A/Report",
                        "N"});
            table41.AddRow(new string[] {
                        "AR Nominated Text",
                        "(Default)"});
            table41.AddRow(new string[] {
                        "Birth Date",
                        ""});
            table41.AddRow(new string[] {
                        "Stop Trade",
                        "N"});
            table41.AddRow(new string[] {
                        "Div Source",
                        "D"});
            table41.AddRow(new string[] {
                        "Residency",
                        ""});
            table41.AddRow(new string[] {
                        "Var Flag1",
                        ""});
            table41.AddRow(new string[] {
                        "Var Flag2",
                        ""});
            table41.AddRow(new string[] {
                        "Var Flag3",
                        ""});
            table41.AddRow(new string[] {
                        "Var Flag4",
                        ""});
            table41.AddRow(new string[] {
                        "Var Flag5",
                        ""});
            table41.AddRow(new string[] {
                        "Warning1",
                        "Overseas domicile"});
            table41.AddRow(new string[] {
                        "Warning2",
                        "Payee instruction direct/bulk"});
            table41.AddRow(new string[] {
                        "Warning3",
                        "Holder Extra details present"});
            table41.AddRow(new string[] {
                        "Warning4",
                        "Communication Methods Present"});
            table41.AddRow(new string[] {
                        "Warning5",
                        "ESS Participant"});
            table41.AddRow(new string[] {
                        "Warning6",
                        "No Annual Report"});
            table41.AddRow(new string[] {
                        "Restrict Class info",
                        ""});
#line 637
 testRunner.Then("In ENS01001 I should see holder details as below:", ((string)(null)), table41, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 16775: AU A action for Overseas and Local domiciles-AU")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("16775AU")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        public virtual void TestCase16775AUAActionForOverseasAndLocalDomiciles_AU()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 16775: AU A action for Overseas and Local domiciles-AU", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "NAB_AUTO",
                        "16775AU",
                        "EN_E_DisplayActions"});
#line 687
this.ScenarioSetup(scenarioInfo);
#line 688
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 689
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 690
  testRunner.And("I go to the Enquiry system for \"I0030025105\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table42.AddRow(new string[] {
                        "Action",
                        "A"});
            table42.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 691
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table42, "And ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table43.AddRow(new string[] {
                        "HIN",
                        "I0030025105"});
            table43.AddRow(new string[] {
                        "Type",
                        "MAL"});
            table43.AddRow(new string[] {
                        "Post Code",
                        "3169"});
            table43.AddRow(new string[] {
                        "TAX Code",
                        ""});
            table43.AddRow(new string[] {
                        "TFN Desc",
                        "TFN quoted"});
            table43.AddRow(new string[] {
                        "ABN Desc",
                        "Not quoted"});
            table43.AddRow(new string[] {
                        "Group",
                        ""});
            table43.AddRow(new string[] {
                        "Var field",
                        ""});
            table43.AddRow(new string[] {
                        "Broker Code",
                        "60254"});
            table43.AddRow(new string[] {
                        "Register",
                        ""});
            table43.AddRow(new string[] {
                        "Key Modifier",
                        ""});
            table43.AddRow(new string[] {
                        "DPID",
                        ""});
            table43.AddRow(new string[] {
                        "Alternate ID",
                        ""});
            table43.AddRow(new string[] {
                        "Key",
                        "ALEVIZOS    STEVEN"});
            table43.AddRow(new string[] {
                        "Name",
                        "MR STEVEN ALEVIZOS"});
            table43.AddRow(new string[] {
                        "Address1",
                        "TEST AUTOMATION"});
            table43.AddRow(new string[] {
                        "Address2",
                        "CLAYTON SOUTH VIC"});
            table43.AddRow(new string[] {
                        "Address3",
                        ""});
            table43.AddRow(new string[] {
                        "Address4",
                        ""});
            table43.AddRow(new string[] {
                        "Address5",
                        ""});
            table43.AddRow(new string[] {
                        "Deceased",
                        "N"});
            table43.AddRow(new string[] {
                        "Exception",
                        ""});
            table43.AddRow(new string[] {
                        "Suppress",
                        "N"});
            table43.AddRow(new string[] {
                        "Ret Mail",
                        ""});
            table43.AddRow(new string[] {
                        "A/Report",
                        "N"});
            table43.AddRow(new string[] {
                        "AR Nominated Text",
                        "(Default)"});
            table43.AddRow(new string[] {
                        "Birth Date",
                        ""});
            table43.AddRow(new string[] {
                        "Stop Trade",
                        "N"});
            table43.AddRow(new string[] {
                        "Div Source",
                        "D"});
            table43.AddRow(new string[] {
                        "Residency",
                        ""});
            table43.AddRow(new string[] {
                        "Var Flag1",
                        ""});
            table43.AddRow(new string[] {
                        "Var Flag2",
                        ""});
            table43.AddRow(new string[] {
                        "Var Flag3",
                        ""});
            table43.AddRow(new string[] {
                        "Var Flag4",
                        ""});
            table43.AddRow(new string[] {
                        "Var Flag5",
                        ""});
            table43.AddRow(new string[] {
                        "Warning1",
                        "Payee instruction direct/bulk"});
            table43.AddRow(new string[] {
                        "Warning2",
                        "No DPID allocated"});
            table43.AddRow(new string[] {
                        "Warning3",
                        "No Annual Report"});
            table43.AddRow(new string[] {
                        "Warning4",
                        ""});
            table43.AddRow(new string[] {
                        "Warning5",
                        ""});
            table43.AddRow(new string[] {
                        "Warning6",
                        ""});
            table43.AddRow(new string[] {
                        "Restrict Class info",
                        ""});
#line 695
 testRunner.Then("In ENS01001 I should see holder details as below:", ((string)(null)), table43, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 16778: 05_A Action for Holder warnings")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("16778")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.TestCaseAttribute("I0035933662", "OUTSTANDING PAYMENT", "Overseas domicile", "Payee instruction direct/bulk", "No Annual Report", null)]
        [NUnit.Framework.TestCaseAttribute("X0060458120", "Returned mail", "Payee instruction direct/bulk", "Nil holding on trading classes", "Holder Extra details present", null)]
        [NUnit.Framework.TestCaseAttribute("X0051191323", "** LIKE HOLDER PRESENT **", "Payee instruction direct/bulk", "Nil holding on trading classes", "No Annual Report", null)]
        [NUnit.Framework.TestCaseAttribute("I0032365906", "Stop trade", "Nil holding on trading classes", "No Annual Report", "", null)]
        [NUnit.Framework.TestCaseAttribute("X0008422991", "Payee instruction direct/bulk", "No Annual Report", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("I0032367470", "Payee instruction direct/bulk", "Plan participant", "Shareholder Review", "", null)]
        [NUnit.Framework.TestCaseAttribute("I0033516096", "Nil holding on trading classes", "No Annual Report", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("I0040235558", "Stop trade", "Nil holding on trading classes", "No Annual Report", "", null)]
        [NUnit.Framework.TestCaseAttribute("I0030226810", "Payee instruction direct/bulk", "Noting:N1", "Holder Extra details present", "Communication Methods Present", null)]
        [NUnit.Framework.TestCaseAttribute("I0035894705", "OUTSTANDING PAYMENT", "Overseas domicile", "Payee instruction direct/bulk", "Nil holding on trading classes", null)]
        public virtual void TestCase1677805_AActionForHolderWarnings(string hIN, string warning1, string warning2, string warning3, string warning4, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "NAB_AUTO",
                    "16778",
                    "EN_E_DisplayActions"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 16778: 05_A Action for Holder warnings", @__tags);
#line 745
this.ScenarioSetup(scenarioInfo);
#line 746
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 747
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 748
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", hIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table44.AddRow(new string[] {
                        "Action",
                        "A"});
            table44.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 749
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table44, "And ");
#line 753
 testRunner.Then(string.Format("In ENS01001 I should see holder \"{0}\"  \"{1}\"  \"{2}\"  \"{3}\" Warning details as bel" +
                        "ow", warning1, warning2, warning3, warning4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 16860: 01_A action for Different Holder Types")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("16860")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.TestCaseAttribute("I0036279826", "JNT", null)]
        [NUnit.Framework.TestCaseAttribute("X0053320112", "COY", null)]
        [NUnit.Framework.TestCaseAttribute("I0035933662", "IND", null)]
        [NUnit.Framework.TestCaseAttribute("I0035120696", "EMP", null)]
        [NUnit.Framework.TestCaseAttribute("C0009876245", "NOM", null)]
        [NUnit.Framework.TestCaseAttribute("I0030248864", "DEC", null)]
        [NUnit.Framework.TestCaseAttribute("C0009909058", "FEM", null)]
        [NUnit.Framework.TestCaseAttribute("I0033430833", "STF", null)]
        public virtual void TestCase1686001_AActionForDifferentHolderTypes(string hIN, string type, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "NAB_AUTO",
                    "16860",
                    "EN_E_DisplayActions"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 16860: 01_A action for Different Holder Types", @__tags);
#line 774
this.ScenarioSetup(scenarioInfo);
#line 775
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 776
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 777
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", hIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table45.AddRow(new string[] {
                        "Action",
                        "A"});
            table45.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 778
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table45, "And ");
#line 782
 testRunner.Then(string.Format("In ENS01001 I should see holder \"{0}\" Holder Type as below", type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 16961: 04_A action with Extra Details_Dot")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("16961")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        [NUnit.Framework.TestCaseAttribute("I0900527993", "08/06/2001", "12/04/2005", "09/06/2001", "11", "5284", "0", "3685", "I0034810389", "", null)]
        [NUnit.Framework.TestCaseAttribute("X0021384631", "18/09/2009", "12/06/2014", "06/09/2004", "21", "7650", "6129", "0", "", "", null)]
        public virtual void TestCase1696104_AActionWithExtraDetails_Dot(string hIN, string holderOnDate, string holderOffDate, string holderAddedDate, string version, string runLastChange, string lastBalDump, string lastPaymentDump, string mergeTo, string mergeFrom, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "NAB_AUTO",
                    "16961",
                    "EN_E_DisplayActions",
                    "FullSmokeTest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 16961: 04_A action with Extra Details_Dot", @__tags);
#line 802
this.ScenarioSetup(scenarioInfo);
#line 803
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 804
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 805
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", hIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table46.AddRow(new string[] {
                        "Action",
                        "A"});
            table46.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 806
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table46, "And ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table47.AddRow(new string[] {
                        "Action",
                        "."});
            table47.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 810
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table47, "And ");
#line 814
 testRunner.Then(string.Format("In ENS01052 I should see NameAddress Extra Details as below \"{0}\" \"{1}\" \"{2}\" \"{3" +
                        "}\" \"{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\"", hIN, holderOnDate, holderOffDate, holderAddedDate, version, runLastChange, lastBalDump, lastPaymentDump, mergeTo, mergeFrom), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table48.AddRow(new string[] {
                        "Action",
                        ">"});
            table48.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 815
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table48, "When ");
#line 819
 testRunner.Then(string.Format("In ENS01052 I should see NameAddress Extra Details as below \"{0}\" \"{1}\" \"{2}\" \"{3" +
                        "}\" \"{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\"", hIN, holderOnDate, holderOffDate, holderAddedDate, version, runLastChange, lastBalDump, lastPaymentDump, mergeTo, mergeFrom), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 16849: 01_H Action comparison")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("16849")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        public virtual void TestCase1684901_HActionComparison()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 16849: 01_H Action comparison", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "NAB_AUTO",
                        "16849",
                        "EN_E_DisplayActions"});
#line 832
this.ScenarioSetup(scenarioInfo);
#line 834
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 835
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 836
  testRunner.And("I go to the Enquiry system for \"I0036136464\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table49.AddRow(new string[] {
                        "Action",
                        "H"});
            table49.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 837
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table49, "And ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table50.AddRow(new string[] {
                        "Name Key",
                        "VALE        GNANA"});
            table50.AddRow(new string[] {
                        "HIN",
                        "I0036136464"});
            table50.AddRow(new string[] {
                        "Holder Type",
                        "IND"});
            table50.AddRow(new string[] {
                        "Post Code",
                        "3000"});
            table50.AddRow(new string[] {
                        "Tax Code",
                        ""});
            table50.AddRow(new string[] {
                        "Group Code",
                        ""});
            table50.AddRow(new string[] {
                        "Broker Code",
                        "60254"});
            table50.AddRow(new string[] {
                        "Key Modifier",
                        ""});
            table50.AddRow(new string[] {
                        "Alternate ID",
                        ""});
            table50.AddRow(new string[] {
                        "Var Field",
                        ""});
            table50.AddRow(new string[] {
                        "Name",
                        "GNANA VALE,"});
            table50.AddRow(new string[] {
                        "Address1",
                        "TEST AUTOMATION"});
            table50.AddRow(new string[] {
                        "Address2",
                        "OAKLEIGH SOUTH VIC"});
            table50.AddRow(new string[] {
                        "Address3",
                        ""});
            table50.AddRow(new string[] {
                        "Address4",
                        ""});
            table50.AddRow(new string[] {
                        "Address5",
                        ""});
            table50.AddRow(new string[] {
                        "Line1 Page1",
                        "CEN/ENTITLEMENT CPS II 2013 VIC   99999999999               99999999999"});
            table50.AddRow(new string[] {
                        "Line2 Page1",
                        "DAM/EMPLOYEE TRUST HELD SHA VIC            76                        76"});
            table50.AddRow(new string[] {
                        "Line3 Page1",
                        "DBM/EMPLOYEE TRUST HELD SHA VIC           102                       102"});
            table50.AddRow(new string[] {
                        "Line4 Page1",
                        "DCE/DUMMY EMP CLASS PROJECT VIC            76                        76"});
            table50.AddRow(new string[] {
                        "Line5 Page1",
                        "DEM/EMPLOYEE TRUST HELD SHA VIC            76                        76"});
            table50.AddRow(new string[] {
                        "Line6 Page1",
                        "DME/DUMMY EMP CLASS FOR NOT VIC            40                        40"});
            table50.AddRow(new string[] {
                        "Line1 Page2",
                        "DUM/EMPLOYEE TRUST HELD SHA VIC            40                        40"});
            table50.AddRow(new string[] {
                        "Line2 Page2",
                        "DXM/EMPLOYEE TRUST HELD SHA VIC            40                        40"});
            table50.AddRow(new string[] {
                        "Line3 Page2",
                        "E11/NAB CAPITAL NOTES S/H O VIC   99999999999               99999999999"});
            table50.AddRow(new string[] {
                        "Line4 Page2",
                        "EMP/EMP GROUP 4 RD BALANCE  VIC           132                       132"});
            table50.AddRow(new string[] {
                        "Line5 Page2",
                        "ESO/EMPLOYEE SHARE OFFER    11A            40                        40"});
            table50.AddRow(new string[] {
                        "Line6 Page2",
                        "12A            36                        36"});
            table50.AddRow(new string[] {
                        "Line7 Page2",
                        "13A            26                        26"});
            table50.AddRow(new string[] {
                        "Line8 Page2",
                        "14A            30                        30"});
            table50.AddRow(new string[] {
                        "Line9 Page2",
                        "ESO/**** Class Total   **                 132"});
            table50.AddRow(new string[] {
                        "Line10 Page2",
                        "F14/EMPLOYEE TRUST HELD SHA VIC           102                       102"});
#line 841
 testRunner.Then("In ENS01007 I should see Holdings details as below:", ((string)(null)), table50, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table51.AddRow(new string[] {
                        "Action",
                        ">"});
            table51.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 875
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table51, "When ");
#line 879
 testRunner.Then("I expect to see error with text \"This option not available for this screen.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 16850: 02_C action comparison \'C\'ertificate actions")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("16850")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        public virtual void TestCase1685002_CActionComparisonCErtificateActions()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 16850: 02_C action comparison \'C\'ertificate actions", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "NAB_AUTO",
                        "16850",
                        "EN_E_DisplayActions"});
#line 886
this.ScenarioSetup(scenarioInfo);
#line 888
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 889
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 890
  testRunner.And("I go to the Enquiry system for \"I0036136464\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table52.AddRow(new string[] {
                        "Action",
                        "C"});
            table52.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 891
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table52, "And ");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table53.AddRow(new string[] {
                        "HIN",
                        "I0036136464"});
            table53.AddRow(new string[] {
                        "Line1",
                        "CEN/ENTITLEMENT CPS II 2013"});
            table53.AddRow(new string[] {
                        "Line2",
                        "VIC 24410266     04/11/13   99999999999"});
            table53.AddRow(new string[] {
                        "Line3",
                        "**** Total for 24410266          99999999999"});
            table53.AddRow(new string[] {
                        "Line4",
                        "DAM/EMPLOYEE TRUST HELD SHARES"});
            table53.AddRow(new string[] {
                        "Line5",
                        "VIC UNCERTIF\'D   14/11/13            76"});
            table53.AddRow(new string[] {
                        "Line6",
                        "**** Total for UNCERTIF\'D                 76"});
            table53.AddRow(new string[] {
                        "Line7",
                        "DBM/EMPLOYEE TRUST HELD SHARES"});
            table53.AddRow(new string[] {
                        "Line8",
                        "VIC UNCERTIF\'D   19/05/14           102"});
            table53.AddRow(new string[] {
                        "Line9",
                        "**** Total for UNCERTIF\'D                102"});
            table53.AddRow(new string[] {
                        "Line10",
                        "DCE/DUMMY EMP CLASS PROJECT MURRAY"});
            table53.AddRow(new string[] {
                        "Line11",
                        "VIC 00007120     04/11/13            76"});
            table53.AddRow(new string[] {
                        "Line12",
                        "**** Total for 00007120                   76"});
            table53.AddRow(new string[] {
                        "Line13",
                        "DEM/EMPLOYEE TRUST HELD SHARES"});
#line 895
 testRunner.Then("In ENS01012 I should see Holder Certificate details as below:", ((string)(null)), table53, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table54.AddRow(new string[] {
                        "Action",
                        "M"});
            table54.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 911
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table54, "When ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table55.AddRow(new string[] {
                        "HIN",
                        "I0036136464"});
            table55.AddRow(new string[] {
                        "Line1",
                        "DEM/EMPLOYEE TRUST HELD SHARES     Cont\'d"});
            table55.AddRow(new string[] {
                        "Line2",
                        "VIC UNCERTIF\'D   06/06/13            76"});
            table55.AddRow(new string[] {
                        "Line3",
                        "**** Total for UNCERTIF\'D                 76"});
            table55.AddRow(new string[] {
                        "Line4",
                        "DME/DUMMY EMP CLASS FOR NOTES ENT"});
            table55.AddRow(new string[] {
                        "Line5",
                        "VIC 00021287     10/05/12            40"});
            table55.AddRow(new string[] {
                        "Line6",
                        "**** Total for 00021287                   40"});
            table55.AddRow(new string[] {
                        "Line7",
                        "DUM/EMPLOYEE TRUST HELD SHARES"});
            table55.AddRow(new string[] {
                        "Line8",
                        "VIC UNCERTIF\'D   16/11/12            40"});
            table55.AddRow(new string[] {
                        "Line9",
                        "**** Total for UNCERTIF\'D                 40"});
            table55.AddRow(new string[] {
                        "Line10",
                        "DXM/EMPLOYEE TRUST HELD SHARES"});
            table55.AddRow(new string[] {
                        "Line11",
                        "VIC UNCERTIF\'D   07/06/12            40"});
            table55.AddRow(new string[] {
                        "Line12",
                        "**** Total for UNCERTIF\'D                 40"});
            table55.AddRow(new string[] {
                        "Line13",
                        "E11/NAB CAPITAL NOTES S/H OFF ENT"});
#line 915
 testRunner.Then("In ENS01012 I should see Holder Certificate details as below:", ((string)(null)), table55, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table56.AddRow(new string[] {
                        "Action",
                        ">"});
            table56.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 931
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table56, "When ");
#line 935
 testRunner.Then("I expect to see error with text \"This option not available for this screen.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 936
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 937
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 938
  testRunner.And("I go to the Enquiry system for \"I0036199024\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table57.AddRow(new string[] {
                        "Action",
                        "C"});
            table57.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 939
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table57, "And ");
#line 943
 testRunner.Then("I expect to see error with text \"This holder has no certificates.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 16851: 03_R action comparison")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("16851")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        [NUnit.Framework.TestCaseAttribute("I0036136464", "R", "", "CEN/ENTITLEMENT CPS II 2013", "VIC 24410266     04/11/13 ENTIT 7108/68439886              1", "04/11/13 ENTIT 7108/68439887    99999999998", "*Certificate Balance   99999999999", "**** Class Total ***   99999999999", "DAM/EMPLOYEE TRUST HELD SHARES", "VIC UNCERTIF\'D   14/11/13 ALLOT 7119/69163934             76", "DBM/EMPLOYEE TRUST HELD SHARES", "VIC UNCERTIF\'D   19/05/14 ALLOT 7305/70680356            102", "DCE/DUMMY EMP CLASS PROJECT MURRAY", "VIC 00007120     04/11/13 IAJUP 7107/83007120             76                     " +
            "  TRNTPE", "DEM/EMPLOYEE TRUST HELD SHARES", "VIC UNCERTIF\'D   06/06/13 ALLOT 6973/66268130             76", "M", "", "DME/DUMMY EMP CLASS FOR NOTES ENT", "VIC 00021287     10/05/12 IAJUP 6605/ 8121287             40                     " +
            "  TRNTPE", "DUM/EMPLOYEE TRUST HELD SHARES", "VIC UNCERTIF\'D   16/11/12 ALLOT 6790/63164738             40", "DXM/EMPLOYEE TRUST HELD SHARES", "VIC UNCERTIF\'D   07/06/12 ALLOT 6643/61712604             40", "E11/NAB CAPITAL NOTES S/H OFF ENT", "VIC 41306129     12/02/15 ENTIT 7560/74047891              1", "12/02/15 ENTIT 7560/74047892    99999999998", "*Certificate Balance   99999999999", "**** Class Total ***   99999999999", "EMP/EMP GROUP 4 RD BALANCE", "VIC 00017092     12/02/15 IAJUP 7555/73003214            132                     " +
            "  TRNTPE", ">", "", "60254", "60254", "60254", "60254             BPAY/128999900413061295", "60254             BPAY/128999900413061295", "60254", null)]
        public virtual void TestCase1685103_RActionComparison(
                    string hIN, 
                    string action, 
                    string locateArgument, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string line6, 
                    string line7, 
                    string line8, 
                    string line9, 
                    string line10, 
                    string line11, 
                    string line12, 
                    string line13, 
                    string action1, 
                    string locateArgument1, 
                    string line1Pg2, 
                    string line2Pg2, 
                    string line3Pg2, 
                    string line4Pg2, 
                    string line5Pg2, 
                    string line6Pg2, 
                    string line7Pg2, 
                    string line8Pg2, 
                    string line9Pg2, 
                    string line10Pg2, 
                    string line11Pg2, 
                    string line12Pg2, 
                    string line13Pg2, 
                    string action2, 
                    string locateArgument2, 
                    string extraLine1, 
                    string extraLine2, 
                    string extraLine3, 
                    string extraLine4, 
                    string extraLine5, 
                    string extraLine6, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "NAB_AUTO",
                    "16851",
                    "EN_E_DisplayActions",
                    "FullSmokeTest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 16851: 03_R action comparison", @__tags);
#line 951
this.ScenarioSetup(scenarioInfo);
#line 953
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 954
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 955
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", hIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 956
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 957
 testRunner.Then(string.Format("In ENS01013 I should see Register details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" " +
                        "\"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\"", hIN, line1, line2, line3, line4, line5, line6, line7, line8, line9, line10, line11, line12, line13), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 958
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 959
 testRunner.Then(string.Format("In ENS01013 I should see Register details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" " +
                        "\"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\"", hIN, line1Pg2, line2Pg2, line3Pg2, line4Pg2, line5Pg2, line6Pg2, line7Pg2, line8Pg2, line9Pg2, line10Pg2, line11Pg2, line12Pg2, line13Pg2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 960
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action2, locateArgument2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 961
 testRunner.Then(string.Format("In ENS01053 I should see Extra Register details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" " +
                        "\"{5}\"", extraLine1, extraLine2, extraLine3, extraLine4, extraLine5, extraLine6), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17146: 04_RR action compare-Test1")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17146")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.TestCaseAttribute("I0100000334", "RR", "I0100000334/7132/69186910", "CMN/MONEY CPS II OFFER 2013", "*MR 24572791ZB   22/11/13 RBPAY 7132/69186910       20000.00", "2", "", "22/11/2013", "RBPAY", "One Sided", "", "60254", "", "ISX0010", "7132", "69186910", "CMN", "*MR", "20000.00", "", "", "", "", "", "", "", "", "BPAY", "122489900245727913", "21/11/2013", "CBA201311210241447264", "21/11/2013", "BNKRMT_12248_2013112203300323", "Unknown", "22/11/2013", null)]
        public virtual void TestCase1714604_RRActionCompare_Test1(
                    string hIN, 
                    string action, 
                    string locateArgument, 
                    string line1, 
                    string line2, 
                    string action1, 
                    string locateArgument1, 
                    string transDate, 
                    string transType, 
                    string otherHID, 
                    string tradeRef, 
                    string brokerCode, 
                    string agentCode, 
                    string subSystem, 
                    string run, 
                    string tran, 
                    string @class, 
                    string register, 
                    string units, 
                    string sLRDate, 
                    string workflowID, 
                    string origSystem, 
                    string serviceProvider, 
                    string serviceCode, 
                    string branch, 
                    string department, 
                    string messageUserID, 
                    string paymentSource, 
                    string customerRef, 
                    string paymentDate, 
                    string traceNo, 
                    string settlemtDate, 
                    string inputFile, 
                    string fileReceived, 
                    string fileProcessed, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "NAB_AUTO",
                    "17146",
                    "EN_E_DisplayActions"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17146: 04_RR action compare-Test1", @__tags);
#line 973
this.ScenarioSetup(scenarioInfo);
#line 975
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 976
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 977
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 978
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 979
 testRunner.Then(string.Format("In ENS01016 I should see Register details as \"{0}\" \"{1}\" \"{2}\"", hIN, line1, line2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 980
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 981
 testRunner.Then(string.Format("In ENS01069 I should see Balance Transaction Extra Details as \"{0}\" \"{1}\" \"{2}\" \"" +
                        "{3}\" \"{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", transDate, transType, otherHID, tradeRef, brokerCode, agentCode, subSystem, run, tran, @class, register, units), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 982
 testRunner.Then(string.Format("In ENS01069 I should see SLR Transaction Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        " \"{5}\" \"{6}\" \"{7}\"", sLRDate, workflowID, origSystem, serviceProvider, serviceCode, branch, department, messageUserID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 983
 testRunner.Then(string.Format("In ENS01069 I should see Remittance Transaction Details as \"{0}\" \"{1}\" \"{2}\" \"{3}" +
                        "\" \"{4}\" \"{5}\" \"{6}\" \"{7}\"", paymentSource, customerRef, paymentDate, traceNo, settlemtDate, inputFile, fileReceived, fileProcessed), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17146: 04_RR action compare-Test2")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("171462")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.TestCaseAttribute("X0030264142", "RR", "X0030264142/6696/62298624", "ZZZ/SHAREHOLDER CARD", "VIC 00888774     30/07/12 CAPIN 6696/62298624              1                     " +
            "  SCRIP", "2", "", "30/07/2012", "CAPIN", "One Sided", "", "", "", "", "6696", "62298624", "ZZZ", "VIC", "1", "28/07/2012", "", "SCRIP", "CIS", "******", "MELY", "CISCL", "GreL 00001", null)]
        public virtual void TestCase1714604_RRActionCompare_Test2(
                    string hIN, 
                    string action, 
                    string locateArgument, 
                    string line1, 
                    string line2, 
                    string action1, 
                    string locateArgument1, 
                    string transDate, 
                    string transType, 
                    string otherHID, 
                    string tradeRef, 
                    string brokerCode, 
                    string agentCode, 
                    string subSystem, 
                    string run, 
                    string tran, 
                    string @class, 
                    string register, 
                    string units, 
                    string sLRDate, 
                    string workflowID, 
                    string origSystem, 
                    string serviceProvider, 
                    string serviceCode, 
                    string branch, 
                    string department, 
                    string messageUserID, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "NAB_AUTO",
                    "171462",
                    "EN_E_DisplayActions"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17146: 04_RR action compare-Test2", @__tags);
#line 994
this.ScenarioSetup(scenarioInfo);
#line 996
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 997
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 998
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 999
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1000
 testRunner.Then(string.Format("In ENS01016 I should see Register details as \"{0}\" \"{1}\" \"{2}\"", hIN, line1, line2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1001
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1002
 testRunner.Then(string.Format("In ENS01069 I should see Balance Transaction Extra Details as \"{0}\" \"{1}\" \"{2}\" \"" +
                        "{3}\" \"{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", transDate, transType, otherHID, tradeRef, brokerCode, agentCode, subSystem, run, tran, @class, register, units), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1003
 testRunner.Then(string.Format("In ENS01069 I should see SLR Transaction Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        " \"{5}\" \"{6}\" \"{7}\"", sLRDate, workflowID, origSystem, serviceProvider, serviceCode, branch, department, messageUserID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17272: 01_HE:Holder Extra Details")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17272")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        public virtual void TestCase1727201_HEHolderExtraDetails()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17272: 01_HE:Holder Extra Details", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "NAB_AUTO",
                        "17272",
                        "EN_E_DisplayActions"});
#line 1014
this.ScenarioSetup(scenarioInfo);
#line 1016
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1017
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1018
  testRunner.And("I go to the Enquiry system for \"I0070036916\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table58.AddRow(new string[] {
                        "Action",
                        "HE"});
            table58.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 1019
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table58, "And ");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table59.AddRow(new string[] {
                        "Name Key",
                        "ST          TRANSACODE  TEST"});
            table59.AddRow(new string[] {
                        "HIN",
                        "I0070036916"});
            table59.AddRow(new string[] {
                        "Holder Type",
                        "DEC"});
            table59.AddRow(new string[] {
                        "Extra Holder ID",
                        "123456789"});
            table59.AddRow(new string[] {
                        "Name",
                        "ESTATE LATE TRANSACTION CODE"});
            table59.AddRow(new string[] {
                        "Address1",
                        "TEST AUTOMATION"});
            table59.AddRow(new string[] {
                        "Address2",
                        "C/- 452 JHONSTON ST,"});
            table59.AddRow(new string[] {
                        "Address3",
                        "ABBOTSFORD"});
            table59.AddRow(new string[] {
                        "Address4",
                        "MELBOURNE"});
            table59.AddRow(new string[] {
                        "Address5",
                        ""});
            table59.AddRow(new string[] {
                        "Home Tell",
                        "03123456789"});
            table59.AddRow(new string[] {
                        "Work Tell",
                        "03987654213"});
            table59.AddRow(new string[] {
                        "Fax",
                        "03696854789"});
            table59.AddRow(new string[] {
                        "Mobile",
                        "0430834786"});
            table59.AddRow(new string[] {
                        "Email",
                        "Test@computershare.com.au"});
            table59.AddRow(new string[] {
                        "Return Email",
                        ""});
            table59.AddRow(new string[] {
                        "Email Count",
                        "0"});
            table59.AddRow(new string[] {
                        "ABN1",
                        ""});
            table59.AddRow(new string[] {
                        "ABN2",
                        ""});
            table59.AddRow(new string[] {
                        "Type1",
                        ""});
            table59.AddRow(new string[] {
                        "Type2",
                        ""});
            table59.AddRow(new string[] {
                        "Flag1",
                        "AB"});
            table59.AddRow(new string[] {
                        "Flag1 Desc",
                        ""});
            table59.AddRow(new string[] {
                        "Flag2",
                        "W9"});
            table59.AddRow(new string[] {
                        "Flag2 Desc",
                        "USA SOCIAL SECURITY NUMBER"});
            table59.AddRow(new string[] {
                        "Flag3",
                        "EF"});
            table59.AddRow(new string[] {
                        "Flag3 Desc",
                        ""});
            table59.AddRow(new string[] {
                        "Flag4",
                        "Y"});
            table59.AddRow(new string[] {
                        "Flag4 Desc",
                        ""});
            table59.AddRow(new string[] {
                        "Flag5",
                        "E1"});
            table59.AddRow(new string[] {
                        "Flag5 Desc",
                        "AML CPM Plan Participant"});
            table59.AddRow(new string[] {
                        "Flag6",
                        "FG"});
            table59.AddRow(new string[] {
                        "Flag6 Desc",
                        ""});
            table59.AddRow(new string[] {
                        "Flag7",
                        "AP"});
            table59.AddRow(new string[] {
                        "Flag7 Desc",
                        "LH ID WITHIN RE-CON CAMPAIGN"});
            table59.AddRow(new string[] {
                        "Flag8",
                        "TR"});
            table59.AddRow(new string[] {
                        "Flag8 Desc",
                        ""});
            table59.AddRow(new string[] {
                        "Flag9",
                        "N"});
            table59.AddRow(new string[] {
                        "Flag9 Desc",
                        "PRIVACY OPT OUT"});
#line 1023
 testRunner.Then("In ENS01020 I should see holder extra details as below:", ((string)(null)), table59, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table60.AddRow(new string[] {
                        "Action",
                        ">"});
            table60.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 1064
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table60, "When ");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table61.AddRow(new string[] {
                        "Publication1",
                        "NO METHODS SET ON COYCOM FOR"});
            table61.AddRow(new string[] {
                        "Publication1 Method",
                        "NAB_AUTO"});
            table61.AddRow(new string[] {
                        "Publication2",
                        ""});
            table61.AddRow(new string[] {
                        "Publication2 Method",
                        ""});
            table61.AddRow(new string[] {
                        "Publication3",
                        ""});
            table61.AddRow(new string[] {
                        "Publication3 Method",
                        ""});
            table61.AddRow(new string[] {
                        "Publication4",
                        ""});
            table61.AddRow(new string[] {
                        "Publication4 Method",
                        ""});
            table61.AddRow(new string[] {
                        "Publication5",
                        ""});
            table61.AddRow(new string[] {
                        "Publication5 Method",
                        ""});
            table61.AddRow(new string[] {
                        "Publication6",
                        ""});
            table61.AddRow(new string[] {
                        "Publication6 Method",
                        ""});
            table61.AddRow(new string[] {
                        "Publication7",
                        ""});
            table61.AddRow(new string[] {
                        "Publication7 Method",
                        ""});
            table61.AddRow(new string[] {
                        "Publication8",
                        ""});
            table61.AddRow(new string[] {
                        "Publication8 Method",
                        ""});
            table61.AddRow(new string[] {
                        "Publication9",
                        ""});
            table61.AddRow(new string[] {
                        "Publication9 Method",
                        ""});
#line 1068
 testRunner.Then("In ENS01024 I should see holder communication Methods as below:", ((string)(null)), table61, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17277: 02_SH:Static Detail History action")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17277")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.TestCaseAttribute("I0070036916", "7646", "321456", "11/05/2015", "EMADD", "EMAIL ADDRESS (ADD)", "", "WINFRM", "7646", "326547", "11/05/2015", "EIADD", "EIS EMPLOYEE ADD", "", "WINFRM", null)]
        [NUnit.Framework.TestCaseAttribute("I0070036924", "7646", "254687", "11/05/2015", "UIADD", "US TAX STATUS (ADD)", "", "WINFRM", "7647", "324335", "15/05/2015", "UGAUD", "US TAX STATUS GENERL (AUD MOD)", "", "WINFRM", null)]
        public virtual void TestCase1727702_SHStaticDetailHistoryAction(
                    string hIN, 
                    string run1, 
                    string tran1, 
                    string date1, 
                    string tranCode1, 
                    string tranDesc1, 
                    string reference1, 
                    string source1, 
                    string run1Pg2, 
                    string tran1Pg2, 
                    string date1Pg2, 
                    string tranCode1Pg2, 
                    string tranDesc1Pg2, 
                    string reference1Pg2, 
                    string source1Pg2, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "NAB_AUTO",
                    "17277",
                    "EN_E_DisplayActions"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17277: 02_SH:Static Detail History action", @__tags);
#line 1094
this.ScenarioSetup(scenarioInfo);
#line 1096
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1097
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1099
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", hIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table62.AddRow(new string[] {
                        "Action",
                        "SH"});
            table62.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 1100
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table62, "And ");
#line 1104
 testRunner.Then(string.Format("In ENS01034 I should see Static History Details as below \"{0}\" \"{1}\" \"{2}\" \"{3}\" " +
                        "\"{4}\" \"{5}\" \"{6}\"", run1, tran1, date1, tranCode1, tranDesc1, reference1, source1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table63.AddRow(new string[] {
                        "Action",
                        "M"});
            table63.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 1105
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table63, "When ");
#line 1109
 testRunner.Then(string.Format("In ENS01035 I should see Static History as below \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{" +
                        "5}\" \"{6}\"", run1Pg2, tran1Pg2, date1Pg2, tranCode1Pg2, tranDesc1Pg2, reference1Pg2, source1Pg2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17288: 02_All Noting Menu/Option action-PowerOfAttorney")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17288_02")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.TestCaseAttribute("P1", "", "1", "", "123", "PHIL HUGES", "19/05/2015", "19/05/2015", "PHIL HUGES", "PHIL HUGES", "PHIL HUGES", "PHIL HUGES", "Y", "Y", "Y", "PHIL HUGES", "PHIL HUGES", "Y", "Y", "Y", "Y", "", "PHIL HUGES", "PHIL HUGES", "PHIL HUGES", "7650", "46464", null)]
        [NUnit.Framework.TestCaseAttribute("P2", "", "2", "VIC", "PHIL HUGES", "PHIL HUGES", "19/05/2015", "19/05/2015", "PHIL HUGES", "PHIL HUGES", "PHIL HUGES", "PHIL HUGES", "Y", "Y", "Y", "PHIL HUGES", "PHIL HUGES", "Y", "Y", "Y", "Y", "", "PHIL HUGES", "PHIL HUGES", "PHIL HUGES", "7647", "582456", null)]
        [NUnit.Framework.TestCaseAttribute("P3", "", "3", "VIC", "PHIL HUGES", "PHIL HUGES", "19/05/2015", "19/05/2015", "PHIL HUGES", "PHIL HUGES", "PHIL HUGES", "PHIL HUGES", "Y", "Y", "Y", "PHIL HUGES", "PHIL HUGES", "Y", "Y", "Y", "Y", "", "PHIL HUGES", "PHIL HUGES", "PHIL HUGES", "7647", "986542", null)]
        public virtual void TestCase1728802_AllNotingMenuOptionAction_PowerOfAttorney(
                    string action, 
                    string locateArgument, 
                    string pANotingNbr, 
                    string register, 
                    string donorName1, 
                    string donorName2, 
                    string powerDated, 
                    string powerNoted, 
                    string attorney1, 
                    string attorney2, 
                    string attorney3, 
                    string attorney4, 
                    string jointly, 
                    string severally, 
                    string anyTwo, 
                    string others1, 
                    string others2, 
                    string buy, 
                    string sell, 
                    string vote, 
                    string appointSubstitute, 
                    string stampedIn, 
                    string comment1, 
                    string comment2, 
                    string lodgedBy, 
                    string run, 
                    string tran, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "NAB_AUTO",
                    "17288_02",
                    "EN_E_DisplayActions"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17288: 02_All Noting Menu/Option action-PowerOfAttorney", @__tags);
#line 1122
this.ScenarioSetup(scenarioInfo);
#line 1124
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1125
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1126
  testRunner.And("I go to the Enquiry system for \"C0009913176\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table64.AddRow(new string[] {
                        "Action",
                        "N"});
            table64.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 1127
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table64, "And ");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table65.AddRow(new string[] {
                        "HIN",
                        "C0009913176"});
            table65.AddRow(new string[] {
                        "P1",
                        "P1. Power of Attorney (1)"});
            table65.AddRow(new string[] {
                        "P2",
                        "P2. Power of Attorney (2)"});
            table65.AddRow(new string[] {
                        "P3",
                        "P3. Power of Attorney (3)"});
            table65.AddRow(new string[] {
                        "D1",
                        "D1. Deceased Estate noting (1)"});
            table65.AddRow(new string[] {
                        "D2",
                        "D2. Deceased Estate noting (2)"});
            table65.AddRow(new string[] {
                        "D3",
                        "D3. Deceased Estate noting (3)"});
            table65.AddRow(new string[] {
                        "D4",
                        "D4. Deceased Estate noting (4)"});
            table65.AddRow(new string[] {
                        "D5",
                        "D5. Deceased Estate noting (5)"});
            table65.AddRow(new string[] {
                        "N1",
                        "N1. Free format noting (1)"});
            table65.AddRow(new string[] {
                        "N2",
                        "N2. Free format noting (2)"});
            table65.AddRow(new string[] {
                        "N3",
                        "N3. Free format noting (3)"});
            table65.AddRow(new string[] {
                        "N4",
                        "N4. Free format noting (4)"});
            table65.AddRow(new string[] {
                        "N5",
                        "N5. Free format noting (5)"});
#line 1131
 testRunner.Then("In ENS01021 I should see Noting Menu as below:", ((string)(null)), table65, "Then ");
#line 1147
 testRunner.When(string.Format("I enter the following details as the Locate action \"{0}\" \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1148
 testRunner.Then(string.Format("In  ENS01003 I should see holder Power Of Attorney details Part1 as \"{0}\" \"{1}\" \"" +
                        "{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\"", pANotingNbr, register, donorName1, donorName2, powerDated, powerNoted, attorney1, attorney2, attorney3, attorney4, jointly, severally, anyTwo), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1149
 testRunner.Then(string.Format("In  ENS01003 I should see holder Power Of Attorney details Part2 as \"{0}\" \"{1}\" \"" +
                        "{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", others1, others2, buy, sell, vote, appointSubstitute, stampedIn, comment1, comment2, lodgedBy, run, tran), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17288: 03_All Noting Menu/Option action-Noting")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17288_03")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.TestCaseAttribute("N1", "", "1", "1           ARSHADTEST", "C0009913176", "IND", "NOTING 1", "THIS IS NOTING 1.", "THIS IS NOTING 1.", "THIS IS NOTING 1.", "THIS IS NOTING 1.", "THIS IS NOTING 1.", "THIS IS NOTING 1.", "THIS IS NOTING 1.", "THIS IS NOTING 1.", "7647", "12345", null)]
        [NUnit.Framework.TestCaseAttribute("N2", "", "2", "1           ARSHADTEST", "C0009913176", "IND", "NOTING 2", "THIS IS NOTING 2", "THIS IS NOTING 2", "THIS IS NOTING 2", "THIS IS NOTING 2", "THIS IS NOTING 2", "THIS IS NOTING 2", "THIS IS NOTING 2", "THIS IS NOTING 2", "7647", "123456", null)]
        [NUnit.Framework.TestCaseAttribute("N3", "", "3", "1           ARSHADTEST", "C0009913176", "IND", "", "THIS IS NOTING 3", "syed_syed@computershare.com.au", "THIS IS NOTING 3", "THIS IS NOTING 3", "THIS IS NOTING 3", "THIS IS NOTING 3", "THIS IS NOTING 3", "THIS IS NOTING 3", "7655", "4167473", null)]
        [NUnit.Framework.TestCaseAttribute("N4", "", "4", "1           ARSHADTEST", "C0009913176", "IND", "NOTING 4", "THIS IS NOTING 4", "THIS IS NOTING 4", "THIS IS NOTING 4", "THIS IS NOTING 4", "THIS IS NOTING 4", "THIS IS NOTING 4", "THIS IS NOTING 4", "THIS IS NOTING 4", "7647", "654322", null)]
        [NUnit.Framework.TestCaseAttribute("N5", "", "5", "1           ARSHADTEST", "C0009913176", "IND", "NOTING 5", "THIS IS NOTING 5", "THIS IS NOTING 5", "THIS IS NOTING 5", "THIS IS NOTING 5", "THIS IS NOTING 5", "THIS IS NOTING 5", "THIS IS NOTING 5", "THIS IS NOTING 5", "7647", "654323", null)]
        public virtual void TestCase1728803_AllNotingMenuOptionAction_Noting(
                    string action, 
                    string locateArgument, 
                    string notingNbr, 
                    string key, 
                    string hIN, 
                    string type, 
                    string comment, 
                    string noting1, 
                    string noting2, 
                    string noting3, 
                    string noting4, 
                    string noting5, 
                    string noting6, 
                    string noting7, 
                    string noting8, 
                    string run, 
                    string tran, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "NAB_AUTO",
                    "17288_03",
                    "EN_E_DisplayActions"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17288: 03_All Noting Menu/Option action-Noting", @__tags);
#line 1162
this.ScenarioSetup(scenarioInfo);
#line 1164
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1165
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1166
  testRunner.And("I go to the Enquiry system for \"C0009913176\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1167
 testRunner.When(string.Format("I enter the following details as the Locate action \"{0}\" \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1168
 testRunner.Then(string.Format("In ENS01006 I should see Noting details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{" +
                        "6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\"", notingNbr, key, hIN, type, comment, noting1, noting2, noting3, noting4, noting5, noting6, noting7, noting8, run, tran), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17288: 04_All Noting Menu/Option action-Deceased Estate Noting")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17288_04")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.TestCaseAttribute("D1", "", "1", "1           ARSHADTEST", "VIC", "PHIL HUGES", "7647", "654324", "C0009913176", "IND", "19/05/2015", "19/05/2015", "19/05/2015", "Y", "19/05/2015", "VICTORIA", "19/05/2015", "19/05/2015", "VICTORIA", "19/05/2015", "19052015", "Y", "Y", "DECEASED ESTATE D1", "DECEASED ESTATE D1", "DECEASED ESTATE D1", "DECEASED ESTATE D1", "DECEASED ESTATE D1", "DECEASED ESTATE D1", "DECEASED ESTATE D1", null)]
        [NUnit.Framework.TestCaseAttribute("D2", "", "2", "1           ARSHADTEST", "VIC", "PHIL HUGES", "7647", "654325", "C0009913176", "IND", "19/05/2015", "19/05/2015", "19/05/2015", "Y", "19/05/2015", "VICTORIA", "19/05/2015", "19/05/2015", "VICTORIA", "19/05/2015", "19052015", "Y", "Y", "DECEASED ESTATE D1", "DECEASED ESTATE D1", "DECEASED ESTATE D1", "DECEASED ESTATE D1", "DECEASED ESTATE D1", "DECEASED ESTATE D1", "DECEASED ESTATE D1", null)]
        [NUnit.Framework.TestCaseAttribute("D3", "", "3", "1           ARSHADTEST", "VIC", "PHIL HUGES", "7647", "654326", "C0009913176", "IND", "19/05/2015", "19/05/2015", "19/05/2015", "Y", "19/05/2015", "VICTORIA", "19/05/2015", "19/05/2015", "VICTORIA", "19/05/2015", "19052015", "Y", "Y", "DECEASED ESTATE D1", "DECEASED ESTATE D1", "DECEASED ESTATE D1", "DECEASED ESTATE D1", "DECEASED ESTATE D1", "DECEASED ESTATE D1", "DECEASED ESTATE D1", null)]
        [NUnit.Framework.TestCaseAttribute("D4", "", "4", "1           ARSHADTEST", "VIC", "PHIL HUGES", "7647", "654789", "C0009913176", "IND", "19/05/2015", "19/05/2015", "19/05/2015", "Y", "19/05/2015", "VICTORIA", "19/05/2015", "19/05/2015", "VICTORIA", "19/05/2015", "19052015", "Y", "Y", "DECEASED ESTATE D1", "DECEASED ESTATE D1", "DECEASED ESTATE D1", "DECEASED ESTATE D1", "DECEASED ESTATE D1", "DECEASED ESTATE D1", "DECEASED ESTATE D1", null)]
        [NUnit.Framework.TestCaseAttribute("D5", "", "5", "1           ARSHADTEST", "VIC", "PHIL HUGES", "7647", "654790", "C0009913176", "IND", "19/05/2015", "19/05/2015", "19/05/2015", "Y", "19/05/2015", "VICTORIA", "19/05/2015", "19/05/2015", "VICTORIA", "19/05/2015", "19052015", "Y", "Y", "DECEASED ESTATE D1", "DECEASED ESTATE D1", "DECEASED ESTATE D1", "DECEASED ESTATE D1", "DECEASED ESTATE D1", "DECEASED ESTATE D1", "DECEASED ESTATE D1", null)]
        public virtual void TestCase1728804_AllNotingMenuOptionAction_DeceasedEstateNoting(
                    string action, 
                    string locateArgument, 
                    string notingNbr, 
                    string key, 
                    string register, 
                    string deceasedName, 
                    string run, 
                    string tran, 
                    string hIN, 
                    string type, 
                    string dOD, 
                    string deathCertSighted, 
                    string willdated, 
                    string smallEstate, 
                    string sighted, 
                    string probategrantedIn, 
                    string probateOnDate, 
                    string probateSightedDate, 
                    string resealedIn, 
                    string resealedOnDate, 
                    string _1071B, 
                    string _121A, 
                    string confirmationofID, 
                    string exors1, 
                    string exors2, 
                    string exors3, 
                    string comment1, 
                    string comment2, 
                    string comment3, 
                    string lodged, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "NAB_AUTO",
                    "17288_04",
                    "EN_E_DisplayActions"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17288: 04_All Noting Menu/Option action-Deceased Estate Noting", @__tags);
#line 1183
this.ScenarioSetup(scenarioInfo);
#line 1185
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1186
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1187
  testRunner.And("I go to the Enquiry system for \"C0009913176\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1188
 testRunner.When(string.Format("I enter the following details as the Locate action \"{0}\" \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1189
 testRunner.Then(string.Format("In ENS01005 I should see holder Deceased Estate Notings Part1 as \"{0}\" \"{1}\" \"{2}" +
                        "\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\"", notingNbr, key, register, deceasedName, run, tran, hIN, type, dOD, deathCertSighted, willdated, smallEstate, sighted, probategrantedIn, probateOnDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1190
 testRunner.Then(string.Format("In ENS01005 I should see holder Deceased Estate Notings Part2 as  \"{0}\" \"{1}\" \"{2" +
                        "}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\"", probateSightedDate, resealedIn, resealedOnDate, _1071B, _121A, confirmationofID, exors1, exors2, exors3, comment1, comment2, comment3, lodged), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17296: 05_CA:Custodian Access")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("DIV_A")]
        [NUnit.Framework.CategoryAttribute("17296")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        public virtual void TestCase1729605_CACustodianAccess()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17296: 05_CA:Custodian Access", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "DIV_A",
                        "17296",
                        "EN_E_DisplayActions"});
#line 1248
this.ScenarioSetup(scenarioInfo);
#line 1249
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1250
 testRunner.When("In SELCOY01 I select the company: \"DIV_A\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1251
  testRunner.And("I go to the Enquiry system for \"X0035061240\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table66.AddRow(new string[] {
                        "Action",
                        "CA"});
            table66.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 1252
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table66, "And ");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table67.AddRow(new string[] {
                        "AccessCode",
                        "SC2"});
            table67.AddRow(new string[] {
                        "Name",
                        "TESTING TFS 263925 - STATS"});
#line 1256
  testRunner.Then("In ENS010CA I should see Custodian Access Codes as below:", ((string)(null)), table67, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17305: 01_PI: Payment Instruction action -Local")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17305_1")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        public virtual void TestCase1730501_PIPaymentInstructionAction_Local()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17305: 01_PI: Payment Instruction action -Local", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "NAB_AUTO",
                        "17305_1",
                        "EN_E_DisplayActions",
                        "FullSmokeTest"});
#line 1267
this.ScenarioSetup(scenarioInfo);
#line 1269
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1270
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1271
  testRunner.And("I go to the Enquiry system for \"I0070036916\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table68.AddRow(new string[] {
                        "Action",
                        "PI"});
            table68.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 1272
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table68, "And ");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table69.AddRow(new string[] {
                        "Name Key",
                        "ST          TRANSACODE  TEST"});
            table69.AddRow(new string[] {
                        "HIN",
                        "I0070036916"});
            table69.AddRow(new string[] {
                        "Holder Type",
                        "DEC"});
            table69.AddRow(new string[] {
                        "Bank System",
                        "10"});
            table69.AddRow(new string[] {
                        "BSB Code",
                        "105-090"});
            table69.AddRow(new string[] {
                        "Account Number",
                        "123456789"});
            table69.AddRow(new string[] {
                        "Account Name",
                        "BRANDON O\'CONNOR"});
            table69.AddRow(new string[] {
                        "Bank Address1",
                        "ST GEORGE BANK LTD"});
            table69.AddRow(new string[] {
                        "Bank Address2",
                        "HINDLEY-BANK STREET"});
            table69.AddRow(new string[] {
                        "Name",
                        "ESTATE LATE TRANSACTION CODE"});
            table69.AddRow(new string[] {
                        "Address1",
                        "TEST AUTOMATION"});
            table69.AddRow(new string[] {
                        "Address2",
                        "C/- 452 JHONSTON ST,"});
            table69.AddRow(new string[] {
                        "Address3",
                        "ABBOTSFORD"});
            table69.AddRow(new string[] {
                        "Address4",
                        "MELBOURNE"});
            table69.AddRow(new string[] {
                        "Address5",
                        ""});
#line 1276
 testRunner.Then("In ENS01002 I should see the holder payee Instructions as below:", ((string)(null)), table69, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17305: 02_PI: Payment Instruction action -Foreign")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17305_2")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        public virtual void TestCase1730502_PIPaymentInstructionAction_Foreign()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17305: 02_PI: Payment Instruction action -Foreign", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "NAB_AUTO",
                        "17305_2",
                        "EN_E_DisplayActions"});
#line 1298
this.ScenarioSetup(scenarioInfo);
#line 1300
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1301
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1302
  testRunner.And("I go to the Enquiry system for \"I0070036924\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table70.AddRow(new string[] {
                        "Action",
                        "PI"});
            table70.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 1303
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table70, "And ");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table71.AddRow(new string[] {
                        "Name Key",
                        "2           TRANSACODE  TEST"});
            table71.AddRow(new string[] {
                        "HIN",
                        "I0070036924"});
            table71.AddRow(new string[] {
                        "Holder Type",
                        "IND"});
            table71.AddRow(new string[] {
                        "Bank System",
                        "30"});
            table71.AddRow(new string[] {
                        "BSB Code",
                        "40-05-15"});
            table71.AddRow(new string[] {
                        "Account Number",
                        "12345678"});
            table71.AddRow(new string[] {
                        "Account Name",
                        "ARSHAD SYED"});
            table71.AddRow(new string[] {
                        "Bank Address1",
                        "MIDLAND BANK PLC"});
            table71.AddRow(new string[] {
                        "Bank Address2",
                        "P O BOX 181"});
            table71.AddRow(new string[] {
                        "Name",
                        "TRANSACTION CODE TEST 2,"});
            table71.AddRow(new string[] {
                        "Address1",
                        "TEST AUTOMATION"});
            table71.AddRow(new string[] {
                        "Address2",
                        "ABBOTSFORD"});
            table71.AddRow(new string[] {
                        "Address3",
                        ""});
            table71.AddRow(new string[] {
                        "Address4",
                        ""});
            table71.AddRow(new string[] {
                        "Address5",
                        ""});
#line 1307
 testRunner.Then("In ENS01002 I should see the holder payee Instructions as below:", ((string)(null)), table71, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17320: 01_DI: Dividend Intention action")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17320_01")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.TestCaseAttribute("I0030731859", "IND", "BSP1  1   BSP                                                              Y", "BSP2  2   EMP PP BSP   NON PARTICIPANT", "D", "DRP1  1   DRP          29/03/94            0922     87609    F             N", "DRP2  2   EMP PP DRP   29/03/94  22/03/95  1231   1086956    W             N", "", "DRP4  4   EMP DRP      19/05/15            7647    256478    P         20  N", "DRP5  5   RBP          NON PARTICIPANT", null)]
        [NUnit.Framework.TestCaseAttribute("I0035861173", "IND", "BSP1  1   BSP          NON PARTICIPANT", "BSP2  2   EMP PP BSP   NON PARTICIPANT", "D", "DRP1  1   DRP                              0000         0                  Y", "DRP2  2   EMP PP DRP   NON PARTICIPANT", "", "DRP4  4   EMP DRP      NON PARTICIPANT", "DRP5  5   RBP          NON PARTICIPANT", null)]
        public virtual void TestCase1732001_DIDividendIntentionAction(string hIN, string type, string bSP1, string bSP2, string divSource, string dRP1, string dRP2, string dRP3, string dRP4, string dRP5, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "NAB_AUTO",
                    "17320_01",
                    "EN_E_DisplayActions"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17320: 01_DI: Dividend Intention action", @__tags);
#line 1330
this.ScenarioSetup(scenarioInfo);
#line 1332
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1333
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1334
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", hIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table72.AddRow(new string[] {
                        "Action",
                        "DI"});
            table72.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 1335
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table72, "And ");
#line 1339
 testRunner.Then(string.Format("In ENS01060 I should see holder Dividend Intention Details as \"{0}\" \"{1}\" \"{2}\" \"" +
                        "{3}\" \"{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\"", hIN, type, bSP1, bSP2, divSource, dRP1, dRP2, dRP3, dRP4, dRP5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17320: 02_DI: Dividend Intention action and Extra Details")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17320_02")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        [NUnit.Framework.TestCaseAttribute("I0030731859", "IND", "BSP1  1   BSP                                                              Y", "BSP2  2   EMP PP BSP   NON PARTICIPANT", "D", "DRP1  1   DRP          29/03/94            0922     87609    F             N", "DRP2  2   EMP PP DRP   29/03/94  22/03/95  1231   1086956    W             N", "", "DRP4  4   EMP DRP      19/05/15            7647    256478    P         20  N", "DRP5  5   RBP          NON PARTICIPANT", null)]
        public virtual void TestCase1732002_DIDividendIntentionActionAndExtraDetails(string hIN, string type, string bSP1, string bSP2, string divSource, string dRP1, string dRP2, string dRP3, string dRP4, string dRP5, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "NAB_AUTO",
                    "17320_02",
                    "EN_E_DisplayActions",
                    "FullSmokeTest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17320: 02_DI: Dividend Intention action and Extra Details", @__tags);
#line 1352
this.ScenarioSetup(scenarioInfo);
#line 1354
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1355
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1356
  testRunner.And("I go to the Enquiry system for \"I0030731859\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table73.AddRow(new string[] {
                        "Action",
                        "DI"});
            table73.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 1357
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table73, "And ");
#line 1361
 testRunner.Then(string.Format("In ENS01060 I should see holder Dividend Intention Details as \"{0}\" \"{1}\" \"{2}\" \"" +
                        "{3}\" \"{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\"", hIN, type, bSP1, bSP2, divSource, dRP1, dRP2, dRP3, dRP4, dRP5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table74.AddRow(new string[] {
                        "Action",
                        ">"});
            table74.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 1362
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table74, "When ");
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table75.AddRow(new string[] {
                        "BSPDate",
                        "19/05/15"});
            table75.AddRow(new string[] {
                        "BSPRun",
                        "7647"});
            table75.AddRow(new string[] {
                        "BSPTran",
                        "695213"});
            table75.AddRow(new string[] {
                        "BSPOpt",
                        "P"});
            table75.AddRow(new string[] {
                        "BSPLevel",
                        "30"});
#line 1366
 testRunner.Then("In ENS01061 I should see holder Extra Dividend Intentions as below:", ((string)(null)), table75, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17343: 01_AS:Acceptance Status action")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17343")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.TestCaseAttribute("I0035493034", "AS", "I0035493034", "ISX0010 NAB REMITTENCE TEST                                   Classes - E4 ,A4 ,M" +
            "4 ,O4          Historical Record 30/05/15", "44450353             63                       0          63           0          " +
            " 0.00   Not Accepted            0.00          0.00", "44450353", "7649", "20/05/15", "63", "", "0", "63", "0", "0.00", "Not Accepted", "ENTBLD", null)]
        [NUnit.Framework.TestCaseAttribute("X0050420248", "AS", "X0050420248", "ISX0010 NAB REMITTENCE TEST                                   Classes - E4 ,A4 ,M" +
            "4 ,O4          Historical Record 30/05/15", "44450361            328                       0         328           0          " +
            " 0.00   Not Accepted            0.00          0.00", "44450361", "7649", "20/05/15", "328", "", "0", "328", "0", "0.00", "Not Accepted", "ENTBLD", null)]
        public virtual void TestCase1734301_ASAcceptanceStatusAction(
                    string hIN, 
                    string action, 
                    string locateArgument, 
                    string line1, 
                    string line2, 
                    string reference, 
                    string run, 
                    string date, 
                    string entitledUnits, 
                    string overrideUnits, 
                    string acceptedUnits, 
                    string entitlementBalance, 
                    string additionalUnits, 
                    string totalMoney, 
                    string acceptanceStatus, 
                    string source, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "NAB_AUTO",
                    "17343",
                    "EN_E_DisplayActions"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17343: 01_AS:Acceptance Status action", @__tags);
#line 1383
this.ScenarioSetup(scenarioInfo);
#line 1385
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1386
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1387
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", hIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1388
 testRunner.When(string.Format("I enter the following details as the Locate action \"{0}\" \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1389
 testRunner.Then(string.Format("In ENSACC01 I should see Acceptance Status Summary details as \"{0}\" \"{1}\" \"{2}\"", hIN, line1, line2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table76.AddRow(new string[] {
                        "Action",
                        "2"});
            table76.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 1390
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table76, "When ");
#line 1394
 testRunner.Then(string.Format("In ENSACC02 I should see detail Acceptance Status History details as \"{0}\" \"{1}\" " +
                        "\"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", hIN, reference, run, date, entitledUnits, overrideUnits, acceptedUnits, entitlementBalance, additionalUnits, totalMoney, acceptanceStatus, source), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17344: 02_PM:Pending Money action")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17344")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.TestCaseAttribute("I0035493034", "PM", "I0035493034", "ISX0010 NAB REMITTENCE TEST", "44450353         21/05/15                  63.00             LKBX", null)]
        [NUnit.Framework.TestCaseAttribute("X0050420248", "PM", "X0050420248", "ISX0010 NAB REMITTENCE TEST", "44450361         21/05/15                 328.00             LKBX", null)]
        public virtual void TestCase1734402_PMPendingMoneyAction(string hIN, string action, string locateArgument, string line1, string line2, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "NAB_AUTO",
                    "17344",
                    "EN_E_DisplayActions"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17344: 02_PM:Pending Money action", @__tags);
#line 1406
this.ScenarioSetup(scenarioInfo);
#line 1408
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1409
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1410
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", hIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1411
 testRunner.When(string.Format("I enter the following details as the Locate action \"{0}\" \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1412
 testRunner.Then(string.Format("In ENSACC03 I should see Pending Money Summary details as \"{0}\" \"{1}\" \"{2}\"", hIN, line1, line2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17124: 01_IR Action for IRL tax details")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("DIV_A")]
        [NUnit.Framework.CategoryAttribute("17124")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.TestCaseAttribute("ADFOHUKLO   CIFOHECIFGH", "I0010024978", "IND", "AFG", "CIFOHE CIFGH ADFOHUKLO,", "PO BOX 583", "CAIGH DAFGUJ NSW", "IRL", "CIFOHE CIFGH ADFOHUKLO,", "PO BOX 583", "CAIGH DAFGUJ NSW", "IRL", "CIFOHE CIFGH ADFOHUKLO,", "PO BOX 583", "CAIGH DAFGUJ NSW", "IRL", "IND", "CIFOHE CIFGH ADFOHUKLO,", "PO BOX 583", "CAIGH DAFGUJ NSW", "IRL", "IND", "INDIVIDUAL", "31/12/2018", "CRT", "CERTIFIED", "COY", "PUB", "PUBLIC OFFICER", "TEST AUTOMATION", null)]
        public virtual void TestCase1712401_IRActionForIRLTaxDetails(
                    string key, 
                    string hIN, 
                    string holderType, 
                    string taxCode, 
                    string mailNameAddress1, 
                    string mailNameAddress2, 
                    string mailNameAddress3, 
                    string mailPostcode, 
                    string sCRIPNameAddress1, 
                    string sCRIPNameAddress2, 
                    string sCRIPNameAddress3, 
                    string sCRIPPostcode, 
                    string benificialNameAddress1, 
                    string benificialNameAddress2, 
                    string benificialNameAddress3, 
                    string benificialPostcode, 
                    string entryType, 
                    string taxNameAddress1, 
                    string taxNameAddress2, 
                    string taxNameAddress3, 
                    string taxPostcode, 
                    string sigCapacityType, 
                    string sigCapacity, 
                    string dWTExpiry, 
                    string certStatus, 
                    string certStatusDesc, 
                    string entryType1, 
                    string sigCapacityType1, 
                    string sigCapacity1, 
                    string sCRIPNameAddress22, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "DIV_A",
                    "17124",
                    "EN_E_DisplayActions"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17124: 01_IR Action for IRL tax details", @__tags);
#line 1424
this.ScenarioSetup(scenarioInfo);
#line 1426
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1427
 testRunner.When("In SELCOY01 I select the company: \"DIV_A\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1428
  testRunner.And("I go to the Enquiry system for \"I0010024978\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table77.AddRow(new string[] {
                        "Action",
                        "IR"});
            table77.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 1429
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table77, "And ");
#line 1433
 testRunner.Then(string.Format("In ENS01041 I should see IRL Taxpayer details Part1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{" +
                        "4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\"", key, hIN, holderType, taxCode, mailNameAddress1, mailNameAddress2, mailNameAddress3, mailPostcode, sCRIPNameAddress1, sCRIPNameAddress22, sCRIPNameAddress3, sCRIPPostcode, benificialNameAddress1, benificialNameAddress2, benificialNameAddress3, benificialPostcode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1434
  testRunner.And(string.Format("In ENS01041 I should see IRL Taxpayer details Part2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{" +
                        "4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\"", entryType, taxNameAddress1, taxNameAddress2, taxNameAddress3, taxPostcode, sigCapacityType, sigCapacity, dWTExpiry, certStatus, certStatusDesc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table78.AddRow(new string[] {
                        "Action",
                        "FIR"});
            table78.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 1435
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table78, "When ");
#line 1439
 testRunner.Then(string.Format("In ENS01041 I should see IRL Taxpayer details Part1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{" +
                        "4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\"", key, hIN, holderType, taxCode, mailNameAddress1, mailNameAddress2, mailNameAddress3, mailPostcode, sCRIPNameAddress1, sCRIPNameAddress22, sCRIPNameAddress3, sCRIPPostcode, benificialNameAddress1, benificialNameAddress2, benificialNameAddress3, benificialPostcode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1440
  testRunner.And(string.Format("In ENS01041 I should see IRL Taxpayer details Part2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{" +
                        "4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\"", entryType1, taxNameAddress1, taxNameAddress2, taxNameAddress3, taxPostcode, sigCapacityType1, sigCapacity1, dWTExpiry, certStatus, certStatusDesc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table79.AddRow(new string[] {
                        "Action",
                        "FIR"});
            table79.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 1441
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table79, "When ");
#line 1445
 testRunner.Then(string.Format("In ENS01041 I should see IRL Taxpayer details Part1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{" +
                        "4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\"", key, hIN, holderType, taxCode, mailNameAddress1, mailNameAddress2, mailNameAddress3, mailPostcode, sCRIPNameAddress1, sCRIPNameAddress22, sCRIPNameAddress3, sCRIPPostcode, benificialNameAddress1, benificialNameAddress2, benificialNameAddress3, benificialPostcode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1446
  testRunner.And(string.Format("In ENS01041 I should see IRL Taxpayer details Part2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{" +
                        "4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\"", entryType1, taxNameAddress1, taxNameAddress2, taxNameAddress3, taxPostcode, sigCapacityType1, sigCapacity1, dWTExpiry, certStatus, certStatusDesc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table80.AddRow(new string[] {
                        "Action",
                        "BIR"});
            table80.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 1447
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table80, "When ");
#line 1451
 testRunner.Then(string.Format("In ENS01041 I should see IRL Taxpayer details Part1 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{" +
                        "4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\"", key, hIN, holderType, taxCode, mailNameAddress1, mailNameAddress2, mailNameAddress3, mailPostcode, sCRIPNameAddress1, sCRIPNameAddress22, sCRIPNameAddress3, sCRIPPostcode, benificialNameAddress1, benificialNameAddress2, benificialNameAddress3, benificialPostcode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1452
  testRunner.And(string.Format("In ENS01041 I should see IRL Taxpayer details Part2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{" +
                        "4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\"", entryType1, taxNameAddress1, taxNameAddress2, taxNameAddress3, taxPostcode, sigCapacityType1, sigCapacity1, dWTExpiry, certStatus, certStatusDesc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17125: 02_ZA Action for ZAF tax details")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17125")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        public virtual void TestCase1712502_ZAActionForZAFTaxDetails()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17125: 02_ZA Action for ZAF tax details", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "NAB_AUTO",
                        "17125",
                        "EN_E_DisplayActions"});
#line 1463
this.ScenarioSetup(scenarioInfo);
#line 1465
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1466
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1467
  testRunner.And("I go to the Enquiry system for \"I0070036932\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table81.AddRow(new string[] {
                        "Action",
                        "ZA"});
            table81.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 1468
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table81, "And ");
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table82.AddRow(new string[] {
                        "Key",
                        "3           TRANSACODE  TEST"});
            table82.AddRow(new string[] {
                        "HIN",
                        "I0070036932"});
            table82.AddRow(new string[] {
                        "InternalStatus",
                        "REJ"});
            table82.AddRow(new string[] {
                        "InternalStatusDesc",
                        "REJECTED"});
            table82.AddRow(new string[] {
                        "CustodianRef",
                        "SAM"});
            table82.AddRow(new string[] {
                        "TaxDomocile",
                        "ZAF"});
            table82.AddRow(new string[] {
                        "TradingName1",
                        "TRANSACTION CODE TEST 3,"});
            table82.AddRow(new string[] {
                        "TradingName2",
                        "TRANSACTION CODE TEST 3,"});
            table82.AddRow(new string[] {
                        "SCRIPNameAddress1",
                        "TRANSACTION CODE TEST 3,"});
            table82.AddRow(new string[] {
                        "SCRIPNameAddress2",
                        "TEST AUTOMATION"});
            table82.AddRow(new string[] {
                        "SCRIPNameAddress3",
                        "ABBOTSFORD"});
            table82.AddRow(new string[] {
                        "SCRIPPostcode",
                        "3000"});
            table82.AddRow(new string[] {
                        "NaturePerson",
                        "I"});
            table82.AddRow(new string[] {
                        "NaturePersonDesc",
                        "INDIVIDUAL"});
            table82.AddRow(new string[] {
                        "ResNameAddress1",
                        "TRANSACTION CODE TEST 3,"});
            table82.AddRow(new string[] {
                        "ResNameAddress2",
                        "452 JHONSTON ST,"});
            table82.AddRow(new string[] {
                        "ResNameAddress3",
                        "ABBOTSFORD"});
            table82.AddRow(new string[] {
                        "ResNameAddress4",
                        "ABBOTSFORD"});
            table82.AddRow(new string[] {
                        "ResNameAddress5",
                        "ABBOTSFORD"});
            table82.AddRow(new string[] {
                        "ResNameAddress6",
                        "ABBOTSFORD"});
            table82.AddRow(new string[] {
                        "ResPostcode",
                        "3000"});
            table82.AddRow(new string[] {
                        "TaxRef",
                        "Quoted"});
            table82.AddRow(new string[] {
                        "RefType",
                        "TFN"});
            table82.AddRow(new string[] {
                        "IdNo",
                        "123456"});
            table82.AddRow(new string[] {
                        "IdType",
                        "001"});
            table82.AddRow(new string[] {
                        "DateOfBirth",
                        "11/12/1985"});
            table82.AddRow(new string[] {
                        "Phone",
                        "0430834786"});
            table82.AddRow(new string[] {
                        "Email",
                        "ARSHAD.SYED@YAHOO.COM"});
            table82.AddRow(new string[] {
                        "DeclarationName",
                        "SYED ARSHAD"});
            table82.AddRow(new string[] {
                        "DeclarationCapaciy",
                        "BEN"});
            table82.AddRow(new string[] {
                        "DeclarationCapaciyDesc",
                        "BENEFICIAL OWNER"});
            table82.AddRow(new string[] {
                        "Date",
                        "11/05/2015"});
            table82.AddRow(new string[] {
                        "PostalNameAddress1",
                        "TRANSACTION CODE TEST 3,"});
            table82.AddRow(new string[] {
                        "PostalNameAddress2",
                        "452 JHONSTON ST,"});
            table82.AddRow(new string[] {
                        "PostalNameAddress3",
                        "ABBOTSFORD"});
            table82.AddRow(new string[] {
                        "PostalNameAddress4",
                        "ABBOTSFORD"});
            table82.AddRow(new string[] {
                        "PostalNameAddress5",
                        "ABBOTSFORD"});
            table82.AddRow(new string[] {
                        "PostalNameAddress6",
                        "ABBOTSFORD"});
            table82.AddRow(new string[] {
                        "PostalPostcode",
                        "3000"});
            table82.AddRow(new string[] {
                        "ExemptionCode",
                        "A"});
            table82.AddRow(new string[] {
                        "ExemptionCodeDesc",
                        "Resident Company"});
            table82.AddRow(new string[] {
                        "CountryOfPassport",
                        "AUS"});
            table82.AddRow(new string[] {
                        "CertStatus",
                        "UNC"});
            table82.AddRow(new string[] {
                        "CertStatusDesc",
                        "UNCERTIFIED"});
            table82.AddRow(new string[] {
                        "UndertakingName",
                        "JHON"});
            table82.AddRow(new string[] {
                        "UndertakingCapacty",
                        "BEN"});
            table82.AddRow(new string[] {
                        "UndertakingCapactyDesc",
                        "BENEFICIAL OWNER"});
            table82.AddRow(new string[] {
                        "UndertakingDate",
                        "11/05/2015"});
            table82.AddRow(new string[] {
                        "SignatureDate",
                        "11/05/2015"});
#line 1472
 testRunner.Then("In ENS0104Z I should see ZAF Tax Payer details as below:", ((string)(null)), table82, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17127: 04_US/UT Action for US tax details for a holder having no contro" +
            "lling person/Beneficial owner")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("DIV_A")]
        [NUnit.Framework.CategoryAttribute("17127")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        public virtual void TestCase1712704_USUTActionForUSTaxDetailsForAHolderHavingNoControllingPersonBeneficialOwner()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17127: 04_US/UT Action for US tax details for a holder having no contro" +
                    "lling person/Beneficial owner", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "DIV_A",
                        "17127",
                        "EN_E_DisplayActions"});
#line 1529
this.ScenarioSetup(scenarioInfo);
#line 1531
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1532
 testRunner.When("In SELCOY01 I select the company: \"DIV_A\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1533
  testRunner.And("I go to the Enquiry system for \"I0000001333\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table83.AddRow(new string[] {
                        "Action",
                        "UT"});
            table83.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 1534
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table83, "And ");
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table84.AddRow(new string[] {
                        "Key",
                        "10A         TEST"});
            table84.AddRow(new string[] {
                        "HIN",
                        "I0000001333"});
            table84.AddRow(new string[] {
                        "Type",
                        "IND"});
            table84.AddRow(new string[] {
                        "WorstCaseInvestor",
                        "1"});
            table84.AddRow(new string[] {
                        "CuringStatus",
                        ""});
            table84.AddRow(new string[] {
                        "AccountType",
                        "I"});
            table84.AddRow(new string[] {
                        "PreExisting",
                        "N"});
            table84.AddRow(new string[] {
                        "USIndicia",
                        "N"});
            table84.AddRow(new string[] {
                        "USTaxCode",
                        "AUS"});
            table84.AddRow(new string[] {
                        "FATCAStatus",
                        "27"});
            table84.AddRow(new string[] {
                        "ValueStatus",
                        ""});
            table84.AddRow(new string[] {
                        "NameAddress1",
                        "Mr Test 10A"});
            table84.AddRow(new string[] {
                        "NameAddress2",
                        "TEST AUTOMATION"});
            table84.AddRow(new string[] {
                        "NameAddress3",
                        "<ADAKW YIXOWQ RABIDGAPM A/C>"});
            table84.AddRow(new string[] {
                        "NameAddress4",
                        "PO BOX 4887"});
            table84.AddRow(new string[] {
                        "NameAddress5",
                        "NORTH RLFKIQ NSW 2059"});
            table84.AddRow(new string[] {
                        "NameAddress6",
                        ""});
            table84.AddRow(new string[] {
                        "Line",
                        "NAME"});
#line 1538
 testRunner.Then("In ENTUSA01 I should see US Tax Payer General Details as below:", ((string)(null)), table84, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table85.AddRow(new string[] {
                        "Action",
                        "1"});
            table85.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 1558
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table85, "When ");
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "10A         TEST"});
            table86.AddRow(new string[] {
                        "HIN",
                        "I0000001333"});
            table86.AddRow(new string[] {
                        "Type",
                        "IND"});
            table86.AddRow(new string[] {
                        "WorstCaseInvestor",
                        "1"});
            table86.AddRow(new string[] {
                        "CuringStatus",
                        ""});
            table86.AddRow(new string[] {
                        "AccountType",
                        "I"});
            table86.AddRow(new string[] {
                        "PreExisting",
                        "N"});
            table86.AddRow(new string[] {
                        "USIndicia",
                        "N"});
            table86.AddRow(new string[] {
                        "USTaxCode",
                        "AUS"});
            table86.AddRow(new string[] {
                        "FATCAStatus",
                        "27"});
            table86.AddRow(new string[] {
                        "ValueStatus",
                        ""});
            table86.AddRow(new string[] {
                        "NameAddress1",
                        "Mr Test 10A"});
            table86.AddRow(new string[] {
                        "NameAddress2",
                        "TEST AUTOMATION"});
            table86.AddRow(new string[] {
                        "NameAddress3",
                        "<ADAKW YIXOWQ RABIDGAPM A/C>"});
            table86.AddRow(new string[] {
                        "NameAddress4",
                        "PO BOX 4887"});
            table86.AddRow(new string[] {
                        "NameAddress5",
                        "NORTH RLFKIQ NSW 2059"});
            table86.AddRow(new string[] {
                        "NameAddress6",
                        ""});
            table86.AddRow(new string[] {
                        "JntAccountType",
                        "I"});
            table86.AddRow(new string[] {
                        "Name",
                        "NAME"});
            table86.AddRow(new string[] {
                        "TINStatus",
                        "11"});
            table86.AddRow(new string[] {
                        "TIN",
                        ""});
            table86.AddRow(new string[] {
                        "InvUSTaxCode",
                        "AUS"});
            table86.AddRow(new string[] {
                        "FatcaStatus",
                        "27"});
            table86.AddRow(new string[] {
                        "ConBenLit",
                        "No Controlling persons available"});
#line 1562
 testRunner.Then("I ENTUSA03 I should see US Tax payer Investor Details as below:", ((string)(null)), table86, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17128: 05_US/UT Action for US tax details for a holder having controlli" +
            "ng person/Beneficial owner")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("DIV_A")]
        [NUnit.Framework.CategoryAttribute("17128")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        public virtual void TestCase1712805_USUTActionForUSTaxDetailsForAHolderHavingControllingPersonBeneficialOwner()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17128: 05_US/UT Action for US tax details for a holder having controlli" +
                    "ng person/Beneficial owner", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "DIV_A",
                        "17128",
                        "EN_E_DisplayActions"});
#line 1593
this.ScenarioSetup(scenarioInfo);
#line 1595
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1596
 testRunner.When("In SELCOY01 I select the company: \"DIV_A\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1597
  testRunner.And("I go to the Enquiry system for \"X0017702912\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table87.AddRow(new string[] {
                        "Action",
                        "UT"});
            table87.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 1598
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table87, "And ");
#line hidden
            TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table88.AddRow(new string[] {
                        "Action",
                        "1"});
            table88.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 1602
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table88, "And ");
#line hidden
            TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table89.AddRow(new string[] {
                        "Action",
                        "C"});
            table89.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 1606
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table89, "And ");
#line hidden
            TechTalk.SpecFlow.Table table90 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table90.AddRow(new string[] {
                        "Key",
                        "ADFGUJKL    CIFGOJDIFG  ADFGUJ"});
            table90.AddRow(new string[] {
                        "HIN",
                        "X0017702912"});
            table90.AddRow(new string[] {
                        "Type",
                        "JNT"});
            table90.AddRow(new string[] {
                        "WorstCaseInvestor",
                        "1"});
            table90.AddRow(new string[] {
                        "CuringStatus",
                        "N"});
            table90.AddRow(new string[] {
                        "AccountType",
                        "E"});
            table90.AddRow(new string[] {
                        "PreExisting",
                        "P"});
            table90.AddRow(new string[] {
                        "USIndicia",
                        "N"});
            table90.AddRow(new string[] {
                        "USTaxCode",
                        "AUS"});
            table90.AddRow(new string[] {
                        "FATCAStatus",
                        "10"});
            table90.AddRow(new string[] {
                        "ValueStatus",
                        ""});
            table90.AddRow(new string[] {
                        "NameAddress1",
                        "MR CIFGOJ DIFG CAFUHJ"});
            table90.AddRow(new string[] {
                        "NameAddress2",
                        "TEST AUTOMATION"});
            table90.AddRow(new string[] {
                        "NameAddress3",
                        "MRS CIFHEJIL CIEGH ADFGUJKL"});
            table90.AddRow(new string[] {
                        "NameAddress4",
                        "<ADFGUJKL CIFOHJ CEFOH A/C>,"});
            table90.AddRow(new string[] {
                        "NameAddress5",
                        "PO BOX 5617"});
            table90.AddRow(new string[] {
                        "NameAddress6",
                        "CAIGH CIFOHJIL VIC"});
            table90.AddRow(new string[] {
                        "InvName",
                        "TEST INVESTOR 211"});
            table90.AddRow(new string[] {
                        "WC",
                        "*"});
            table90.AddRow(new string[] {
                        "InvestorType",
                        "E"});
            table90.AddRow(new string[] {
                        "TINStatus",
                        "18"});
            table90.AddRow(new string[] {
                        "FATCA",
                        "10"});
            table90.AddRow(new string[] {
                        "InvCntrl",
                        "1"});
            table90.AddRow(new string[] {
                        "CntName",
                        "TEST INVESTOR 211"});
            table90.AddRow(new string[] {
                        "CntCountry",
                        "AUS"});
            table90.AddRow(new string[] {
                        "CntCitizenship",
                        "AUS"});
            table90.AddRow(new string[] {
                        "CntCntrl",
                        "Beneficial"});
#line 1610
 testRunner.Then("In ENTUSA04 I should see US Tax Payer Controlling Persons summary as below:", ((string)(null)), table90, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table91 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table91.AddRow(new string[] {
                        "Action",
                        "1"});
            table91.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 1639
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table91, "When ");
#line hidden
            TechTalk.SpecFlow.Table table92 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table92.AddRow(new string[] {
                        "Key",
                        "ADFGUJKL    CIFGOJDIFG  ADFGUJ"});
            table92.AddRow(new string[] {
                        "HIN",
                        "X0017702912"});
            table92.AddRow(new string[] {
                        "Type",
                        "JNT"});
            table92.AddRow(new string[] {
                        "WorstCaseInvestor",
                        "1"});
            table92.AddRow(new string[] {
                        "CuringStatus",
                        "N"});
            table92.AddRow(new string[] {
                        "AccountType",
                        "E"});
            table92.AddRow(new string[] {
                        "PreExisting",
                        "P"});
            table92.AddRow(new string[] {
                        "USIndicia",
                        "N"});
            table92.AddRow(new string[] {
                        "USTaxCode",
                        "AUS"});
            table92.AddRow(new string[] {
                        "FATCAStatus",
                        "10"});
            table92.AddRow(new string[] {
                        "ValueStatus",
                        ""});
            table92.AddRow(new string[] {
                        "NameAddress1",
                        "MR CIFGOJ DIFG CAFUHJ"});
            table92.AddRow(new string[] {
                        "NameAddress2",
                        "TEST AUTOMATION"});
            table92.AddRow(new string[] {
                        "NameAddress3",
                        "MRS CIFHEJIL CIEGH ADFGUJKL"});
            table92.AddRow(new string[] {
                        "NameAddress4",
                        "<ADFGUJKL CIFOHJ CEFOH A/C>,"});
            table92.AddRow(new string[] {
                        "NameAddress5",
                        "PO BOX 5617"});
            table92.AddRow(new string[] {
                        "NameAddress6",
                        "CAIGH CIFOHJIL VIC"});
            table92.AddRow(new string[] {
                        "InvName",
                        "TEST INVESTOR 211"});
            table92.AddRow(new string[] {
                        "WC",
                        "*"});
            table92.AddRow(new string[] {
                        "InvestorType",
                        "E"});
            table92.AddRow(new string[] {
                        "TINStatus",
                        "18"});
            table92.AddRow(new string[] {
                        "FATCA",
                        "10"});
            table92.AddRow(new string[] {
                        "InvCntrl",
                        "1"});
            table92.AddRow(new string[] {
                        "CntName",
                        "TEST INVESTOR 211"});
            table92.AddRow(new string[] {
                        "CntAddress1",
                        "ADDRESS LINE 1"});
            table92.AddRow(new string[] {
                        "CntAddress2",
                        "ADDRESS LINE 2"});
            table92.AddRow(new string[] {
                        "CntAddress3",
                        "ADDRESS LINE 3"});
            table92.AddRow(new string[] {
                        "CntAddress4",
                        "ADDRESS LINE 4"});
            table92.AddRow(new string[] {
                        "CntAddress5",
                        "ADDRESS LINE 5"});
            table92.AddRow(new string[] {
                        "CntlPostCode",
                        "3190"});
            table92.AddRow(new string[] {
                        "CntCountry",
                        "AUS"});
            table92.AddRow(new string[] {
                        "CntCitizenship",
                        "AUS"});
            table92.AddRow(new string[] {
                        "CntTaxIdentifier",
                        "Not Quoted"});
            table92.AddRow(new string[] {
                        "CntTIN",
                        ""});
            table92.AddRow(new string[] {
                        "CntUSTaxCode",
                        "AUS"});
            table92.AddRow(new string[] {
                        "CntGINN-P1",
                        "06FJHZ"});
            table92.AddRow(new string[] {
                        "CntGINN-P2",
                        "99999"});
            table92.AddRow(new string[] {
                        "CntGINN-P3",
                        "SL"});
            table92.AddRow(new string[] {
                        "CntGINN-P4",
                        "036"});
            table92.AddRow(new string[] {
                        "CntDateofBirth",
                        "No date"});
            table92.AddRow(new string[] {
                        "CntTINStatus",
                        "18"});
            table92.AddRow(new string[] {
                        "FatcaStatus",
                        "10"});
            table92.AddRow(new string[] {
                        "CntW8ExpiryDate",
                        "31/12/2018"});
            table92.AddRow(new string[] {
                        "GINNException",
                        ""});
#line 1643
 testRunner.Then("In ENTUSA05 I should see US Tax Payer Controlling persons details as below:", ((string)(null)), table92, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17985: 01_Main Menu")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17985")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        public virtual void TestCase1798501_MainMenu()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17985: 01_Main Menu", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "NAB_AUTO",
                        "17985",
                        "EN_E_DisplayActions"});
#line 1695
this.ScenarioSetup(scenarioInfo);
#line 1697
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1698
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1699
  testRunner.And("In MNS00101 I click on: \"Enquiry System\" within the System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1700
 testRunner.Then("I expect to be in the \"ENS00101\" Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1701
 testRunner.When("In ENS00101 I click on: \"exit enquiry\" within the Enquiry System Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1702
 testRunner.Then("I expect to be in the \"MNS00101\" Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table93 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table93.AddRow(new string[] {
                        "ServiceProvide",
                        ""});
            table93.AddRow(new string[] {
                        "ServiceCode",
                        "SPECLS"});
#line 1703
 testRunner.When("I enter following details in Service Level Reporting Details:", ((string)(null)), table93, "When ");
#line hidden
            TechTalk.SpecFlow.Table table94 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table94.AddRow(new string[] {
                        "Provider1",
                        "***"});
            table94.AddRow(new string[] {
                        "Provider1Desc",
                        "Unknown service provider"});
            table94.AddRow(new string[] {
                        "Provider2",
                        "CAS"});
            table94.AddRow(new string[] {
                        "Provider2Desc",
                        "Computershare Analytics"});
            table94.AddRow(new string[] {
                        "Provider3",
                        "CDS"});
            table94.AddRow(new string[] {
                        "Provider3Desc",
                        "Computershare Document Services"});
            table94.AddRow(new string[] {
                        "Provider4",
                        "CIS"});
            table94.AddRow(new string[] {
                        "Provider4Desc",
                        "Computershare Investor Services"});
            table94.AddRow(new string[] {
                        "Provider5",
                        "CPM"});
            table94.AddRow(new string[] {
                        "Provider5Desc",
                        "Computershare Plan Managers"});
            table94.AddRow(new string[] {
                        "Provider6",
                        "CRM"});
            table94.AddRow(new string[] {
                        "Provider6Desc",
                        "CRM"});
            table94.AddRow(new string[] {
                        "Provider7",
                        "CSL"});
            table94.AddRow(new string[] {
                        "Provider7Desc",
                        "Computershare Limited"});
#line 1707
 testRunner.Then("In SELPRV01 I should see Select Service Provide details as below:", ((string)(null)), table94, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table95 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table95.AddRow(new string[] {
                        "ServiceProvide",
                        "CAS"});
            table95.AddRow(new string[] {
                        "ServiceCode",
                        ""});
#line 1723
 testRunner.When("I enter following details in Service Level Reporting Details:", ((string)(null)), table95, "When ");
#line hidden
            TechTalk.SpecFlow.Table table96 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table96.AddRow(new string[] {
                        "Service1",
                        "******"});
            table96.AddRow(new string[] {
                        "Service1Desc",
                        "unknown service"});
            table96.AddRow(new string[] {
                        "Service2",
                        ""});
            table96.AddRow(new string[] {
                        "Service2Desc",
                        ""});
#line 1727
 testRunner.Then("In SELSRV01 I should see Select Service Provide details as below:", ((string)(null)), table96, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18148: 01_Email Addresses (LEML Action)")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("18148")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        public virtual void TestCase1814801_EmailAddressesLEMLAction()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18148: 01_Email Addresses (LEML Action)", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "NAB_AUTO",
                        "18148",
                        "EN_E_DisplayActions"});
#line 1739
this.ScenarioSetup(scenarioInfo);
#line 1741
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1742
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1743
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table97 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table97.AddRow(new string[] {
                        "Action",
                        "LEML"});
            table97.AddRow(new string[] {
                        "Locate Argument",
                        "TEST@COMPUTERSHARE.COM.AU"});
#line 1744
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table97, "And ");
#line hidden
            TechTalk.SpecFlow.Table table98 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table98.AddRow(new string[] {
                        "EmailInput",
                        "TEST@COMPUTERSHARE.COM.AU"});
            table98.AddRow(new string[] {
                        "HIN1",
                        "I0070036916"});
            table98.AddRow(new string[] {
                        "HIN2",
                        "I0070036924"});
            table98.AddRow(new string[] {
                        "HIN3",
                        "I0070036932"});
            table98.AddRow(new string[] {
                        "HIN4",
                        "X0054356552"});
            table98.AddRow(new string[] {
                        "NameLine1",
                        "ESTATE LATE TRANSACTION CODE"});
            table98.AddRow(new string[] {
                        "NameLine2",
                        "TRANSACTION CODE TEST 2,"});
            table98.AddRow(new string[] {
                        "NameLine3",
                        "TRANSACTION CODE TEST 3,"});
            table98.AddRow(new string[] {
                        "NameLine4",
                        "A & G ROBERTS PTY LTD"});
            table98.AddRow(new string[] {
                        "AddressLine1",
                        "TEST AUTOMATION"});
            table98.AddRow(new string[] {
                        "AddressLine2",
                        "TEST AUTOMATION"});
            table98.AddRow(new string[] {
                        "AddressLine3",
                        "TEST AUTOMATION"});
            table98.AddRow(new string[] {
                        "AddressLine4",
                        "TEST AUTOMATION"});
            table98.AddRow(new string[] {
                        "PostcodeLine1",
                        "3000"});
            table98.AddRow(new string[] {
                        "PostcodeLine2",
                        "3000"});
            table98.AddRow(new string[] {
                        "PostcodeLine3",
                        "3000"});
            table98.AddRow(new string[] {
                        "PostcodeLine4",
                        "3205"});
#line 1748
 testRunner.Then("In ENS01039 I should see multiple holder details for supplied email as below:", ((string)(null)), table98, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18165: 01_Company Notice and Comms (NOT action)")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("18165")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        public virtual void TestCase1816501_CompanyNoticeAndCommsNOTAction()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18165: 01_Company Notice and Comms (NOT action)", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "CPU_AUTO",
                        "18165",
                        "EN_E_DisplayActions"});
#line 1773
this.ScenarioSetup(scenarioInfo);
#line 1775
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1776
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1777
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table99 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table99.AddRow(new string[] {
                        "Action",
                        "NOT"});
            table99.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 1778
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table99, "And ");
#line hidden
            TechTalk.SpecFlow.Table table100 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table100.AddRow(new string[] {
                        "BookCloseDate",
                        "03/03/2014"});
            table100.AddRow(new string[] {
                        "NoticeLine1",
                        "**** AUTOMATION TEST COMPANY ****"});
            table100.AddRow(new string[] {
                        "NoticeLine2",
                        "DO NOT MAKE ANY CHANGES"});
            table100.AddRow(new string[] {
                        "NoticeLine3",
                        "CONTACT SAM JOUBRAN"});
#line 1782
 testRunner.Then("In ENS01050 I should see Company Notice as below:", ((string)(null)), table100, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18422: 01_Certs with Last Txn Details")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("18422_01")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.TestCaseAttribute("E", "", "C0009906408", "A11/ISX0011 ACCEPTANCE CLASS", "VIC 00000001     08/05/15             0", "VIC 00123456ST01 16/06/15             2", "VIC 00123456ST02 16/06/15             2", "VIC 00123456ST03 16/06/15             2", "VIC 00123456ST04 16/06/15             2", "VIC 00123456ST05 16/06/15             2", "VIC 00123456ST06 16/06/15             2", "VIC 00123456ST07 16/06/15             2", "VIC 00123456ST08 16/06/15             2", "VIC 00123456ST09 16/06/15             2", "VIC 00123456ST10 16/06/15             2", "VIC 00123456ST11 16/06/15             2", "16/06/15 MRKNG 7650/ 5555555           100-", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", null)]
        [NUnit.Framework.TestCaseAttribute("EB", "", "C0009906408", "A11/ISX0011 ACCEPTANCE CLASS", "VIC 00123456ST01 16/06/15             2", "VIC 00123456ST02 16/06/15             2", "VIC 00123456ST03 16/06/15             2", "VIC 00123456ST04 16/06/15             2", "VIC 00123456ST05 16/06/15             2", "VIC 00123456ST06 16/06/15             2", "VIC 00123456ST07 16/06/15             2", "VIC 00123456ST08 16/06/15             2", "VIC 00123456ST09 16/06/15             2", "VIC 00123456ST10 16/06/15             2", "VIC 00123456ST11 16/06/15             2", "VIC 00123456ST12 16/06/15             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", null)]
        [NUnit.Framework.TestCaseAttribute("EC", "", "C0009906408", "A11/ISX0011 ACCEPTANCE CLASS", "VIC 00000001     08/05/15             0", "CAC/ACCEPTANCE CPS II 2013", "VIC 00000001     08/05/15             0", "CEN/ENTITLEMENT CPS II 2013", "VIC 00100003     08/05/15           350", "DAM/EMPLOYEE TRUST HELD SHARES", "VIC 00000001     08/05/15           100", "DIM/EMPLOYEE TRUST HELD SHARES", "VIC 00000001     08/05/15           100", "F14/EMPLOYEE TRUST HELD SHARES", "VIC 00000001     08/05/15           100", "ORD/ORDINARY FULLY PAID SHARES", "16/06/15 MRKNG 7650/ 5555555           100-", "CAC/ACCEPTANCE CPS II 2013", "16/06/15 MRKNG 7650/ 1111111           100-", "CEN/ENTITLEMENT CPS II 2013", "08/05/15 CAPIN 7650/  258988           200", "DAM/EMPLOYEE TRUST HELD SHARES", "08/05/15 CAPIN 7650/  258993           100", "DIM/EMPLOYEE TRUST HELD SHARES", "08/05/15 CAPIN 7650/  258994           100", "F14/EMPLOYEE TRUST HELD SHARES", "08/05/15 CAPIN 7650/  258995           100", "ORD/ORDINARY FULLY PAID SHARES", null)]
        [NUnit.Framework.TestCaseAttribute("EM", "", "C0009906408", "A11/ISX0011 ACCEPTANCE CLASS", "VIC 00123456ST01 16/06/15             2", "VIC 00123456ST02 16/06/15             2", "VIC 00123456ST03 16/06/15             2", "VIC 00123456ST04 16/06/15             2", "VIC 00123456ST05 16/06/15             2", "VIC 00123456ST06 16/06/15             2", "VIC 00123456ST07 16/06/15             2", "VIC 00123456ST08 16/06/15             2", "VIC 00123456ST09 16/06/15             2", "VIC 00123456ST10 16/06/15             2", "VIC 00123456ST11 16/06/15             2", "VIC 00123456ST12 16/06/15             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", null)]
        [NUnit.Framework.TestCaseAttribute("EMB", "", "C0009906408", "A11/ISX0011 ACCEPTANCE CLASS", "VIC 00123456ST01 16/06/15             2", "VIC 00123456ST02 16/06/15             2", "VIC 00123456ST03 16/06/15             2", "VIC 00123456ST04 16/06/15             2", "VIC 00123456ST05 16/06/15             2", "VIC 00123456ST06 16/06/15             2", "VIC 00123456ST07 16/06/15             2", "VIC 00123456ST08 16/06/15             2", "VIC 00123456ST09 16/06/15             2", "VIC 00123456ST10 16/06/15             2", "VIC 00123456ST11 16/06/15             2", "VIC 00123456ST12 16/06/15             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", null)]
        [NUnit.Framework.TestCaseAttribute("ECB", "", "C0009906408", "CEN/ENTITLEMENT CPS II 2013", "VIC 00100003     08/05/15           350", "DAM/EMPLOYEE TRUST HELD SHARES", "VIC 00000001     08/05/15           100", "DIM/EMPLOYEE TRUST HELD SHARES", "VIC 00000001     08/05/15           100", "F14/EMPLOYEE TRUST HELD SHARES", "VIC 00000001     08/05/15           100", "ORD/ORDINARY FULLY PAID SHARES", "VIC  A296042     08/05/15           100", "ZZZ/SHAREHOLDER CARD", "VIC 00954563     08/05/15           100", "", "08/05/15 CAPIN 7650/  258988           200", "DAM/EMPLOYEE TRUST HELD SHARES", "08/05/15 CAPIN 7650/  258993           100", "DIM/EMPLOYEE TRUST HELD SHARES", "08/05/15 CAPIN 7650/  258994           100", "F14/EMPLOYEE TRUST HELD SHARES", "08/05/15 CAPIN 7650/  258995           100", "ORD/ORDINARY FULLY PAID SHARES", "08/05/15 CTIND 7653/ 6666666             0", "ZZZ/SHAREHOLDER CARD", "08/05/15 CAPIN 7650/  258991           100", "", null)]
        public virtual void TestCase1842201_CertsWithLastTxnDetails(
                    string action, 
                    string locateArgument, 
                    string hIN, 
                    string line1, 
                    string line2Part1, 
                    string line3Part1, 
                    string line4Part1, 
                    string line5Part1, 
                    string line6Part1, 
                    string line7Part1, 
                    string line8Part1, 
                    string line9Part1, 
                    string line10Part1, 
                    string line11Part1, 
                    string line12Part1, 
                    string line13Part1, 
                    string line2Part2, 
                    string line3Part2, 
                    string line4Part2, 
                    string line5Part2, 
                    string line6Part2, 
                    string line7Part2, 
                    string line8Part2, 
                    string line9Part2, 
                    string line10Part2, 
                    string line11Part2, 
                    string line12Part2, 
                    string line13Part2, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "NAB_AUTO",
                    "18422_01",
                    "EN_E_DisplayActions"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18422: 01_Certs with Last Txn Details", @__tags);
#line 1794
this.ScenarioSetup(scenarioInfo);
#line 1796
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1797
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1798
  testRunner.And("I go to the Enquiry system for \"C0009906408\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1799
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1800
 testRunner.Then(string.Format("In ENS01042 I should see Certificate Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5" +
                        "}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\"", hIN, line1, line2Part1, line3Part1, line4Part1, line5Part1, line6Part1, line7Part1, line8Part1, line9Part1, line10Part1, line11Part1, line12Part1, line13Part1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1801
  testRunner.And(string.Format("In ENS01042 I should see Certificate Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5" +
                        "}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\"", hIN, line1, line2Part2, line3Part2, line4Part2, line5Part2, line6Part2, line7Part2, line8Part2, line9Part2, line10Part2, line11Part2, line12Part2, line13Part2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18422: 02_Certs with Last Txn Details-more option")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17277_02")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.TestCaseAttribute("E", "", "C0009906408", "A11/ISX0011 ACCEPTANCE CLASS       Cont\'d", "VIC 00123456ST12 16/06/15             2", "VIC 00123456ST13 16/06/15             2", "VIC 00123456ST14 16/06/15             2", "VIC 00123456ST15 16/06/15             2", "VIC 00123456ST16 16/06/15             2", "VIC 00123456ST17 16/06/15             2", "VIC 00123456ST18 16/06/15             2", "VIC 00123456ST19 16/06/15             2", "VIC 00123456ST20 16/06/15             2", "VIC 00123456ST21 16/06/15             2", "VIC 00123456ST22 16/06/15             2", "VIC 00123456ST23 16/06/15             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", null)]
        [NUnit.Framework.TestCaseAttribute("EB", "", "C0009906408", "A11/ISX0011 ACCEPTANCE CLASS       Cont\'d", "VIC 00123456ST13 16/06/15             2", "VIC 00123456ST14 16/06/15             2", "VIC 00123456ST15 16/06/15             2", "VIC 00123456ST16 16/06/15             2", "VIC 00123456ST17 16/06/15             2", "VIC 00123456ST18 16/06/15             2", "VIC 00123456ST19 16/06/15             2", "VIC 00123456ST20 16/06/15             2", "VIC 00123456ST21 16/06/15             2", "VIC 00123456ST22 16/06/15             2", "VIC 00123456ST23 16/06/15             2", "VIC 00123456ST24 16/06/15             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", null)]
        [NUnit.Framework.TestCaseAttribute("EC", "", "C0009906408", "ORD/ORDINARY FULLY PAID SHARES     Cont\'d", "VIC  A296042     08/05/15           100", "ZZZ/SHAREHOLDER CARD", "VIC 00954563     08/05/15           100", "", "", "", "", "", "", "", "", "", "08/05/15 CTIND 7653/ 6666666             0", "ZZZ/SHAREHOLDER CARD", "08/05/15 CAPIN 7650/  258991           100", "", "", "", "", "", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("EM", "", "C0009906408", "A11/ISX0011 ACCEPTANCE CLASS       Cont\'d", "VIC 00123456ST13 16/06/15             2", "VIC 00123456ST14 16/06/15             2", "VIC 00123456ST15 16/06/15             2", "VIC 00123456ST16 16/06/15             2", "VIC 00123456ST17 16/06/15             2", "VIC 00123456ST18 16/06/15             2", "VIC 00123456ST19 16/06/15             2", "VIC 00123456ST20 16/06/15             2", "VIC 00123456ST21 16/06/15             2", "VIC 00123456ST22 16/06/15             2", "VIC 00123456ST23 16/06/15             2", "VIC 00123456ST24 16/06/15             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", null)]
        [NUnit.Framework.TestCaseAttribute("EMB", "", "C0009906408", "A11/ISX0011 ACCEPTANCE CLASS       Cont\'d", "VIC 00123456ST13 16/06/15             2", "VIC 00123456ST14 16/06/15             2", "VIC 00123456ST15 16/06/15             2", "VIC 00123456ST16 16/06/15             2", "VIC 00123456ST17 16/06/15             2", "VIC 00123456ST18 16/06/15             2", "VIC 00123456ST19 16/06/15             2", "VIC 00123456ST20 16/06/15             2", "VIC 00123456ST21 16/06/15             2", "VIC 00123456ST22 16/06/15             2", "VIC 00123456ST23 16/06/15             2", "VIC 00123456ST24 16/06/15             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", "16/06/15 MRKNG 7650/ 5555555             2", null)]
        public virtual void TestCase1842202_CertsWithLastTxnDetails_MoreOption(
                    string action, 
                    string locateArgument, 
                    string hIN, 
                    string line1, 
                    string line2Part1, 
                    string line3Part1, 
                    string line4Part1, 
                    string line5Part1, 
                    string line6Part1, 
                    string line7Part1, 
                    string line8Part1, 
                    string line9Part1, 
                    string line10Part1, 
                    string line11Part1, 
                    string line12Part1, 
                    string line13Part1, 
                    string line2Part2, 
                    string line3Part2, 
                    string line4Part2, 
                    string line5Part2, 
                    string line6Part2, 
                    string line7Part2, 
                    string line8Part2, 
                    string line9Part2, 
                    string line10Part2, 
                    string line11Part2, 
                    string line12Part2, 
                    string line13Part2, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "NAB_AUTO",
                    "17277_02",
                    "EN_E_DisplayActions"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18422: 02_Certs with Last Txn Details-more option", @__tags);
#line 1817
this.ScenarioSetup(scenarioInfo);
#line 1819
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1820
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1821
  testRunner.And("I go to the Enquiry system for \"C0009906408\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1822
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table101 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table101.AddRow(new string[] {
                        "Action",
                        "M"});
            table101.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 1823
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table101, "And ");
#line 1827
 testRunner.Then(string.Format("In ENS01042 I should see Certificate Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5" +
                        "}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\"", hIN, line1, line2Part1, line3Part1, line4Part1, line5Part1, line6Part1, line7Part1, line8Part1, line9Part1, line10Part1, line11Part1, line12Part1, line13Part1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1828
  testRunner.And(string.Format("In ENS01042 I should see Certificate Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5" +
                        "}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\"", hIN, line1, line2Part2, line3Part2, line4Part2, line5Part2, line6Part2, line7Part2, line8Part2, line9Part2, line10Part2, line11Part2, line12Part2, line13Part2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18464: 01_Certificate Options actions")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("18464_01")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.TestCaseAttribute("CB", "", "C0009906408", "A11/ISX0011 ACCEPTANCE CLASS", "VIC 00123456ST01 16/06/15             2    VIC 00123456ST02 16/06/15             " +
            " 2", "VIC 00123456ST03 16/06/15             2    VIC 00123456ST04 16/06/15             " +
            " 2", "VIC 00123456ST05 16/06/15             2    VIC 00123456ST06 16/06/15             " +
            " 2", "VIC 00123456ST07 16/06/15             2    VIC 00123456ST08 16/06/15             " +
            " 2", "VIC 00123456ST09 16/06/15             2    VIC 00123456ST10 16/06/15             " +
            " 2", "VIC 00123456ST11 16/06/15             2    VIC 00123456ST12 16/06/15             " +
            " 2", "VIC 00123456ST13 16/06/15             2    VIC 00123456ST14 16/06/15             " +
            " 2", "VIC 00123456ST15 16/06/15             2    VIC 00123456ST16 16/06/15             " +
            " 2", "VIC 00123456ST17 16/06/15             2    VIC 00123456ST18 16/06/15             " +
            " 2", "VIC 00123456ST19 16/06/15             2    VIC 00123456ST20 16/06/15             " +
            " 2", "VIC 00123456ST21 16/06/15             2    VIC 00123456ST22 16/06/15             " +
            " 2", "VIC 00123456ST23 16/06/15             2    VIC 00123456ST24 16/06/15             " +
            " 2", null)]
        [NUnit.Framework.TestCaseAttribute("CC", "", "C0009906408", "A11/ISX0011 ACCEPTANCE CLASS", "VIC 00000001     08/05/15             0", "CAC/ACCEPTANCE CPS II 2013", "VIC 00000001     08/05/15             0", "CEN/ENTITLEMENT CPS II 2013", "VIC 00100003     08/05/15           350", "DAM/EMPLOYEE TRUST HELD SHARES", "VIC 00000001     08/05/15           100", "DIM/EMPLOYEE TRUST HELD SHARES", "VIC 00000001     08/05/15           100", "F14/EMPLOYEE TRUST HELD SHARES", "VIC 00000001     08/05/15           100", "ORD/ORDINARY FULLY PAID SHARES", null)]
        [NUnit.Framework.TestCaseAttribute("CM", "", "C0009906408", "A11/ISX0011 ACCEPTANCE CLASS", "VIC 00123456ST01 16/06/15             2    VIC 00123456ST02 16/06/15             " +
            " 2", "VIC 00123456ST03 16/06/15             2    VIC 00123456ST04 16/06/15             " +
            " 2", "VIC 00123456ST05 16/06/15             2    VIC 00123456ST06 16/06/15             " +
            " 2", "VIC 00123456ST07 16/06/15             2    VIC 00123456ST08 16/06/15             " +
            " 2", "VIC 00123456ST09 16/06/15             2    VIC 00123456ST10 16/06/15             " +
            " 2", "VIC 00123456ST11 16/06/15             2    VIC 00123456ST12 16/06/15             " +
            " 2", "VIC 00123456ST13 16/06/15             2    VIC 00123456ST14 16/06/15             " +
            " 2", "VIC 00123456ST15 16/06/15             2    VIC 00123456ST16 16/06/15             " +
            " 2", "VIC 00123456ST17 16/06/15             2    VIC 00123456ST18 16/06/15             " +
            " 2", "VIC 00123456ST19 16/06/15             2    VIC 00123456ST20 16/06/15             " +
            " 2", "VIC 00123456ST21 16/06/15             2    VIC 00123456ST22 16/06/15             " +
            " 2", "VIC 00123456ST23 16/06/15             2    VIC 00123456ST24 16/06/15             " +
            " 2", null)]
        [NUnit.Framework.TestCaseAttribute("CMB", "", "C0009906408", "A11/ISX0011 ACCEPTANCE CLASS", "VIC 00123456ST01 16/06/15             2    VIC 00123456ST02 16/06/15             " +
            " 2", "VIC 00123456ST03 16/06/15             2    VIC 00123456ST04 16/06/15             " +
            " 2", "VIC 00123456ST05 16/06/15             2    VIC 00123456ST06 16/06/15             " +
            " 2", "VIC 00123456ST07 16/06/15             2    VIC 00123456ST08 16/06/15             " +
            " 2", "VIC 00123456ST09 16/06/15             2    VIC 00123456ST10 16/06/15             " +
            " 2", "VIC 00123456ST11 16/06/15             2    VIC 00123456ST12 16/06/15             " +
            " 2", "VIC 00123456ST13 16/06/15             2    VIC 00123456ST14 16/06/15             " +
            " 2", "VIC 00123456ST15 16/06/15             2    VIC 00123456ST16 16/06/15             " +
            " 2", "VIC 00123456ST17 16/06/15             2    VIC 00123456ST18 16/06/15             " +
            " 2", "VIC 00123456ST19 16/06/15             2    VIC 00123456ST20 16/06/15             " +
            " 2", "VIC 00123456ST21 16/06/15             2    VIC 00123456ST22 16/06/15             " +
            " 2", "VIC 00123456ST23 16/06/15             2    VIC 00123456ST24 16/06/15             " +
            " 2", null)]
        [NUnit.Framework.TestCaseAttribute("CCB", "", "C0009906408", "CEN/ENTITLEMENT CPS II 2013", "VIC 00100003     08/05/15           350", "DAM/EMPLOYEE TRUST HELD SHARES", "VIC 00000001     08/05/15           100", "DIM/EMPLOYEE TRUST HELD SHARES", "VIC 00000001     08/05/15           100", "F14/EMPLOYEE TRUST HELD SHARES", "VIC 00000001     08/05/15           100", "ORD/ORDINARY FULLY PAID SHARES", "VIC  A296042     08/05/15           100 1", "ZZZ/SHAREHOLDER CARD", "VIC 00954563     08/05/15           100", "", null)]
        public virtual void TestCase1846401_CertificateOptionsActions(
                    string action, 
                    string locateArgument, 
                    string hIN, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string line6, 
                    string line7, 
                    string line8, 
                    string line9, 
                    string line10, 
                    string line11, 
                    string line12, 
                    string line13, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "NAB_AUTO",
                    "18464_01",
                    "EN_E_DisplayActions"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18464: 01_Certificate Options actions", @__tags);
#line 1843
this.ScenarioSetup(scenarioInfo);
#line 1845
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1846
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1847
  testRunner.And("I go to the Enquiry system for \"C0009906408\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1848
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1849
 testRunner.Then(string.Format("In ENS01012 I should see Certificate details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5" +
                        "}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\"", hIN, line1, line2, line3, line4, line5, line6, line7, line8, line9, line10, line11, line12, line13), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18464: 01_Certificate Options actions_more option")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("18464_02")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.TestCaseAttribute("CB", "", "C0009906408", "A11/ISX0011 ACCEPTANCE CLASS       Cont\'d", "VIC 00123456ST25 16/06/15             2    VIC 00123456ST26 16/06/15             " +
            " 2", "VIC 00123456ST27 16/06/15             2    VIC 00123456ST28 16/06/15             " +
            " 2", "VIC 00123456ST29 16/06/15             2    VIC 00123456ST30 16/06/15             " +
            " 2", "VIC 00123456ST31 16/06/15             2    VIC 00123456ST32 16/06/15             " +
            " 2", "VIC 00123456ST33 16/06/15             2    VIC 00123456ST34 16/06/15             " +
            " 2", "VIC 00123456ST35 16/06/15             2    VIC 00123456ST36 16/06/15             " +
            " 2", "VIC 00123456ST37 16/06/15             2    VIC 00123456ST38 16/06/15             " +
            " 2", "VIC 00123456ST39 16/06/15             2    VIC 00123456ST40 16/06/15             " +
            " 2", "VIC 00123456ST41 16/06/15             2    VIC 00123456ST42 16/06/15             " +
            " 2", "VIC 00123456ST43 16/06/15             2    VIC 00123456ST44 16/06/15             " +
            " 2", "VIC 00123456ST45 16/06/15             2    VIC 00123456ST46 16/06/15             " +
            " 2", "VIC 00123456ST47 16/06/15             2    VIC 00123456ST48 16/06/15             " +
            " 2", null)]
        [NUnit.Framework.TestCaseAttribute("CC", "", "C0009906408", "ORD/ORDINARY FULLY PAID SHARES     Cont\'d", "VIC  A296042     08/05/15           100 1", "ZZZ/SHAREHOLDER CARD", "VIC 00954563     08/05/15           100", "", "", "", "", "", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("CM", "", "C0009906408", "A11/ISX0011 ACCEPTANCE CLASS       Cont\'d", "VIC 00123456ST25 16/06/15             2    VIC 00123456ST26 16/06/15             " +
            " 2", "VIC 00123456ST27 16/06/15             2    VIC 00123456ST28 16/06/15             " +
            " 2", "VIC 00123456ST29 16/06/15             2    VIC 00123456ST30 16/06/15             " +
            " 2", "VIC 00123456ST31 16/06/15             2    VIC 00123456ST32 16/06/15             " +
            " 2", "VIC 00123456ST33 16/06/15             2    VIC 00123456ST34 16/06/15             " +
            " 2", "VIC 00123456ST35 16/06/15             2    VIC 00123456ST36 16/06/15             " +
            " 2", "VIC 00123456ST37 16/06/15             2    VIC 00123456ST38 16/06/15             " +
            " 2", "VIC 00123456ST39 16/06/15             2    VIC 00123456ST40 16/06/15             " +
            " 2", "VIC 00123456ST41 16/06/15             2    VIC 00123456ST42 16/06/15             " +
            " 2", "VIC 00123456ST43 16/06/15             2    VIC 00123456ST44 16/06/15             " +
            " 2", "VIC 00123456ST45 16/06/15             2    VIC 00123456ST46 16/06/15             " +
            " 2", "VIC 00123456ST47 16/06/15             2    VIC 00123456ST48 16/06/15             " +
            " 2", null)]
        [NUnit.Framework.TestCaseAttribute("CMB", "", "C0009906408", "A11/ISX0011 ACCEPTANCE CLASS       Cont\'d", "VIC 00123456ST25 16/06/15             2    VIC 00123456ST26 16/06/15             " +
            " 2", "VIC 00123456ST27 16/06/15             2    VIC 00123456ST28 16/06/15             " +
            " 2", "VIC 00123456ST29 16/06/15             2    VIC 00123456ST30 16/06/15             " +
            " 2", "VIC 00123456ST31 16/06/15             2    VIC 00123456ST32 16/06/15             " +
            " 2", "VIC 00123456ST33 16/06/15             2    VIC 00123456ST34 16/06/15             " +
            " 2", "VIC 00123456ST35 16/06/15             2    VIC 00123456ST36 16/06/15             " +
            " 2", "VIC 00123456ST37 16/06/15             2    VIC 00123456ST38 16/06/15             " +
            " 2", "VIC 00123456ST39 16/06/15             2    VIC 00123456ST40 16/06/15             " +
            " 2", "VIC 00123456ST41 16/06/15             2    VIC 00123456ST42 16/06/15             " +
            " 2", "VIC 00123456ST43 16/06/15             2    VIC 00123456ST44 16/06/15             " +
            " 2", "VIC 00123456ST45 16/06/15             2    VIC 00123456ST46 16/06/15             " +
            " 2", "VIC 00123456ST47 16/06/15             2    VIC 00123456ST48 16/06/15             " +
            " 2", null)]
        public virtual void TestCase1846401_CertificateOptionsActions_MoreOption(
                    string action, 
                    string locateArgument, 
                    string hIN, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string line6, 
                    string line7, 
                    string line8, 
                    string line9, 
                    string line10, 
                    string line11, 
                    string line12, 
                    string line13, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "NAB_AUTO",
                    "18464_02",
                    "EN_E_DisplayActions"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18464: 01_Certificate Options actions_more option", @__tags);
#line 1864
this.ScenarioSetup(scenarioInfo);
#line 1866
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1867
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1868
  testRunner.And("I go to the Enquiry system for \"C0009906408\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1869
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table102 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table102.AddRow(new string[] {
                        "Action",
                        "M"});
            table102.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 1870
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table102, "And ");
#line 1874
 testRunner.Then(string.Format("In ENS01012 I should see Certificate details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5" +
                        "}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\"", hIN, line1, line2, line3, line4, line5, line6, line7, line8, line9, line10, line11, line12, line13), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 20770_01: 01_US Tax Enquiry - LS Action-Test1")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("20770_01")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.TestCaseAttribute("I0034317747", "S", "LS", "7652/9877", "UICHG", "US TAX STATUS (CHANGE)", "MARY MARGARET", "1234", "BOURKE ST", "MELBOURNE", "3000", "AUS", "*******-129", "MARY MARGARET", "123", "BOURKE ST", "MELBOURNE", "3000", "AUS", "*******-129", null)]
        public virtual void TestCase20770_0101_USTaxEnquiry_LSAction_Test1(
                    string locateArgument, 
                    string action, 
                    string action1, 
                    string locateArgument1, 
                    string tran, 
                    string tranDesc, 
                    string oldName, 
                    string oldAddress1, 
                    string oldAddress2, 
                    string oldAddress3, 
                    string oldPostcode, 
                    string oldCountry, 
                    string oldTIN, 
                    string newName, 
                    string newAddress1, 
                    string newAddress2, 
                    string newAddress3, 
                    string newPostcode, 
                    string newCountry, 
                    string newTIN, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "NAB_AUTO",
                    "20770_01",
                    "EN_E_DisplayActions"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 20770_01: 01_US Tax Enquiry - LS Action-Test1", @__tags);
#line 1929
this.ScenarioSetup(scenarioInfo);
#line 1931
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1932
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1933
  testRunner.And("I go to the Enquiry system for \"I0034317747\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1934
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1935
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1936
 testRunner.Then(string.Format("In ENSSUS03 I should see Static Transaction details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{" +
                        "4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\"", tran, tranDesc, oldName, oldAddress1, oldAddress2, oldAddress3, oldPostcode, oldCountry, oldTIN, newName, newAddress1, newAddress2, newAddress3, newPostcode, newCountry, newTIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 20770_02: 01_US Tax Enquiry - LS Action-Test2")]
        [NUnit.Framework.CategoryAttribute("DataChange")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("20770_02")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.TestCaseAttribute("I0034317747", "S", "LS", "", "7655", "4167473", "14/07/2015", "INFCH", "FREE FORM INFORMATION (CHANGE)", "WEB_ACCESS", null)]
        public virtual void TestCase20770_0201_USTaxEnquiry_LSAction_Test2(string locateArgument, string action, string action1, string locateArgument1, string run, string tran, string date, string tranCode, string tranDesc, string reference, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "DataChange",
                    "NAB_AUTO",
                    "20770_02",
                    "EN_E_DisplayActions"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 20770_02: 01_US Tax Enquiry - LS Action-Test2", @__tags);
#line 1947
this.ScenarioSetup(scenarioInfo);
#line 1949
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1950
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1951
  testRunner.And("I go to the Enquiry system for \"I0034317747\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1952
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1953
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1954
 testRunner.Then(string.Format("In ENSSTM34 I should see Static Transaction details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{" +
                        "4}\" \"{5}\"", run, tran, date, tranCode, tranDesc, reference), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 20825: 02_US Tax Enquiry - Dividend History")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("20825")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisplayActions")]
        [NUnit.Framework.TestCaseAttribute("DH", "I0033314515", "1", "", ">", "Non-resident", null)]
        public virtual void TestCase2082502_USTaxEnquiry_DividendHistory(string action, string locateArgument, string action1, string locateArgument1, string action2, string res, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "NAB_AUTO",
                    "20825",
                    "EN_E_DisplayActions"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 20825: 02_US Tax Enquiry - Dividend History", @__tags);
#line 1965
this.ScenarioSetup(scenarioInfo);
#line 1967
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1968
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1969
  testRunner.And("I go to the Enquiry system for \"I0033314515\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1970
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1971
 testRunner.Then("I expect to be in the \"ENSDIV01\" Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1972
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1973
 testRunner.Then("I expect to be in the \"ENSDIV02\" Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1974
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action2, locateArgument1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1975
 testRunner.Then(string.Format("In ENSDIV20 I should see US Tax Details as \"{0}\"", res), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
