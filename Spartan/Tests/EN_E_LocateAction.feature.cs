// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SCRIPAU.Automation.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("EN_E_LocateAction")]
    public partial class EN_E_LocateActionFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "EN_E_LocateAction.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "EN_E_LocateAction", "Ensure EN_E_LocateAction functionality covered", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View Holder Extra Details")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_LocateAction")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        public virtual void ViewHolderExtraDetails()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View Holder Extra Details", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "EN_E_LocateAction",
                        "CPU_AUTO"});
#line 8
this.ScenarioSetup(scenarioInfo);
#line 10
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 11
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "Action",
                        "LHE"});
            table1.AddRow(new string[] {
                        "Locate Argument",
                        "100200300"});
#line 13
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table1, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "Name Key",
                        "CABCOEYH    YDIKUB"});
            table2.AddRow(new string[] {
                        "HIN",
                        "I0100007525"});
            table2.AddRow(new string[] {
                        "Holder Type",
                        "EMP"});
            table2.AddRow(new string[] {
                        "Extra Holder ID",
                        "100200300"});
            table2.AddRow(new string[] {
                        "Name",
                        "YDIKUB CABCOEYH,"});
            table2.AddRow(new string[] {
                        "Address1",
                        "3 UWBCUJAEM COURT"});
            table2.AddRow(new string[] {
                        "Address2",
                        "RABC KIMV VIC"});
            table2.AddRow(new string[] {
                        "Address3",
                        ""});
            table2.AddRow(new string[] {
                        "Address4",
                        ""});
            table2.AddRow(new string[] {
                        "Address5",
                        ""});
            table2.AddRow(new string[] {
                        "Home Tell",
                        "038100100"});
            table2.AddRow(new string[] {
                        "Work Tell",
                        "035100100"});
            table2.AddRow(new string[] {
                        "Fax",
                        ""});
            table2.AddRow(new string[] {
                        "Mobile",
                        "0433100100"});
            table2.AddRow(new string[] {
                        "Email",
                        "YDIKUB.KEJKUIGP._test@computershare.com"});
            table2.AddRow(new string[] {
                        "Return Email",
                        ""});
            table2.AddRow(new string[] {
                        "Email Count",
                        "0"});
            table2.AddRow(new string[] {
                        "ABN1",
                        ""});
            table2.AddRow(new string[] {
                        "ABN2",
                        ""});
            table2.AddRow(new string[] {
                        "Type1",
                        ""});
            table2.AddRow(new string[] {
                        "Type2",
                        ""});
            table2.AddRow(new string[] {
                        "Flag1",
                        ""});
            table2.AddRow(new string[] {
                        "Flag1 Desc",
                        ""});
            table2.AddRow(new string[] {
                        "Flag2",
                        ""});
            table2.AddRow(new string[] {
                        "Flag2 Desc",
                        ""});
            table2.AddRow(new string[] {
                        "Flag3",
                        ""});
            table2.AddRow(new string[] {
                        "Flag3 Desc",
                        ""});
            table2.AddRow(new string[] {
                        "Flag4",
                        ""});
            table2.AddRow(new string[] {
                        "Flag4 Desc",
                        ""});
            table2.AddRow(new string[] {
                        "Flag5",
                        "E4"});
            table2.AddRow(new string[] {
                        "Flag5 Desc",
                        "AML CPM Multi Participant"});
            table2.AddRow(new string[] {
                        "Flag6",
                        ""});
            table2.AddRow(new string[] {
                        "Flag6 Desc",
                        ""});
            table2.AddRow(new string[] {
                        "Flag7",
                        ""});
            table2.AddRow(new string[] {
                        "Flag7 Desc",
                        ""});
            table2.AddRow(new string[] {
                        "Flag8",
                        ""});
            table2.AddRow(new string[] {
                        "Flag8 Desc",
                        ""});
            table2.AddRow(new string[] {
                        "Flag9",
                        ""});
            table2.AddRow(new string[] {
                        "Flag9 Desc",
                        ""});
#line 17
 testRunner.Then("In ENS01020 I should see holder extra details as below:", ((string)(null)), table2, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "Action",
                        "FE"});
            table3.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 58
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table3, "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table4.AddRow(new string[] {
                        "Name Key",
                        "CDOGHIALAN  CDIGO"});
            table4.AddRow(new string[] {
                        "HIN",
                        "I0100007495"});
            table4.AddRow(new string[] {
                        "Holder Type",
                        "EMP"});
            table4.AddRow(new string[] {
                        "Extra Holder ID",
                        "100200301"});
            table4.AddRow(new string[] {
                        "Name",
                        "MR CDIGO CDOGHIALAN"});
            table4.AddRow(new string[] {
                        "Address1",
                        "98 CIEGHJAL STREET"});
            table4.AddRow(new string[] {
                        "Address2",
                        "CDOGHJALM SOUTH VIC"});
            table4.AddRow(new string[] {
                        "Address3",
                        ""});
            table4.AddRow(new string[] {
                        "Address4",
                        ""});
            table4.AddRow(new string[] {
                        "Address5",
                        ""});
            table4.AddRow(new string[] {
                        "Home Tell",
                        "038200200"});
            table4.AddRow(new string[] {
                        "Work Tell",
                        "038201201"});
            table4.AddRow(new string[] {
                        "Fax",
                        ""});
            table4.AddRow(new string[] {
                        "Mobile",
                        "0433200200"});
            table4.AddRow(new string[] {
                        "Email",
                        "CDIGO.JKOMNIARAT._test@computershare.com"});
            table4.AddRow(new string[] {
                        "Return Email",
                        ""});
            table4.AddRow(new string[] {
                        "Email Count",
                        "0"});
            table4.AddRow(new string[] {
                        "ABN1",
                        ""});
            table4.AddRow(new string[] {
                        "ABN2",
                        ""});
            table4.AddRow(new string[] {
                        "Type1",
                        ""});
            table4.AddRow(new string[] {
                        "Type2",
                        ""});
            table4.AddRow(new string[] {
                        "Flag1",
                        ""});
            table4.AddRow(new string[] {
                        "Flag1 Desc",
                        ""});
            table4.AddRow(new string[] {
                        "Flag2",
                        ""});
            table4.AddRow(new string[] {
                        "Flag2 Desc",
                        ""});
            table4.AddRow(new string[] {
                        "Flag3",
                        ""});
            table4.AddRow(new string[] {
                        "Flag3 Desc",
                        ""});
            table4.AddRow(new string[] {
                        "Flag4",
                        ""});
            table4.AddRow(new string[] {
                        "Flag4 Desc",
                        ""});
            table4.AddRow(new string[] {
                        "Flag5",
                        "E4"});
            table4.AddRow(new string[] {
                        "Flag5 Desc",
                        "AML CPM Multi Participant"});
            table4.AddRow(new string[] {
                        "Flag6",
                        ""});
            table4.AddRow(new string[] {
                        "Flag6 Desc",
                        ""});
            table4.AddRow(new string[] {
                        "Flag7",
                        ""});
            table4.AddRow(new string[] {
                        "Flag7 Desc",
                        ""});
            table4.AddRow(new string[] {
                        "Flag8",
                        ""});
            table4.AddRow(new string[] {
                        "Flag8 Desc",
                        ""});
            table4.AddRow(new string[] {
                        "Flag9",
                        ""});
            table4.AddRow(new string[] {
                        "Flag9 Desc",
                        ""});
#line 62
 testRunner.Then("In ENS01020 I should see holder extra details as below:", ((string)(null)), table4, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table5.AddRow(new string[] {
                        "Action",
                        "BE"});
            table5.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 103
  testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table5, "When ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table6.AddRow(new string[] {
                        "Name Key",
                        "CABCOEYH    YDIKUB"});
            table6.AddRow(new string[] {
                        "HIN",
                        "I0100007525"});
            table6.AddRow(new string[] {
                        "Holder Type",
                        "EMP"});
            table6.AddRow(new string[] {
                        "Extra Holder ID",
                        "100200300"});
            table6.AddRow(new string[] {
                        "Name",
                        "YDIKUB CABCOEYH,"});
            table6.AddRow(new string[] {
                        "Address1",
                        "3 UWBCUJAEM COURT"});
            table6.AddRow(new string[] {
                        "Address2",
                        "RABC KIMV VIC"});
            table6.AddRow(new string[] {
                        "Address3",
                        ""});
            table6.AddRow(new string[] {
                        "Address4",
                        ""});
            table6.AddRow(new string[] {
                        "Address5",
                        ""});
            table6.AddRow(new string[] {
                        "Home Tell",
                        "038100100"});
            table6.AddRow(new string[] {
                        "Work Tell",
                        "035100100"});
            table6.AddRow(new string[] {
                        "Fax",
                        ""});
            table6.AddRow(new string[] {
                        "Mobile",
                        "0433100100"});
            table6.AddRow(new string[] {
                        "Email",
                        "YDIKUB.KEJKUIGP._test@computershare.com"});
            table6.AddRow(new string[] {
                        "Return Email",
                        ""});
            table6.AddRow(new string[] {
                        "Email Count",
                        "0"});
            table6.AddRow(new string[] {
                        "ABN1",
                        ""});
            table6.AddRow(new string[] {
                        "ABN2",
                        ""});
            table6.AddRow(new string[] {
                        "Type1",
                        ""});
            table6.AddRow(new string[] {
                        "Type2",
                        ""});
            table6.AddRow(new string[] {
                        "Flag1",
                        ""});
            table6.AddRow(new string[] {
                        "Flag1 Desc",
                        ""});
            table6.AddRow(new string[] {
                        "Flag2",
                        ""});
            table6.AddRow(new string[] {
                        "Flag2 Desc",
                        ""});
            table6.AddRow(new string[] {
                        "Flag3",
                        ""});
            table6.AddRow(new string[] {
                        "Flag3 Desc",
                        ""});
            table6.AddRow(new string[] {
                        "Flag4",
                        ""});
            table6.AddRow(new string[] {
                        "Flag4 Desc",
                        ""});
            table6.AddRow(new string[] {
                        "Flag5",
                        "E4"});
            table6.AddRow(new string[] {
                        "Flag5 Desc",
                        "AML CPM Multi Participant"});
            table6.AddRow(new string[] {
                        "Flag6",
                        ""});
            table6.AddRow(new string[] {
                        "Flag6 Desc",
                        ""});
            table6.AddRow(new string[] {
                        "Flag7",
                        ""});
            table6.AddRow(new string[] {
                        "Flag7 Desc",
                        ""});
            table6.AddRow(new string[] {
                        "Flag8",
                        ""});
            table6.AddRow(new string[] {
                        "Flag8 Desc",
                        ""});
            table6.AddRow(new string[] {
                        "Flag9",
                        ""});
            table6.AddRow(new string[] {
                        "Flag9 Desc",
                        ""});
#line 107
 testRunner.Then("In ENS01020 I should see holder extra details as below:", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View Holder Markings-LC")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_LocateAction")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        public virtual void ViewHolderMarkings_LC()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View Holder Markings-LC", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "EN_E_LocateAction",
                        "CPU_AUTO",
                        "FullSmokeTest"});
#line 154
this.ScenarioSetup(scenarioInfo);
#line 156
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 157
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 158
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table7.AddRow(new string[] {
                        "Action",
                        "LC"});
            table7.AddRow(new string[] {
                        "Locate Argument",
                        "20020603EM"});
#line 159
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table7, "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table8.AddRow(new string[] {
                        "Selected Certificate",
                        "20020603EM"});
            table8.AddRow(new string[] {
                        "Certificate Line1",
                        "20020603EM   DEP 02A I0010003610              0 0 CPUNEFOH    RIMUE"});
            table8.AddRow(new string[] {
                        "Certificate Line2",
                        "20020603EM   DEP 02A I0010013861              0 0 YICXFI      ZIUBAIVIBUA"});
#line 163
 testRunner.Then("In ENS01040 I should see Duplicate Certificate details as below:", ((string)(null)), table8, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table9.AddRow(new string[] {
                        "Action",
                        "LCC"});
            table9.AddRow(new string[] {
                        "Locate Argument",
                        "20020603EM/DEP/02A/I0100007525"});
#line 168
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table9, "When ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table10.AddRow(new string[] {
                        "HIN",
                        "I0100007525"});
            table10.AddRow(new string[] {
                        "Page1 Line1",
                        "DEP/DEFERRED EMP SHARE PLAN - AU"});
            table10.AddRow(new string[] {
                        "Page1 Line2",
                        "02A 20020603EM   04/06/02             0    02A 20020604EP   04/06/02             " +
                            " 0"});
            table10.AddRow(new string[] {
                        "Page1 Line3",
                        "02A 20020704EP   04/07/02             0    02A 20020805EP   05/08/02             " +
                            " 0"});
            table10.AddRow(new string[] {
                        "Page2 Line1",
                        "DEP/DEFERRED EMP SHARE PLAN - AU   Cont\'d"});
            table10.AddRow(new string[] {
                        "Page2 Line2",
                        "08A 20090512EP   12/05/09             0    08A 20090612EP   12/06/09             " +
                            " 0"});
            table10.AddRow(new string[] {
                        "Page2 Line3",
                        "09A 20090828EM   28/08/09             0    09A 20090914EP   14/09/09             " +
                            " 0"});
#line 172
 testRunner.Then("In ENS01012 I should see Certificate details as below:", ((string)(null)), table10, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View Holder Markings-LE")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_LocateAction")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        public virtual void ViewHolderMarkings_LE()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View Holder Markings-LE", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "EN_E_LocateAction",
                        "CPU_AUTO"});
#line 186
this.ScenarioSetup(scenarioInfo);
#line 188
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 189
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 190
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table11.AddRow(new string[] {
                        "Action",
                        "LE"});
            table11.AddRow(new string[] {
                        "Locate Argument",
                        "20020603EM/DEP/02A/I0100007525"});
#line 191
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table11, "And ");
#line 195
 testRunner.Then("In ENS01042 I should see Certificate Details as Cert1 \"02A 20020603EM   04/06/02 " +
                    "            0 | 07/07/04 ESTRS 1785/10764477           749-\"  and Cert2 \"02A 200" +
                    "20604EP   04/06/02             0 | 07/07/04 ESTRS 1785/10764477            63-\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table12.AddRow(new string[] {
                        "Action",
                        "LEC"});
            table12.AddRow(new string[] {
                        "Locate Argument",
                        "20020603EM/DEP/02A/I0100007525"});
#line 196
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table12, "When ");
#line 200
 testRunner.Then("In ENS01042 I should see Certificate Details as Cert1 \"02A 20020603EM   04/06/02 " +
                    "            0 | 07/07/04 ESTRS 1785/10764477           749-\"  and Cert2 \"02A 200" +
                    "20604EP   04/06/02             0 | 07/07/04 ESTRS 1785/10764477            63-\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View Domicile Code")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_LocateAction")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        public virtual void ViewDomicileCode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View Domicile Code", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "EN_E_LocateAction",
                        "CPU_AUTO"});
#line 206
this.ScenarioSetup(scenarioInfo);
#line 208
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 209
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 210
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table13.AddRow(new string[] {
                        "Action",
                        "LD"});
            table13.AddRow(new string[] {
                        "Locate Argument",
                        "GBP"});
#line 211
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table13, "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table14.AddRow(new string[] {
                        "HIN",
                        "I0030259823"});
            table14.AddRow(new string[] {
                        "Type",
                        "IND"});
            table14.AddRow(new string[] {
                        "Post Code",
                        "GBR"});
            table14.AddRow(new string[] {
                        "TAX Code",
                        ""});
            table14.AddRow(new string[] {
                        "TFN Desc",
                        "Non-Res"});
            table14.AddRow(new string[] {
                        "ABN Desc",
                        "Non-Res"});
            table14.AddRow(new string[] {
                        "Group",
                        ""});
            table14.AddRow(new string[] {
                        "Var field",
                        ""});
            table14.AddRow(new string[] {
                        "Broker Code",
                        "60109"});
            table14.AddRow(new string[] {
                        "Register",
                        ""});
            table14.AddRow(new string[] {
                        "Key Modifier",
                        ""});
            table14.AddRow(new string[] {
                        "DPID",
                        ""});
            table14.AddRow(new string[] {
                        "Alternate ID",
                        ""});
            table14.AddRow(new string[] {
                        "Key",
                        "APMO        KIFOP VITOD"});
            table14.AddRow(new string[] {
                        "Name",
                        "MR KIFOP VITOD APMO,"});
            table14.AddRow(new string[] {
                        "Address1",
                        "25 YLICHBEL CLOSE"});
            table14.AddRow(new string[] {
                        "Address2",
                        "YAMNUUY KIXGD YE471BI"});
            table14.AddRow(new string[] {
                        "Address3",
                        "AWEGUJ RAXCHUY"});
            table14.AddRow(new string[] {
                        "Address4",
                        ""});
            table14.AddRow(new string[] {
                        "Address5",
                        ""});
            table14.AddRow(new string[] {
                        "Deceased",
                        "N"});
            table14.AddRow(new string[] {
                        "Exception",
                        ""});
            table14.AddRow(new string[] {
                        "Suppress",
                        "N"});
            table14.AddRow(new string[] {
                        "Ret Mail",
                        ""});
            table14.AddRow(new string[] {
                        "A/Report",
                        "R"});
            table14.AddRow(new string[] {
                        "AR Nominated Text",
                        "(Default)"});
            table14.AddRow(new string[] {
                        "Birth Date",
                        ""});
            table14.AddRow(new string[] {
                        "Stop Trade",
                        "N"});
            table14.AddRow(new string[] {
                        "Div Source",
                        "D"});
            table14.AddRow(new string[] {
                        "Residency",
                        ""});
            table14.AddRow(new string[] {
                        "Var Flag1",
                        ""});
            table14.AddRow(new string[] {
                        "Var Flag2",
                        ""});
            table14.AddRow(new string[] {
                        "Var Flag3",
                        ""});
            table14.AddRow(new string[] {
                        "Var Flag4",
                        ""});
            table14.AddRow(new string[] {
                        "Var Flag5",
                        ""});
            table14.AddRow(new string[] {
                        "Warning1",
                        "Overseas domicile"});
            table14.AddRow(new string[] {
                        "Warning2",
                        "Payee instruction direct/bulk"});
            table14.AddRow(new string[] {
                        "Warning3",
                        "Nil holding on trading classes"});
            table14.AddRow(new string[] {
                        "Warning4",
                        "Holder Extra details present"});
            table14.AddRow(new string[] {
                        "Warning5",
                        "ESS Participant"});
            table14.AddRow(new string[] {
                        "Warning6",
                        "Shareholder Review"});
            table14.AddRow(new string[] {
                        "Restrict Class info",
                        "* NOTICE 03/03/2014 *"});
#line 215
 testRunner.Then("In ENS01001 I should see holder details as below:", ((string)(null)), table14, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table15.AddRow(new string[] {
                        "Action",
                        "LD"});
            table15.AddRow(new string[] {
                        "Locate Argument",
                        "USA"});
#line 259
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table15, "When ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table16.AddRow(new string[] {
                        "HIN",
                        "I0030277988"});
            table16.AddRow(new string[] {
                        "Type",
                        "IND"});
            table16.AddRow(new string[] {
                        "Post Code",
                        "USA"});
            table16.AddRow(new string[] {
                        "TAX Code",
                        ""});
            table16.AddRow(new string[] {
                        "TFN Desc",
                        "Non-Res"});
            table16.AddRow(new string[] {
                        "ABN Desc",
                        "Non-Res"});
            table16.AddRow(new string[] {
                        "Group",
                        ""});
            table16.AddRow(new string[] {
                        "Var field",
                        ""});
            table16.AddRow(new string[] {
                        "Broker Code",
                        "60109"});
            table16.AddRow(new string[] {
                        "Register",
                        ""});
            table16.AddRow(new string[] {
                        "Key Modifier",
                        ""});
            table16.AddRow(new string[] {
                        "DPID",
                        ""});
            table16.AddRow(new string[] {
                        "Alternate ID",
                        ""});
            table16.AddRow(new string[] {
                        "Key",
                        "AESS        TEST  AUTOMAEVENT"});
            table16.AddRow(new string[] {
                        "Name",
                        "MR TEST AUTOMATION EVENT AESS"});
            table16.AddRow(new string[] {
                        "Address1",
                        "12 GWOZQETZ ROAD"});
            table16.AddRow(new string[] {
                        "Address2",
                        "ENNUBE NORTH VIC"});
            table16.AddRow(new string[] {
                        "Address3",
                        ""});
            table16.AddRow(new string[] {
                        "Address4",
                        ""});
            table16.AddRow(new string[] {
                        "Address5",
                        ""});
            table16.AddRow(new string[] {
                        "Deceased",
                        "N"});
            table16.AddRow(new string[] {
                        "Exception",
                        ""});
            table16.AddRow(new string[] {
                        "Suppress",
                        "N"});
            table16.AddRow(new string[] {
                        "Ret Mail",
                        ""});
            table16.AddRow(new string[] {
                        "A/Report",
                        "R"});
            table16.AddRow(new string[] {
                        "AR Nominated Text",
                        "(Default)"});
            table16.AddRow(new string[] {
                        "Birth Date",
                        ""});
            table16.AddRow(new string[] {
                        "Stop Trade",
                        "N"});
            table16.AddRow(new string[] {
                        "Div Source",
                        "D"});
            table16.AddRow(new string[] {
                        "Residency",
                        ""});
            table16.AddRow(new string[] {
                        "Var Flag1",
                        ""});
            table16.AddRow(new string[] {
                        "Var Flag2",
                        ""});
            table16.AddRow(new string[] {
                        "Var Flag3",
                        ""});
            table16.AddRow(new string[] {
                        "Var Flag4",
                        ""});
            table16.AddRow(new string[] {
                        "Var Flag5",
                        ""});
            table16.AddRow(new string[] {
                        "Warning1",
                        "Overseas domicile"});
            table16.AddRow(new string[] {
                        "Warning2",
                        "Payee instruction direct/bulk"});
            table16.AddRow(new string[] {
                        "Warning3",
                        "Holder Extra details present"});
            table16.AddRow(new string[] {
                        "Warning4",
                        "ESS Participant"});
            table16.AddRow(new string[] {
                        "Warning5",
                        "Shareholder Review"});
            table16.AddRow(new string[] {
                        "Warning6",
                        ""});
            table16.AddRow(new string[] {
                        "Restrict Class info",
                        "* NOTICE 03/03/2014 *"});
#line 263
 testRunner.Then("In ENS01001 I should see holder details as below:", ((string)(null)), table16, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View Register Details -LR")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_LocateAction")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        public virtual void ViewRegisterDetails_LR()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View Register Details -LR", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "EN_E_LocateAction",
                        "CPU_AUTO"});
#line 312
this.ScenarioSetup(scenarioInfo);
#line 314
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 315
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 316
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table17.AddRow(new string[] {
                        "Action",
                        "LR"});
            table17.AddRow(new string[] {
                        "Locate Argument",
                        "20020603EM/DEP/02A/I0100007550"});
#line 317
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table17, "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table18.AddRow(new string[] {
                        "HIN",
                        "I0100007550"});
            table18.AddRow(new string[] {
                        "Line1",
                        "DEP/DEFERRED EMP SHARE PLAN - AU"});
            table18.AddRow(new string[] {
                        "Line2",
                        "02A 20020603EM   03/06/02 ESAWB 1338/10457471           1498"});
            table18.AddRow(new string[] {
                        "Line3",
                        "04/07/13 ESTTS 4218/  964437           1498-                      SCANAL"});
            table18.AddRow(new string[] {
                        "Line4",
                        "*Certificate Balance             0"});
            table18.AddRow(new string[] {
                        "Line5",
                        "02A 20020604EP   04/06/02 ESAWP 1341/10456518            210"});
            table18.AddRow(new string[] {
                        "Line6",
                        "04/07/13 ESTTS 4218/  964437            210-                      SCANAL"});
#line 321
 testRunner.Then("In ENS01013 I should see Register details as below:", ((string)(null)), table18, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table19.AddRow(new string[] {
                        "Action",
                        "LRC"});
            table19.AddRow(new string[] {
                        "Locate Argument",
                        "20020603EM/DEP/02A/I0100007550"});
#line 330
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table19, "When ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table20.AddRow(new string[] {
                        "HIN",
                        "I0100007550"});
            table20.AddRow(new string[] {
                        "Line1",
                        "DEP/DEFERRED EMP SHARE PLAN - AU"});
            table20.AddRow(new string[] {
                        "Line2",
                        "02A 20020603EM   03/06/02 ESAWB 1338/10457471           1498"});
            table20.AddRow(new string[] {
                        "Line3",
                        "04/07/13 ESTTS 4218/  964437           1498-                      SCANAL"});
            table20.AddRow(new string[] {
                        "Line4",
                        "*Certificate Balance             0"});
            table20.AddRow(new string[] {
                        "Line5",
                        "02A 20020604EP   04/06/02 ESAWP 1341/10456518            210"});
            table20.AddRow(new string[] {
                        "Line6",
                        "04/07/13 ESTTS 4218/  964437            210-                      SCANAL"});
#line 334
 testRunner.Then("In ENS01013 I should see Register details as below:", ((string)(null)), table20, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View Transactions Online -LT")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_LocateAction")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        public virtual void ViewTransactionsOnline_LT()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View Transactions Online -LT", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "EN_E_LocateAction",
                        "CPU_AUTO"});
#line 348
this.ScenarioSetup(scenarioInfo);
#line 350
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 351
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 352
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table21.AddRow(new string[] {
                        "Action",
                        "LT"});
            table21.AddRow(new string[] {
                        "Locate Argument",
                        "4395/12606657"});
#line 353
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table21, "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table22.AddRow(new string[] {
                        "Run",
                        "4395"});
            table22.AddRow(new string[] {
                        "Tran No",
                        "12606657"});
            table22.AddRow(new string[] {
                        "Tran Code",
                        "ESLAU"});
            table22.AddRow(new string[] {
                        "Tran Desc",
                        "LAPSE - AUTO - UNVEST"});
            table22.AddRow(new string[] {
                        "HIN",
                        "I0030213831"});
            table22.AddRow(new string[] {
                        "Line1",
                        "DLA/09A 20091112EE           200000 28/02/15"});
            table22.AddRow(new string[] {
                        "Line2",
                        "*        200000"});
#line 357
 testRunner.Then("In ENS01014 I should see Balance Transaction as below:", ((string)(null)), table22, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table23.AddRow(new string[] {
                        "Action",
                        "LS"});
            table23.AddRow(new string[] {
                        "Locate Argument",
                        "1253/84631"});
#line 366
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table23, "When ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table24.AddRow(new string[] {
                        "Name Key",
                        "RIXYE       KIXP        20000"});
            table24.AddRow(new string[] {
                        "HIN",
                        "I0100007550"});
            table24.AddRow(new string[] {
                        "Holder Type",
                        "EMP"});
            table24.AddRow(new string[] {
                        "Name",
                        "MR KIXP RIXYE"});
            table24.AddRow(new string[] {
                        "Address1",
                        "1 GIXRABISM DRIVE"});
            table24.AddRow(new string[] {
                        "Address2",
                        "2 GIXRABISM DRIVE"});
            table24.AddRow(new string[] {
                        "Address3",
                        "3 GIXRABISM DRIVE"});
            table24.AddRow(new string[] {
                        "Address4",
                        "4 GIXRABISM DRIVE"});
            table24.AddRow(new string[] {
                        "Address5",
                        "GIOYPMIO VIC"});
            table24.AddRow(new string[] {
                        "Date first Shareholder",
                        "11/02/2000"});
            table24.AddRow(new string[] {
                        "Date First",
                        "13/02/2001"});
            table24.AddRow(new string[] {
                        "Run",
                        "1253"});
            table24.AddRow(new string[] {
                        "Tran No",
                        "84631"});
            table24.AddRow(new string[] {
                        "Tran Date",
                        "15/01/2002"});
            table24.AddRow(new string[] {
                        "Tran Code",
                        "NAFLG"});
            table24.AddRow(new string[] {
                        "Tran Desc",
                        "NAME & ADDRESS (FLAG CHANGE)"});
            table24.AddRow(new string[] {
                        "Reference",
                        ""});
#line 370
 testRunner.Then("In ENSSTM34 I should see Static Transaction details as below:", ((string)(null)), table24, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 16960: 06_Compare F6,F17,B6.B17")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_LocateAction")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("16960")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        public virtual void TestCase1696006_CompareF6F17B6_B17()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 16960: 06_Compare F6,F17,B6.B17", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "EN_E_LocateAction",
                        "CPU_AUTO",
                        "16960",
                        "FullSmokeTest"});
#line 396
this.ScenarioSetup(scenarioInfo);
#line 398
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 399
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 400
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table25.AddRow(new string[] {
                        "Action",
                        "F"});
            table25.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 401
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table25, "And ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table26.AddRow(new string[] {
                        "HIN",
                        "X0012160437"});
            table26.AddRow(new string[] {
                        "Type",
                        "COY"});
            table26.AddRow(new string[] {
                        "Post Code",
                        "3150"});
            table26.AddRow(new string[] {
                        "TAX Code",
                        ""});
            table26.AddRow(new string[] {
                        "TFN Desc",
                        "TFN quoted"});
            table26.AddRow(new string[] {
                        "ABN Desc",
                        "Not quoted"});
            table26.AddRow(new string[] {
                        "Group",
                        ""});
            table26.AddRow(new string[] {
                        "Var field",
                        ""});
            table26.AddRow(new string[] {
                        "Broker Code",
                        "1402"});
            table26.AddRow(new string[] {
                        "Register",
                        ""});
            table26.AddRow(new string[] {
                        "Key Modifier",
                        ""});
            table26.AddRow(new string[] {
                        "DPID",
                        "87234156"});
            table26.AddRow(new string[] {
                        "Alternate ID",
                        ""});
            table26.AddRow(new string[] {
                        "Key",
                        "A           DAJXUWORWILMNOGIJP"});
            table26.AddRow(new string[] {
                        "Name",
                        "A DAJXUW ORWILMNOGIJ PTY LTD,"});
            table26.AddRow(new string[] {
                        "Address1",
                        "UNIT 9"});
            table26.AddRow(new string[] {
                        "Address2",
                        "383 WIYZECNAQH ROAD"});
            table26.AddRow(new string[] {
                        "Address3",
                        "WXAT CICILCUM VIC"});
            table26.AddRow(new string[] {
                        "Address4",
                        ""});
            table26.AddRow(new string[] {
                        "Address5",
                        ""});
            table26.AddRow(new string[] {
                        "Deceased",
                        "N"});
            table26.AddRow(new string[] {
                        "Exception",
                        ""});
            table26.AddRow(new string[] {
                        "Suppress",
                        "N"});
            table26.AddRow(new string[] {
                        "Ret Mail",
                        ""});
            table26.AddRow(new string[] {
                        "A/Report",
                        "N"});
            table26.AddRow(new string[] {
                        "AR Nominated Text",
                        "(Nominated)"});
            table26.AddRow(new string[] {
                        "Birth Date",
                        ""});
            table26.AddRow(new string[] {
                        "Stop Trade",
                        "N"});
            table26.AddRow(new string[] {
                        "Div Source",
                        "D"});
            table26.AddRow(new string[] {
                        "Residency",
                        ""});
            table26.AddRow(new string[] {
                        "Var Flag1",
                        ""});
            table26.AddRow(new string[] {
                        "Var Flag2",
                        ""});
            table26.AddRow(new string[] {
                        "Var Flag3",
                        ""});
            table26.AddRow(new string[] {
                        "Var Flag4",
                        ""});
            table26.AddRow(new string[] {
                        "Var Flag5",
                        ""});
            table26.AddRow(new string[] {
                        "Warning1",
                        "Payee instruction direct/bulk"});
            table26.AddRow(new string[] {
                        "Warning2",
                        "Nil holding on trading classes"});
            table26.AddRow(new string[] {
                        "Warning3",
                        "No Annual Report"});
            table26.AddRow(new string[] {
                        "Warning4",
                        ""});
            table26.AddRow(new string[] {
                        "Warning5",
                        ""});
            table26.AddRow(new string[] {
                        "Warning6",
                        ""});
            table26.AddRow(new string[] {
                        "Restrict Class info",
                        "* NOTICE 03/03/2014 *"});
#line 405
 testRunner.Then("In ENS01001 I should see holder details as below:", ((string)(null)), table26, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table27.AddRow(new string[] {
                        "Action",
                        "F"});
            table27.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 449
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table27, "When ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table28.AddRow(new string[] {
                        "Action",
                        "B"});
            table28.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 453
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table28, "When ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table29.AddRow(new string[] {
                        "HIN",
                        "X0012160437"});
            table29.AddRow(new string[] {
                        "Type",
                        "COY"});
            table29.AddRow(new string[] {
                        "Post Code",
                        "3150"});
            table29.AddRow(new string[] {
                        "TAX Code",
                        ""});
            table29.AddRow(new string[] {
                        "TFN Desc",
                        "TFN quoted"});
            table29.AddRow(new string[] {
                        "ABN Desc",
                        "Not quoted"});
            table29.AddRow(new string[] {
                        "Group",
                        ""});
            table29.AddRow(new string[] {
                        "Var field",
                        ""});
            table29.AddRow(new string[] {
                        "Broker Code",
                        "1402"});
            table29.AddRow(new string[] {
                        "Register",
                        ""});
            table29.AddRow(new string[] {
                        "Key Modifier",
                        ""});
            table29.AddRow(new string[] {
                        "DPID",
                        "87234156"});
            table29.AddRow(new string[] {
                        "Alternate ID",
                        ""});
            table29.AddRow(new string[] {
                        "Key",
                        "A           DAJXUWORWILMNOGIJP"});
            table29.AddRow(new string[] {
                        "Name",
                        "A DAJXUW ORWILMNOGIJ PTY LTD,"});
            table29.AddRow(new string[] {
                        "Address1",
                        "UNIT 9"});
            table29.AddRow(new string[] {
                        "Address2",
                        "383 WIYZECNAQH ROAD"});
            table29.AddRow(new string[] {
                        "Address3",
                        "WXAT CICILCUM VIC"});
            table29.AddRow(new string[] {
                        "Address4",
                        ""});
            table29.AddRow(new string[] {
                        "Address5",
                        ""});
            table29.AddRow(new string[] {
                        "Deceased",
                        "N"});
            table29.AddRow(new string[] {
                        "Exception",
                        ""});
            table29.AddRow(new string[] {
                        "Suppress",
                        "N"});
            table29.AddRow(new string[] {
                        "Ret Mail",
                        ""});
            table29.AddRow(new string[] {
                        "A/Report",
                        "N"});
            table29.AddRow(new string[] {
                        "AR Nominated Text",
                        "(Nominated)"});
            table29.AddRow(new string[] {
                        "Birth Date",
                        ""});
            table29.AddRow(new string[] {
                        "Stop Trade",
                        "N"});
            table29.AddRow(new string[] {
                        "Div Source",
                        "D"});
            table29.AddRow(new string[] {
                        "Residency",
                        ""});
            table29.AddRow(new string[] {
                        "Var Flag1",
                        ""});
            table29.AddRow(new string[] {
                        "Var Flag2",
                        ""});
            table29.AddRow(new string[] {
                        "Var Flag3",
                        ""});
            table29.AddRow(new string[] {
                        "Var Flag4",
                        ""});
            table29.AddRow(new string[] {
                        "Var Flag5",
                        ""});
            table29.AddRow(new string[] {
                        "Warning1",
                        "Payee instruction direct/bulk"});
            table29.AddRow(new string[] {
                        "Warning2",
                        "Nil holding on trading classes"});
            table29.AddRow(new string[] {
                        "Warning3",
                        "No Annual Report"});
            table29.AddRow(new string[] {
                        "Warning4",
                        ""});
            table29.AddRow(new string[] {
                        "Warning5",
                        ""});
            table29.AddRow(new string[] {
                        "Warning6",
                        ""});
            table29.AddRow(new string[] {
                        "Restrict Class info",
                        "* NOTICE 03/03/2014 *"});
#line 457
 testRunner.Then("In ENS01001 I should see holder details as below:", ((string)(null)), table29, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table30.AddRow(new string[] {
                        "Action",
                        "F6"});
            table30.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 501
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table30, "When ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table31.AddRow(new string[] {
                        "HIN",
                        "I9999999139"});
            table31.AddRow(new string[] {
                        "Address Line1",
                        "GLOBAL PAYMENTS CONTROL A/C,"});
            table31.AddRow(new string[] {
                        "Address Line2",
                        "C/- COMPUTERSHARE LIMITED"});
            table31.AddRow(new string[] {
                        "Address Line3",
                        "PO BOX 103 ABBOTSFORD VIC 3067"});
            table31.AddRow(new string[] {
                        "Address Line4",
                        ""});
            table31.AddRow(new string[] {
                        "Postcode",
                        "3000"});
#line 505
 testRunner.Then("In ENS01033 I should see Six Holder names and Address as below:", ((string)(null)), table31, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table32.AddRow(new string[] {
                        "Action",
                        "B6"});
            table32.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 513
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table32, "When ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table33.AddRow(new string[] {
                        "HIN",
                        "X0012160437"});
            table33.AddRow(new string[] {
                        "Address Line1",
                        "A DAJXUW ORWILMNOGIJ PTY LTD,"});
            table33.AddRow(new string[] {
                        "Address Line2",
                        "UNIT 9"});
            table33.AddRow(new string[] {
                        "Address Line3",
                        "383 WIYZECNAQH ROAD"});
            table33.AddRow(new string[] {
                        "Address Line4",
                        "WXAT CICILCUM VIC"});
            table33.AddRow(new string[] {
                        "Postcode",
                        "3150"});
#line 517
 testRunner.Then("In ENS01033 I should see Six Holder names and Address as below:", ((string)(null)), table33, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 16955: 01_S action for holder Id")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_LocateAction")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("16955")]
        [NUnit.Framework.TestCaseAttribute("X0054356552", "COY", "X0054364873", null)]
        [NUnit.Framework.TestCaseAttribute("C9999999164", "CNT", "I0030013930", null)]
        [NUnit.Framework.TestCaseAttribute("I0035493034", "IND", "I0035499024", null)]
        [NUnit.Framework.TestCaseAttribute("I0034882762", "JNT", "I0034926514", null)]
        public virtual void TestCase1695501_SActionForHolderId(string hIN, string type, string holderID, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_LocateAction",
                    "NAB_AUTO",
                    "16955"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 16955: 01_S action for holder Id", @__tags);
#line 531
this.ScenarioSetup(scenarioInfo);
#line 532
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 533
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 534
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", hIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table34.AddRow(new string[] {
                        "Action",
                        "A"});
            table34.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 535
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table34, "And ");
#line 539
 testRunner.Then(string.Format("In ENS01001 I should see holder \"{0}\" Holder Type as below", type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table35.AddRow(new string[] {
                        "Action",
                        "F"});
            table35.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 540
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table35, "When ");
#line 544
 testRunner.Then(string.Format("In ENS01001 I should see Holder ID \"{0}\" as below", holderID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table36.AddRow(new string[] {
                        "Action",
                        "B"});
            table36.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 545
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table36, "When ");
#line 549
 testRunner.Then(string.Format("In ENS01001 I should see Holder ID \"{0}\" as below", hIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 16956: 02_Compare S action for holder Name")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_LocateAction")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("16956")]
        [NUnit.Framework.TestCaseAttribute("X0031648505", "S", "US DIRECT CREDIT CONTROL A/C", "I0036136464", null)]
        [NUnit.Framework.TestCaseAttribute("I0031170001", "S", "John", "I0034597324", null)]
        [NUnit.Framework.TestCaseAttribute("X0054356552", "S", "A&G", "C9999999164", null)]
        [NUnit.Framework.TestCaseAttribute("X0050420248", "S", "MR JOHN ANTHONY ADAMS +MRS GILLIAN", "I0035990682", null)]
        [NUnit.Framework.TestCaseAttribute("X0008697868", "S", "MR LESLIE GEORGE AFFORD +", "X0043167731", null)]
        public virtual void TestCase1695602_CompareSActionForHolderName(string hIN, string action, string locateArgument, string holderID, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_LocateAction",
                    "NAB_AUTO",
                    "16956"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 16956: 02_Compare S action for holder Name", @__tags);
#line 564
this.ScenarioSetup(scenarioInfo);
#line 565
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 566
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 567
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 568
  testRunner.And(string.Format("I enter the following details as the Locate action \"{0}\" \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 569
 testRunner.Then(string.Format("In ENS01001 I should see Holder ID \"{0}\" as below", hIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table37.AddRow(new string[] {
                        "Action",
                        "F"});
            table37.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 570
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table37, "When ");
#line 574
 testRunner.Then(string.Format("In ENS01001 I should see Holder ID \"{0}\" as below", holderID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table38.AddRow(new string[] {
                        "Action",
                        "B"});
            table38.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 575
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table38, "When ");
#line 579
 testRunner.Then(string.Format("In ENS01001 I should see Holder ID \"{0}\" as below", hIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 16958: 04_Compare Forward/Backward actions on different screens-H")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_LocateAction")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("16958")]
        [NUnit.Framework.TestCaseAttribute("I0035337890", "H", "X0040122044", "CEN/ENTITLEMENT CPS II 2013 VIC   99999999999               99999999999", "E11/NAB CAPITAL NOTES S/H O VIC   99999999999               99999999999", "HAI/CUM NATIONAL INCOME SEC VIC           156                       156", "NIS/NATIONAL INCOME SECURIT VIC           156                       156", null)]
        [NUnit.Framework.TestCaseAttribute("X0058111708", "H", "I0970061592", "CEN/ENTITLEMENT CPS II 2013 VIC   99999999999               99999999999", "E11/NAB CAPITAL NOTES S/H O VIC   99999999999               99999999999", "E4 /ISX ENTITLEMENT CLASS   VIC            50                        50", "EVA/EVA SHARE OFFER         02A             0                         0", null)]
        public virtual void TestCase1695804_CompareForwardBackwardActionsOnDifferentScreens_H(string hIN, string action, string locateArgument, string line1, string line2, string line3, string line4, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_LocateAction",
                    "NAB_AUTO",
                    "16958"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 16958: 04_Compare Forward/Backward actions on different screens-H", @__tags);
#line 594
this.ScenarioSetup(scenarioInfo);
#line 595
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 596
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 597
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 598
  testRunner.And(string.Format("I enter the following details as the Locate action \"{0}\" \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 599
 testRunner.Then(string.Format("In ENS01007 I should see Holdings details as below \"{0}\" \"{1}\" \"{2}\" \"{3}\"", line1, line2, line3, line4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table39.AddRow(new string[] {
                        "Action",
                        "F"});
            table39.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 600
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table39, "When ");
#line 604
 testRunner.Then(string.Format("In ENS01001 I should see Holder ID \"{0}\" as below", hIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table40.AddRow(new string[] {
                        "Action",
                        "B"});
            table40.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 605
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table40, "When ");
#line 609
 testRunner.Then(string.Format("In ENS01001 I should see Holder ID \"{0}\" as below", locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 16958: 04_Compare Forward/Backward actions on different screens-DH")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_LocateAction")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("16958")]
        [NUnit.Framework.TestCaseAttribute("I0035337890", "DH", "X0040122044", "16/02/2015", "DIRECT CREDIT", "NIST", "HA153", "PAYMENT", "158.26", "158.26", null)]
        [NUnit.Framework.TestCaseAttribute("X0058111708", "DH", "I0970061592", "16/12/2014", "DIRECT CREDIT", "DIVP", "NZ152", "PAYMENT", "99.00", "99.00", null)]
        public virtual void TestCase1695804_CompareForwardBackwardActionsOnDifferentScreens_DH(string hIN, string action, string locateArgument, string payDate, string payMethod, string code, string payAccount, string payType, string grossAmount, string nettAmount, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_LocateAction",
                    "NAB_AUTO",
                    "16958"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 16958: 04_Compare Forward/Backward actions on different screens-DH", @__tags);
#line 621
this.ScenarioSetup(scenarioInfo);
#line 622
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 623
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 624
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 625
  testRunner.And(string.Format("I enter the following details as the Locate action \"{0}\" \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 626
 testRunner.Then(string.Format("In ENSDIV01 I should see Dividend History as below \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" " +
                        "\"{5}\" \"{6}\"", payDate, payMethod, code, payAccount, payType, grossAmount, nettAmount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table41.AddRow(new string[] {
                        "Action",
                        "F"});
            table41.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 627
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table41, "When ");
#line 631
 testRunner.Then(string.Format("In ENS01001 I should see Holder ID \"{0}\" as below", hIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table42.AddRow(new string[] {
                        "Action",
                        "B"});
            table42.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 632
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table42, "When ");
#line 636
 testRunner.Then(string.Format("In ENS01001 I should see Holder ID \"{0}\" as below", locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 16959: 05_Compare Action SS")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_LocateAction")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("16959")]
        [NUnit.Framework.TestCaseAttribute("I0031170001", "01", "", null)]
        [NUnit.Framework.TestCaseAttribute("I0031178681", "05", "", null)]
        [NUnit.Framework.TestCaseAttribute("I0031188920", "10", "", null)]
        [NUnit.Framework.TestCaseAttribute("X0033311389", "17", "", null)]
        public virtual void TestCase1695905_CompareActionSS(string hIN, string action, string locateArgument, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_LocateAction",
                    "NAB_AUTO",
                    "16959"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 16959: 05_Compare Action SS", @__tags);
#line 648
this.ScenarioSetup(scenarioInfo);
#line 649
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 650
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 651
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table43.AddRow(new string[] {
                        "Action",
                        "SS"});
            table43.AddRow(new string[] {
                        "Locate Argument",
                        "Jones"});
#line 652
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table43, "And ");
#line 656
 testRunner.Then("In ENS01036 I should see Holder details as HIN \"I0031170001\" NameAddress \"JOHN HA" +
                    "MILTON NOMINEES PTY LTD | <SUPERANNUATION FUND A/C>, | 12 ...\" Postcode \"3194\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 657
 testRunner.When(string.Format("I enter the following details as the Locate action \"{0}\" \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 658
 testRunner.Then(string.Format("In ENS01001 I should see Holder ID \"{0}\" as below", hIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17017: 01_Test LT Locate Transactions action")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_LocateAction")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17017")]
        public virtual void TestCase1701701_TestLTLocateTransactionsAction()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17017: 01_Test LT Locate Transactions action", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "EN_E_LocateAction",
                        "NAB_AUTO",
                        "17017"});
#line 673
this.ScenarioSetup(scenarioInfo);
#line 675
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 676
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 677
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table44.AddRow(new string[] {
                        "Action",
                        "LT"});
            table44.AddRow(new string[] {
                        "Locate Argument",
                        "7647/74354347"});
#line 678
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table44, "And ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table45.AddRow(new string[] {
                        "Run",
                        "7647"});
            table45.AddRow(new string[] {
                        "Tran No",
                        "74354347"});
            table45.AddRow(new string[] {
                        "Tran Code",
                        "ESLAV"});
            table45.AddRow(new string[] {
                        "Tran Desc",
                        "LAPSE BY EXPIRY VESTED"});
            table45.AddRow(new string[] {
                        "HIN",
                        "I0070036924"});
            table45.AddRow(new string[] {
                        "Line1",
                        "PRS/08E 20080530EE             1000 30/11/11"});
            table45.AddRow(new string[] {
                        "Line2",
                        "*          1000"});
#line 682
 testRunner.Then("In ENS01014 I should see Balance Transaction as below:", ((string)(null)), table45, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17054: 02_\'LS\' Locate static transaction action-ENSSTM34")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_LocateAction")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17054")]
        [NUnit.Framework.TestCaseAttribute("DECAD", "LS", "7646/4167434", "7646", "4167434", "11/05/2015", "DECEASED NOTING (ADD)", "/0321457", null)]
        [NUnit.Framework.TestCaseAttribute("PWRAD", "LS", "7646/321459", "7646", "321459", "11/05/2015", "POWER OF ATTORNEY (ADD)", "", null)]
        [NUnit.Framework.TestCaseAttribute("INFAD", "LS", "7646/321462", "7646", "321462", "11/05/2015", "FREE FORM INFORMATION (ADD)", "", null)]
        public virtual void TestCase1705402_LSLocateStaticTransactionAction_ENSSTM34(string tranCode, string action, string locateArgument, string run, string tran, string date, string tranDesc, string reference, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_LocateAction",
                    "NAB_AUTO",
                    "17054"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17054: 02_\'LS\' Locate static transaction action-ENSSTM34", @__tags);
#line 697
this.ScenarioSetup(scenarioInfo);
#line 698
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 699
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 700
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 701
  testRunner.And(string.Format("I enter the following details as the Locate action \"{0}\" \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 702
 testRunner.Then(string.Format("In ENSSTM34 I should see Static Transaction details as below \"{0}\" \"{1}\" \"{2}\" \"{" +
                        "3}\" \"{4}\" \"{5}\"", run, tran, date, tranCode, tranDesc, reference), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17054: 02_\'LS\' Locate static transaction action-ENSSTM06")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_LocateAction")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17054")]
        public virtual void TestCase1705402_LSLocateStaticTransactionAction_ENSSTM06()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17054: 02_\'LS\' Locate static transaction action-ENSSTM06", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "EN_E_LocateAction",
                        "NAB_AUTO",
                        "17054"});
#line 716
this.ScenarioSetup(scenarioInfo);
#line 717
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 718
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 719
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table46.AddRow(new string[] {
                        "Action",
                        "LS"});
            table46.AddRow(new string[] {
                        "Locate Argument",
                        "7647/324325"});
#line 720
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table46, "And ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table47.AddRow(new string[] {
                        "TranCode",
                        "EXCHG"});
            table47.AddRow(new string[] {
                        "TranDesc",
                        "EXTRA HOLDER DETAILS CHANGE"});
            table47.AddRow(new string[] {
                        "Run",
                        "7647"});
            table47.AddRow(new string[] {
                        "TranNo",
                        "324325"});
            table47.AddRow(new string[] {
                        "NameKey",
                        "ST          TRANSACODE  TEST"});
            table47.AddRow(new string[] {
                        "HIN",
                        "I0070036916"});
            table47.AddRow(new string[] {
                        "HolderType",
                        "DEC"});
            table47.AddRow(new string[] {
                        "PostCode",
                        "3000"});
            table47.AddRow(new string[] {
                        "NameAddress1",
                        "ESTATE LATE TRANSACTION CODE"});
            table47.AddRow(new string[] {
                        "OldExtraID",
                        "123456789"});
            table47.AddRow(new string[] {
                        "NewExtraID",
                        "123456789"});
            table47.AddRow(new string[] {
                        "OldHomePh",
                        "03123456789"});
            table47.AddRow(new string[] {
                        "NewHomePh",
                        "03123456789"});
            table47.AddRow(new string[] {
                        "OldWorkPh",
                        "03987654213"});
            table47.AddRow(new string[] {
                        "NewWorkPh",
                        "03987654213"});
            table47.AddRow(new string[] {
                        "OldFax",
                        "03696854789"});
            table47.AddRow(new string[] {
                        "NewFax",
                        "03696854789"});
            table47.AddRow(new string[] {
                        "OldMobile",
                        "0430834786"});
            table47.AddRow(new string[] {
                        "NewMobile",
                        "0430834786"});
            table47.AddRow(new string[] {
                        "OldAbn",
                        ""});
            table47.AddRow(new string[] {
                        "NewAbn",
                        ""});
            table47.AddRow(new string[] {
                        "OldEmail1",
                        "sam.syed@test.com"});
            table47.AddRow(new string[] {
                        "NewEmail1",
                        "sam.syed@test.com"});
            table47.AddRow(new string[] {
                        "OldReturnDate",
                        "No date"});
            table47.AddRow(new string[] {
                        "NewReturnDate",
                        "No date"});
            table47.AddRow(new string[] {
                        "OldAmlDate",
                        "No date"});
            table47.AddRow(new string[] {
                        "NewAmlDate",
                        "No date"});
            table47.AddRow(new string[] {
                        "OldAmlTime",
                        ":"});
            table47.AddRow(new string[] {
                        "NewAmlTime",
                        ":"});
            table47.AddRow(new string[] {
                        "OldAmlFlag1",
                        "AB"});
            table47.AddRow(new string[] {
                        "NewAmlFlag1",
                        "AB"});
            table47.AddRow(new string[] {
                        "OldAmlFlag2",
                        "W9"});
            table47.AddRow(new string[] {
                        "NewAmlFlag2",
                        "W9"});
            table47.AddRow(new string[] {
                        "OldAmlFlag3",
                        "EF"});
            table47.AddRow(new string[] {
                        "NewAmlFlag3",
                        "EF"});
            table47.AddRow(new string[] {
                        "OldAmlFlag4",
                        "Y"});
            table47.AddRow(new string[] {
                        "NewAmlFlag4",
                        "Y"});
            table47.AddRow(new string[] {
                        "OldAmlFlag5",
                        "E1"});
            table47.AddRow(new string[] {
                        "NewAmlFlag5",
                        "E1"});
            table47.AddRow(new string[] {
                        "OldAmlFlag6",
                        "FG"});
            table47.AddRow(new string[] {
                        "NewAmlFlag6",
                        "FG"});
            table47.AddRow(new string[] {
                        "OldAmlFlag7",
                        "AP"});
            table47.AddRow(new string[] {
                        "NewAmlFlag7",
                        "AP"});
            table47.AddRow(new string[] {
                        "OldAmlFlag8",
                        "TR"});
            table47.AddRow(new string[] {
                        "NewAmlFlag8",
                        "TR"});
            table47.AddRow(new string[] {
                        "OldAmlFlag9",
                        "N"});
            table47.AddRow(new string[] {
                        "NewAmlFlag9",
                        "N"});
            table47.AddRow(new string[] {
                        "OldCommMethod1",
                        ""});
            table47.AddRow(new string[] {
                        "NewCommMethod1",
                        "O"});
            table47.AddRow(new string[] {
                        "OldCommMethod2",
                        "O"});
            table47.AddRow(new string[] {
                        "NewCommMethod2",
                        "O"});
            table47.AddRow(new string[] {
                        "OldCommMethod3",
                        ""});
            table47.AddRow(new string[] {
                        "NewCommMethod3",
                        "O"});
            table47.AddRow(new string[] {
                        "OldCommMethod4",
                        ""});
            table47.AddRow(new string[] {
                        "NewCommMethod4",
                        "O"});
            table47.AddRow(new string[] {
                        "OldCommMethod5",
                        ""});
            table47.AddRow(new string[] {
                        "NewCommMethod5",
                        "O"});
            table47.AddRow(new string[] {
                        "OldCommMethod6",
                        ""});
            table47.AddRow(new string[] {
                        "NewCommMethod6",
                        "O"});
            table47.AddRow(new string[] {
                        "OldCommMethod7",
                        ""});
            table47.AddRow(new string[] {
                        "NewCommMethod7",
                        "O"});
            table47.AddRow(new string[] {
                        "OldCommMethod8",
                        ""});
            table47.AddRow(new string[] {
                        "NewCommMethod8",
                        "O"});
            table47.AddRow(new string[] {
                        "OldCommMethod9",
                        ""});
            table47.AddRow(new string[] {
                        "NewCommMethod9",
                        "O"});
            table47.AddRow(new string[] {
                        "OldCommMethod10",
                        ""});
            table47.AddRow(new string[] {
                        "NewCommMethod10",
                        ""});
#line 724
 testRunner.Then("In ENSSTM06 I should see Static Transaction details as below:", ((string)(null)), table47, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17054: 02_\'LS\' Locate static transaction action-ENSSTM01")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_LocateAction")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17054")]
        public virtual void TestCase1705402_LSLocateStaticTransactionAction_ENSSTM01()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17054: 02_\'LS\' Locate static transaction action-ENSSTM01", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "EN_E_LocateAction",
                        "NAB_AUTO",
                        "17054"});
#line 799
this.ScenarioSetup(scenarioInfo);
#line 800
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 801
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 802
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table48.AddRow(new string[] {
                        "Action",
                        "LS"});
            table48.AddRow(new string[] {
                        "Locate Argument",
                        "7647/658794"});
#line 803
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table48, "And ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table49.AddRow(new string[] {
                        "OldName",
                        "ESTATE LATE TRANSACTION CODE"});
            table49.AddRow(new string[] {
                        "OldAddressLine1",
                        "TEST 1,"});
            table49.AddRow(new string[] {
                        "OldAddressLine2",
                        "C/- 452 JHONSTON ST,"});
            table49.AddRow(new string[] {
                        "OldAddressLine3",
                        "ABBOTSFORD"});
            table49.AddRow(new string[] {
                        "OldAddressLine4",
                        "MELBOURNE"});
            table49.AddRow(new string[] {
                        "NewName",
                        "ESTATE LATE TRANSACTION CODE"});
            table49.AddRow(new string[] {
                        "NewAddressLine1",
                        "TEST 1,"});
            table49.AddRow(new string[] {
                        "NewAddressLine2",
                        "C/- 452 JHONSTON ST,"});
            table49.AddRow(new string[] {
                        "NewAddressLine3",
                        "ABBOTSFORD"});
            table49.AddRow(new string[] {
                        "NewAddressLine4",
                        "MELBOURNE"});
            table49.AddRow(new string[] {
                        "OldPostcode",
                        "3000"});
            table49.AddRow(new string[] {
                        "NewPostcode",
                        "3000"});
            table49.AddRow(new string[] {
                        "OldGroup",
                        ""});
            table49.AddRow(new string[] {
                        "NewGroup",
                        ""});
            table49.AddRow(new string[] {
                        "OldBrokerCode",
                        ""});
            table49.AddRow(new string[] {
                        "NewBrokerCode",
                        "60254"});
            table49.AddRow(new string[] {
                        "OldAccessCode",
                        ""});
            table49.AddRow(new string[] {
                        "NewAccessCode",
                        ""});
            table49.AddRow(new string[] {
                        "OldKeyModifier",
                        ""});
            table49.AddRow(new string[] {
                        "NewKeyModifier",
                        ""});
            table49.AddRow(new string[] {
                        "OldVarField",
                        ""});
            table49.AddRow(new string[] {
                        "NewVarField",
                        "EFG"});
            table49.AddRow(new string[] {
                        "OldReturnMail",
                        ""});
            table49.AddRow(new string[] {
                        "NewReturnMail",
                        "01/15"});
            table49.AddRow(new string[] {
                        "OldAlternateID",
                        ""});
            table49.AddRow(new string[] {
                        "NewAlternateID",
                        "AC12345678"});
            table49.AddRow(new string[] {
                        "OldTaxFile",
                        "Not quoted"});
            table49.AddRow(new string[] {
                        "NewTaxFile",
                        "Not quoted"});
            table49.AddRow(new string[] {
                        "OldBirthDay",
                        ""});
            table49.AddRow(new string[] {
                        "NewBirthDay",
                        "01/01/2015"});
            table49.AddRow(new string[] {
                        "OldHolderType",
                        "DEC"});
            table49.AddRow(new string[] {
                        "NewHolderType",
                        "DEC"});
            table49.AddRow(new string[] {
                        "OldTaxCode",
                        ""});
            table49.AddRow(new string[] {
                        "NewTaxCode",
                        ""});
            table49.AddRow(new string[] {
                        "OldRegister",
                        ""});
            table49.AddRow(new string[] {
                        "NewRegister",
                        ""});
            table49.AddRow(new string[] {
                        "OldABN1",
                        ""});
            table49.AddRow(new string[] {
                        "NewABN1",
                        ""});
            table49.AddRow(new string[] {
                        "OldDeceased",
                        "Y"});
            table49.AddRow(new string[] {
                        "NewDeceased",
                        "Y"});
            table49.AddRow(new string[] {
                        "OldException",
                        ""});
            table49.AddRow(new string[] {
                        "NewException",
                        "N"});
            table49.AddRow(new string[] {
                        "OldSuppress",
                        "N"});
            table49.AddRow(new string[] {
                        "NewSuppress",
                        "N"});
            table49.AddRow(new string[] {
                        "OldStopTrade",
                        "N"});
            table49.AddRow(new string[] {
                        "NewStopTrade",
                        "N"});
            table49.AddRow(new string[] {
                        "OldAReport",
                        "N"});
            table49.AddRow(new string[] {
                        "NewAReport",
                        "N"});
            table49.AddRow(new string[] {
                        "OldARNom",
                        "N"});
            table49.AddRow(new string[] {
                        "NewARNom",
                        "Y"});
            table49.AddRow(new string[] {
                        "OldDivSource",
                        "D"});
            table49.AddRow(new string[] {
                        "NewDivSource",
                        "D"});
            table49.AddRow(new string[] {
                        "OldResidency",
                        ""});
            table49.AddRow(new string[] {
                        "NewResidency",
                        ""});
            table49.AddRow(new string[] {
                        "OldVarFlag1",
                        ""});
            table49.AddRow(new string[] {
                        "NewVarFlag1",
                        "B"});
            table49.AddRow(new string[] {
                        "OldVarFlag2",
                        ""});
            table49.AddRow(new string[] {
                        "NewVarFlag2",
                        "W9"});
            table49.AddRow(new string[] {
                        "OldVarFlag3",
                        ""});
            table49.AddRow(new string[] {
                        "NewVarFlag3",
                        "W8"});
            table49.AddRow(new string[] {
                        "OldVarFlag4",
                        ""});
            table49.AddRow(new string[] {
                        "NewVarFlag4",
                        "D"});
            table49.AddRow(new string[] {
                        "OldVarFlag5",
                        ""});
            table49.AddRow(new string[] {
                        "NewVarFlag5",
                        "CU"});
#line 807
 testRunner.Then("In ENSSTM01 I should see Static Transaction details as below:", ((string)(null)), table49, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17055: 03_\'LES\' Locate static transaction action for vesting performanc" +
            "e-Test1")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_LocateAction")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17055")]
        public virtual void TestCase1705503_LESLocateStaticTransactionActionForVestingPerformance_Test1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17055: 03_\'LES\' Locate static transaction action for vesting performanc" +
                    "e-Test1", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "EN_E_LocateAction",
                        "NAB_AUTO",
                        "17055"});
#line 879
this.ScenarioSetup(scenarioInfo);
#line 880
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 881
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 882
  testRunner.And("I go to the Enquiry system for \"I0070036924\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table50.AddRow(new string[] {
                        "Action",
                        "LES"});
            table50.AddRow(new string[] {
                        "Locate Argument",
                        "7646/00000002/0001"});
#line 883
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table50, "And ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table51.AddRow(new string[] {
                        "Run",
                        "7646"});
            table51.AddRow(new string[] {
                        "Tran",
                        "2"});
            table51.AddRow(new string[] {
                        "Sequesnce",
                        "1"});
            table51.AddRow(new string[] {
                        "TransactionType",
                        "EVELA"});
            table51.AddRow(new string[] {
                        "TransactionDesc",
                        "ADD ESS EVENT ELECTION"});
            table51.AddRow(new string[] {
                        "Name",
                        "TRANSACTION CODE TEST 2,"});
            table51.AddRow(new string[] {
                        "Address1",
                        "TEST AUTOMATION"});
            table51.AddRow(new string[] {
                        "Address2",
                        "ABBOTSFORD"});
            table51.AddRow(new string[] {
                        "Postcode",
                        "3000"});
            table51.AddRow(new string[] {
                        "HIN",
                        "I0070036924"});
            table51.AddRow(new string[] {
                        "EmployeeID",
                        "0070036924"});
            table51.AddRow(new string[] {
                        "PayrollID",
                        "AUS"});
            table51.AddRow(new string[] {
                        "EmployeeStatus",
                        "E"});
            table51.AddRow(new string[] {
                        "EmpStatusDesc",
                        "CURRENT EMPLOYEE"});
            table51.AddRow(new string[] {
                        "LeaverCode",
                        "EEE"});
            table51.AddRow(new string[] {
                        "LeavercodeDesc",
                        "E DEFAULT"});
            table51.AddRow(new string[] {
                        "Plan",
                        "PRS"});
            table51.AddRow(new string[] {
                        "PlanDesc",
                        "PERFORMANCE RIGHTS"});
            table51.AddRow(new string[] {
                        "Reg",
                        "08E"});
            table51.AddRow(new string[] {
                        "RegDesc",
                        "2008 NZ MOTIVATION & RETENTION"});
            table51.AddRow(new string[] {
                        "Cert",
                        "20080530EE"});
            table51.AddRow(new string[] {
                        "VertingDetailsLine1",
                        "Before/       VP4                        30/11/2010"});
            table51.AddRow(new string[] {
                        "VertingDetailsLine2",
                        "After/                                   30/11/2011"});
#line 887
 testRunner.Then("In ENSESS33 I should see ESS Static Transactions as below:", ((string)(null)), table51, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17055: 03_\'LES\' Locate static transaction action for vesting performanc" +
            "e-Test2")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_LocateAction")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17055")]
        public virtual void TestCase1705503_LESLocateStaticTransactionActionForVestingPerformance_Test2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17055: 03_\'LES\' Locate static transaction action for vesting performanc" +
                    "e-Test2", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "EN_E_LocateAction",
                        "NAB_AUTO",
                        "17055"});
#line 918
this.ScenarioSetup(scenarioInfo);
#line 919
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 920
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 921
  testRunner.And("I go to the Enquiry system for \"I0070036924\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table52.AddRow(new string[] {
                        "Action",
                        "LES"});
            table52.AddRow(new string[] {
                        "Locate Argument",
                        "7646/00000002/0002"});
#line 922
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table52, "And ");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table53.AddRow(new string[] {
                        "Run",
                        "7647"});
            table53.AddRow(new string[] {
                        "Tran",
                        "111111"});
            table53.AddRow(new string[] {
                        "Sequesnce",
                        "1"});
            table53.AddRow(new string[] {
                        "TransactionType",
                        "EVELA"});
            table53.AddRow(new string[] {
                        "TransactionDesc",
                        "ADD ESS EVENT ELECTION"});
            table53.AddRow(new string[] {
                        "Name",
                        "TRANSACTION CODE TEST 2,"});
            table53.AddRow(new string[] {
                        "Address1",
                        "TEST AUTOMATION"});
            table53.AddRow(new string[] {
                        "Address2",
                        "ABBOTSFORD"});
            table53.AddRow(new string[] {
                        "Postcode",
                        "3000"});
            table53.AddRow(new string[] {
                        "HIN",
                        "I0070036924"});
            table53.AddRow(new string[] {
                        "EmployeeID",
                        "0070036924"});
            table53.AddRow(new string[] {
                        "PayrollID",
                        "AUS"});
            table53.AddRow(new string[] {
                        "EmployeeStatus",
                        "E"});
            table53.AddRow(new string[] {
                        "EmpStatusDesc",
                        "CURRENT EMPLOYEE"});
            table53.AddRow(new string[] {
                        "LeaverCode",
                        "EEE"});
            table53.AddRow(new string[] {
                        "LeavercodeDesc",
                        "E DEFAULT"});
            table53.AddRow(new string[] {
                        "Plan",
                        "PRS"});
            table53.AddRow(new string[] {
                        "PlanDesc",
                        "PERFORMANCE RIGHTS"});
            table53.AddRow(new string[] {
                        "Reg",
                        "08E"});
            table53.AddRow(new string[] {
                        "RegDesc",
                        "2008 NZ MOTIVATION & RETENTION"});
            table53.AddRow(new string[] {
                        "Cert",
                        "20080530EE"});
            table53.AddRow(new string[] {
                        "VertingDetailsLine1",
                        "Before/       VP4       006"});
            table53.AddRow(new string[] {
                        "VertingDetailsLine2",
                        "After/                  007"});
#line 926
 testRunner.Then("In ENSESS33 I should see ESS Static Transactions as below:", ((string)(null)), table53, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 16868: 03_Compare matched company Name Filter")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_LocateAction")]
        [NUnit.Framework.CategoryAttribute("16868")]
        [NUnit.Framework.TestCaseAttribute("Test1", "", "LARGE", "LP0001", "LP0002", "LP0003", "LP0004", "LP0005", null)]
        public virtual void TestCase1686803_CompareMatchedCompanyNameFilter(string cOY, string coyID, string coyNameFilter, string ufd1, string ufd2, string ufd3, string ufd4, string ufd5, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_LocateAction",
                    "16868"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 16868: 03_Compare matched company Name Filter", @__tags);
#line 973
this.ScenarioSetup(scenarioInfo);
#line 974
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 975
 testRunner.When(string.Format("In SELCOY01 I Enter the following details as the company selection \"{0}\" \"{1}\"", coyID, coyNameFilter), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "Ufd1",
                        "Ufd2",
                        "Ufd3",
                        "Ufd4",
                        "Ufd5"});
            table54.AddRow(new string[] {
                        string.Format("{0}", ufd1),
                        string.Format("{0}", ufd2),
                        string.Format("{0}", ufd3),
                        string.Format("{0}", ufd4),
                        string.Format("{0}", ufd5)});
#line 976
 testRunner.Then("In SELCOY20 I should see company UFD as:", ((string)(null)), table54, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17987: 01_Participant/Account/Domicile (LD Actions)")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_LocateAction")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17987")]
        [NUnit.Framework.TestCaseAttribute("USA", "I0030013930", "***", "USA", "Non-Res", "Non-Res", "MR THOMAS EGGLESTON ADKINS JR", "LD", null)]
        [NUnit.Framework.TestCaseAttribute("IRL", "C0009905753", "IND", "IRL", "Non-Res", "Non-Res", "MR PETER PATRICK BRANAGAN", "LD", null)]
        [NUnit.Framework.TestCaseAttribute("IND", "C0009905753", "IND", "IRL", "Non-Res", "Non-Res", "MR PETER PATRICK BRANAGAN", "LD", null)]
        [NUnit.Framework.TestCaseAttribute("GBP", "I0035337890", "IND", "GBR", "Non-Res", "Non-Res", "MRS AVRIL V APPLEYARD", "LD", null)]
        [NUnit.Framework.TestCaseAttribute("3000", "C0009913176", "IND", "3000", "Not quoted", "Not quoted", "ARSHAD TEST 1,", "LD", null)]
        public virtual void TestCase1798701_ParticipantAccountDomicileLDActions(string locateArgument, string hIN, string type, string postCode, string tFN, string aBN, string name, string action, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_LocateAction",
                    "NAB_AUTO",
                    "17987"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17987: 01_Participant/Account/Domicile (LD Actions)", @__tags);
#line 990
this.ScenarioSetup(scenarioInfo);
#line 992
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 993
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 994
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 995
  testRunner.And(string.Format("I enter the following details as the Locate action \"{0}\" \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 996
 testRunner.Then(string.Format("In ENS01001 I should see holder details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\"", hIN, type, postCode, tFN, aBN, name), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17989: 01_Markings/Certs Action -ENS01012")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_LocateAction")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17989")]
        [NUnit.Framework.TestCaseAttribute("LC", "23512615", "I0033655983", "CEN/ENTITLEMENT CPS II 2013", "VIC 23512615     04/11/13   99999999849    VIC 87654321ST01 01/06/15             " +
            "10", "VIC 87654321ST02 01/06/15            10    VIC 87654321ST03 01/06/15             " +
            "10", "VIC 87654321ST04 01/06/15            10    VIC 87654321ST05 01/06/15             " +
            "10", "DAM/EMPLOYEE TRUST HELD SHARES", "VIC UNCERTIF\'D   14/11/13          3225", "DBM/EMPLOYEE TRUST HELD SHARES", "VIC UNCERTIF\'D   19/05/14          3545", "DCE/DUMMY EMP CLASS PROJECT MURRAY", "VIC 00003538     04/11/13          3369", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("LCC", "23512615", "I0033655983", "CEN/ENTITLEMENT CPS II 2013", "VIC 23512615     04/11/13   99999999849", "DAM/EMPLOYEE TRUST HELD SHARES", "VIC UNCERTIF\'D   14/11/13          3225", "DBM/EMPLOYEE TRUST HELD SHARES", "VIC UNCERTIF\'D   19/05/14          3545", "DCE/DUMMY EMP CLASS PROJECT MURRAY", "VIC 00003538     04/11/13          3369", "DEM/EMPLOYEE TRUST HELD SHARES", "VIC UNCERTIF\'D   06/06/13          3225", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("LCM", "87654321", "I0033655983", "CEN/ENTITLEMENT CPS II 2013", "VIC 87654321ST01 01/06/15            10    VIC 87654321ST02 01/06/15             " +
            "10", "VIC 87654321ST03 01/06/15            10    VIC 87654321ST04 01/06/15             " +
            "10", "VIC 87654321ST05 01/06/15            10", "", "", "", "", "", "", "", "", "", null)]
        public virtual void TestCase1798901_MarkingsCertsAction_ENS01012(
                    string action, 
                    string locateArgument, 
                    string hIN, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string line6, 
                    string line7, 
                    string line8, 
                    string line9, 
                    string line10, 
                    string line11, 
                    string line12, 
                    string line13, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_LocateAction",
                    "NAB_AUTO",
                    "17989"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17989: 01_Markings/Certs Action -ENS01012", @__tags);
#line 1011
this.ScenarioSetup(scenarioInfo);
#line 1012
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1013
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1014
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1015
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1016
 testRunner.Then(string.Format("In ENS01012 I should see Certificate details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5" +
                        "}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\"", hIN, line1, line2, line3, line4, line5, line6, line7, line8, line9, line10, line11, line12, line13), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17989: 01_Markings/Certs Action -ENS01040")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_LocateAction")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17989")]
        [NUnit.Framework.TestCaseAttribute("LC", "20111109EB", "20111109EB", "20111109EB   IDS 11H I0033655983            295 0 LEAHY       HELEN MAREE JACKSO", "20111109EB   IDS 11H I0033870752              0 0 SLAUGHTER   KATRINMARIE", "20111109EB   IDS 11H I0035535926             84 0 FAN         DENISEWA    MAN", "20111109EB   IDS 11L I0035854282              0 0 OLOUGHLIN   TOMAS", "", "", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("LCC", "20111109EB", "20111109EB", "20111109EB   IDS 11H I0033655983            295 0 LEAHY       HELEN MAREE JACKSO", "20111109EB   IDS 11H I0033870752              0 0 SLAUGHTER   KATRINMARIE", "20111109EB   IDS 11H I0035535926             84 0 FAN         DENISEWA    MAN", "20111109EB   IDS 11L I0035854282              0 0 OLOUGHLIN   TOMAS", "", "", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("LCM", "12345678", "12345678", "12345678ST01 CEN VIC I0033655983             10 0 LEAHY       HELEN MAREE JACKSO", "12345678ST01 CEN VIC I0033870752             10 0 SLAUGHTER   KATRINMARIE", "12345678ST02 CEN VIC I0033655983             10 0 LEAHY       HELEN MAREE JACKSO", "12345678ST02 CEN VIC I0033870752             10 0 SLAUGHTER   KATRINMARIE", "12345678ST03 CEN VIC I0033655983             10 0 LEAHY       HELEN MAREE JACKSO", "12345678ST03 CEN VIC I0033870752             10 0 SLAUGHTER   KATRINMARIE", "12345678ST04 CEN VIC I0033655983             10 0 LEAHY       HELEN MAREE JACKSO", "12345678ST04 CEN VIC I0033870752             10 0 SLAUGHTER   KATRINMARIE", "12345678ST05 CEN VIC I0033655983             10 0 LEAHY       HELEN MAREE JACKSO", "12345678ST05 CEN VIC I0033870752             10 0 SLAUGHTER   KATRINMARIE", null)]
        public virtual void TestCase1798901_MarkingsCertsAction_ENS01040(string action, string locateArgument, string certID, string line1, string line2, string line3, string line4, string line5, string line6, string line7, string line8, string line9, string line10, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_LocateAction",
                    "NAB_AUTO",
                    "17989"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17989: 01_Markings/Certs Action -ENS01040", @__tags);
#line 1029
this.ScenarioSetup(scenarioInfo);
#line 1030
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1031
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1032
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1033
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1034
 testRunner.Then(string.Format("In ENS01040 I should see Duplicate Certificate details as \"{0}\" \"{1}\" \"{2}\" \"{3}\"" +
                        " \"{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\"", certID, line1, line2, line3, line4, line5, line6, line7, line8, line9, line10), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17989: 01_Markings/Certs LC, LCM, LCC, LE Action -ENS01042")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_LocateAction")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17989")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        public virtual void TestCase1798901_MarkingsCertsLCLCMLCCLEAction_ENS01042()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17989: 01_Markings/Certs LC, LCM, LCC, LE Action -ENS01042", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "EN_E_LocateAction",
                        "NAB_AUTO",
                        "17989",
                        "FullSmokeTest"});
#line 1048
this.ScenarioSetup(scenarioInfo);
#line 1050
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1051
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1052
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table55.AddRow(new string[] {
                        "Action",
                        "LE"});
            table55.AddRow(new string[] {
                        "Locate Argument",
                        "23512615"});
#line 1053
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table55, "And ");
#line 1057
 testRunner.Then("In ENS01042 I should see Certificate Details as Cert1 \"VIC 23512615     04/11/13 " +
                    "  99999999849 | 01/06/15 MRKNG 7650/ 3265791            50-\"  and Cert2 \"VIC 876" +
                    "54321ST01 01/06/15            10 | 01/06/15 MRKNG 7650/ 3265791            10\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table56.AddRow(new string[] {
                        "Action",
                        "LEC"});
            table56.AddRow(new string[] {
                        "Locate Argument",
                        "23512615"});
#line 1058
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table56, "When ");
#line 1062
 testRunner.Then("In ENS01042 I should see Certificate Details as Cert1 \"VIC 23512615     04/11/13 " +
                    "  99999999849 | 01/06/15 MRKNG 7650/ 3265791            50-\"  and Cert2 \"DAM/EMP" +
                    "LOYEE TRUST HELD SHARES\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table57.AddRow(new string[] {
                        "Action",
                        "LEM"});
            table57.AddRow(new string[] {
                        "Locate Argument",
                        "87654321"});
#line 1063
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table57, "When ");
#line 1067
 testRunner.Then("In ENS01042 I should see Certificate Details as Cert1 \"VIC 87654321ST01 01/06/15 " +
                    "           10 | 01/06/15 MRKNG 7650/ 3265791            10\"  and Cert2 \"VIC 8765" +
                    "4321ST02 01/06/15            10 | 01/06/15 MRKNG 7650/ 3265791            10\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18036: 01_Faster FIN Details (FIN Action)")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_LocateAction")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("18036")]
        [NUnit.Framework.TestCaseAttribute("N0060000052", "FIN", "", "Current holder is not a FASTER SCRIPLESS holder.", null)]
        [NUnit.Framework.TestCaseAttribute("L0331163805", "FIN", "", "Current holder is not a FASTER SCRIPLESS holder.", null)]
        public virtual void TestCase1803601_FasterFINDetailsFINAction(string locateArgument, string action, string fIN, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_LocateAction",
                    "CPU_AUTO",
                    "18036"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18036: 01_Faster FIN Details (FIN Action)", @__tags);
#line 1074
this.ScenarioSetup(scenarioInfo);
#line 1076
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1077
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1078
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1079
  testRunner.And(string.Format("I enter the following details as the Locate action \"{0}\" \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1080
  testRunner.And("I enter Fin Password", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1081
 testRunner.Then(string.Format("I should see the below ErrorMessage \"{0}\"", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18077: 01_Payments and Reference Actions(LP)")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_LocateAction")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("18077")]
        public virtual void TestCase1807701_PaymentsAndReferenceActionsLP()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18077: 01_Payments and Reference Actions(LP)", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "EN_E_LocateAction",
                        "NAB_AUTO",
                        "18077"});
#line 1093
this.ScenarioSetup(scenarioInfo);
#line 1095
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1096
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1097
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table58.AddRow(new string[] {
                        "Action",
                        "LP"});
            table58.AddRow(new string[] {
                        "Locate Argument",
                        "DV122/933282"});
#line 1098
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table58, "And ");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table59.AddRow(new string[] {
                        "Name Key",
                        "IQBAL       SAMAIR"});
            table59.AddRow(new string[] {
                        "HIN",
                        "I0035933662"});
            table59.AddRow(new string[] {
                        "Name",
                        "MISS SAMAIRA IQBAL"});
            table59.AddRow(new string[] {
                        "Address",
                        "TEST AUTOMATION"});
            table59.AddRow(new string[] {
                        "PD Line1",
                        "DV122/ORD DIV@88C FF@30% RD16/11/11 PD19/12/11 R:00933282          51.92:Net"});
            table59.AddRow(new string[] {
                        "PD Line2",
                        "51.92:Frk           0.00:Unf         22.25*TCr          Unpresented"});
            table59.AddRow(new string[] {
                        "PD Line3",
                        ""});
            table59.AddRow(new string[] {
                        "PD Line4",
                        ""});
            table59.AddRow(new string[] {
                        "PD Line5",
                        ""});
            table59.AddRow(new string[] {
                        "PD Line6",
                        ""});
            table59.AddRow(new string[] {
                        "PD Line7",
                        ""});
            table59.AddRow(new string[] {
                        "PD Line8",
                        ""});
            table59.AddRow(new string[] {
                        "PD Line9",
                        ""});
#line 1102
 testRunner.Then("In ENS01009 I should see Payment Details as below:", ((string)(null)), table59, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table60.AddRow(new string[] {
                        "Action",
                        ">"});
            table60.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 1117
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table60, "When ");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table61.AddRow(new string[] {
                        "ExtraDetails1",
                        "51.92:Gross"});
            table61.AddRow(new string[] {
                        "ExtraDetails2",
                        "0.00:Ded/T"});
#line 1121
 testRunner.Then("In ENS01010 I should see Extra Payment Details as below:", ((string)(null)), table61, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18083: 02_Payments and Reference Actions(LHR)")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_LocateAction")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("18083")]
        public virtual void TestCase1808302_PaymentsAndReferenceActionsLHR()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18083: 02_Payments and Reference Actions(LHR)", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "EN_E_LocateAction",
                        "NAB_AUTO",
                        "18083"});
#line 1131
this.ScenarioSetup(scenarioInfo);
#line 1133
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1134
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1135
  testRunner.And("I go to the Enquiry system for \"C0009906408\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table62.AddRow(new string[] {
                        "Action",
                        "LHR"});
            table62.AddRow(new string[] {
                        "Locate Argument",
                        "12345678"});
#line 1136
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table62, "And ");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table63.AddRow(new string[] {
                        "HIN",
                        "C0009906408"});
            table63.AddRow(new string[] {
                        "Line1",
                        "ORD/ORDINARY FULLY PAID SHARES"});
            table63.AddRow(new string[] {
                        "Line2",
                        "VIC  A296042     08/05/15 CAPIN 7650/     123            100                     " +
                            "  WINFRM"});
            table63.AddRow(new string[] {
                        "Line3",
                        ""});
            table63.AddRow(new string[] {
                        "Line4",
                        ""});
            table63.AddRow(new string[] {
                        "Line5",
                        ""});
            table63.AddRow(new string[] {
                        "Line6",
                        ""});
#line 1140
 testRunner.Then("In ENS01013 I should see Register details as below:", ((string)(null)), table63, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table64.AddRow(new string[] {
                        "Action",
                        ">"});
            table64.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 1149
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table64, "When ");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table65.AddRow(new string[] {
                        "Line1",
                        "12345678"});
#line 1153
 testRunner.Then("In ENS01053 I should see Extra Register details as below:", ((string)(null)), table65, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17054: 02_\'LS\' Locate static transaction action-ENSSTM02")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_LocateAction")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTOs")]
        [NUnit.Framework.CategoryAttribute("17054")]
        [NUnit.Framework.TestCaseAttribute("WRADD", "LS", "7646/321461", "Country...: NZ", "Currency..: NZD", "Swift Code: ANZBNZ22102", "A/C:126543789", "Nme:COMPUTERSHARE NZ ACCOUNT", "ANZBNZ22102", "AUCKLAND", "", "", "", "", "", "", "", "", "", "", "", "", "", null)]
        public virtual void TestCase1705402_LSLocateStaticTransactionAction_ENSSTM02(
                    string tranCode, 
                    string action, 
                    string locateArgument, 
                    string afterDetails1, 
                    string afterDetails2, 
                    string afterDetails3, 
                    string afterDetails4, 
                    string afterDetails5, 
                    string afterDetails6, 
                    string afterDetails7, 
                    string afterDetails8, 
                    string afterDetails9, 
                    string afterDetails10, 
                    string beforeDetails1, 
                    string beforeDetails2, 
                    string beforeDetails3, 
                    string beforeDetails4, 
                    string beforeDetails5, 
                    string beforeDetails6, 
                    string beforeDetails7, 
                    string beforeDetails8, 
                    string beforeDetails9, 
                    string beforeDetails10, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_LocateAction",
                    "NAB_AUTOs",
                    "17054"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17054: 02_\'LS\' Locate static transaction action-ENSSTM02", @__tags);
#line 1269
this.ScenarioSetup(scenarioInfo);
#line 1270
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1271
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1272
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1273
  testRunner.And(string.Format("I enter the following details as the Locate action \"{0}\" \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "AfterDetails1",
                        "AfterDetails2",
                        "AfterDetails3",
                        "AfterDetails4",
                        "AfterDetails5",
                        "AfterDetails6",
                        "AfterDetails7",
                        "AfterDetails8",
                        "AfterDetails9",
                        "AfterDetails10",
                        "BeforeDetails1",
                        "BeforeDetails2",
                        "BeforeDetails3",
                        "BeforeDetails4",
                        "BeforeDetails5",
                        "BeforeDetails6",
                        "BeforeDetails7",
                        "BeforeDetails8",
                        "BeforeDetails9",
                        "BeforeDetails10"});
            table66.AddRow(new string[] {
                        string.Format("{0}", afterDetails1),
                        string.Format("{0}", afterDetails2),
                        string.Format("{0}", afterDetails3),
                        string.Format("{0}", afterDetails4),
                        string.Format("{0}", afterDetails5),
                        string.Format("{0}", afterDetails6),
                        string.Format("{0}", afterDetails7),
                        string.Format("{0}", afterDetails8),
                        string.Format("{0}", afterDetails9),
                        string.Format("{0}", afterDetails10),
                        string.Format("{0}", beforeDetails1),
                        string.Format("{0}", beforeDetails2),
                        string.Format("{0}", beforeDetails3),
                        string.Format("{0}", beforeDetails4),
                        string.Format("{0}", beforeDetails5),
                        string.Format("{0}", beforeDetails6),
                        string.Format("{0}", beforeDetails7),
                        string.Format("{0}", beforeDetails8),
                        string.Format("{0}", beforeDetails9),
                        string.Format("{0}", beforeDetails10)});
#line 1274
 testRunner.Then("In ENSSTM02 I should see Static Transaction details:", ((string)(null)), table66, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
