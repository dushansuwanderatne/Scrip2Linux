// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SCRIPAU.Automation.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("EP_Employee Plan Processing_OptionsPlan")]
    public partial class EP_EmployeePlanProcessing_OptionsPlanFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "EP_Employee Plan Processing_OptionsPlan.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "EP_Employee Plan Processing_OptionsPlan", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 34315: 1_GRT. Manual Grant of -EE")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.CategoryAttribute("34315")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("Options Plan", "OPT", "EE", "9B3", "16/01/2009", "312002", "1000", "", "I0031971926", "2009 EXECUTIVE OPTIONS T3", "Options", "1000", "19890.00", "ESOB", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "9B3 EE   16/01/2009 HK Def         1000        1000          39         961      " +
            "     0           0           0           0", "", "** Totals        1000        1000          39         961           0           0" +
            "           0           0", "", "ESOTF", "9B3 EE   16/01/2009     VE7  PE7  HK Def        1000  01/02    16/01/2014        " +
            "   0          39           0", "16/07/2014           0           0        1000", "", "", "ESOT", "9B3 EE  16/01/09     VE7  PE7  HK Def        1000  01/01   16/01/14           0  " +
            "         0           0           0        1000", "01/02   16/01/14         961           0           0           0        1000", "", null)]
        [NUnit.Framework.TestCaseAttribute("Rights Plan", "PRS", "EE", "33A", "01/01/2013", "3120133", "1000", "", "I0036463481", "2013 EE", "Options", "1000", "", "ESOB", "/PRS", "PERFORMANCE RIGHTS", "12P EE   12/12/2012 HK Def         1000           0           0           0      " +
            "     0        1000           0           0", "33A EE   01/01/2013 HK Def         1000        1000           0        1000      " +
            "     0           0           0           0", "", "** Totals        2000        1000           0        1000           0        1000" +
            "           0           0", "ESOTF", "33A EE   01/01/2013     VE3       HK Def        1000           28/09/2029        " +
            "   0           0        1000", "", "", "", "ESOT", "12P EE  12/12/12     VW4  PW4  HK Def        1000  01/01   19/12/14        1000  " +
            "         0           0           0        1000", "20/08/15           0        1000           0           0           0", "33A EE  01/01/13     VE3       HK Def        1000  01/     16/01/13        1000  " +
            "         0           0           0        1000", null)]
        public virtual void TestCase343151_GRT_ManualGrantOf_EE(
                    string test, 
                    string classCode, 
                    string menuItem, 
                    string registerCode, 
                    string appropDate, 
                    string transNumber, 
                    string totalUnits, 
                    string grantCountry, 
                    string searchName, 
                    string registerDesc, 
                    string registerType1, 
                    string units1, 
                    string money1, 
                    string action, 
                    string locateArgument, 
                    string planDesc, 
                    string bLine1, 
                    string bLine2, 
                    string bLine3, 
                    string bLine4, 
                    string action1, 
                    string lineF1, 
                    string lineF2, 
                    string lineF3, 
                    string lineF4, 
                    string action2, 
                    string tLine1, 
                    string tLine2, 
                    string tLine3, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "NAB2_AUTO",
                    "34315",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 34315: 1_GRT. Manual Grant of -EE", @__tags);
#line 7
this.ScenarioSetup(scenarioInfo);
#line 9
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
  testRunner.And(string.Format("I go to the Grant Options Menu for \"{0}\"", menuItem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
  testRunner.And(string.Format("I go to the Manual Grant of Options Menu \"{0}\"", registerCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
  testRunner.And(string.Format("In EOL00901 I Add Grant details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"", appropDate, transNumber, totalUnits, grantCountry, searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
 testRunner.Then(string.Format("In EOL00905 I should see Buyer details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\"", classCode, registerCode, registerDesc, registerType1, units1, money1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 16
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 17
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 18
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
 testRunner.Then(string.Format("In ENSESS24 I should see Options Balance as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\"", classCode, planDesc, bLine1, bLine2, bLine3, bLine4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 21
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 22
 testRunner.Then(string.Format("In ENSESS26 I should see Future Vesting Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" " +
                        "\"{5}\"", classCode, planDesc, lineF1, lineF2, lineF3, lineF4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 23
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action2, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
 testRunner.Then(string.Format("In ENSESS25 I should see Options Balance as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"", classCode, planDesc, tLine1, tLine2, tLine3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 34613: 14_RVA. Reversal of Grant")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.CategoryAttribute("34613")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("Options-EX", "EX", "OPT", "14A", "312003", "1000", "7832", "2001001", "I0033315341", "ESOB", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "", "** Totals           0           0           0           0           0           0" +
            "           0           0", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Options-EE", "EE", "OPT", "13A", "312005", "1000", "7832", "2001000", "I0032666981", "ESOB", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "", "** Totals           0           0           0           0           0           0" +
            "           0           0", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Rights-EE", "EE", "PRS", "33A", "3120134", "1000", "7837", "3210000", "I0036471867", "ESOB", "/PRS", "PERFORMANCE RIGHTS", "", "** Totals           0           0           0           0           0           0" +
            "           0           0", "", "", null)]
        public virtual void TestCase3461314_RVA_ReversalOfGrant(
                    string planType, 
                    string menuItem, 
                    string classCode, 
                    string registerCode, 
                    string transNumber, 
                    string totalUnits, 
                    string rvsalRunNumber, 
                    string rvsalTransNumber, 
                    string searchName, 
                    string action, 
                    string locateArgument, 
                    string planDesc, 
                    string bLine1, 
                    string bLine2, 
                    string bLine3, 
                    string bLine4, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "NAB2_AUTO",
                    "34613",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 34613: 14_RVA. Reversal of Grant", @__tags);
#line 35
this.ScenarioSetup(scenarioInfo);
#line 37
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 38
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 39
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
  testRunner.And(string.Format("I go to the Grant Options Menu for \"{0}\"", menuItem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
  testRunner.And(string.Format("I go to the Reversal of Grant Menu \"{0}\"", registerCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
  testRunner.And(string.Format("In EOL00401 I perform Reversal Transaction as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"<TotalMone" +
                        "y>\"", transNumber, totalUnits, rvsalRunNumber, rvsalTransNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 44
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 45
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 46
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
 testRunner.Then(string.Format("In ENSESS24 I should see Options Balance as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\"", classCode, planDesc, bLine1, bLine2, bLine3, bLine4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 35091: 2_ESLVP_Leaver Processing")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.CategoryAttribute("34786")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        [NUnit.Framework.TestCaseAttribute("Options Plan", "ESLVP", "312006", "I0033433093", "Y", "", "", "", "", "", "900", "100", "23/02/2017", "500", "100", "400", "01/01/2016", "", "", "23/02/2017", "OPT", "ESOB", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "13A EE   01/01/2013 Ind Lvr        1000         900           0         900      " +
            "     0           0           0         100", "14A EX   01/02/2014 Ind Lvr        1000         900         400         500      " +
            "     0           0           0         100", "", "** Totals        2000        1800         400        1400           0           0" +
            "           0         200", "ESLP", "13A EE   01/01/2013  Ind Lvr   20/08/2015   25/11/2014              7835    00312" +
            "006", "14A EX   01/02/2014  Ind Lvr   20/08/2015   25/11/2014              7835    00312" +
            "006", "", null)]
        [NUnit.Framework.TestCaseAttribute("Rights Plan", "ESLVP", "312009", "I0036136464", "Y", "", "", "", "", "", "500", "500", "23/02/2017", "", "", "", "", "", "", "", "PRS", "ESOB", "/PRS", "PERFORMANCE RIGHTS", "33A EE   01/01/2013 Ind Lvr        1000         500           0         500      " +
            "     0           0           0         500", "", "** Totals        1000         500           0         500           0           0" +
            "           0         500", "", "ESLP", "33A EE   01/01/2013  Ind Lvr   20/08/2015   07/01/2015              7835    00312" +
            "009", "", "", null)]
        public virtual void TestCase350912_ESLVP_LeaverProcessing(
                    string test, 
                    string selection, 
                    string transNumber, 
                    string searchName, 
                    string confirm, 
                    string ignoreBlackoutInd, 
                    string nOChangeUvst1, 
                    string cancelImmUvst1, 
                    string vestNbrUvst1, 
                    string vestDateUvst1, 
                    string nOChangeVst1, 
                    string cancelImmVst1, 
                    string expiryDate1, 
                    string nOChangeUvst2, 
                    string cancelImmUvst2, 
                    string vestNbrUvst2, 
                    string vestDateUvst2, 
                    string nOChangeVst2, 
                    string cancelImmVst2, 
                    string expiryDate2, 
                    string classCode, 
                    string action, 
                    string locateArgument, 
                    string planDesc, 
                    string bLine1, 
                    string bLine2, 
                    string bLine3, 
                    string bLine4, 
                    string action1, 
                    string lLine1, 
                    string lLine2, 
                    string lLine3, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "NAB2_AUTO",
                    "34786",
                    "EP_EmployeePlanProcessing",
                    "FullSmokeTest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 35091: 2_ESLVP_Leaver Processing", @__tags);
#line 62
this.ScenarioSetup(scenarioInfo);
#line 64
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 65
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 66
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
  testRunner.And("In EOL00107 I Click on \"leaver processing\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
  testRunner.And(string.Format("In EOL02702 I perform Leaver Processing as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{" +
                        "6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"{17}\" \"{" +
                        "18}\"", selection, transNumber, searchName, confirm, ignoreBlackoutInd, nOChangeUvst1, cancelImmUvst1, vestNbrUvst1, vestDateUvst1, nOChangeVst1, cancelImmVst1, expiryDate1, nOChangeUvst2, cancelImmUvst2, vestNbrUvst2, vestDateUvst2, nOChangeVst2, cancelImmVst2, expiryDate2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 70
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 71
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
 testRunner.Then(string.Format("In ENSESS24 I should see Options Balance as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\"", classCode, planDesc, bLine1, bLine2, bLine3, bLine4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 74
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 75
 testRunner.Then(string.Format("In ENSESS31 I should see Updated Leaver Processing details as \"{0}\" \"{1}\" \"{2}\" \"" +
                        "{3}\" \"{4}\"", classCode, planDesc, lLine1, lLine2, lLine3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 35109: 17_ESLRV. Leaver Processing Reversal")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.CategoryAttribute("35109")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("Options Plan", "ESLRV", "OPT", "312008", "0", "7835", "04431000", "I0033458380", "ESLP", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "13A EE   01/01/2013  HK Def    Pending", "14A EX   01/02/2014  HK Def    Pending", "", null)]
        [NUnit.Framework.TestCaseAttribute("Rights Plan", "ESLRV", "PRS", "312011", "500", "7836", "00072347", "I0970033092", "ESLP", "/PRS", "PERFORMANCE RIGHTS", "33A EE   01/01/2013  HK Def    Pending", "", "", null)]
        public virtual void TestCase3510917_ESLRV_LeaverProcessingReversal(string test, string selection, string classCode, string transNumber, string totalUnits, string rvsalRunNumber, string rvsalTransNumber, string searchName, string action, string locateArgument, string planDesc, string lLine1, string lLine2, string lLine3, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "NAB2_AUTO",
                    "35109",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 35109: 17_ESLRV. Leaver Processing Reversal", @__tags);
#line 86
this.ScenarioSetup(scenarioInfo);
#line 88
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 89
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 90
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 91
  testRunner.And("In EOL00107 I Click on \"leaver processing\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
  testRunner.And(string.Format("In EOL00401 I Perform Leaver Processing Reversal as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        "", selection, transNumber, totalUnits, rvsalRunNumber, rvsalTransNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 94
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 95
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 97
 testRunner.Then(string.Format("In ENSESS31 I should see Updated Leaver Processing details as \"{0}\" \"{1}\" \"{2}\" \"" +
                        "{3}\" \"{4}\"", classCode, planDesc, lLine1, lLine2, lLine3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 35219: 1_LPE. Lapse Options - Employee Initiated")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.CategoryAttribute("35219")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("OPT-Full", "OPT", "312021", "20/08/2015", "Y", "", "I0035882642", "", "", "", "", "", "2000", "2000", "ESOB", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "13A EE   01/01/2013 HK Def         1000           0           0           0      " +
            "     0           0           0        1000", "14A EX   01/02/2014 HK Def         1000           0           0           0      " +
            "     0           0           0        1000", "", "** Totals        2000           0           0           0           0           0" +
            "           0        2000", null)]
        [NUnit.Framework.TestCaseAttribute("PRS-Partial", "PRS", "3433029", "20/08/2015", "N", "500", "I0036358181", "", "250", "", "250", "", "500", "500", "ESOB", "/PRS", "PERFORMANCE RIGHTS", "14A EX   01/02/2014 HK Def         1000         750           0         750      " +
            "     0           0           0         250", "33A EE   01/01/2013 HK Def         1000         750           0         750      " +
            "     0           0           0         250", "", "** Totals        2000        1500           0        1500           0           0" +
            "           0         500", null)]
        [NUnit.Framework.TestCaseAttribute("PRS-Full", "PRS", "312030", "20/08/2015", "Y", "", "I0035986693", "", "", "", "", "", "2000", "2000", "ESOB", "/PRS", "PERFORMANCE RIGHTS", "14A EX   01/02/2014 HK Def         1000           0           0           0      " +
            "     0           0           0        1000", "33A EE   01/01/2013 HK Def         1000           0           0           0      " +
            "     0           0           0        1000", "", "** Totals        2000           0           0           0           0           0" +
            "           0        2000", null)]
        public virtual void TestCase352191_LPE_LapseOptions_EmployeeInitiated(
                    string test, 
                    string classCode, 
                    string transNumber, 
                    string transDate, 
                    string lapseCancelAll, 
                    string totalUnits, 
                    string searchName, 
                    string unvested1, 
                    string vested1, 
                    string unvested2, 
                    string vested2, 
                    string totalUnvested, 
                    string totalVested, 
                    string grandTotal, 
                    string action, 
                    string locateArgument, 
                    string planDesc, 
                    string bLine1, 
                    string bLine2, 
                    string bLine3, 
                    string bLine4, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "NAB2_AUTO",
                    "35219",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 35219: 1_LPE. Lapse Options - Employee Initiated", @__tags);
#line 108
this.ScenarioSetup(scenarioInfo);
#line 110
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 111
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 112
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 113
  testRunner.And("In EOL00107 I Click on \"lapse cancellation processing\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 114
  testRunner.And("In EOL00132 I Click on \"lapse options employee initiated\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 115
  testRunner.And(string.Format("In EOL02801 I Perform Options Lapse Transaction as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" " +
                        "\"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", transNumber, transDate, lapseCancelAll, totalUnits, searchName, unvested1, vested1, unvested2, vested2, totalUnvested, totalVested, grandTotal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 117
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 118
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 119
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 120
 testRunner.Then(string.Format("In ENSESS24 I should see Options Balance as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\"", classCode, planDesc, bLine1, bLine2, bLine3, bLine4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 35227: 2_LPC. Lapse Options - Company  Initiated")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.CategoryAttribute("35227")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("OPT-Partial", "OPT", "312022", "20/08/2015", "N", "500", "I0035886516", "", "250", "", "250", "", "500", "500", "ESOB", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "13A EE   01/01/2013 HK Def         1000         750           0         750      " +
            "     0           0           0         250", "14A EX   01/02/2014 HK Def         1000         750           0         750      " +
            "     0           0           0         250", "", "** Totals        2000        1500           0        1500           0           0" +
            "           0         500", null)]
        [NUnit.Framework.TestCaseAttribute("OPT-Full", "OPT", "312023", "20/08/2015", "Y", "", "I0036474483", "", "", "", "", "", "2000", "2000", "ESOB", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "13A EE   01/01/2013 HK Def         1000           0           0           0      " +
            "     0           0           0        1000", "14A EX   01/02/2014 HK Def         1000           0           0           0      " +
            "     0           0           0        1000", "", "** Totals        2000           0           0           0           0           0" +
            "           0        2000", null)]
        [NUnit.Framework.TestCaseAttribute("PRS-Partial", "PRS", "312031", "20/08/2015", "N", "500", "I0035592890", "", "250", "", "250", "", "500", "500", "ESOB", "/PRS", "PERFORMANCE RIGHTS", "14A EX   01/02/2014 HK Def         1000         750           0         750      " +
            "     0           0           0         250", "33A EE   01/01/2013 HK Def         1000         750           0         750      " +
            "     0           0           0         250", "", "** Totals        2000        1500           0        1500           0           0" +
            "           0         500", null)]
        [NUnit.Framework.TestCaseAttribute("PRS-Full", "PRS", "312033", "20/08/2015", "Y", "", "I0035881433", "", "", "", "", "", "2000", "2000", "ESOB", "/PRS", "PERFORMANCE RIGHTS", "14A EX   01/02/2014 HK Def         1000           0           0           0      " +
            "     0           0           0        1000", "33A EE   01/01/2013 HK Def         1000           0           0           0      " +
            "     0           0           0        1000", "", "** Totals        2000           0           0           0           0           0" +
            "           0        2000", null)]
        public virtual void TestCase352272_LPC_LapseOptions_CompanyInitiated(
                    string test, 
                    string classCode, 
                    string transNumber, 
                    string transDate, 
                    string lapseCancelAll, 
                    string totalUnits, 
                    string searchName, 
                    string unvested1, 
                    string vested1, 
                    string unvested2, 
                    string vested2, 
                    string totalUnvested, 
                    string totalVested, 
                    string grandTotal, 
                    string action, 
                    string locateArgument, 
                    string planDesc, 
                    string bLine1, 
                    string bLine2, 
                    string bLine3, 
                    string bLine4, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "NAB2_AUTO",
                    "35227",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 35227: 2_LPC. Lapse Options - Company  Initiated", @__tags);
#line 134
this.ScenarioSetup(scenarioInfo);
#line 136
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 137
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 138
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 139
  testRunner.And("In EOL00107 I Click on \"lapse cancellation processing\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 140
  testRunner.And("In EOL00132 I Click on \"lapse options company initiated\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 141
  testRunner.And(string.Format("In EOL02801 I Perform Options Lapse Transaction as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" " +
                        "\"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", transNumber, transDate, lapseCancelAll, totalUnits, searchName, unvested1, vested1, unvested2, vested2, totalUnvested, totalVested, grandTotal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 142
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 143
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 144
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 145
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 146
 testRunner.Then(string.Format("In ENSESS24 I should see Options Balance as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\"", classCode, planDesc, bLine1, bLine2, bLine3, bLine4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 35239: 3_CLE. Cancel Options - Employee Initiated")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.CategoryAttribute("35239")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("OPT-Partial", "OPT", "312024", "20/08/2015", "N", "500", "I0036156112", "", "250", "", "250", "", "500", "500", "ESOB", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "13A EE   01/01/2013 HK Def         1000         750           0         750      " +
            "     0           0           0         250", "14A EX   01/02/2014 HK Def         1000         750           0         750      " +
            "     0           0           0         250", "", "** Totals        2000        1500           0        1500           0           0" +
            "           0         500", null)]
        [NUnit.Framework.TestCaseAttribute("OPT-Full", "OPT", "3452025", "20/08/2015", "Y", "", "I0033925506", "", "", "", "", "", "2000", "2000", "ESOB", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "13A EE   01/01/2013 HK Def         1000           0           0           0      " +
            "     0           0           0        1000", "14A EX   01/02/2014 HK Def         1000           0           0           0      " +
            "     0           0           0        1000", "", "** Totals        2000           0           0           0           0           0" +
            "           0        2000", null)]
        [NUnit.Framework.TestCaseAttribute("PRS-Partial", "PRS", "3453335", "20/08/2015", "N", "500", "I0035729593", "", "250", "", "250", "", "500", "500", "ESOB", "/PRS", "PERFORMANCE RIGHTS", "14A EX   01/02/2014 HK Def         1000         750           0         750      " +
            "     0           0           0         250", "33A EE   01/01/2013 HK Def         1000         750           0         750      " +
            "     0           0           0         250", "", "** Totals        2000        1500           0        1500           0           0" +
            "           0         500", null)]
        [NUnit.Framework.TestCaseAttribute("PRS-Full", "PRS", "312035", "20/08/2015", "Y", "", "I0036463902", "", "", "", "", "", "2000", "2000", "ESOB", "/PRS", "PERFORMANCE RIGHTS", "14A EX   01/02/2014 HK Def         1000           0           0           0      " +
            "     0           0           0        1000", "33A EE   01/01/2013 HK Def         1000           0           0           0      " +
            "     0           0           0        1000", "", "** Totals        2000           0           0           0           0           0" +
            "           0        2000", null)]
        public virtual void TestCase352393_CLE_CancelOptions_EmployeeInitiated(
                    string test, 
                    string classCode, 
                    string transNumber, 
                    string transDate, 
                    string lapseCancelAll, 
                    string totalUnits, 
                    string searchName, 
                    string unvested1, 
                    string vested1, 
                    string unvested2, 
                    string vested2, 
                    string totalUnvested, 
                    string totalVested, 
                    string grandTotal, 
                    string action, 
                    string locateArgument, 
                    string planDesc, 
                    string bLine1, 
                    string bLine2, 
                    string bLine3, 
                    string bLine4, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "NAB2_AUTO",
                    "35239",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 35239: 3_CLE. Cancel Options - Employee Initiated", @__tags);
#line 159
this.ScenarioSetup(scenarioInfo);
#line 161
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 162
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 163
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
  testRunner.And("In EOL00107 I Click on \"lapse cancellation processing\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 165
  testRunner.And("In EOL00132 I Click on \"cancel options employee initiated\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 166
  testRunner.And(string.Format("In EOL02801 I Perform Options Lapse Transaction as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" " +
                        "\"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", transNumber, transDate, lapseCancelAll, totalUnits, searchName, unvested1, vested1, unvested2, vested2, totalUnvested, totalVested, grandTotal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 167
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 168
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 169
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 170
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 171
 testRunner.Then(string.Format("In ENSESS24 I should see Options Balance as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\"", classCode, planDesc, bLine1, bLine2, bLine3, bLine4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 35259: 4_CLC. Cancel Options - Company  Initiated")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.CategoryAttribute("35259")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("OPT-Partial", "OPT", "312026", "20/08/2015", "N", "500", "I0035512543", "", "250", "", "250", "", "500", "500", "ESOB", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "13A EE   01/01/2013 HK Def         1000         750           0         750      " +
            "     0           0           0         250", "14A EX   01/02/2014 HK Def         1000         750           0         750      " +
            "     0           0           0         250", "", "** Totals        2000        1500           0        1500           0           0" +
            "           0         500", null)]
        [NUnit.Framework.TestCaseAttribute("OPT-Full", "OPT", "312027", "20/08/2015", "Y", "", "I0035544836", "", "", "", "", "", "2000", "2000", "ESOB", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "13A EE   01/01/2013 HK Def         1000           0           0           0      " +
            "     0           0           0        1000", "14A EX   01/02/2014 HK Def         1000           0           0           0      " +
            "     0           0           0        1000", "", "** Totals        2000           0           0           0           0           0" +
            "           0        2000", null)]
        [NUnit.Framework.TestCaseAttribute("PRS-Partial", "PRS", "312036", "20/08/2015", "N", "500", "I0036450258", "", "250", "", "250", "", "500", "500", "ESOB", "/PRS", "PERFORMANCE RIGHTS", "14A EX   01/02/2014 HK Def         1000         750           0         750      " +
            "     0           0           0         250", "33A EE   01/01/2013 HK Def         1000         750           0         750      " +
            "     0           0           0         250", "", "** Totals        2000        1500           0        1500           0           0" +
            "           0         500", null)]
        [NUnit.Framework.TestCaseAttribute("PRS-Full", "PRS", "312037", "20/08/2015", "Y", "", "I0036151595", "", "", "", "", "", "2000", "2000", "ESOB", "/PRS", "PERFORMANCE RIGHTS", "14A EX   01/02/2014 HK Def         1000           0           0           0      " +
            "     0           0           0        1000", "33A EE   01/01/2013 HK Def         1000           0           0           0      " +
            "     0           0           0        1000", "", "** Totals        2000           0           0           0           0           0" +
            "           0        2000", null)]
        public virtual void TestCase352594_CLC_CancelOptions_CompanyInitiated(
                    string test, 
                    string classCode, 
                    string transNumber, 
                    string transDate, 
                    string lapseCancelAll, 
                    string totalUnits, 
                    string searchName, 
                    string unvested1, 
                    string vested1, 
                    string unvested2, 
                    string vested2, 
                    string totalUnvested, 
                    string totalVested, 
                    string grandTotal, 
                    string action, 
                    string locateArgument, 
                    string planDesc, 
                    string bLine1, 
                    string bLine2, 
                    string bLine3, 
                    string bLine4, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "NAB2_AUTO",
                    "35259",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 35259: 4_CLC. Cancel Options - Company  Initiated", @__tags);
#line 184
this.ScenarioSetup(scenarioInfo);
#line 186
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 187
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 188
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 189
  testRunner.And("In EOL00107 I Click on \"lapse cancellation processing\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 190
  testRunner.And("In EOL00132 I Click on \"cancel options employee initiated\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 191
  testRunner.And(string.Format("In EOL02801 I Perform Options Lapse Transaction as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" " +
                        "\"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", transNumber, transDate, lapseCancelAll, totalUnits, searchName, unvested1, vested1, unvested2, vested2, totalUnvested, totalVested, grandTotal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 192
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 193
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 194
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 195
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 196
 testRunner.Then(string.Format("In ENSESS24 I should see Options Balance as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\"", classCode, planDesc, bLine1, bLine2, bLine3, bLine4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 35261: 5_RVL. Lapse/Cancel Options Reversal")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.CategoryAttribute("35261")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("OPT", "312028", "100", "7838", "482351", "ESOB", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "13A EE   01/01/2013 HK Def         1000         925           0         925      " +
            "     0           0           0          75", "14A EX   01/02/2014 HK Def         1000         775           0         775      " +
            "     0           0           0         225", "", "** Totals        2000        1700           0        1700           0           0" +
            "           0         300", "I0036356791", null)]
        [NUnit.Framework.TestCaseAttribute("PRS", "312039", "100", "7840", "34827", "ESOB", "/PRS", "PERFORMANCE RIGHTS", "14A EX   01/02/2014 HK Def         1000         850           0         850      " +
            "     0           0           0         150", "33A EE   01/01/2013 HK Def         1000         850           0         850      " +
            "     0           0           0         150", "", "** Totals        2000        1700           0        1700           0           0" +
            "           0         300", "I0035153918", null)]
        public virtual void TestCase352615_RVL_LapseCancelOptionsReversal(string classCode, string transNumber, string totalUnits, string rvsalRunNumber, string rvsalTransNumber, string action, string locateArgument, string planDesc, string bLine1, string bLine2, string bLine3, string bLine4, string searchName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "NAB2_AUTO",
                    "35261",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 35261: 5_RVL. Lapse/Cancel Options Reversal", @__tags);
#line 210
this.ScenarioSetup(scenarioInfo);
#line 212
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 213
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 214
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 215
  testRunner.And("In EOL00107 I Click on \"lapse cancellation processing\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 216
  testRunner.And("In EOL00132 I Click on \"lapsecancel options reversal\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 217
  testRunner.And(string.Format("In EOL00401 I perform Reversal Transaction as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"<TotalMone" +
                        "y>\"", transNumber, totalUnits, rvsalRunNumber, rvsalTransNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 218
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 219
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 220
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 221
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 222
 testRunner.Then(string.Format("In ENSESS24 I should see Options Balance as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\"", classCode, planDesc, bLine1, bLine2, bLine3, bLine4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 35313: 1_RVE. ESS Option Exercise Reversal")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.CategoryAttribute("35313")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("OPT-EX", "OPT", "EX", "14A", "312042", "250", "7841", "79269023", "I0036108011", "ESOB", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "14A EX   01/02/2014 HK Def         1000         750           0         750      " +
            "     0         250           0           0", "", "** Totals        1000         750           0         750           0         250" +
            "           0           0", "", "14A EX   01/02/2014 HK Def         1000        1000           0        1000      " +
            "     0           0           0           0", "", "** Totals        1000        1000           0        1000           0           0" +
            "           0           0", "", null)]
        [NUnit.Framework.TestCaseAttribute("PRS-EE", "PRS", "EE", "33A", "312043", "500", "7841", "79269026", "I0034097925", "ESOB", "/PRS", "PERFORMANCE RIGHTS", "33A EE   01/01/2013 HK Def         1000         500           0         500      " +
            "     0         500           0           0", "", "** Totals        1000         500           0         500           0         500" +
            "           0           0", "", "33A EE   01/01/2013 HK Def         1000        1000           0        1000      " +
            "     0           0           0           0", "", "** Totals        1000        1000           0        1000           0           0" +
            "           0           0", "", null)]
        [NUnit.Framework.TestCaseAttribute("PRS-EX", "PRS", "EX", "14A", "312044", "200", "7841", "79269030", "I0036453991", "ESOB", "/PRS", "PERFORMANCE RIGHTS", "14A EX   01/02/2014 HK Def         1000         800           0         800      " +
            "     0         200           0           0", "", "** Totals        1000         800           0         800           0         200" +
            "           0           0", "", "14A EX   01/02/2014 HK Def         1000        1000           0        1000      " +
            "     0           0           0           0", "", "** Totals        1000        1000           0        1000           0           0" +
            "           0           0", "", null)]
        public virtual void TestCase353131_RVE_ESSOptionExerciseReversal(
                    string test, 
                    string classCode, 
                    string selection, 
                    string registerCode, 
                    string transNumber, 
                    string totalUnits, 
                    string rvsalRunNumber, 
                    string rvsalTransNumber, 
                    string searchName, 
                    string action, 
                    string locateArgument, 
                    string planDesc, 
                    string beforeLine1, 
                    string beforeLine2, 
                    string beforeLine3, 
                    string beforeLine4, 
                    string bLine1, 
                    string bLine2, 
                    string bLine3, 
                    string bLine4, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "NAB2_AUTO",
                    "35313",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 35313: 1_RVE. ESS Option Exercise Reversal", @__tags);
#line 234
this.ScenarioSetup(scenarioInfo);
#line 236
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 237
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 238
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 239
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 240
 testRunner.Then(string.Format("In ENSESS24 I should see Options Balance as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\"", classCode, planDesc, beforeLine1, beforeLine2, beforeLine3, beforeLine4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 241
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 242
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 243
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 244
  testRunner.And("In EOL00107 I Click on \"ess option exercise reversal\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 245
  testRunner.And(string.Format("In EOL00401 I perform Exercise Reversal Transaction as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{" +
                        "4}\" \"{5}\"", selection, registerCode, transNumber, totalUnits, rvsalRunNumber, rvsalTransNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 246
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 247
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 248
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 249
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 250
 testRunner.Then(string.Format("In ENSESS24 I should see Options Balance as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\"", classCode, planDesc, bLine1, bLine2, bLine3, bLine4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 35346: 1_ADD. Add Holder Event")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.CategoryAttribute("35346")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("Rights Plan", "PRS", "4", "UPD", "ADD", "312049", "I0036026898", "21A", "21A", "20150501EE", "20150501EX", "1000", "1000", "1000", "1000", "Y", "Y", "2000", "2000", "EETD", "/PRS", "PERFORMANCE RIGHTS", "21A  EX     01/05/2015  01/01/2020  DS6    V            0.000000                 " +
            "    No", "21A  EE     01/05/2015  01/01/2020  DS6    V            0.000000                 " +
            "    No", "", "", "", "2000", "2000", "V/DS6  21A  EX   01/01/2020  01/05/2015  Current   Not Recvd   Not Actioned    E", "V/DS6  21A  EE   01/01/2020  01/05/2015  Current   Not Recvd   Not Actioned    E", "", "", "", "ESEH", null)]
        public virtual void TestCase353461_ADD_AddHolderEvent(
                    string test, 
                    string classCode, 
                    string eventNumber, 
                    string selection, 
                    string selection1, 
                    string transNumber, 
                    string searchName, 
                    string registerCode1, 
                    string registerCode2, 
                    string certID1, 
                    string certID2, 
                    string eventUnits1, 
                    string eventUnits2, 
                    string currentBal1, 
                    string currentBal2, 
                    string selectionInd1, 
                    string selectionInd2, 
                    string totEventUnits, 
                    string totCurrentBal, 
                    string action, 
                    string locateArgument, 
                    string schemeName, 
                    string detailLine1, 
                    string detailLine2, 
                    string detailLine3, 
                    string detailLine4, 
                    string detailLine5, 
                    string totEventUnits1, 
                    string totCurrentBal1, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string action1, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "NAB2_AUTO",
                    "35346",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 35346: 1_ADD. Add Holder Event", @__tags);
#line 263
this.ScenarioSetup(scenarioInfo);
#line 265
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 266
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 267
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 268
  testRunner.And("In EOL00107 I Click on \"event processing\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 269
  testRunner.And(string.Format("In EOL03301 I Add Event details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"{7}" +
                        "\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"{17}\" \"{18}\"", eventNumber, selection, selection1, transNumber, searchName, registerCode1, registerCode2, certID1, certID2, eventUnits1, eventUnits2, currentBal1, currentBal2, selectionInd1, selectionInd2, totEventUnits, totCurrentBal, totEventUnits1, totCurrentBal1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 270
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 271
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 272
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 273
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 274
 testRunner.Then(string.Format("In ENSESS51 In should see Event Tax Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\"", classCode, schemeName, detailLine1, detailLine2, detailLine3, detailLine4, detailLine5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 275
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 276
 testRunner.Then(string.Format("In ENSESS40 I should see Event History Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\"", classCode, schemeName, line1, line2, line3, line4, line5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 35347: 2_CHG. Change Holder Event")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.CategoryAttribute("35347")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("Options Plan", "OPT", "3", "UPD", "CHG", "3532047", "I0036028394", "21A", "21A", "20150501EE", "20150501EX", "1000", "1000", "1000", "1000", "Y", "N", "2000", "2000", "1000", "1000", "EETD", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "21A  EX     01/05/2015  01/01/2020  DS5    V            0.000000                 " +
            "    No", "21A  EE     01/05/2015  01/01/2020  DS5    V            0.000000                 " +
            "    No", "", "", "", "ESEH", "V/DS5  21A  EX   01/01/2020  01/05/2015  Deleted   Deleted     Unknown", "V/DS5  21A  EE   01/01/2020  01/05/2015  Current   Not Recvd   Not Actioned    E", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Rights Plan", "PRS", "4", "UPD", "CHG", "312050", "I0035735658", "21A", "21A", "20150501EE", "20150501EX", "1000", "1000", "1000", "1000", "Y", "N", "2000", "2000", "1000", "1000", "EETD", "/PRS", "PERFORMANCE RIGHTS", "21A  EX     01/05/2015  01/01/2020  DS6    V            0.000000                 " +
            "    No", "21A  EE     01/05/2015  01/01/2020  DS6    V            0.000000                 " +
            "    No", "", "", "", "ESEH", "V/DS6  21A  EX   01/01/2020  01/05/2015  Deleted   Deleted     Unknown", "V/DS6  21A  EE   01/01/2020  01/05/2015  Current   Not Recvd   Not Actioned    E", "", "", "", null)]
        public virtual void TestCase353472_CHG_ChangeHolderEvent(
                    string test, 
                    string classCode, 
                    string eventNumber, 
                    string selection, 
                    string menuItem, 
                    string transNumber, 
                    string searchName, 
                    string registerCode1, 
                    string registerCode2, 
                    string certID1, 
                    string certID2, 
                    string eventUnits1, 
                    string eventUnits2, 
                    string currentBal1, 
                    string currentBal2, 
                    string selectionInd1, 
                    string selectionInd2, 
                    string totEventUnits, 
                    string totCurrentBal, 
                    string totEventUnits1, 
                    string totCurrentBal1, 
                    string action, 
                    string locateArgument, 
                    string schemeName, 
                    string detailLine1, 
                    string detailLine2, 
                    string detailLine3, 
                    string detailLine4, 
                    string detailLine5, 
                    string action1, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "NAB2_AUTO",
                    "35347",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 35347: 2_CHG. Change Holder Event", @__tags);
#line 286
this.ScenarioSetup(scenarioInfo);
#line 288
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 289
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 290
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 291
  testRunner.And("In EOL00107 I Click on \"event processing\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 292
  testRunner.And(string.Format("In EOL00135 I Select Menu item as \"{0}\" \"{1}\" \"{2}\"", eventNumber, selection, menuItem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 293
  testRunner.And(string.Format("In EOL03304 I Modify Event details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"" +
                        "{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\"", transNumber, searchName, registerCode1, registerCode2, certID1, certID2, eventUnits1, eventUnits2, currentBal1, currentBal2, selectionInd1, selectionInd2, totEventUnits, totCurrentBal, totEventUnits1, totCurrentBal1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 294
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 295
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 296
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 297
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 298
 testRunner.Then(string.Format("In ENSESS51 In should see Event Tax Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\"", classCode, schemeName, detailLine1, detailLine2, detailLine3, detailLine4, detailLine5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 299
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 300
 testRunner.Then(string.Format("In ENSESS40 I should see Event History Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\"", classCode, schemeName, line1, line2, line3, line4, line5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 35348: 3_DEL. Delete Holder Event")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.CategoryAttribute("35348")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("Options Plan", "OPT", "3", "UPD", "DEL", "312048", "I0036461438", "21A", "21A", "20150501EE", "20150501EX", "1000", "1000", "1000", "1000", "2000", "2000", "EETD", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "21A  EX     01/05/2015  01/01/2020  DS5    V            0.000000                 " +
            "    No", "21A  EE     01/05/2015  01/01/2020  DS5    V            0.000000                 " +
            "    No", "", "", "", "ESEH", "V/DS5  21A  EX   01/01/2020  01/05/2015  Deleted   Deleted     Not Actioned    E", "V/DS5  21A  EE   01/01/2020  01/05/2015  Deleted   Deleted     Not Actioned    E", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Rights Plan", "PRS", "4", "UPD", "DEL", "312051", "I0036380021", "21A", "21A", "20150501EE", "20150501EX", "1000", "1000", "1000", "1000", "2000", "2000", "EETD", "/PRS", "PERFORMANCE RIGHTS", "21A  EX     01/05/2015  01/01/2020  DS6    V            0.000000                 " +
            "    No", "21A  EE     01/05/2015  01/01/2020  DS6    V            0.000000                 " +
            "    No", "", "", "", "ESEH", "V/DS6  21A  EX   01/01/2020  01/05/2015  Deleted   Deleted     Not Actioned    E", "V/DS6  21A  EE   01/01/2020  01/05/2015  Deleted   Deleted     Not Actioned    E", "", "", "", null)]
        public virtual void TestCase353483_DEL_DeleteHolderEvent(
                    string test, 
                    string classCode, 
                    string eventNumber, 
                    string selection, 
                    string menuItem, 
                    string transNumber, 
                    string searchName, 
                    string registerCode1, 
                    string registerCode2, 
                    string certID1, 
                    string certID2, 
                    string eventUnits1, 
                    string eventUnits2, 
                    string currentBal1, 
                    string currentBal2, 
                    string totEventUnits, 
                    string totCurrentBal, 
                    string action, 
                    string locateArgument, 
                    string schemeName, 
                    string detailLine1, 
                    string detailLine2, 
                    string detailLine3, 
                    string detailLine4, 
                    string detailLine5, 
                    string action1, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "NAB2_AUTO",
                    "35348",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 35348: 3_DEL. Delete Holder Event", @__tags);
#line 311
this.ScenarioSetup(scenarioInfo);
#line 313
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 314
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 315
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 316
  testRunner.And("In EOL00107 I Click on \"event processing\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 317
  testRunner.And(string.Format("In EOL00135 I Select Menu item as \"{0}\" \"{1}\" \"{2}\"", eventNumber, selection, menuItem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 318
  testRunner.And(string.Format("In EOL03307 I Delete Event details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"" +
                        "{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", transNumber, searchName, registerCode1, registerCode2, certID1, certID2, eventUnits1, eventUnits2, currentBal1, currentBal2, totEventUnits, totCurrentBal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 319
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 320
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 321
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 322
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 323
 testRunner.Then(string.Format("In ENSESS51 In should see Event Tax Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\"", classCode, schemeName, detailLine1, detailLine2, detailLine3, detailLine4, detailLine5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 324
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 325
 testRunner.Then(string.Format("In ENSESS40 I should see Event History Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\"", classCode, schemeName, line1, line2, line3, line4, line5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 36805: 6_ELA. Add Holder Election Details")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.CategoryAttribute("36805")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("OPT-Exer-Sell All2", "OPT", "3", "UPD", "ELA", "24730", "I0036337826", "A", "1500", "", "C", "21A", "21A", "20150501EE", "20150501EX", "1000", "1000", "1000", "500", "", "", "2000", "1500", "", "EETD", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "21A  EX     01/05/2015  01/01/2020  DS5    V            0.000000                 " +
            "    No", "21A  EE     01/05/2015  01/01/2020  DS5    V            0.000000                 " +
            "    No", "", "", "", "ESEH", "V/DS5  21A  EX   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     Exer-Sell All       Local Cheque", "V/DS5  21A  EE   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     Exer-Sell All       Local Cheque", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("OPT-Exer-Sell Partial", "OPT", "3", "UPD", "ELA", "24731", "I0035099786", "P", "1000", "750", "F", "21A", "", "20150501EE", "", "1000", "", "1000", "", "750", "", "1000", "1000", "750", "EETD", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "21A  EE     01/05/2015  01/01/2020  DS5    V            0.000000                 " +
            "    No", "", "", "", "", "ESEH", "V/DS5  21A  EE   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     Exer-Sell Partial   Foreign Cheque    USD", "", "", "", "", "USD", null)]
        [NUnit.Framework.TestCaseAttribute("OPT-Exer & Hold", "OPT", "3", "UPD", "ELA", "24732", "I0036451840", "T", "1000", "", "", "21A", "", "20150501EX", "", "1000", "", "1000", "", "", "", "1000", "1000", "", "EETD", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "21A  EX     01/05/2015  01/01/2020  DS5    V            0.000000                 " +
            "    No", "", "", "", "", "ESEH", "V/DS5  21A  EX   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     Exer-Hold All", "", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("OPT-Exer-Sell to Cover", "OPT", "3", "UPD", "ELA", "24733", "I0035265678", "C", "2000", "", "W", "21A", "21A", "20150501EE", "20150501EX", "1000", "1000", "1000", "1000", "", "", "2000", "2000", "", "EETD", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "21A  EX     01/05/2015  01/01/2020  DS5    V            0.000000                 " +
            "    No", "21A  EE     01/05/2015  01/01/2020  DS5    V            0.000000                 " +
            "    No", "", "", "", "ESEH", "V/DS5  21A  EX   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     Exer-STC            Wire Payment", "V/DS5  21A  EE   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     Exer-STC            Wire Payment", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("OPT-NO Action", "OPT", "3", "UPD", "ELA", "24734", "I0036246634", "L", "", "", "", "21A", "21A", "20150501EE", "20150501EX", "1000", "1000", "", "", "", "", "2000", "", "", "EETD", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "21A  EX     01/05/2015  01/01/2020  DS5    V            0.000000                 " +
            "    No", "21A  EE     01/05/2015  01/01/2020  DS5    V            0.000000                 " +
            "    No", "", "", "", "ESEH", "V/DS5  21A  EX   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     No Action", "V/DS5  21A  EE   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     No Action", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("PRS-Exer-Sell All1", "PRS", "4", "UPD", "ELA", "24735", "I0035120696", "A", "2000", "", "D", "21A", "21A", "20150501EE", "20150501EX", "1000", "1000", "1000", "1000", "", "", "2000", "2000", "", "EETD", "/PRS", "PERFORMANCE RIGHTS", "21A  EX     01/05/2015  01/01/2020  DS6    V            0.000000                 " +
            "    No", "21A  EE     01/05/2015  01/01/2020  DS6    V            0.000000                 " +
            "    No", "", "", "", "ESEH", "V/DS6  21A  EX   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     Exer-Sell All       Direct Credit", "V/DS6  21A  EE   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     Exer-Sell All       Direct Credit", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("PRS-Exer-Sell All2", "PRS", "4", "UPD", "ELA", "24736", "I0036337826", "A", "1500", "", "C", "21A", "21A", "20150501EE", "20150501EX", "1000", "1000", "1000", "500", "", "", "2000", "1500", "", "EETD", "/PRS", "PERFORMANCE RIGHTS", "21A  EX     01/05/2015  01/01/2020  DS6    V            0.000000                 " +
            "    No", "21A  EE     01/05/2015  01/01/2020  DS6    V            0.000000                 " +
            "    No", "", "", "", "ESEH", "V/DS6  21A  EX   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     Exer-Sell All       Local Cheque", "V/DS6  21A  EE   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     Exer-Sell All       Local Cheque", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("PRS-Exer-Sell Partial", "PRS", "4", "UPD", "ELA", "24737", "I0035099786", "P", "1000", "750", "F", "21A", "", "20150501EX", "", "1000", "", "1000", "", "750", "", "1000", "1000", "750", "EETD", "/PRS", "PERFORMANCE RIGHTS", "21A  EX     01/05/2015  01/01/2020  DS6    V            0.000000                 " +
            "    No", "", "", "", "", "ESEH", "V/DS6  21A  EX   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     Exer-Sell Partial   Foreign Cheque    USD", "", "", "", "", "USD", null)]
        [NUnit.Framework.TestCaseAttribute("PRS-Exer & Hold", "PRS", "4", "UPD", "ELA", "246738", "I0036451840", "T", "1000", "", "", "21A", "", "20150501EE", "", "1000", "", "1000", "", "", "", "1000", "1000", "", "EETD", "/PRS", "PERFORMANCE RIGHTS", "21A  EE     01/05/2015  01/01/2020  DS6    V            0.000000                 " +
            "    No", "", "", "", "", "ESEH", "V/DS6  21A  EE   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     Exer-Hold All", "", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("PRS-NO Action", "PRS", "4", "UPD", "ELA", "24740", "I0036246634", "L", "", "", "", "21A", "21A", "20150501EE", "20150501EX", "1000", "1000", "", "", "", "", "2000", "", "", "EETD", "/PRS", "PERFORMANCE RIGHTS", "21A  EX     01/05/2015  01/01/2020  DS6    V            0.000000                 " +
            "    No", "21A  EE     01/05/2015  01/01/2020  DS6    V            0.000000                 " +
            "    No", "", "", "", "ESEH", "V/DS6  21A  EX   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     No Action", "V/DS6  21A  EE   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     No Action", "", "", "", "", null)]
        public virtual void TestCase368056_ELA_AddHolderElectionDetails(
                    string test, 
                    string classCode, 
                    string eventNumber, 
                    string selection, 
                    string menuItem, 
                    string transNumber, 
                    string searchName, 
                    string disposalChoice, 
                    string exerciseUnits, 
                    string partialUnits, 
                    string pymtMthd, 
                    string registerCode1, 
                    string registerCode2, 
                    string certID1, 
                    string certID2, 
                    string eventUnits1, 
                    string eventUnits2, 
                    string exerciseBal1, 
                    string exerciseBal2, 
                    string currentBal1, 
                    string currentBal2, 
                    string totEventUnits, 
                    string totExerciseUnits, 
                    string totCurrentBal, 
                    string action, 
                    string locateArgument, 
                    string schemeName, 
                    string detailLine1, 
                    string detailLine2, 
                    string detailLine3, 
                    string detailLine4, 
                    string detailLine5, 
                    string action1, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string currencyCode, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "NAB2_AUTO",
                    "36805",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 36805: 6_ELA. Add Holder Election Details", @__tags);
#line 336
this.ScenarioSetup(scenarioInfo);
#line 337
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 338
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 339
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 340
  testRunner.And("In EOL00107 I Click on \"event processing\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 341
  testRunner.And(string.Format("In EOL00135 I Select Menu item as \"{0}\" \"{1}\" \"{2}\"", eventNumber, selection, menuItem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 342
  testRunner.And(string.Format("In EOL03401 I Select Holder as \"{0}\" \"{1}\"", transNumber, searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 343
  testRunner.And(string.Format("In EOL03401 I Add/Modify Event Election Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" " +
                        "\"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"" +
                        "{17}\"", disposalChoice, exerciseUnits, partialUnits, pymtMthd, currencyCode, registerCode1, registerCode2, certID1, certID2, eventUnits1, eventUnits2, exerciseBal1, exerciseBal2, currentBal1, currentBal2, totEventUnits, totExerciseUnits, totCurrentBal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 344
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 345
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 346
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 347
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 348
 testRunner.Then(string.Format("In ENSESS51 In should see Event Tax Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\"", classCode, schemeName, detailLine1, detailLine2, detailLine3, detailLine4, detailLine5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 349
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 350
 testRunner.Then(string.Format("In ENSESS40 I should see Event History Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\"", classCode, schemeName, line1, line2, line3, line4, line5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 39699: 7_ELC. Change Holder Election Details")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.CategoryAttribute("39699")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("OPT-A-L", "OPT", "3", "UPD", "ELC", "24741", "I0900513534", "L", "", "", "", "21A", "21A", "20150501EE", "20150501EX", "1000", "1000", "", "", "", "", "2000", "", "", "EETD", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "21A  EX     01/05/2015  01/01/2020  DS5    V            0.000000                 " +
            "    No", "21A  EE     01/05/2015  01/01/2020  DS5    V            0.000000                 " +
            "    No", "", "", "", "ESEH", "V/DS5  21A  EX   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     No Action", "V/DS5  21A  EE   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     No Action", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("OPT-C-P", "OPT", "3", "UPD", "ELC", "24742", "I0036186062", "P", "2000", "500", "C", "21A", "21A", "20150501EE", "20150501EX", "1000", "1000", "1000", "1000", "500", "", "2000", "2000", "500", "EETD", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "21A  EX     01/05/2015  01/01/2020  DS5    V            0.000000                 " +
            "    No", "21A  EE     01/05/2015  01/01/2020  DS5    V            0.000000                 " +
            "    No", "", "", "", "ESEH", "V/DS5  21A  EX   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     Exer-Sell Partial   Local Cheque", "V/DS5  21A  EE   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     Exer-Sell Partial   Local Cheque", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("OPT-P-C", "OPT", "3", "UPD", "ELC", "24743", "I0035618635", "C", "2000", "", "F", "21A", "21A", "20150501EE", "20150501EX", "1000", "1000", "1000", "1000", "", "", "2000", "2000", "", "EETD", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "21A  EX     01/05/2015  01/01/2020  DS5    V            0.000000                 " +
            "    No", "21A  EE     01/05/2015  01/01/2020  DS5    V            0.000000                 " +
            "    No", "", "", "", "ESEH", "V/DS5  21A  EX   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     Exer-STC            Foreign Cheque    GBP", "V/DS5  21A  EE   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     Exer-STC            Foreign Cheque    GBP", "", "", "", "GBP", null)]
        [NUnit.Framework.TestCaseAttribute("OPT-L-A", "OPT", "3", "UPD", "ELC", "24744", "I0036127643", "A", "1001", "", "D", "21A", "21A", "20150501EE", "20150501EX", "1000", "1000", "1000", "1", "", "", "2000", "1001", "", "EETD", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "21A  EX     01/05/2015  01/01/2020  DS5    V            0.000000                 " +
            "    No", "21A  EE     01/05/2015  01/01/2020  DS5    V            0.000000                 " +
            "    No", "", "", "", "ESEH", "V/DS5  21A  EX   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     Exer-Sell All       Direct Credit", "V/DS5  21A  EE   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     Exer-Sell All       Direct Credit", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("OPT-L-T", "OPT", "3", "UPD", "ELC", "24745", "I0036126141", "T", "1500", "", "", "21A", "21A", "20150501EE", "20150501EX", "1000", "1000", "1000", "500", "", "", "2000", "1500", "", "EETD", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "21A  EX     01/05/2015  01/01/2020  DS5    V            0.000000                 " +
            "    No", "21A  EE     01/05/2015  01/01/2020  DS5    V            0.000000                 " +
            "    No", "", "", "", "ESEH", "V/DS5  21A  EX   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     Exer-Hold All", "V/DS5  21A  EE   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     Exer-Hold All", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("PRS-A-L", "PRS", "4", "UPD", "ELC", "24746", "I0900513534", "T", "2000", "", "", "21A", "21A", "20150501EE", "20150501EX", "1000", "1000", "1000", "1000", "", "", "2000", "2000", "", "EETD", "/PRS", "PERFORMANCE RIGHTS", "21A  EX     01/05/2015  01/01/2020  DS6    V            0.000000                 " +
            "    No", "21A  EE     01/05/2015  01/01/2020  DS6    V            0.000000                 " +
            "    No", "", "", "", "ESEH", "V/DS6  21A  EX   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     Exer-Hold All", "V/DS6  21A  EE   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     Exer-Hold All", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("PRS-P-L", "PRS", "4", "UPD", "ELC", "24747", "I0036186062", "L", "", "", "", "21A", "21A", "20150501EE", "20150501EX", "1000", "1000", "", "", "", "", "2000", "", "", "EETD", "/PRS", "PERFORMANCE RIGHTS", "21A  EX     01/05/2015  01/01/2020  DS6    V            0.000000                 " +
            "    No", "21A  EE     01/05/2015  01/01/2020  DS6    V            0.000000                 " +
            "    No", "", "", "", "ESEH", "V/DS6  21A  EX   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     No Action", "V/DS6  21A  EE   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     No Action", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("PRS-L-P", "PRS", "4", "UPD", "ELC", "24748", "I0035618635", "P", "500", "400", "F", "21A", "21A", "20150501EE", "20150501EX", "1000", "1000", "500", "", "400", "", "2000", "500", "400", "EETD", "/PRS", "PERFORMANCE RIGHTS", "21A  EX     01/05/2015  01/01/2020  DS6    V            0.000000                 " +
            "    No", "21A  EE     01/05/2015  01/01/2020  DS6    V            0.000000                 " +
            "    No", "", "", "", "ESEH", "V/DS6  21A  EX   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     Exer-Sell Partial   Foreign Cheque    USD", "V/DS6  21A  EE   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     Exer-Sell Partial   Foreign Cheque    USD", "", "", "", "USD", null)]
        [NUnit.Framework.TestCaseAttribute("PRS-T-A", "PRS", "4", "UPD", "ELC", "24749", "I0036127643", "A", "2000", "", "C", "21A", "21A", "20150501EE", "20150501EX", "1000", "1000", "1000", "1000", "", "", "2000", "2000", "", "EETD", "/PRS", "PERFORMANCE RIGHTS", "21A  EX     01/05/2015  01/01/2020  DS6    V            0.000000                 " +
            "    No", "21A  EE     01/05/2015  01/01/2020  DS6    V            0.000000                 " +
            "    No", "", "", "", "ESEH", "V/DS6  21A  EX   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     Exer-Sell All       Local Cheque", "V/DS6  21A  EE   01/01/2020  01/05/2015  Current   Received    Not Actioned    E " +
            "     Exer-Sell All       Local Cheque", "", "", "", "", null)]
        public virtual void TestCase396997_ELC_ChangeHolderElectionDetails(
                    string test, 
                    string classCode, 
                    string eventNumber, 
                    string selection, 
                    string menuItem, 
                    string transNumber, 
                    string searchName, 
                    string disposalChoice, 
                    string exerciseUnits, 
                    string partialUnits, 
                    string pymtMthd, 
                    string registerCode1, 
                    string registerCode2, 
                    string certID1, 
                    string certID2, 
                    string eventUnits1, 
                    string eventUnits2, 
                    string exerciseBal1, 
                    string exerciseBal2, 
                    string currentBal1, 
                    string currentBal2, 
                    string totEventUnits, 
                    string totExerciseUnits, 
                    string totCurrentBal, 
                    string action, 
                    string locateArgument, 
                    string schemeName, 
                    string detailLine1, 
                    string detailLine2, 
                    string detailLine3, 
                    string detailLine4, 
                    string detailLine5, 
                    string action1, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string currencyCode, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "NAB2_AUTO",
                    "39699",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 39699: 7_ELC. Change Holder Election Details", @__tags);
#line 371
this.ScenarioSetup(scenarioInfo);
#line 372
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 373
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 374
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 375
  testRunner.And("In EOL00107 I Click on \"event processing\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 376
  testRunner.And(string.Format("In EOL00135 I Select Menu item as \"{0}\" \"{1}\" \"{2}\"", eventNumber, selection, menuItem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 377
  testRunner.And(string.Format("In EOL03401 I Select Holder as \"{0}\" \"{1}\"", transNumber, searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 378
  testRunner.And(string.Format("In EOL03401 I Add/Modify Event Election Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" " +
                        "\"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"" +
                        "{17}\"", disposalChoice, exerciseUnits, partialUnits, pymtMthd, currencyCode, registerCode1, registerCode2, certID1, certID2, eventUnits1, eventUnits2, exerciseBal1, exerciseBal2, currentBal1, currentBal2, totEventUnits, totExerciseUnits, totCurrentBal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 379
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 380
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 381
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 382
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 383
 testRunner.Then(string.Format("In ENSESS51 In should see Event Tax Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\"", classCode, schemeName, detailLine1, detailLine2, detailLine3, detailLine4, detailLine5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 384
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 385
 testRunner.Then(string.Format("In ENSESS40 I should see Event History Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\"", classCode, schemeName, line1, line2, line3, line4, line5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 39742: 8_ELD. Delete Holder Election Details")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.CategoryAttribute("39742")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("OPT-A", "OPT", "3", "UPD", "ELD", "24750", "I0036003847", "A", "Exercise and Sell All", "C", "Cheque", "21A", "21A", "20150501EE", "20150501EX", "1000", "1000", "1000", "1000", "", "", "2000", "2000", "", "EETD", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "21A  EX     01/05/2015  01/01/2020  DS5    V            0.000000                 " +
            "    No", "21A  EE     01/05/2015  01/01/2020  DS5    V            0.000000                 " +
            "    No", "", "", "", "ESEH", "V/DS5  21A  EX   01/01/2020  01/05/2015  Current   Deleted     Not Actioned    E", "V/DS5  21A  EE   01/01/2020  01/05/2015  Current   Deleted     Not Actioned    E", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("OPT-P", "OPT", "3", "UPD", "ELD", "24751", "I0035152041", "P", "Exercise and Sell Partial", "D", "Direct Credit - Permanent", "21A", "21A", "20150501EE", "20150501EX", "1000", "1000", "1000", "1000", "100", "", "2000", "2000", "100", "EETD", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "21A  EX     01/05/2015  01/01/2020  DS5    V            0.000000                 " +
            "    No", "21A  EE     01/05/2015  01/01/2020  DS5    V            0.000000                 " +
            "    No", "", "", "", "ESEH", "V/DS5  21A  EX   01/01/2020  01/05/2015  Current   Deleted     Not Actioned    E", "V/DS5  21A  EE   01/01/2020  01/05/2015  Current   Deleted     Not Actioned    E", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("PRS-A", "PRS", "4", "UPD", "ELD", "24752", "I0036003847", "A", "Exercise and Sell All", "C", "Cheque", "21A", "21A", "20150501EE", "20150501EX", "1000", "1000", "1000", "1000", "", "", "2000", "2000", "", "EETD", "/PRS", "PERFORMANCE RIGHTS", "21A  EX     01/05/2015  01/01/2020  DS6    V            0.000000                 " +
            "    No", "21A  EE     01/05/2015  01/01/2020  DS6    V            0.000000                 " +
            "    No", "", "", "", "ESEH", "V/DS6  21A  EX   01/01/2020  01/05/2015  Current   Deleted     Not Actioned    E", "V/DS6  21A  EE   01/01/2020  01/05/2015  Current   Deleted     Not Actioned    E", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("PRS-P", "PRS", "4", "UPD", "ELD", "24753", "I0035152041", "P", "Exercise and Sell Partial", "D", "Direct Credit - Permanent", "21A", "", "20150501EE", "", "1000", "", "1000", "", "500", "", "1000", "1000", "500", "EETD", "/PRS", "PERFORMANCE RIGHTS", "21A  EE     01/05/2015  01/01/2020  DS6    V            0.000000                 " +
            "    No", "", "", "", "", "ESEH", "V/DS6  21A  EE   01/01/2020  01/05/2015  Current   Deleted     Not Actioned    E", "", "", "", "", null)]
        public virtual void TestCase397428_ELD_DeleteHolderElectionDetails(
                    string test, 
                    string classCode, 
                    string eventNumber, 
                    string selection, 
                    string menuItem, 
                    string transNumber, 
                    string searchName, 
                    string disposalChoice, 
                    string disposalChoiceDesc, 
                    string pymtMthd, 
                    string pymtMthdDesc, 
                    string registerCode1, 
                    string registerCode2, 
                    string certID1, 
                    string certID2, 
                    string eventUnits1, 
                    string eventUnits2, 
                    string exerciseBal1, 
                    string exerciseBal2, 
                    string currentBal1, 
                    string currentBal2, 
                    string totEventUnits, 
                    string totExerciseUnits, 
                    string totCurrentBal, 
                    string action, 
                    string locateArgument, 
                    string schemeName, 
                    string detailLine1, 
                    string detailLine2, 
                    string detailLine3, 
                    string detailLine4, 
                    string detailLine5, 
                    string action1, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "NAB2_AUTO",
                    "39742",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 39742: 8_ELD. Delete Holder Election Details", @__tags);
#line 404
this.ScenarioSetup(scenarioInfo);
#line 405
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 406
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 407
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 408
  testRunner.And("In EOL00107 I Click on \"event processing\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 409
  testRunner.And(string.Format("In EOL00135 I Select Menu item as \"{0}\" \"{1}\" \"{2}\"", eventNumber, selection, menuItem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 410
  testRunner.And(string.Format("In EOL03407 I Delete Event details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"" +
                        "{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"{17}\" \"{18}\"", transNumber, searchName, disposalChoice, disposalChoiceDesc, pymtMthd, pymtMthdDesc, registerCode1, registerCode2, certID1, certID2, eventUnits1, eventUnits2, exerciseBal1, exerciseBal2, currentBal1, currentBal2, totEventUnits, totExerciseUnits, totCurrentBal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 411
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 412
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 413
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 414
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 415
 testRunner.Then(string.Format("In ENSESS51 In should see Event Tax Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\"", classCode, schemeName, detailLine1, detailLine2, detailLine3, detailLine4, detailLine5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 416
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 417
 testRunner.Then(string.Format("In ENSESS40 I should see Event History Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\"", classCode, schemeName, line1, line2, line3, line4, line5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 40651: 5_TAX. Update Holder Tax/International Assignee Details-Add/Dele" +
            "te-I Type Event-DEP")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.CategoryAttribute("40651")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("OPT-Y", "OPT", "4", "UPD", "TAX", "24754", "I0035711538", "Y", "45.000000", "21A", "20150501EE", "45.000000", "21A", "20150501EX", "45.000000", "EETD", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "21A  EX     01/05/2015  30/06/2021  DS7    I           45.000000", "21A  EE     01/05/2015  30/06/2021  DS7    I           45.000000", "", "", "", "ESEH", "I/DS7  21A  EX   30/06/2021  01/05/2015  Current   Unknown     Unknown", "I/DS7  21A  EE   30/06/2021  01/05/2015  Current   Unknown     Unknown", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("OPT-N", "OPT", "4", "UPD", "TAX", "24755", "I0036268832", "N", "", "21A", "20150501EE", "45.000000", "21A", "20150501EX", "45.000000", "EETD", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "21A  EX     01/05/2015  30/06/2021  DS7    I           45.000000", "21A  EE     01/05/2015  30/06/2021  DS7    I           45.000000", "", "", "", "ESEH", "I/DS7  21A  EX   30/06/2021  01/05/2015  Current   Unknown     Unknown", "I/DS7  21A  EE   30/06/2021  01/05/2015  Current   Unknown     Unknown", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("PRS-Y", "PRS", "5", "UPD", "TAX", "24756", "I0035711538", "Y", "45.000000", "21A", "20150501EE", "45.000000", "21A", "20150501EX", "45.000000", "EETD", "/PRS", "PERFORMANCE RIGHTS", "21A  EX     01/05/2015  30/06/2021  DS8    I           45.000000", "21A  EE     01/05/2015  30/06/2021  DS8    I           45.000000", "", "", "", "ESEH", "I/DS8  21A  EX   30/06/2021  01/05/2015  Current   Unknown     Unknown", "I/DS8  21A  EE   30/06/2021  01/05/2015  Current   Unknown     Unknown", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("PRS-N", "PRS", "5", "UPD", "TAX", "24757", "I0036268832", "N", "", "21A", "20150501EE", "45.000000", "21A", "20150501EX", "45.000000", "EETD", "/PRS", "PERFORMANCE RIGHTS", "21A  EX     01/05/2015  30/06/2021  DS8    I           45.000000", "21A  EE     01/05/2015  30/06/2021  DS8    I           45.000000", "", "", "", "ESEH", "I/DS8  21A  EX   30/06/2021  01/05/2015  Current   Unknown     Unknown", "I/DS8  21A  EE   30/06/2021  01/05/2015  Current   Unknown     Unknown", "", "", "", null)]
        public virtual void TestCase406515_TAX_UpdateHolderTaxInternationalAssigneeDetails_AddDelete_ITypeEvent_DEP(
                    string test, 
                    string classCode, 
                    string eventNumber, 
                    string selection, 
                    string menuItem, 
                    string transNumber, 
                    string searchName, 
                    string updtAllCert, 
                    string witholdingTaxRate, 
                    string registerCode1, 
                    string certID1, 
                    string wthldgTaxRate1, 
                    string registerCode2, 
                    string certID2, 
                    string wthldgTaxRate2, 
                    string action, 
                    string locateArgument, 
                    string schemeName, 
                    string detailLine1, 
                    string detailLine2, 
                    string detailLine3, 
                    string detailLine4, 
                    string detailLine5, 
                    string action1, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "NAB2_AUTO",
                    "40651",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 40651: 5_TAX. Update Holder Tax/International Assignee Details-Add/Dele" +
                    "te-I Type Event-DEP", @__tags);
#line 430
this.ScenarioSetup(scenarioInfo);
#line 432
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 433
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 434
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 435
  testRunner.And("In EOL00107 I Click on \"event processing\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 436
  testRunner.And(string.Format("In EOL00135 I Select Menu item as \"{0}\" \"{1}\" \"{2}\"", eventNumber, selection, menuItem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 437
  testRunner.And(string.Format("In EOL02901 I Add Event Tax Details for I type as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\"", transNumber, searchName, updtAllCert, witholdingTaxRate, registerCode1, certID1, wthldgTaxRate1, registerCode2, certID2, wthldgTaxRate2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 438
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 439
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 440
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 441
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 442
 testRunner.Then(string.Format("In ENSESS51 In should see Event Tax Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\"", classCode, schemeName, detailLine1, detailLine2, detailLine3, detailLine4, detailLine5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 443
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 444
 testRunner.Then(string.Format("In ENSESS40 I should see Event History Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\"", classCode, schemeName, line1, line2, line3, line4, line5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 39986: 10_TAX. Update Holder Tax/International Assignee Details-T Type")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.CategoryAttribute("39986")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("OPT-Y", "OPT", "5", "UPD", "TAX", "24758", "I0031346100", "Y", "45.000000", "AUS-RES", "F", "", "45.000000", "AUS-RES", "F", "", "45.000000", "AUS-RES", "F", "", "21A", "20150501EE", "21A", "20150501EX", "EETD", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "21A  EX     01/05/2015  01/07/2021  DS9    T           45.000000          F      " +
            "    No", "21A  EE     01/05/2015  01/07/2021  DS9    T           45.000000          F      " +
            "    No", "", "", "", "ESEH", "", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("OPT-N", "OPT", "5", "UPD", "TAX", "24759", "I0036114436", "N", "", "", "", "", "45.000000", "AUS-RES", "M", "", "42.500000", "AUS-RES", "F", "", "21A", "20150501EE", "21A", "20150501EX", "EETD", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "21A  EX     01/05/2015  01/07/2021  DS9    T           42.500000          F      " +
            "    No", "21A  EE     01/05/2015  01/07/2021  DS9    T           45.000000          M      " +
            "    No", "", "", "", "ESEH", "", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("PRS-Y", "PRS", "6", "UPD", "TAX", "24760", "I0031346100", "Y", "45.000000", "AUS-RES", "F", "", "45.000000", "AUS-RES", "F", "", "45.000000", "AUS-RES", "F", "", "21A", "20150501EE", "21A", "20150501EX", "EETD", "/PRS", "PERFORMANCE RIGHTS", "21A  EX     01/05/2015  01/07/2021  ES9    T           45.000000          F      " +
            "    No", "21A  EE     01/05/2015  01/07/2021  ES9    T           45.000000          F      " +
            "    No", "", "", "", "ESEH", "", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("PRS-N", "PRS", "6", "UPD", "TAX", "24761", "I0036114436", "N", "", "", "", "", "45.000000", "AUS-RES", "M", "", "42.500000", "AUS-RES", "F", "", "21A", "20150501EE", "21A", "20150501EX", "EETD", "/PRS", "PERFORMANCE RIGHTS", "21A  EX     01/05/2015  01/07/2021  ES9    T           42.500000          F      " +
            "    No", "21A  EE     01/05/2015  01/07/2021  ES9    T           45.000000          M      " +
            "    No", "", "", "", "ESEH", "", "", "", "", "", null)]
        public virtual void TestCase3998610_TAX_UpdateHolderTaxInternationalAssigneeDetails_TType(
                    string test, 
                    string classCode, 
                    string eventNumber, 
                    string selection, 
                    string menuItem, 
                    string transNumber, 
                    string searchName, 
                    string updtAllCert, 
                    string witholdingTaxRate, 
                    string witholdingTaxCode, 
                    string marketValueType, 
                    string complexHolderCode, 
                    string wthldgTaxRate1, 
                    string wthldgTaxCode1, 
                    string mktValueType1, 
                    string cmplxHldrCode1, 
                    string wthldgTaxRate2, 
                    string wthldgTaxCode2, 
                    string mktValueType2, 
                    string cmplxHldrCode2, 
                    string registerCode1, 
                    string certID1, 
                    string registerCode2, 
                    string certID2, 
                    string action, 
                    string locateArgument, 
                    string schemeName, 
                    string detailLine1, 
                    string detailLine2, 
                    string detailLine3, 
                    string detailLine4, 
                    string detailLine5, 
                    string action1, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "NAB2_AUTO",
                    "39986",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 39986: 10_TAX. Update Holder Tax/International Assignee Details-T Type", @__tags);
#line 457
this.ScenarioSetup(scenarioInfo);
#line 459
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 460
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 461
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 462
  testRunner.And("In EOL00107 I Click on \"event processing\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 463
  testRunner.And(string.Format("In EOL00135 I Select Menu item as \"{0}\" \"{1}\" \"{2}\"", eventNumber, selection, menuItem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 464
  testRunner.And(string.Format("In EOL02901 I Add Event Tax Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" " +
                        "\"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\"", transNumber, searchName, updtAllCert, witholdingTaxRate, witholdingTaxCode, marketValueType, complexHolderCode, wthldgTaxRate1, wthldgTaxCode1, mktValueType1, cmplxHldrCode1, wthldgTaxRate2, wthldgTaxCode2, mktValueType2, cmplxHldrCode2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 466
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 467
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 468
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 469
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 470
 testRunner.Then(string.Format("In ENSESS51 In should see Event Tax Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\"", classCode, schemeName, detailLine1, detailLine2, detailLine3, detailLine4, detailLine5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 471
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 472
 testRunner.Then(string.Format("In ENSESS40 I should see Event History Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\"", classCode, schemeName, line1, line2, line3, line4, line5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 35795: 5_DTX. Delete Holder Tax/International Assignee Details")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.CategoryAttribute("35795")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("OPT-V", "OPT", "3", "UPD", "DTX", "312057", "I0035738461", "21A", "20150501EE", "45.000000", "AUS-RES", "F", "", "21A", "20150501EX", "40.000000", "AUS-RES", "M", "", "EETD", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "21A  EX     01/05/2015  01/01/2020  DS5    V            0.000000                 " +
            "    No", "21A  EE     01/05/2015  01/01/2020  DS5    V            0.000000                 " +
            "    No", "", "", "", "V/DS5  21A  EX   01/01/2020  01/05/2015  Current   Not Recvd   Not Actioned    E", "V/DS5  21A  EE   01/01/2020  01/05/2015  Current   Not Recvd   Not Actioned    E", "", "", "", "ESEH", null)]
        [NUnit.Framework.TestCaseAttribute("PRS-V", "PRS", "4", "UPD", "DTX", "312058", "I0035738461", "21A", "20150501EE", "45.000000", "AUS-RES", "F", "", "21A", "20150501EX", "45.000000", "AUS-RES", "F", "", "EETD", "/PRS", "PERFORMANCE RIGHTS", "21A  EX     01/05/2015  01/01/2020  DS6    V            0.000000                 " +
            "    No", "21A  EE     01/05/2015  01/01/2020  DS6    V            0.000000                 " +
            "    No", "", "", "", "V/DS6  21A  EX   01/01/2020  01/05/2015  Current   Not Recvd   Not Actioned    E", "V/DS6  21A  EE   01/01/2020  01/05/2015  Current   Not Recvd   Not Actioned    E", "", "", "", "ESEH", null)]
        [NUnit.Framework.TestCaseAttribute("OPT-I-N", "OPT", "4", "UPD", "DTX", "247544", "I0036470810", "21A", "20150501EE", "45.000000", "", "", "", "21A", "20150501EX", "40.000000", "", "", "", "EETD", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "21A  EX     01/05/2015  30/06/2021  DS7    I            0.000000", "21A  EE     01/05/2015  30/06/2021  DS7    I            0.000000", "", "", "", "I/DS7  21A  EX   30/06/2021  01/05/2015  Deleted   Unknown     Unknown", "I/DS7  21A  EE   30/06/2021  01/05/2015  Deleted   Unknown     Unknown", "", "", "", "ESEH", null)]
        [NUnit.Framework.TestCaseAttribute("OPT-I-Y", "OPT", "4", "UPD", "DTX", "247555", "I0034820503", "21A", "20150501EE", "45.000000", "", "", "", "21A", "20150501EX", "45.000000", "", "", "", "EETD", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "21A  EX     01/05/2015  30/06/2021  DS7    I            0.000000", "21A  EE     01/05/2015  30/06/2021  DS7    I            0.000000", "", "", "", "I/DS7  21A  EX   30/06/2021  01/05/2015  Deleted   Unknown     Unknown", "I/DS7  21A  EE   30/06/2021  01/05/2015  Deleted   Unknown     Unknown", "", "", "", "ESEH", null)]
        [NUnit.Framework.TestCaseAttribute("PRS-I-Y", "PRS", "5", "UPD", "DTX", "247566", "I0036470810", "21A", "20150501EE", "45.000000", "", "", "", "21A", "20150501EX", "45.000000", "", "", "", "EETD", "/PRS", "PERFORMANCE RIGHTS", "21A  EX     01/05/2015  30/06/2021  DS8    I            0.000000", "21A  EE     01/05/2015  30/06/2021  DS8    I            0.000000", "", "", "", "I/DS8  21A  EX   30/06/2021  01/05/2015  Deleted   Unknown     Unknown", "I/DS8  21A  EE   30/06/2021  01/05/2015  Deleted   Unknown     Unknown", "", "", "", "ESEH", null)]
        [NUnit.Framework.TestCaseAttribute("PRS-I-N", "PRS", "5", "UPD", "DTX", "247577", "I0034820503", "21A", "20150501EE", "45.000000", "", "", "", "21A", "20150501EX", "42.500000", "", "", "", "EETD", "/PRS", "PERFORMANCE RIGHTS", "21A  EX     01/05/2015  30/06/2021  DS8    I            0.000000", "21A  EE     01/05/2015  30/06/2021  DS8    I            0.000000", "", "", "", "I/DS8  21A  EX   30/06/2021  01/05/2015  Deleted   Unknown     Unknown", "I/DS8  21A  EE   30/06/2021  01/05/2015  Deleted   Unknown     Unknown", "", "", "", "ESEH", null)]
        [NUnit.Framework.TestCaseAttribute("OPT-T-N", "OPT", "5", "UPD", "DTX", "24762", "I0036140411", "21A", "20150501EE", "40.000000", "AUS-RES", "V", "", "21A", "20150501EX", "45.000000", "AUS-RES", "M", "", "EETD", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "21A  EX     01/05/2015  01/07/2021  DS9    T            0.000000                 " +
            "    No", "21A  EE     01/05/2015  01/07/2021  DS9    T            0.000000                 " +
            "    No", "", "", "", "", "", "", "", "", "ESEH", null)]
        [NUnit.Framework.TestCaseAttribute("OPT-T-Y", "OPT", "5", "UPD", "DTX", "24763", "I0036140712", "21A", "20150501EE", "42.500000", "AUS-RES", "F", "", "21A", "20150501EX", "42.500000", "AUS-RES", "F", "", "EETD", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "21A  EX     01/05/2015  01/07/2021  DS9    T            0.000000                 " +
            "    No", "21A  EE     01/05/2015  01/07/2021  DS9    T            0.000000                 " +
            "    No", "", "", "", "", "", "", "", "", "ESEH", null)]
        [NUnit.Framework.TestCaseAttribute("PRS-T-N", "PRS", "6", "UPD", "DTX", "24764", "I0036140411", "21A", "20150501EE", "40.000000", "AUS-RES", "V", "", "21A", "20150501EX", "45.000000", "AUS-RES", "M", "", "EETD", "/PRS", "PERFORMANCE RIGHTS", "21A  EX     01/05/2015  01/07/2021  ES9    T            0.000000                 " +
            "    No", "21A  EE     01/05/2015  01/07/2021  ES9    T            0.000000                 " +
            "    No", "", "", "", "", "", "", "", "", "ESEH", null)]
        [NUnit.Framework.TestCaseAttribute("PRS-T-Y", "PRS", "6", "UPD", "DTX", "244765", "I0036140712", "21A", "20150501EE", "42.500000", "AUS-RES", "F", "", "21A", "20150501EX", "42.500000", "AUS-RES", "F", "", "EETD", "/PRS", "PERFORMANCE RIGHTS", "21A  EX     01/05/2015  01/07/2021  ES9    T            0.000000                 " +
            "    No", "21A  EE     01/05/2015  01/07/2021  ES9    T            0.000000                 " +
            "    No", "", "", "", "", "", "", "", "", "ESEH", null)]
        public virtual void TestCase357955_DTX_DeleteHolderTaxInternationalAssigneeDetails(
                    string test, 
                    string classCode, 
                    string eventNumber, 
                    string selection, 
                    string menuItem, 
                    string transNumber, 
                    string searchName, 
                    string registerCode1, 
                    string certID1, 
                    string wthldgTaxRate1, 
                    string wthldgTaxCode1, 
                    string mktValueType1, 
                    string cmplxHldrCode1, 
                    string registerCode2, 
                    string certID2, 
                    string wthldgTaxRate2, 
                    string wthldgTaxCode2, 
                    string mktValueType2, 
                    string cmplxHldrCode2, 
                    string action, 
                    string locateArgument, 
                    string schemeName, 
                    string detailLine1, 
                    string detailLine2, 
                    string detailLine3, 
                    string detailLine4, 
                    string detailLine5, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string action1, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "NAB2_AUTO",
                    "35795",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 35795: 5_DTX. Delete Holder Tax/International Assignee Details", @__tags);
#line 485
this.ScenarioSetup(scenarioInfo);
#line 487
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 488
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 489
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 490
  testRunner.And("In EOL00107 I Click on \"event processing\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 491
  testRunner.And(string.Format("In EOL00135 I Select Menu item as \"{0}\" \"{1}\" \"{2}\"", eventNumber, selection, menuItem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 492
  testRunner.And(string.Format("In EOL02901 I Delete Event Tax Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6" +
                        "}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\"", transNumber, searchName, registerCode1, certID1, wthldgTaxRate1, wthldgTaxCode1, mktValueType1, cmplxHldrCode1, registerCode2, certID2, wthldgTaxRate2, wthldgTaxCode2, mktValueType2, cmplxHldrCode2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 493
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 494
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 495
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 496
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 497
 testRunner.Then(string.Format("In ENSESS51 In should see Event Tax Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\"", classCode, schemeName, detailLine1, detailLine2, detailLine3, detailLine4, detailLine5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 498
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 499
 testRunner.Then(string.Format("In ENSESS40 I should see Event History Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\"", classCode, schemeName, line1, line2, line3, line4, line5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 35794: 4_TAX. Update Holder Tax/International Assignee Details-V Type")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.CategoryAttribute("35794")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("Options Plan-Y", "OPT", "3", "UPD", "TAX", "312053", "I0034480826", "Y", "45.000000", "AUS-RES", "F", "", "45.000000", "AUS-RES", "F", "", "45.000000", "AUS-RES", "F", "", "21A", "20150501EE", "21A", "20150501EX", "EETD", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "21A  EX     01/05/2015  01/01/2020  DS5    V           45.000000          F      " +
            "    No", "21A  EE     01/05/2015  01/01/2020  DS5    V           45.000000          F      " +
            "    No", "", "", "", "ESEH", "V/DS5  21A  EX   01/01/2020  01/05/2015  Current   Not Recvd   Not Actioned    E", "V/DS5  21A  EE   01/01/2020  01/05/2015  Current   Not Recvd   Not Actioned    E", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Rights Plan-Y", "PRS", "4", "UPD", "TAX", "312054", "I0034480826", "Y", "45.000000", "AUS-RES", "M", "", "45.000000", "AUS-RES", "M", "", "45.000000", "AUS-RES", "M", "", "21A", "20150501EE", "21A", "20150501EX", "EETD", "/PRS", "PERFORMANCE RIGHTS", "21A  EX     01/05/2015  01/01/2020  DS6    V           45.000000          M      " +
            "    No", "21A  EE     01/05/2015  01/01/2020  DS6    V           45.000000          M      " +
            "    No", "", "", "", "ESEH", "V/DS6  21A  EX   01/01/2020  01/05/2015  Current   Not Recvd   Not Actioned    E", "V/DS6  21A  EE   01/01/2020  01/05/2015  Current   Not Recvd   Not Actioned    E", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Options Plan-N", "OPT", "3", "UPD", "TAX", "312055", "I0036400668", "N", "", "", "", "", "45.000000", "AUS-RES", "F", "", "40.000000", "AUS-RES", "M", "", "21A", "20150501EE", "21A", "20150501EX", "EETD", "/OPT", "EXECUTIVE SHARE OPTION PLAN #2", "21A  EX     01/05/2015  01/01/2020  DS5    V           40.000000          M      " +
            "    No", "21A  EE     01/05/2015  01/01/2020  DS5    V           45.000000          F      " +
            "    No", "", "", "", "ESEH", "V/DS5  21A  EX   01/01/2020  01/05/2015  Current   Not Recvd   Not Actioned    E", "V/DS5  21A  EE   01/01/2020  01/05/2015  Current   Not Recvd   Not Actioned    E", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Rights Plan -N", "PRS", "4", "UPD", "TAX", "312056", "I0036400668", "N", "", "", "", "", "45.000000", "AUS-RES", "F", "", "40.000000", "AUS-RES", "M", "", "21A", "20150501EE", "21A", "20150501EX", "EETD", "/PRS", "PERFORMANCE RIGHTS", "21A  EX     01/05/2015  01/01/2020  DS6    V           40.000000          M      " +
            "    No", "21A  EE     01/05/2015  01/01/2020  DS6    V           45.000000          F      " +
            "    No", "", "", "", "ESEH", "V/DS6  21A  EX   01/01/2020  01/05/2015  Current   Not Recvd   Not Actioned    E", "V/DS6  21A  EE   01/01/2020  01/05/2015  Current   Not Recvd   Not Actioned    E", "", "", "", null)]
        public virtual void TestCase357944_TAX_UpdateHolderTaxInternationalAssigneeDetails_VType(
                    string test, 
                    string classCode, 
                    string eventNumber, 
                    string selection, 
                    string menuItem, 
                    string transNumber, 
                    string searchName, 
                    string updtAllCert, 
                    string witholdingTaxRate, 
                    string witholdingTaxCode, 
                    string marketValueType, 
                    string complexHolderCode, 
                    string wthldgTaxRate1, 
                    string wthldgTaxCode1, 
                    string mktValueType1, 
                    string cmplxHldrCode1, 
                    string wthldgTaxRate2, 
                    string wthldgTaxCode2, 
                    string mktValueType2, 
                    string cmplxHldrCode2, 
                    string registerCode1, 
                    string certID1, 
                    string registerCode2, 
                    string certID2, 
                    string action, 
                    string locateArgument, 
                    string schemeName, 
                    string detailLine1, 
                    string detailLine2, 
                    string detailLine3, 
                    string detailLine4, 
                    string detailLine5, 
                    string action1, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "NAB2_AUTO",
                    "35794",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 35794: 4_TAX. Update Holder Tax/International Assignee Details-V Type", @__tags);
#line 518
this.ScenarioSetup(scenarioInfo);
#line 520
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 521
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 522
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 523
  testRunner.And("In EOL00107 I Click on \"event processing\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 524
  testRunner.And(string.Format("In EOL00135 I Select Menu item as \"{0}\" \"{1}\" \"{2}\"", eventNumber, selection, menuItem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 525
  testRunner.And(string.Format("In EOL02901 I Add Event Tax Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" " +
                        "\"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\"", transNumber, searchName, updtAllCert, witholdingTaxRate, witholdingTaxCode, marketValueType, complexHolderCode, wthldgTaxRate1, wthldgTaxCode1, mktValueType1, cmplxHldrCode1, wthldgTaxRate2, wthldgTaxCode2, mktValueType2, cmplxHldrCode2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 527
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 528
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 529
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 530
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 531
 testRunner.Then(string.Format("In ENSESS51 In should see Event Tax Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\"", classCode, schemeName, detailLine1, detailLine2, detailLine3, detailLine4, detailLine5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 532
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 533
 testRunner.Then(string.Format("In ENSESS40 I should see Event History Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\"", classCode, schemeName, line1, line2, line3, line4, line5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 35988: Product Backlog Item 31216:AWL. Manual Award")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.CategoryAttribute("31216")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("Test1", "ELA", "99A", "AWL", "12/11/1999", "312059", "500.00", "500", "I0036377208", "Loan", "500", "500.00", "ESLB", "/ELA", "ELA STF SHARE OWNERSHIP PLAN(LOAN)", "99A 0000035642 12/11/1999        500        500.00         500.00     No         " +
            "  0", "*Plan Total              500*       500.00*        500.00 *", "", "", "", "", "", "", "", null)]
        public virtual void TestCase35988ProductBacklogItem31216AWL_ManualAward(
                    string test, 
                    string classCode, 
                    string registerCode, 
                    string selection, 
                    string appropDate, 
                    string transNumber, 
                    string totalMoney, 
                    string totalUnits, 
                    string searchName, 
                    string registerType1, 
                    string units1, 
                    string money1, 
                    string action, 
                    string locateArgument, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string line6, 
                    string line7, 
                    string line8, 
                    string line9, 
                    string line10, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "NAB2_AUTO",
                    "31216",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 35988: Product Backlog Item 31216:AWL. Manual Award", @__tags);
#line 546
this.ScenarioSetup(scenarioInfo);
#line 548
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 549
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 550
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 551
  testRunner.And("In EOL00123 I Click on \"awards\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 552
  testRunner.And(string.Format("In EOL00901 I Add Award details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"{7}" +
                        "\" \"{8}\" \"{9}\"", registerCode, selection, appropDate, transNumber, totalMoney, totalUnits, searchName, registerType1, units1, money1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 553
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 554
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 555
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 556
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Line1",
                        "Line2",
                        "Line3",
                        "Line4",
                        "Line5",
                        "Line6",
                        "Line7",
                        "Line8",
                        "Line9",
                        "Line10"});
            table1.AddRow(new string[] {
                        string.Format("{0}", line1),
                        string.Format("{0}", line2),
                        string.Format("{0}", line3),
                        string.Format("{0}", line4),
                        string.Format("{0}", line5),
                        string.Format("{0}", line6),
                        string.Format("{0}", line7),
                        string.Format("{0}", line8),
                        string.Format("{0}", line9),
                        string.Format("{0}", line10)});
#line 557
 testRunner.Then("In ENSESS19 I should see Loan Balance details as", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 35989: Product Backlog Item 31217:RVA. Reversal Of Award")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.CategoryAttribute("35989")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("Test1", "ELA", "312060", "500", "7846", "24723", "I0035112715", "ESLB", "/ELA", "ELA STF SHARE OWNERSHIP PLAN(LOAN)", "97A 0000035583 14/11/1997        500        500.00         500.00     No         " +
            "  0", "99A 0000035582 12/11/1999          0          0.00           0.00     No         " +
            "  0", "*Plan Total              500*       500.00*        500.00 *", "", "99A", "RVA", "", "", "", "", "", "", null)]
        public virtual void TestCase35989ProductBacklogItem31217RVA_ReversalOfAward(
                    string test, 
                    string classCode, 
                    string transNumber, 
                    string totalUnits, 
                    string rvsalRunNumber, 
                    string rvsalTransNumber, 
                    string searchName, 
                    string action, 
                    string locateArgument, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string registerCode, 
                    string selection, 
                    string totalMoney, 
                    string line6, 
                    string line7, 
                    string line8, 
                    string line9, 
                    string line10, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "NAB2_AUTO",
                    "35989",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 35989: Product Backlog Item 31217:RVA. Reversal Of Award", @__tags);
#line 570
this.ScenarioSetup(scenarioInfo);
#line 572
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 573
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 574
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 575
  testRunner.And("In EOL00123 I Click on \"awards\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 576
  testRunner.And(string.Format("In EOL00401 I go to Reveral Transaction Menu \"{0}\" \"{1}\"", registerCode, selection), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 577
  testRunner.And(string.Format("In EOL00401 I perform Reversal Transaction as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"", transNumber, totalUnits, rvsalRunNumber, rvsalTransNumber, totalMoney), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 578
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 579
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 580
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 581
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Line1",
                        "Line2",
                        "Line3",
                        "Line4",
                        "Line5",
                        "Line6",
                        "Line7",
                        "Line8",
                        "Line9",
                        "Line10"});
            table2.AddRow(new string[] {
                        string.Format("{0}", line1),
                        string.Format("{0}", line2),
                        string.Format("{0}", line3),
                        string.Format("{0}", line4),
                        string.Format("{0}", line5),
                        string.Format("{0}", line6),
                        string.Format("{0}", line7),
                        string.Format("{0}", line8),
                        string.Format("{0}", line9),
                        string.Format("{0}", line10)});
#line 582
 testRunner.Then("In ENSESS19 I should see Loan Balance details as", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 36029: Product Backlog Item 31987:RMN. Manual Regular Payment")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.CategoryAttribute("36029")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        [NUnit.Framework.TestCaseAttribute("Test1", "ELA", "99A", "RMN", "24724", "01/01/2014", "100.00", "I0036108282", "ESLB", "/ELA", "ELA STF SHARE OWNERSHIP PLAN(LOAN)", "99A 0000035584 12/11/1999        500       1000.00         900.00     No         " +
            "  0", "*Plan Total              500*      1000.00*        900.00 *", "", "", "ESLT", "/ELA/99A", "12/11/1999 ESAWL  7847/00024239/0001         1000.00-", "01/01/2014 ESRPY  7849/00024724/0001          100.00", "* Loan Total            900.00-*", "", "", "", "", "", "", "", null)]
        public virtual void TestCase36029ProductBacklogItem31987RMN_ManualRegularPayment(
                    string test, 
                    string classCode, 
                    string registerCode, 
                    string selection, 
                    string transNumber, 
                    string paymentDate, 
                    string paymentAmount, 
                    string searchName, 
                    string action, 
                    string locateArgument, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string action1, 
                    string locateArgument1, 
                    string dLine1, 
                    string dLine2, 
                    string dLine3, 
                    string dLine4, 
                    string dLine5, 
                    string line6, 
                    string line7, 
                    string line8, 
                    string line9, 
                    string line10, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "NAB2_AUTO",
                    "36029",
                    "EP_EmployeePlanProcessing",
                    "FullSmokeTest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 36029: Product Backlog Item 31987:RMN. Manual Regular Payment", @__tags);
#line 595
this.ScenarioSetup(scenarioInfo);
#line 597
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 598
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 599
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 600
  testRunner.And("In EOL00123 I Click on \"payments\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 601
  testRunner.And(string.Format("In EOL01901 I go to manual Payments Menu \"{0}\" \"{1}\"", registerCode, selection), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 602
  testRunner.And(string.Format("In EOL01901 I Add Manual Payment Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\"", transNumber, paymentDate, paymentAmount, searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 603
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 604
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 605
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 606
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Line1",
                        "Line2",
                        "Line3",
                        "Line4",
                        "Line5",
                        "Line6",
                        "Line7",
                        "Line8",
                        "Line9",
                        "Line10"});
            table3.AddRow(new string[] {
                        string.Format("{0}", line1),
                        string.Format("{0}", line2),
                        string.Format("{0}", line3),
                        string.Format("{0}", line4),
                        string.Format("{0}", line5),
                        string.Format("{0}", line6),
                        string.Format("{0}", line7),
                        string.Format("{0}", line8),
                        string.Format("{0}", line9),
                        string.Format("{0}", line10)});
#line 607
 testRunner.Then("In ENSESS19 I should see Loan Balance details as", ((string)(null)), table3, "Then ");
#line 610
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 611
 testRunner.Then(string.Format("In ENSESS20 I should see Loan Transactions as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"", dLine1, dLine2, dLine3, dLine4, dLine5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 36030: Product Backlog Item 31988:AMN. Manual Adhoc Payment")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.CategoryAttribute("36030")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("Test1", "ELA", "99A", "AMN", "234525", "01/01/2014", "100.00", "I0035310258", "ESLB", "/ELA", "ELA STF SHARE OWNERSHIP PLAN(LOAN)", "99A 0000035585 12/11/1999        500       1000.00         900.00     No         " +
            "  0", "*Plan Total              500*      1000.00*        900.00 *", "", "", "ESLT", "/ELA/99A", "12/11/1999 ESAWL  7847/00024240/0001         1000.00-", "01/01/2014 ESAPY  7849/00234525/0001          100.00", "* Loan Total            900.00-*", "", "", "", "", "", "", "", null)]
        public virtual void TestCase36030ProductBacklogItem31988AMN_ManualAdhocPayment(
                    string test, 
                    string classCode, 
                    string registerCode, 
                    string selection, 
                    string transNumber, 
                    string paymentDate, 
                    string paymentAmount, 
                    string searchName, 
                    string action, 
                    string locateArgument, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string action1, 
                    string locateArgument1, 
                    string dLine1, 
                    string dLine2, 
                    string dLine3, 
                    string dLine4, 
                    string dLine5, 
                    string line6, 
                    string line7, 
                    string line8, 
                    string line9, 
                    string line10, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "NAB2_AUTO",
                    "36030",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 36030: Product Backlog Item 31988:AMN. Manual Adhoc Payment", @__tags);
#line 621
this.ScenarioSetup(scenarioInfo);
#line 623
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 624
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 625
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 626
  testRunner.And("In EOL00123 I Click on \"payments\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 627
  testRunner.And(string.Format("In EOL01901 I go to manual Payments Menu \"{0}\" \"{1}\"", registerCode, selection), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 628
  testRunner.And(string.Format("In EOL01901 I Add Manual Payment Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\"", transNumber, paymentDate, paymentAmount, searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 629
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 630
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 631
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 632
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Line1",
                        "Line2",
                        "Line3",
                        "Line4",
                        "Line5",
                        "Line6",
                        "Line7",
                        "Line8",
                        "Line9",
                        "Line10"});
            table4.AddRow(new string[] {
                        string.Format("{0}", line1),
                        string.Format("{0}", line2),
                        string.Format("{0}", line3),
                        string.Format("{0}", line4),
                        string.Format("{0}", line5),
                        string.Format("{0}", line6),
                        string.Format("{0}", line7),
                        string.Format("{0}", line8),
                        string.Format("{0}", line9),
                        string.Format("{0}", line10)});
#line 633
 testRunner.Then("In ENSESS19 I should see Loan Balance details as", ((string)(null)), table4, "Then ");
#line 636
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 637
 testRunner.Then(string.Format("In ENSESS20 I should see Loan Transactions as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"", dLine1, dLine2, dLine3, dLine4, dLine5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 36032: Product Backlog Item 31990:RVM. Payment Reversal")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("NAB2_AUTO")]
        [NUnit.Framework.CategoryAttribute("36032")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("Test1", "ELA", "99A", "RVM", "244726", "200.00", "7849", "00005401", "I0036384956", "ESLB", "/ELA", "ELA STF SHARE OWNERSHIP PLAN(LOAN)", "99A 0000035586 12/11/1999        500       1000.00         800.00     No         " +
            "  0", "*Plan Total              500*      1000.00*        800.00 *", "", "", "ESLT", "/ELA/99A", "12/11/1999 ESAWL  7847/00024241/0001         1000.00-", "01/01/2014 ESRPY  7847/00024242/0001          100.00", "01/01/2014 ESRPY  7849/00005400/0001          100.00", "01/05/2014 ESAPY  7849/00005401/0001          200.00                7850/02134324" +
            "", "01/05/2014 ESRVM  7850/02134324/0001          200.00-               7849/00005401" +
            "", "", "", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "ELA", "99A", "RVM", "244727", "100.00", "7847", "00000340", "I0036475412", "ESLB", "/ELA", "ELA STF SHARE OWNERSHIP PLAN(LOAN)", "99A 0000035587 12/11/1999        500       1000.00        1000.00     No         " +
            "  0", "*Plan Total              500*      1000.00*       1000.00 *", "", "", "ESLT", "/ELA/99A", "12/11/1999 ESAWL  7847/00000339/0001         1000.00-", "01/01/2014 ESAPY  7847/00000340/0001          100.00                7850/00004327" +
            "", "01/01/2014 ESRVM  7850/00004327/0001          100.00-               7847/00000340" +
            "", "* Loan Total           1000.00-*", "", "", "", "", "", "", "", null)]
        public virtual void TestCase36032ProductBacklogItem31990RVM_PaymentReversal(
                    string test, 
                    string classCode, 
                    string registerCode, 
                    string selection, 
                    string transNumber, 
                    string totalMoney, 
                    string rvsalRunNumber, 
                    string rvsalTransNumber, 
                    string searchName, 
                    string action, 
                    string locateArgument, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string action1, 
                    string locateArgument1, 
                    string dLine1, 
                    string dLine2, 
                    string dLine3, 
                    string dLine4, 
                    string dLine5, 
                    string totalUnits, 
                    string line6, 
                    string line7, 
                    string line8, 
                    string line9, 
                    string line10, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "NAB2_AUTO",
                    "36032",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 36032: Product Backlog Item 31990:RVM. Payment Reversal", @__tags);
#line 648
this.ScenarioSetup(scenarioInfo);
#line 649
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 650
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 651
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 652
  testRunner.And("In EOL00123 I Click on \"payments\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 653
  testRunner.And(string.Format("In EOL00401 I go to Reveral Transaction Menu \"{0}\" \"{1}\"", registerCode, selection), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 654
  testRunner.And(string.Format("In EOL00401 I perform Reversal Transaction as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"", transNumber, totalUnits, rvsalRunNumber, rvsalTransNumber, totalMoney), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 655
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 656
 testRunner.When("In SELCOY01 I select the company: \"NAB2_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 657
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 658
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Line1",
                        "Line2",
                        "Line3",
                        "Line4",
                        "Line5",
                        "Line6",
                        "Line7",
                        "Line8",
                        "Line9",
                        "Line10"});
            table5.AddRow(new string[] {
                        string.Format("{0}", line1),
                        string.Format("{0}", line2),
                        string.Format("{0}", line3),
                        string.Format("{0}", line4),
                        string.Format("{0}", line5),
                        string.Format("{0}", line6),
                        string.Format("{0}", line7),
                        string.Format("{0}", line8),
                        string.Format("{0}", line9),
                        string.Format("{0}", line10)});
#line 659
 testRunner.Then("In ENSESS19 I should see Loan Balance details as", ((string)(null)), table5, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 40288: 1_Add/Change/Delete Holder Event-DEP")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("40288")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        [NUnit.Framework.TestCaseAttribute("Test1", "DEP", "3", "UPD", "ADD", "4452123", "I0100002841", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "366", "366", "EETD", "/DEP", "DEFERRED EMP SHARE PLAN - AU", "12A  EP     12/06/2013  01/01/2020  EV1    V            0.000000                 " +
            "    No", "12A  EP     13/05/2013  01/01/2020  EV1    V            0.000000                 " +
            "    No", "12A  EP     12/04/2013  01/01/2020  EV1    V            0.000000                 " +
            "    No", "12A  EP     12/03/2013  01/01/2020  EV1    V            0.000000                 " +
            "    No", "12A  EP     12/02/2013  01/01/2020  EV1    V            0.000000                 " +
            "    No", "ESEH", "V/EV1  12A  EP   01/01/2020  12/06/2013  Current   Not Recvd   Not Actioned    E", "V/EV1  12A  EP   01/01/2020  13/05/2013  Current   Not Recvd   Not Actioned    E", "V/EV1  12A  EP   01/01/2020  12/04/2013  Current   Not Recvd   Not Actioned    E", "V/EV1  12A  EP   01/01/2020  12/03/2013  Current   Not Recvd   Not Actioned    E", "V/EV1  12A  EP   01/01/2020  12/02/2013  Current   Not Recvd   Not Actioned    E", "CHG", "4451235", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "87", "87", "12A  EP     12/06/2013  01/01/2020  EV1    V            0.000000                 " +
            "    No", "12A  EP     13/05/2013  01/01/2020  EV1    V            0.000000                 " +
            "    No", "12A  EP     12/04/2013  01/01/2020  EV1    V            0.000000                 " +
            "    No", "12A  EP     12/03/2013  01/01/2020  EV1    V            0.000000                 " +
            "    No", "12A  EP     12/02/2013  01/01/2020  EV1    V            0.000000                 " +
            "    No", "V/EV1  12A  EP   01/01/2020  12/06/2013  Current   Not Recvd   Not Actioned    E", "V/EV1  12A  EP   01/01/2020  13/05/2013  Current   Not Recvd   Not Actioned    E", "V/EV1  12A  EP   01/01/2020  12/04/2013  Current   Not Recvd   Not Actioned    E", "V/EV1  12A  EP   01/01/2020  12/03/2013  Deleted   Deleted     Unknown", "V/EV1  12A  EP   01/01/2020  12/02/2013  Deleted   Deleted     Unknown", "DEL", "4451236", "12A", "12A", "20121012EP", "20121113EP", "13", "14", "13", "14", "12A  EP     12/06/2013  01/01/2020  EV1    V            0.000000                 " +
            "    No", "12A  EP     13/05/2013  01/01/2020  EV1    V            0.000000                 " +
            "    No", "12A  EP     12/04/2013  01/01/2020  EV1    V            0.000000                 " +
            "    No", "12A  EP     12/03/2013  01/01/2020  EV1    V            0.000000                 " +
            "    No", "12A  EP     12/02/2013  01/01/2020  EV1    V            0.000000                 " +
            "    No", "V/EV1  12A  EP   01/01/2020  12/06/2013  Deleted   Deleted     Not Actioned    E", "V/EV1  12A  EP   01/01/2020  13/05/2013  Deleted   Deleted     Not Actioned    E", "V/EV1  12A  EP   01/01/2020  12/04/2013  Deleted   Deleted     Not Actioned    E", "V/EV1  12A  EP   01/01/2020  12/03/2013  Deleted   Deleted     Unknown", "V/EV1  12A  EP   01/01/2020  12/02/2013  Deleted   Deleted     Unknown", null)]
        public virtual void TestCase402881_AddChangeDeleteHolderEvent_DEP(
                    string test, 
                    string classCode, 
                    string eventNumber, 
                    string selection, 
                    string menuItem, 
                    string transNumber, 
                    string searchName, 
                    string selectionInd1, 
                    string selectionInd2, 
                    string selectionInd3, 
                    string selectionInd4, 
                    string selectionInd8, 
                    string selectionInd9, 
                    string selectionInd10, 
                    string _2SelectionInd1, 
                    string _2SelectionInd2, 
                    string _2SelectionInd3, 
                    string totEventUnits, 
                    string totCurrentBal, 
                    string action, 
                    string locateArgument, 
                    string schemeName, 
                    string detailLine1, 
                    string detailLine2, 
                    string detailLine3, 
                    string detailLine4, 
                    string detailLine5, 
                    string action1, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string menuItem1, 
                    string transNumber1, 
                    string cSelectionInd1, 
                    string cSelectionInd2, 
                    string cSelectionInd3, 
                    string cSelectionInd4, 
                    string cSelectionInd8, 
                    string cSelectionInd9, 
                    string cSelectionInd10, 
                    string c2SelectionInd1, 
                    string c2SelectionInd2, 
                    string c2SelectionInd3, 
                    string cTotEventUnits, 
                    string cTotCurrentBal, 
                    string cDetailLine1, 
                    string cDetailLine2, 
                    string cDetailLine3, 
                    string cDetailLine4, 
                    string cDetailLine5, 
                    string cLine1, 
                    string cLine2, 
                    string cLine3, 
                    string cLine4, 
                    string cLine5, 
                    string menuItem2, 
                    string transNumber2, 
                    string registerCode1, 
                    string registerCode2, 
                    string certID1, 
                    string certID2, 
                    string eventUnits1, 
                    string eventUnits2, 
                    string currentBal1, 
                    string currentBal2, 
                    string dDetailLine1, 
                    string dDetailLine2, 
                    string dDetailLine3, 
                    string dDetailLine4, 
                    string dDetailLine5, 
                    string dLine1, 
                    string dLine2, 
                    string dLine3, 
                    string dLine4, 
                    string dLine5, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "CPU_AUTO",
                    "40288",
                    "EP_EmployeePlanProcessing",
                    "FullSmokeTest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 40288: 1_Add/Change/Delete Holder Event-DEP", @__tags);
#line 674
this.ScenarioSetup(scenarioInfo);
#line 675
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 676
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 677
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 678
  testRunner.And("In EOL00107 I Click on \"event processing\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 679
  testRunner.And(string.Format("In EOL00135 I Select Menu item as \"{0}\" \"{1}\" \"{2}\"", eventNumber, selection, menuItem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 680
  testRunner.And(string.Format("In EOL03301 I Add AESS Event details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\"" +
                        " \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\"", transNumber, searchName, selectionInd1, selectionInd2, selectionInd3, selectionInd4, selectionInd8, selectionInd9, selectionInd10, _2SelectionInd1, _2SelectionInd2, _2SelectionInd3, totEventUnits, totCurrentBal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 681
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 682
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 683
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 684
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 685
 testRunner.Then(string.Format("In ENSESS51 In should see Event Tax Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\"", classCode, schemeName, detailLine1, detailLine2, detailLine3, detailLine4, detailLine5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 686
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 687
 testRunner.Then(string.Format("In ENSESS40 I should see Event History Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\"", classCode, schemeName, line1, line2, line3, line4, line5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 688
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 689
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 690
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 691
  testRunner.And("In EOL00107 I Click on \"event processing\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 692
  testRunner.And(string.Format("In EOL00135 I Select Menu item as \"{0}\" \"{1}\" \"{2}\"", eventNumber, selection, menuItem1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 693
  testRunner.And(string.Format("In EOL03304 I Change AESS Event details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{" +
                        "6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\"", transNumber1, searchName, cSelectionInd1, cSelectionInd2, cSelectionInd3, cSelectionInd4, cSelectionInd8, cSelectionInd9, cSelectionInd10, c2SelectionInd1, c2SelectionInd2, c2SelectionInd3, cTotEventUnits, cTotCurrentBal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 694
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 695
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 696
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 697
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 698
 testRunner.Then(string.Format("In ENSESS51 In should see Event Tax Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\"", classCode, schemeName, cDetailLine1, cDetailLine2, cDetailLine3, cDetailLine4, cDetailLine5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 699
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 700
 testRunner.Then(string.Format("In ENSESS40 I should see Event History Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\"", classCode, schemeName, cLine1, cLine2, cLine3, cLine4, cLine5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 701
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 702
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 703
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 704
  testRunner.And("In EOL00107 I Click on \"event processing\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 705
  testRunner.And(string.Format("In EOL00135 I Select Menu item as \"{0}\" \"{1}\" \"{2}\"", eventNumber, selection, menuItem2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 706
  testRunner.And(string.Format("In EOL03307 I Delete Event details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"" +
                        "{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", transNumber2, searchName, registerCode1, registerCode2, certID1, certID2, eventUnits1, eventUnits2, currentBal1, currentBal2, cTotEventUnits, cTotCurrentBal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 707
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 708
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 709
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 710
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 711
 testRunner.Then(string.Format("In ENSESS51 In should see Event Tax Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\"", classCode, schemeName, dDetailLine1, dDetailLine2, dDetailLine3, dDetailLine4, dDetailLine5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 712
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 713
 testRunner.Then(string.Format("In ENSESS40 I should see Event History Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\"", classCode, schemeName, dLine1, dLine2, dLine3, dLine4, dLine5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 40379: 2_TAX. Update Holder Tax/International Assignee Details-Add/Dele" +
            "te-V Type Event-DEP")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("40379")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("Test1", "DEP", "5", "UPD", "ADD", "6451234", "I0030277988", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "", "", "1145", "1145", "TAX", "6451235", "Y", "45.000000", "AUS-RES", "F", "", "45.000000", "AUS-RES", "F", "", "45.000000", "AUS-RES", "F", "", "DTX", "6451236", "11A", "20120213EM", "13A", "20130712EM", "EETD", "/DEP", "DEFERRED EMP SHARE PLAN - AU", "13A  EP     12/02/2014  01/01/2020  EV3    V            0.000000                 " +
            "    No", "13A  EP     13/01/2014  01/01/2020  EV3    V            0.000000                 " +
            "    No", "13A  EP     12/12/2013  01/01/2020  EV3    V            0.000000                 " +
            "    No", "13A  EP     12/11/2013  01/01/2020  EV3    V            0.000000                 " +
            "    No", "13A  EP     14/10/2013  01/01/2020  EV3    V            0.000000                 " +
            "    No", "ESEH", "V/EV3  13A  EP   01/01/2020  12/02/2014  Current   Not Recvd   Not Actioned    E", "V/EV3  13A  EP   01/01/2020  13/01/2014  Current   Not Recvd   Not Actioned    E", "V/EV3  13A  EP   01/01/2020  12/12/2013  Current   Not Recvd   Not Actioned    E", "V/EV3  13A  EP   01/01/2020  12/11/2013  Current   Not Recvd   Not Actioned    E", "V/EV3  13A  EP   01/01/2020  14/10/2013  Current   Not Recvd   Not Actioned    E", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "DEP", "5", "UPD", "ADD", "4651234", "I0030227875", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "", "", "", "822", "822", "TAX", "4651235", "N", "", "", "", "", "45.000000", "AUS-RES", "F", "", "45.000000", "AUS-RES", "F", "", "DTX", "7451237", "13A", "20130712EM", "13A", "20130712EP", "EETD", "/DEP", "DEFERRED EMP SHARE PLAN - AU", "13A  EP     12/02/2014  01/01/2020  EV3    V            0.000000                 " +
            "    No", "13A  EP     13/01/2014  01/01/2020  EV3    V            0.000000                 " +
            "    No", "13A  EP     12/12/2013  01/01/2020  EV3    V            0.000000                 " +
            "    No", "13A  EP     12/11/2013  01/01/2020  EV3    V            0.000000                 " +
            "    No", "13A  EP     14/10/2013  01/01/2020  EV3    V            0.000000                 " +
            "    No", "ESEH", "V/EV3  13A  EP   01/01/2020  12/02/2014  Current   Not Recvd   Not Actioned    E", "V/EV3  13A  EP   01/01/2020  13/01/2014  Current   Not Recvd   Not Actioned    E", "V/EV3  13A  EP   01/01/2020  12/12/2013  Current   Not Recvd   Not Actioned    E", "V/EV3  13A  EP   01/01/2020  12/11/2013  Current   Not Recvd   Not Actioned    E", "V/EV3  13A  EP   01/01/2020  14/10/2013  Current   Not Recvd   Not Actioned    E", null)]
        public virtual void TestCase403792_TAX_UpdateHolderTaxInternationalAssigneeDetails_AddDelete_VTypeEvent_DEP(
                    string test, 
                    string classCode, 
                    string eventNumber, 
                    string selection, 
                    string menuItem, 
                    string transNumber, 
                    string searchName, 
                    string selectionInd1, 
                    string selectionInd2, 
                    string selectionInd3, 
                    string selectionInd4, 
                    string selectionInd8, 
                    string selectionInd9, 
                    string selectionInd10, 
                    string _2SelectionInd1, 
                    string _2SelectionInd2, 
                    string _2SelectionInd3, 
                    string totEventUnits, 
                    string totCurrentBal, 
                    string selection1, 
                    string transNumber1, 
                    string updtAllCert, 
                    string witholdingTaxRate, 
                    string witholdingTaxCode, 
                    string marketValueType, 
                    string complexHolderCode, 
                    string wthldgTaxRate1, 
                    string wthldgTaxCode1, 
                    string mktValueType1, 
                    string cmplxHldrCode1, 
                    string wthldgTaxRate2, 
                    string wthldgTaxCode2, 
                    string mktValueType2, 
                    string cmplxHldrCode2, 
                    string selection2, 
                    string transNumbe2, 
                    string registerCode1, 
                    string certID1, 
                    string registerCode2, 
                    string certID2, 
                    string action, 
                    string locateArgument, 
                    string schemeName, 
                    string dDetailLine1, 
                    string dDetailLine2, 
                    string dDetailLine3, 
                    string dDetailLine4, 
                    string dDetailLine5, 
                    string action1, 
                    string dLine1, 
                    string dLine2, 
                    string dLine3, 
                    string dLine4, 
                    string dLine5, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "CPU_AUTO",
                    "40379",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 40379: 2_TAX. Update Holder Tax/International Assignee Details-Add/Dele" +
                    "te-V Type Event-DEP", @__tags);
#line 725
this.ScenarioSetup(scenarioInfo);
#line 726
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 727
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 728
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 729
  testRunner.And("In EOL00107 I Click on \"event processing\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 730
  testRunner.And(string.Format("In EOL00135 I Select Menu item as \"{0}\" \"{1}\" \"{2}\"", eventNumber, selection, menuItem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 731
  testRunner.And(string.Format("In EOL03301 I Add AESS Event details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\"" +
                        " \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\"", transNumber, searchName, selectionInd1, selectionInd2, selectionInd3, selectionInd4, selectionInd8, selectionInd9, selectionInd10, _2SelectionInd1, _2SelectionInd2, _2SelectionInd3, totEventUnits, totCurrentBal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 732
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 733
 testRunner.Then("I expect to be in the \"EOL00135\" Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 734
 testRunner.When(string.Format("In EOL00135 I select \"{0}\"", selection1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 735
 testRunner.When(string.Format("In EOL02901 I Add Event Tax Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" " +
                        "\"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\"", transNumber1, searchName, updtAllCert, witholdingTaxRate, witholdingTaxCode, marketValueType, complexHolderCode, wthldgTaxRate1, wthldgTaxCode1, mktValueType1, cmplxHldrCode1, wthldgTaxRate2, wthldgTaxCode2, mktValueType2, cmplxHldrCode2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 736
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 737
 testRunner.Then("I expect to be in the \"EOL00135\" Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 738
 testRunner.When(string.Format("In EOL00135 I select \"{0}\"", selection2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 739
  testRunner.And(string.Format("In EOL02901 I Delete Event Tax Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6" +
                        "}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\"", transNumbe2, searchName, registerCode1, certID1, wthldgTaxRate1, wthldgTaxCode1, mktValueType1, cmplxHldrCode1, registerCode2, certID2, wthldgTaxRate2, wthldgTaxCode2, mktValueType2, cmplxHldrCode2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 740
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 741
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 742
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 743
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 744
 testRunner.Then(string.Format("In ENSESS51 In should see Event Tax Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\"", classCode, schemeName, dDetailLine1, dDetailLine2, dDetailLine3, dDetailLine4, dDetailLine5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 745
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 746
 testRunner.Then(string.Format("In ENSESS40 I should see Event History Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\"", classCode, schemeName, dLine1, dLine2, dLine3, dLine4, dLine5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 40391: 3_Add/Change/Delete Holder Election Details-DEP")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("40391")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("Test1", "DEP", "5", "UPD", "ADD", "8451234", "I0030238648", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "597", "597", "ELA", "8451235", "A", "", "", "C", "", "11A", "11A", "20110712EM", "20110712EP", "282", "24", "", "", "", "", "597", "", "", "ESEH", "/DEP", "DEFERRED EMP SHARE PLAN - AU", "V/EV3  11A  EP   01/01/2020  12/06/2012  Current   Received    Not Actioned    E " +
            "     Sell All            Local Cheque", "V/EV3  11A  EP   01/01/2020  11/05/2012  Current   Received    Not Actioned    E " +
            "     Sell All            Local Cheque", "V/EV3  11A  EP   01/01/2020  13/04/2012  Current   Received    Not Actioned    E " +
            "     Sell All            Local Cheque", "V/EV3  11A  EP   01/01/2020  13/03/2012  Current   Received    Not Actioned    E " +
            "     Sell All            Local Cheque", "V/EV3  11A  EP   01/01/2020  13/02/2012  Current   Received    Not Actioned    E " +
            "     Sell All            Local Cheque", "8451236", "P", "", "300", "D", "", "11A", "11A", "20110712EM", "20110712EP", "282", "24", "", "", "282", "18", "597", "", "300", "V/EV3  11A  EP   01/01/2020  12/06/2012  Current   Received    Not Actioned    E " +
            "     Sell Partial        Direct Credit", "V/EV3  11A  EP   01/01/2020  11/05/2012  Current   Received    Not Actioned    E " +
            "     Sell Partial        Direct Credit", "V/EV3  11A  EP   01/01/2020  13/04/2012  Current   Received    Not Actioned    E " +
            "     Sell Partial        Direct Credit", "V/EV3  11A  EP   01/01/2020  13/03/2012  Current   Received    Not Actioned    E " +
            "     Sell Partial        Direct Credit", "V/EV3  11A  EP   01/01/2020  13/02/2012  Current   Received    Not Actioned    E " +
            "     Sell Partial        Direct Credit", "8451237", "Direct Credit - Permanent", "ELC", "Sell Partial", "ELD", "V/EV3  11A  EP   01/01/2020  12/06/2012  Current   Deleted     Not Actioned    E", "V/EV3  11A  EP   01/01/2020  11/05/2012  Current   Deleted     Not Actioned    E", "V/EV3  11A  EP   01/01/2020  13/04/2012  Current   Deleted     Not Actioned    E", "V/EV3  11A  EP   01/01/2020  13/03/2012  Current   Deleted     Not Actioned    E", "V/EV3  11A  EP   01/01/2020  13/02/2012  Current   Deleted     Not Actioned    E", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "DEP", "5", "UPD", "ADD", "855555", "I0100003643", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "3363", "3363", "ELA", "855556", "P", "", "2000", "D", "", "07A", "07A", "20070712EP", "20070725EM", "23", "275", "", "", "23", "275", "3363", "", "2000", "ESEH", "/DEP", "DEFERRED EMP SHARE PLAN - AU", "V/EV3  12A  EP   01/01/2020  12/06/2013  Current   Received    Not Actioned    E " +
            "     Sell Partial        Direct Credit", "V/EV3  12A  EP   01/01/2020  13/05/2013  Current   Received    Not Actioned    E " +
            "     Sell Partial        Direct Credit", "V/EV3  12A  EP   01/01/2020  12/04/2013  Current   Received    Not Actioned    E " +
            "     Sell Partial        Direct Credit", "V/EV3  12A  EP   01/01/2020  12/03/2013  Current   Received    Not Actioned    E " +
            "     Sell Partial        Direct Credit", "V/EV3  12A  EP   01/01/2020  12/02/2013  Current   Received    Not Actioned    E " +
            "     Sell Partial        Direct Credit", "855557", "L", "", "", "", "", "07A", "07A", "20070712EP", "20070725EM", "23", "275", "", "", "", "", "3363", "", "", "V/EV3  12A  EP   01/01/2020  12/06/2013  Current   Received    Not Actioned    E " +
            "     Leave in Plan", "V/EV3  12A  EP   01/01/2020  13/05/2013  Current   Received    Not Actioned    E " +
            "     Leave in Plan", "V/EV3  12A  EP   01/01/2020  12/04/2013  Current   Received    Not Actioned    E " +
            "     Leave in Plan", "V/EV3  12A  EP   01/01/2020  12/03/2013  Current   Received    Not Actioned    E " +
            "     Leave in Plan", "V/EV3  12A  EP   01/01/2020  12/02/2013  Current   Received    Not Actioned    E " +
            "     Leave in Plan", "855558", "", "ELC", "Leave in Plan", "ELD", "V/EV3  12A  EP   01/01/2020  12/06/2013  Current   Deleted     Not Actioned    E", "V/EV3  12A  EP   01/01/2020  13/05/2013  Current   Deleted     Not Actioned    E", "V/EV3  12A  EP   01/01/2020  12/04/2013  Current   Deleted     Not Actioned    E", "V/EV3  12A  EP   01/01/2020  12/03/2013  Current   Deleted     Not Actioned    E", "V/EV3  12A  EP   01/01/2020  12/02/2013  Current   Deleted     Not Actioned    E", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "DEP", "5", "UPD", "ADD", "865555", "I0030238605", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "1021", "1021", "ELA", "865556", "C", "", "", "F", "USD", "08A", "08A", "20081112EP", "20081117EM", "27", "221", "", "", "", "", "1021", "", "", "ESEH", "/DEP", "DEFERRED EMP SHARE PLAN - AU", "V/EV3  13A  EP   01/01/2020  12/02/2014  Current   Received    Not Actioned    E " +
            "     Sell to Cover       Foreign Cheque    USD", "V/EV3  13A  EP   01/01/2020  13/01/2014  Current   Received    Not Actioned    E " +
            "     Sell to Cover       Foreign Cheque    USD", "V/EV3  13A  EP   01/01/2020  12/12/2013  Current   Received    Not Actioned    E " +
            "     Sell to Cover       Foreign Cheque    USD", "V/EV3  13A  EP   01/01/2020  12/11/2013  Current   Received    Not Actioned    E " +
            "     Sell to Cover       Foreign Cheque    USD", "V/EV3  13A  EP   01/01/2020  14/10/2013  Current   Received    Not Actioned    E " +
            "     Sell to Cover       Foreign Cheque    USD", "865557", "A", "", "", "F", "GBP", "08A", "08A", "20081112EP", "20081117EM", "27", "221", "", "", "", "", "1021", "", "", "V/EV3  13A  EP   01/01/2020  12/02/2014  Current   Received    Not Actioned    E " +
            "     Sell All            Foreign Cheque    GBP", "V/EV3  13A  EP   01/01/2020  13/01/2014  Current   Received    Not Actioned    E " +
            "     Sell All            Foreign Cheque    GBP", "V/EV3  13A  EP   01/01/2020  12/12/2013  Current   Received    Not Actioned    E " +
            "     Sell All            Foreign Cheque    GBP", "V/EV3  13A  EP   01/01/2020  12/11/2013  Current   Received    Not Actioned    E " +
            "     Sell All            Foreign Cheque    GBP", "V/EV3  13A  EP   01/01/2020  14/10/2013  Current   Received    Not Actioned    E " +
            "     Sell All            Foreign Cheque    GBP", "865558", "Foreign Cheque", "ELC", "Sell All", "ELD", "V/EV3  13A  EP   01/01/2020  12/02/2014  Current   Deleted     Not Actioned    E", "V/EV3  13A  EP   01/01/2020  13/01/2014  Current   Deleted     Not Actioned    E", "V/EV3  13A  EP   01/01/2020  12/12/2013  Current   Deleted     Not Actioned    E", "V/EV3  13A  EP   01/01/2020  12/11/2013  Current   Deleted     Not Actioned    E", "V/EV3  13A  EP   01/01/2020  14/10/2013  Current   Deleted     Not Actioned    E", null)]
        public virtual void TestCase403913_AddChangeDeleteHolderElectionDetails_DEP(
                    string test, 
                    string classCode, 
                    string eventNumber, 
                    string selection, 
                    string menuItem, 
                    string transNumber, 
                    string searchName, 
                    string selectionInd1, 
                    string selectionInd2, 
                    string selectionInd3, 
                    string selectionInd4, 
                    string selectionInd8, 
                    string selectionInd9, 
                    string selectionInd10, 
                    string _2SelectionInd1, 
                    string _2SelectionInd2, 
                    string _2SelectionInd3, 
                    string totEventUnits, 
                    string totCurrentBal, 
                    string selection1, 
                    string transNumber1, 
                    string disposalChoice, 
                    string exerciseUnits, 
                    string partialUnits, 
                    string pymtMthd, 
                    string currencyCode, 
                    string registerCode1, 
                    string registerCode2, 
                    string certID1, 
                    string certID2, 
                    string eventUnits1, 
                    string eventUnits2, 
                    string exerciseBal1, 
                    string exerciseBal2, 
                    string currentBal1, 
                    string currentBal2, 
                    string totEventUnits1, 
                    string totExerciseUnits1, 
                    string totCurrentBal1, 
                    string action1, 
                    string locateArgument, 
                    string schemeName, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string transNumber2, 
                    string cDisposalChoice, 
                    string cExerciseUnits, 
                    string cPartialUnits, 
                    string cPymtMthd, 
                    string cCurrencyCode, 
                    string cRegisterCode1, 
                    string cRegisterCode2, 
                    string cCertID1, 
                    string cCertID2, 
                    string cEventUnits1, 
                    string cEventUnits2, 
                    string cExerciseBal1, 
                    string cExerciseBal2, 
                    string cCurrentBal1, 
                    string cCurrentBal2, 
                    string cTotEventUnits, 
                    string cTotExerciseUnits, 
                    string cTotCurrentBal, 
                    string cLine1, 
                    string cLine2, 
                    string cLine3, 
                    string cLine4, 
                    string cLine5, 
                    string transNumber3, 
                    string cPymtMthdDesc, 
                    string menuItem1, 
                    string cDisposalChoiceDesc, 
                    string menuItem3, 
                    string dLine1, 
                    string dLine2, 
                    string dLine3, 
                    string dLine4, 
                    string dLine5, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "CPU_AUTO",
                    "40391",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 40391: 3_Add/Change/Delete Holder Election Details-DEP", @__tags);
#line 758
this.ScenarioSetup(scenarioInfo);
#line 759
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 760
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 761
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 762
  testRunner.And("In EOL00107 I Click on \"event processing\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 763
  testRunner.And(string.Format("In EOL00135 I Select Menu item as \"{0}\" \"{1}\" \"{2}\"", eventNumber, selection, menuItem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 764
  testRunner.And(string.Format("In EOL03301 I Add AESS Event details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\"" +
                        " \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\"", transNumber, searchName, selectionInd1, selectionInd2, selectionInd3, selectionInd4, selectionInd8, selectionInd9, selectionInd10, _2SelectionInd1, _2SelectionInd2, _2SelectionInd3, totEventUnits, totCurrentBal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 765
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 766
 testRunner.Then("I expect to be in the \"EOL00135\" Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 767
 testRunner.When(string.Format("In EOL00135 I select \"{0}\"", selection1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 768
 testRunner.And(string.Format("In EOL03401 I Select Holder as \"{0}\" \"{1}\"", transNumber1, searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 769
  testRunner.And(string.Format("In EOL03401 I Add/Modify Event Election Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" " +
                        "\"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"" +
                        "{17}\"", disposalChoice, exerciseUnits, partialUnits, pymtMthd, currencyCode, registerCode1, registerCode2, certID1, certID2, eventUnits1, eventUnits2, exerciseBal1, exerciseBal2, currentBal1, currentBal2, totEventUnits1, totExerciseUnits1, totCurrentBal1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 770
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 771
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 772
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 773
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 774
 testRunner.Then(string.Format("In ENSESS40 I should see Event History Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\"", classCode, schemeName, line1, line2, line3, line4, line5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 775
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 776
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 777
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 778
  testRunner.And("In EOL00107 I Click on \"event processing\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 779
  testRunner.And(string.Format("In EOL00135 I Select Menu item as \"{0}\" \"{1}\" \"{2}\"", eventNumber, selection, menuItem1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 780
  testRunner.And(string.Format("In EOL03401 I Select Holder as \"{0}\" \"{1}\"", transNumber2, searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 781
  testRunner.And(string.Format("In EOL03401 I Add/Modify Event Election Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" " +
                        "\"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"" +
                        "{17}\"", cDisposalChoice, cExerciseUnits, cPartialUnits, cPymtMthd, cCurrencyCode, cRegisterCode1, cRegisterCode2, cCertID1, cCertID2, cEventUnits1, cEventUnits2, cExerciseBal1, cExerciseBal2, cCurrentBal1, cCurrentBal2, cTotEventUnits, cTotExerciseUnits, cTotCurrentBal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 782
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 783
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 784
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 785
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 786
 testRunner.Then(string.Format("In ENSESS40 I should see Event History Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\"", classCode, schemeName, cLine1, cLine2, cLine3, cLine4, cLine5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 787
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 788
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 789
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 790
  testRunner.And("In EOL00107 I Click on \"event processing\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 791
  testRunner.And(string.Format("In EOL00135 I Select Menu item as \"{0}\" \"{1}\" \"{2}\"", eventNumber, selection, menuItem3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 792
  testRunner.And(string.Format("In EOL03407 I Delete Event details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"" +
                        "{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"{17}\" \"{18}\"", transNumber3, searchName, cDisposalChoice, cDisposalChoiceDesc, cPymtMthd, cPymtMthdDesc, cRegisterCode1, cRegisterCode2, cCertID1, cCertID2, cEventUnits1, cEventUnits2, cExerciseBal1, cExerciseBal2, cCurrentBal1, cCurrentBal2, cTotEventUnits, cTotExerciseUnits, cTotCurrentBal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 793
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 794
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 795
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 796
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 797
 testRunner.Then(string.Format("In ENSESS40 I should see Event History Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\"", classCode, schemeName, dLine1, dLine2, dLine3, dLine4, dLine5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 40648: 4_TAX. Update Holder Tax/International Assignee Details-Add/Dele" +
            "te-T Type Event")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("40648")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("Test1", "DEP", "2", "UPD", "TAX", "7777595", "I0030238605", "Y", "45.000000", "AUS-RES", "F", "", "45.000000", "AUS-RES", "F", "", "45.000000", "AUS-RES", "F", "", "DTX", "7777566", "13A", "20130712EM", "13A", "20130712EP", "EETD", "/DEP", "DEFERRED EMP SHARE PLAN - AU", "13A  EP     12/02/2014  01/01/2020  TE1    T            0.000000                 " +
            "    No", "13A  EP     13/01/2014  01/01/2020  TE1    T            0.000000                 " +
            "    No", "13A  EP     12/12/2013  01/01/2020  TE1    T            0.000000                 " +
            "    No", "13A  EP     12/11/2013  01/01/2020  TE1    T            0.000000                 " +
            "    No", "13A  EP     14/10/2013  01/01/2020  TE1    T            0.000000                 " +
            "    No", "ESEH", "", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "DEP", "2", "UPD", "TAX", "8949566", "I0100007525", "N", "", "", "", "", "45.000000", "AUS-RES", "F", "", "45.000000", "AUS-RES", "M", "", "DTX", "8775588", "11A", "20110712EM", "13A", "20130712EM", "EETD", "/DEP", "DEFERRED EMP SHARE PLAN - AU", "13A  EM     12/07/2013  01/01/2020  TE1    T            0.000000                 " +
            "    No", "11A  EM     12/07/2011  01/01/2020  TE1    T            0.000000                 " +
            "    No", "", "", "", "ESEH", "", "", "", "", "", null)]
        public virtual void TestCase406484_TAX_UpdateHolderTaxInternationalAssigneeDetails_AddDelete_TTypeEvent(
                    string test, 
                    string classCode, 
                    string eventNumber, 
                    string selection, 
                    string menuItem, 
                    string transNumber, 
                    string searchName, 
                    string updtAllCert, 
                    string witholdingTaxRate, 
                    string witholdingTaxCode, 
                    string marketValueType, 
                    string complexHolderCode, 
                    string wthldgTaxRate1, 
                    string wthldgTaxCode1, 
                    string mktValueType1, 
                    string cmplxHldrCode1, 
                    string wthldgTaxRate2, 
                    string wthldgTaxCode2, 
                    string mktValueType2, 
                    string cmplxHldrCode2, 
                    string selection2, 
                    string transNumbe2, 
                    string registerCode1, 
                    string certID1, 
                    string registerCode2, 
                    string certID2, 
                    string action, 
                    string locateArgument, 
                    string schemeName, 
                    string dDetailLine1, 
                    string dDetailLine2, 
                    string dDetailLine3, 
                    string dDetailLine4, 
                    string dDetailLine5, 
                    string action1, 
                    string dLine1, 
                    string dLine2, 
                    string dLine3, 
                    string dLine4, 
                    string dLine5, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "CPU_AUTO",
                    "40648",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 40648: 4_TAX. Update Holder Tax/International Assignee Details-Add/Dele" +
                    "te-T Type Event", @__tags);
#line 810
this.ScenarioSetup(scenarioInfo);
#line 811
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 812
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 813
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 814
  testRunner.And("In EOL00107 I Click on \"event processing\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 815
  testRunner.And(string.Format("In EOL00135 I Select Menu item as \"{0}\" \"{1}\" \"{2}\"", eventNumber, selection, menuItem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 816
  testRunner.And(string.Format("In EOL02901 I Add Event Tax Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" " +
                        "\"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\"", transNumber, searchName, updtAllCert, witholdingTaxRate, witholdingTaxCode, marketValueType, complexHolderCode, wthldgTaxRate1, wthldgTaxCode1, mktValueType1, cmplxHldrCode1, wthldgTaxRate2, wthldgTaxCode2, mktValueType2, cmplxHldrCode2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 817
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 818
 testRunner.Then("I expect to be in the \"EOL00135\" Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 819
 testRunner.When(string.Format("In EOL00135 I select \"{0}\"", selection2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 820
  testRunner.And(string.Format("In EOL02901 I Delete Event Tax Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6" +
                        "}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\"", transNumbe2, searchName, registerCode1, certID1, wthldgTaxRate1, wthldgTaxCode1, mktValueType1, cmplxHldrCode1, registerCode2, certID2, wthldgTaxRate2, wthldgTaxCode2, mktValueType2, cmplxHldrCode2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 821
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 822
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 823
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 824
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 825
 testRunner.Then(string.Format("In ENSESS51 In should see Event Tax Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\"", classCode, schemeName, dDetailLine1, dDetailLine2, dDetailLine3, dDetailLine4, dDetailLine5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 826
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 827
 testRunner.Then(string.Format("In ENSESS40 I should see Event History Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\"", classCode, schemeName, dLine1, dLine2, dLine3, dLine4, dLine5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 41734: 1_Add/Change/Delete Holder Event-Exempt Plan")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("41734")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("Test1", "EXA", "1", "UPD", "ADD", "876655", "I0030277988", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "201", "201", "EETD", "/EXA", "EXEMPT EMPLOYEE SHARE PLAN", "13A  EP     12/02/2014  01/01/2020  EV5    V            0.000000                 " +
            "    No", "13A  EP     13/01/2014  01/01/2020  EV5    V            0.000000                 " +
            "    No", "13A  EP     12/12/2013  01/01/2020  EV5    V            0.000000                 " +
            "    No", "13A  EP     12/11/2013  01/01/2020  EV5    V            0.000000                 " +
            "    No", "13A  EP     14/10/2013  01/01/2020  EV5    V            0.000000                 " +
            "    No", "ESEH", "V/EV5  13A  EP   01/01/2020  12/02/2014  Current   Not Recvd   Not Actioned    E", "V/EV5  13A  EP   01/01/2020  13/01/2014  Current   Not Recvd   Not Actioned    E", "V/EV5  13A  EP   01/01/2020  12/12/2013  Current   Not Recvd   Not Actioned    E", "V/EV5  13A  EP   01/01/2020  12/11/2013  Current   Not Recvd   Not Actioned    E", "V/EV5  13A  EP   01/01/2020  14/10/2013  Current   Not Recvd   Not Actioned    E", "CHG", "4452235", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "62", "62", "13A  EP     12/02/2014  01/01/2020  EV5    V            0.000000                 " +
            "    No", "13A  EP     13/01/2014  01/01/2020  EV5    V            0.000000                 " +
            "    No", "13A  EP     12/12/2013  01/01/2020  EV5    V            0.000000                 " +
            "    No", "13A  EP     12/11/2013  01/01/2020  EV5    V            0.000000                 " +
            "    No", "13A  EP     14/10/2013  01/01/2020  EV5    V            0.000000                 " +
            "    No", "V/EV5  13A  EP   01/01/2020  12/02/2014  Current   Not Recvd   Not Actioned    E", "V/EV5  13A  EP   01/01/2020  13/01/2014  Current   Not Recvd   Not Actioned    E", "V/EV5  13A  EP   01/01/2020  12/12/2013  Current   Not Recvd   Not Actioned    E", "V/EV5  13A  EP   01/01/2020  12/11/2013  Current   Not Recvd   Not Actioned    E", "V/EV5  13A  EP   01/01/2020  14/10/2013  Current   Not Recvd   Not Actioned    E", "DEL", "4452236", "12A", "12A", "20120912EP", "20121012EP", "5", "5", "5", "5", "13A  EP     12/02/2014  01/01/2020  EV5    V            0.000000                 " +
            "    No", "13A  EP     13/01/2014  01/01/2020  EV5    V            0.000000                 " +
            "    No", "13A  EP     12/12/2013  01/01/2020  EV5    V            0.000000                 " +
            "    No", "13A  EP     12/11/2013  01/01/2020  EV5    V            0.000000                 " +
            "    No", "13A  EP     14/10/2013  01/01/2020  EV5    V            0.000000                 " +
            "    No", "V/EV5  13A  EP   01/01/2020  12/02/2014  Deleted   Deleted     Not Actioned    E", "V/EV5  13A  EP   01/01/2020  13/01/2014  Deleted   Deleted     Not Actioned    E", "V/EV5  13A  EP   01/01/2020  12/12/2013  Deleted   Deleted     Not Actioned    E", "V/EV5  13A  EP   01/01/2020  12/11/2013  Deleted   Deleted     Not Actioned    E", "V/EV5  13A  EP   01/01/2020  14/10/2013  Deleted   Deleted     Not Actioned    E", null)]
        public virtual void TestCase417341_AddChangeDeleteHolderEvent_ExemptPlan(
                    string test, 
                    string classCode, 
                    string eventNumber, 
                    string selection, 
                    string menuItem, 
                    string transNumber, 
                    string searchName, 
                    string selectionInd1, 
                    string selectionInd2, 
                    string selectionInd3, 
                    string selectionInd4, 
                    string selectionInd8, 
                    string selectionInd9, 
                    string selectionInd10, 
                    string _2SelectionInd1, 
                    string _2SelectionInd2, 
                    string _2SelectionInd3, 
                    string totEventUnits, 
                    string totCurrentBal, 
                    string action, 
                    string locateArgument, 
                    string schemeName, 
                    string detailLine1, 
                    string detailLine2, 
                    string detailLine3, 
                    string detailLine4, 
                    string detailLine5, 
                    string action1, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string menuItem1, 
                    string transNumber1, 
                    string cSelectionInd1, 
                    string cSelectionInd2, 
                    string cSelectionInd3, 
                    string cSelectionInd4, 
                    string cSelectionInd8, 
                    string cSelectionInd9, 
                    string cSelectionInd10, 
                    string c2SelectionInd1, 
                    string c2SelectionInd2, 
                    string c2SelectionInd3, 
                    string cTotEventUnits, 
                    string cTotCurrentBal, 
                    string cDetailLine1, 
                    string cDetailLine2, 
                    string cDetailLine3, 
                    string cDetailLine4, 
                    string cDetailLine5, 
                    string cLine1, 
                    string cLine2, 
                    string cLine3, 
                    string cLine4, 
                    string cLine5, 
                    string menuItem2, 
                    string transNumber2, 
                    string registerCode1, 
                    string registerCode2, 
                    string certID1, 
                    string certID2, 
                    string eventUnits1, 
                    string eventUnits2, 
                    string currentBal1, 
                    string currentBal2, 
                    string dDetailLine1, 
                    string dDetailLine2, 
                    string dDetailLine3, 
                    string dDetailLine4, 
                    string dDetailLine5, 
                    string dLine1, 
                    string dLine2, 
                    string dLine3, 
                    string dLine4, 
                    string dLine5, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "CPU_AUTO",
                    "41734",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 41734: 1_Add/Change/Delete Holder Event-Exempt Plan", @__tags);
#line 839
this.ScenarioSetup(scenarioInfo);
#line 840
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 841
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 842
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 843
  testRunner.And("In EOL00107 I Click on \"event processing\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 844
  testRunner.And(string.Format("In EOL00135 I Select Menu item as \"{0}\" \"{1}\" \"{2}\"", eventNumber, selection, menuItem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 845
  testRunner.And(string.Format("In EOL03301 I Add AESS Event details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\"" +
                        " \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\"", transNumber, searchName, selectionInd1, selectionInd2, selectionInd3, selectionInd4, selectionInd8, selectionInd9, selectionInd10, _2SelectionInd1, _2SelectionInd2, _2SelectionInd3, totEventUnits, totCurrentBal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 846
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 847
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 848
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 849
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 850
 testRunner.Then(string.Format("In ENSESS51 In should see Event Tax Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\"", classCode, schemeName, detailLine1, detailLine2, detailLine3, detailLine4, detailLine5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 851
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 852
 testRunner.Then(string.Format("In ENSESS40 I should see Event History Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\"", classCode, schemeName, line1, line2, line3, line4, line5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 853
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 854
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 855
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 856
  testRunner.And("In EOL00107 I Click on \"event processing\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 857
  testRunner.And(string.Format("In EOL00135 I Select Menu item as \"{0}\" \"{1}\" \"{2}\"", eventNumber, selection, menuItem1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 858
  testRunner.And(string.Format("In EOL03304 I Change AESS Event details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{" +
                        "6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\"", transNumber1, searchName, cSelectionInd1, cSelectionInd2, cSelectionInd3, cSelectionInd4, cSelectionInd8, cSelectionInd9, cSelectionInd10, c2SelectionInd1, c2SelectionInd2, c2SelectionInd3, cTotEventUnits, cTotCurrentBal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 859
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 860
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 861
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 862
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 863
 testRunner.Then(string.Format("In ENSESS51 In should see Event Tax Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\"", classCode, schemeName, cDetailLine1, cDetailLine2, cDetailLine3, cDetailLine4, cDetailLine5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 864
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 865
 testRunner.Then(string.Format("In ENSESS40 I should see Event History Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\"", classCode, schemeName, cLine1, cLine2, cLine3, cLine4, cLine5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 866
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 867
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 868
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 869
  testRunner.And("In EOL00107 I Click on \"event processing\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 870
  testRunner.And(string.Format("In EOL00135 I Select Menu item as \"{0}\" \"{1}\" \"{2}\"", eventNumber, selection, menuItem2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 871
  testRunner.And(string.Format("In EOL03307 I Delete Event details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"" +
                        "{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", transNumber2, searchName, registerCode1, registerCode2, certID1, certID2, eventUnits1, eventUnits2, currentBal1, currentBal2, cTotEventUnits, cTotCurrentBal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 872
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 873
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 874
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 875
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 876
 testRunner.Then(string.Format("In ENSESS51 In should see Event Tax Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\"", classCode, schemeName, dDetailLine1, dDetailLine2, dDetailLine3, dDetailLine4, dDetailLine5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 877
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 878
 testRunner.Then(string.Format("In ENSESS40 I should see Event History Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\"", classCode, schemeName, dLine1, dLine2, dLine3, dLine4, dLine5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 41735: 2_TAX. Update Holder Tax/International Assignee Details-Add/Dele" +
            "te-V Type Event-Exempt Plan")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("41735")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("Test1", "EXA", "1", "UPD", "ADD", "689234", "I0030238605", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "", "", "", "511", "511", "TAX", "7351236", "Y", "45.000000", "AUS-RES", "M", "", "45.000000", "AUS-RES", "M", "", "45.000000", "AUS-RES", "M", "", "DTX", "7751239", "09A", "20090828EM", "09A", "20090914EP", "EETD", "/EXA", "EXEMPT EMPLOYEE SHARE PLAN", "13A  EP     12/02/2014  01/01/2020  EV5    V            0.000000                 " +
            "    No", "13A  EP     13/01/2014  01/01/2020  EV5    V            0.000000                 " +
            "    No", "13A  EP     12/12/2013  01/01/2020  EV5    V            0.000000                 " +
            "    No", "13A  EP     12/11/2013  01/01/2020  EV5    V            0.000000                 " +
            "    No", "13A  EP     14/10/2013  01/01/2020  EV5    V            0.000000                 " +
            "    No", "ESEH", "V/EV5  13A  EP   01/01/2020  12/02/2014  Current   Not Recvd   Not Actioned    E", "V/EV5  13A  EP   01/01/2020  13/01/2014  Current   Not Recvd   Not Actioned    E", "V/EV5  13A  EP   01/01/2020  12/12/2013  Current   Not Recvd   Not Actioned    E", "V/EV5  13A  EP   01/01/2020  12/11/2013  Current   Not Recvd   Not Actioned    E", "V/EV5  13A  EP   01/01/2020  14/10/2013  Current   Not Recvd   Not Actioned    E", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "EXA", "1", "UPD", "ADD", "665334", "I0030238206", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "", "", "", "418", "418", "TAX", "7351237", "N", "", "", "", "", "40.000000", "AUS-RES", "M", "", "45.000000", "AUS-RES", "V", "", "DTX", "7751240", "10A", "20100712EM", "10A", "20100712EP", "EETD", "/EXA", "EXEMPT EMPLOYEE SHARE PLAN", "13A  EP     12/02/2014  01/01/2020  EV5    V            0.000000                 " +
            "    No", "13A  EP     13/01/2014  01/01/2020  EV5    V            0.000000                 " +
            "    No", "13A  EP     12/12/2013  01/01/2020  EV5    V            0.000000                 " +
            "    No", "13A  EP     12/11/2013  01/01/2020  EV5    V            0.000000                 " +
            "    No", "13A  EP     14/10/2013  01/01/2020  EV5    V            0.000000                 " +
            "    No", "ESEH", "V/EV5  13A  EP   01/01/2020  12/02/2014  Current   Not Recvd   Not Actioned    E", "V/EV5  13A  EP   01/01/2020  13/01/2014  Current   Not Recvd   Not Actioned    E", "V/EV5  13A  EP   01/01/2020  12/12/2013  Current   Not Recvd   Not Actioned    E", "V/EV5  13A  EP   01/01/2020  12/11/2013  Current   Not Recvd   Not Actioned    E", "V/EV5  13A  EP   01/01/2020  14/10/2013  Current   Not Recvd   Not Actioned    E", null)]
        public virtual void TestCase417352_TAX_UpdateHolderTaxInternationalAssigneeDetails_AddDelete_VTypeEvent_ExemptPlan(
                    string test, 
                    string classCode, 
                    string eventNumber, 
                    string selection, 
                    string menuItem, 
                    string transNumber, 
                    string searchName, 
                    string selectionInd1, 
                    string selectionInd2, 
                    string selectionInd3, 
                    string selectionInd4, 
                    string selectionInd8, 
                    string selectionInd9, 
                    string selectionInd10, 
                    string _2SelectionInd1, 
                    string _2SelectionInd2, 
                    string _2SelectionInd3, 
                    string totEventUnits, 
                    string totCurrentBal, 
                    string selection1, 
                    string transNumber1, 
                    string updtAllCert, 
                    string witholdingTaxRate, 
                    string witholdingTaxCode, 
                    string marketValueType, 
                    string complexHolderCode, 
                    string wthldgTaxRate1, 
                    string wthldgTaxCode1, 
                    string mktValueType1, 
                    string cmplxHldrCode1, 
                    string wthldgTaxRate2, 
                    string wthldgTaxCode2, 
                    string mktValueType2, 
                    string cmplxHldrCode2, 
                    string selection2, 
                    string transNumbe2, 
                    string registerCode1, 
                    string certID1, 
                    string registerCode2, 
                    string certID2, 
                    string action, 
                    string locateArgument, 
                    string schemeName, 
                    string dDetailLine1, 
                    string dDetailLine2, 
                    string dDetailLine3, 
                    string dDetailLine4, 
                    string dDetailLine5, 
                    string action1, 
                    string dLine1, 
                    string dLine2, 
                    string dLine3, 
                    string dLine4, 
                    string dLine5, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "CPU_AUTO",
                    "41735",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 41735: 2_TAX. Update Holder Tax/International Assignee Details-Add/Dele" +
                    "te-V Type Event-Exempt Plan", @__tags);
#line 890
this.ScenarioSetup(scenarioInfo);
#line 891
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 892
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 893
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 894
  testRunner.And("In EOL00107 I Click on \"event processing\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 895
  testRunner.And(string.Format("In EOL00135 I Select Menu item as \"{0}\" \"{1}\" \"{2}\"", eventNumber, selection, menuItem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 896
  testRunner.And(string.Format("In EOL03301 I Add AESS Event details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\"" +
                        " \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\"", transNumber, searchName, selectionInd1, selectionInd2, selectionInd3, selectionInd4, selectionInd8, selectionInd9, selectionInd10, _2SelectionInd1, _2SelectionInd2, _2SelectionInd3, totEventUnits, totCurrentBal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 897
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 898
 testRunner.Then("I expect to be in the \"EOL00135\" Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 899
 testRunner.When(string.Format("In EOL00135 I select \"{0}\"", selection1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 900
 testRunner.When(string.Format("In EOL02901 I Add Event Tax Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" " +
                        "\"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\"", transNumber1, searchName, updtAllCert, witholdingTaxRate, witholdingTaxCode, marketValueType, complexHolderCode, wthldgTaxRate1, wthldgTaxCode1, mktValueType1, cmplxHldrCode1, wthldgTaxRate2, wthldgTaxCode2, mktValueType2, cmplxHldrCode2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 901
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 902
 testRunner.Then("I expect to be in the \"EOL00135\" Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 903
 testRunner.When(string.Format("In EOL00135 I select \"{0}\"", selection2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 904
  testRunner.And(string.Format("In EOL02901 I Delete Event Tax Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6" +
                        "}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\"", transNumbe2, searchName, registerCode1, certID1, wthldgTaxRate1, wthldgTaxCode1, mktValueType1, cmplxHldrCode1, registerCode2, certID2, wthldgTaxRate2, wthldgTaxCode2, mktValueType2, cmplxHldrCode2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 905
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 906
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 907
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 908
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 909
 testRunner.Then(string.Format("In ENSESS51 In should see Event Tax Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}" +
                        "\" \"{6}\"", classCode, schemeName, dDetailLine1, dDetailLine2, dDetailLine3, dDetailLine4, dDetailLine5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 910
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 911
 testRunner.Then(string.Format("In ENSESS40 I should see Event History Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\"", classCode, schemeName, dLine1, dLine2, dLine3, dLine4, dLine5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 41938: 11_ESFRL. Forfeiture for Leavers_All")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("41938")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("Test1", "DEP", "ESFRL", "9923334", "", "I0030278305", "148", "", "", "", "", "", "", "", "", "", "148", "", "148", "", "148", "148", "", "", "", "", null)]
        public virtual void TestCase4193811_ESFRL_ForfeitureForLeavers_All(
                    string test, 
                    string classCode, 
                    string selection, 
                    string transNumber, 
                    string transDate, 
                    string searchName, 
                    string forfUnits1, 
                    string forfUnits2, 
                    string forfUnits3, 
                    string forfUnits4, 
                    string forfUnits5, 
                    string forfUnits6, 
                    string forfUnits7, 
                    string forfUnits8, 
                    string forfUnits9, 
                    string forfUnits10, 
                    string availUnits1, 
                    string availUnits2, 
                    string forfUnits11, 
                    string forfUnits22, 
                    string availUnitsT, 
                    string forfUnitsT, 
                    string availUnits3, 
                    string availUnits4, 
                    string forfUnits33, 
                    string forfUnits44, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "CPU_AUTO",
                    "41938",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 41938: 11_ESFRL. Forfeiture for Leavers_All", @__tags);
#line 923
this.ScenarioSetup(scenarioInfo);
#line 924
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 925
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 926
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 927
  testRunner.And("In EOL00113 I click on \"forfeitures and terminations\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection",
                        "TransNumber",
                        "TransDate",
                        "SearchName",
                        "ForfUnits1",
                        "ForfUnits2",
                        "ForfUnits3",
                        "ForfUnits4",
                        "ForfUnits5",
                        "ForfUnits6",
                        "ForfUnits7",
                        "ForfUnits8",
                        "ForfUnits9",
                        "ForfUnits10",
                        "AvailUnits1",
                        "AvailUnits2",
                        "AvailUnits3",
                        "AvailUnits4",
                        "ForfUnits11",
                        "ForfUnits22",
                        "ForfUnits33",
                        "ForfUnits44",
                        "AvailUnitsT",
                        "ForfUnitsT"});
            table6.AddRow(new string[] {
                        string.Format("{0}", selection),
                        string.Format("{0}", transNumber),
                        string.Format("{0}", transDate),
                        string.Format("{0}", searchName),
                        string.Format("{0}", forfUnits1),
                        string.Format("{0}", forfUnits2),
                        string.Format("{0}", forfUnits3),
                        string.Format("{0}", forfUnits4),
                        string.Format("{0}", forfUnits5),
                        string.Format("{0}", forfUnits6),
                        string.Format("{0}", forfUnits7),
                        string.Format("{0}", forfUnits8),
                        string.Format("{0}", forfUnits9),
                        string.Format("{0}", forfUnits10),
                        string.Format("{0}", availUnits1),
                        string.Format("{0}", availUnits2),
                        string.Format("{0}", availUnits3),
                        string.Format("{0}", availUnits4),
                        string.Format("{0}", forfUnits11),
                        string.Format("{0}", forfUnits22),
                        string.Format("{0}", forfUnits33),
                        string.Format("{0}", forfUnits44),
                        string.Format("{0}", availUnitsT),
                        string.Format("{0}", forfUnitsT)});
#line 928
  testRunner.And("In EOL01301 I Perform Forfeiture Transaction as:", ((string)(null)), table6, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 41939: 12_ESFRL. Forfeiture for Leavers_Partial")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("41939")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("Test1", "DEP", "ESFRL", "9923335", "", "I0030237803", "200", "", "", "", "", "", "", "", "", "", "338", "", "200", "", "338", "200", "ESRVF", "9923338", "200", "4408", "9923335", "", "", "", "", "", null)]
        public virtual void TestCase4193912_ESFRL_ForfeitureForLeavers_Partial(
                    string test, 
                    string classCode, 
                    string selection, 
                    string transNumber1, 
                    string transDate, 
                    string searchName, 
                    string forfUnits1, 
                    string forfUnits2, 
                    string forfUnits3, 
                    string forfUnits4, 
                    string forfUnits5, 
                    string forfUnits6, 
                    string forfUnits7, 
                    string forfUnits8, 
                    string forfUnits9, 
                    string forfUnits10, 
                    string availUnits1, 
                    string availUnits2, 
                    string forfUnits11, 
                    string forfUnits22, 
                    string availUnitsT, 
                    string forfUnitsT, 
                    string selection1, 
                    string transNumber, 
                    string totalUnits, 
                    string rvsalRunNumber, 
                    string rvsalTransNumber, 
                    string totalMoney, 
                    string availUnits3, 
                    string availUnits4, 
                    string forfUnits33, 
                    string forfUnits44, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "CPU_AUTO",
                    "41939",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 41939: 12_ESFRL. Forfeiture for Leavers_Partial", @__tags);
#line 941
this.ScenarioSetup(scenarioInfo);
#line 942
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 943
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 944
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 945
  testRunner.And("In EOL00113 I click on \"forfeitures and terminations\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection",
                        "TransNumber",
                        "TransDate",
                        "SearchName",
                        "ForfUnits1",
                        "ForfUnits2",
                        "ForfUnits3",
                        "ForfUnits4",
                        "ForfUnits5",
                        "ForfUnits6",
                        "ForfUnits7",
                        "ForfUnits8",
                        "ForfUnits9",
                        "ForfUnits10",
                        "AvailUnits1",
                        "AvailUnits2",
                        "AvailUnits3",
                        "AvailUnits4",
                        "ForfUnits11",
                        "ForfUnits22",
                        "ForfUnits33",
                        "ForfUnits44",
                        "AvailUnitsT",
                        "ForfUnitsT"});
            table7.AddRow(new string[] {
                        string.Format("{0}", selection),
                        string.Format("{0}", transNumber1),
                        string.Format("{0}", transDate),
                        string.Format("{0}", searchName),
                        string.Format("{0}", forfUnits1),
                        string.Format("{0}", forfUnits2),
                        string.Format("{0}", forfUnits3),
                        string.Format("{0}", forfUnits4),
                        string.Format("{0}", forfUnits5),
                        string.Format("{0}", forfUnits6),
                        string.Format("{0}", forfUnits7),
                        string.Format("{0}", forfUnits8),
                        string.Format("{0}", forfUnits9),
                        string.Format("{0}", forfUnits10),
                        string.Format("{0}", availUnits1),
                        string.Format("{0}", availUnits2),
                        string.Format("{0}", availUnits3),
                        string.Format("{0}", availUnits4),
                        string.Format("{0}", forfUnits11),
                        string.Format("{0}", forfUnits22),
                        string.Format("{0}", forfUnits33),
                        string.Format("{0}", forfUnits44),
                        string.Format("{0}", availUnitsT),
                        string.Format("{0}", forfUnitsT)});
#line 946
  testRunner.And("In EOL01301 I Perform Forfeiture Transaction as:", ((string)(null)), table7, "And ");
#line 949
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 950
 testRunner.Then("I expect to be in the \"EOL00119\" Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table8.AddRow(new string[] {
                        string.Format("{0}", selection1)});
#line 951
 testRunner.When("In EOL00119 I continue with the following details:", ((string)(null)), table8, "When ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "TotalUnits",
                        "RvsalRunNumber",
                        "RvsalTransNumber",
                        "TotalMoney"});
            table9.AddRow(new string[] {
                        string.Format("{0}", transNumber),
                        string.Format("{0}", totalUnits),
                        string.Format("{0}", rvsalRunNumber),
                        string.Format("{0}", rvsalTransNumber),
                        string.Format("{0}", totalMoney)});
#line 954
 testRunner.When("In EOL00401 I continue with the following details:", ((string)(null)), table9, "When ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 41896: 07_ESFRT. Performance Test Failure Forfeiture_EP, EM, EB, EN_All" +
            "")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("41896")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("Test1", "DEP", "ESFRT", "9923346", "", "I0100007762", "125", "120", "510", "6320", "2100", "4521", "2310", "287", "406", "297", "7075", "8931", "990", "210", "7075", "8931", "990", "210", "18027", "18027", "ESRVF", "9923347", "18027", "", "9923346", "", null)]
        public virtual void TestCase4189607_ESFRT_PerformanceTestFailureForfeiture_EPEMEBEN_All(
                    string test, 
                    string classCode, 
                    string selection, 
                    string transNumber, 
                    string transDate, 
                    string searchName, 
                    string forfUnits1, 
                    string forfUnits2, 
                    string forfUnits3, 
                    string forfUnits4, 
                    string forfUnits5, 
                    string forfUnits6, 
                    string forfUnits7, 
                    string forfUnits8, 
                    string forfUnits9, 
                    string forfUnits10, 
                    string availUnits1, 
                    string availUnits2, 
                    string availUnits3, 
                    string availUnits4, 
                    string forfUnits11, 
                    string forfUnits22, 
                    string forfUnits33, 
                    string forfUnits44, 
                    string availUnitsT, 
                    string forfUnitsT, 
                    string selection1, 
                    string transNumber1, 
                    string totalUnits, 
                    string rvsalRunNumber, 
                    string rvsalTransNumber, 
                    string totalMoney, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "CPU_AUTO",
                    "41896",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 41896: 07_ESFRT. Performance Test Failure Forfeiture_EP, EM, EB, EN_All" +
                    "", @__tags);
#line 966
this.ScenarioSetup(scenarioInfo);
#line 967
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 968
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 969
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 970
  testRunner.And("In EOL00113 I click on \"forfeitures and terminations\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection",
                        "TransNumber",
                        "TransDate",
                        "SearchName",
                        "ForfUnits1",
                        "ForfUnits2",
                        "ForfUnits3",
                        "ForfUnits4",
                        "ForfUnits5",
                        "ForfUnits6",
                        "ForfUnits7",
                        "ForfUnits8",
                        "ForfUnits9",
                        "ForfUnits10",
                        "AvailUnits1",
                        "AvailUnits2",
                        "AvailUnits3",
                        "AvailUnits4",
                        "ForfUnits11",
                        "ForfUnits22",
                        "ForfUnits33",
                        "ForfUnits44",
                        "AvailUnitsT",
                        "ForfUnitsT"});
            table10.AddRow(new string[] {
                        string.Format("{0}", selection),
                        string.Format("{0}", transNumber),
                        string.Format("{0}", transDate),
                        string.Format("{0}", searchName),
                        string.Format("{0}", forfUnits1),
                        string.Format("{0}", forfUnits2),
                        string.Format("{0}", forfUnits3),
                        string.Format("{0}", forfUnits4),
                        string.Format("{0}", forfUnits5),
                        string.Format("{0}", forfUnits6),
                        string.Format("{0}", forfUnits7),
                        string.Format("{0}", forfUnits8),
                        string.Format("{0}", forfUnits9),
                        string.Format("{0}", forfUnits10),
                        string.Format("{0}", availUnits1),
                        string.Format("{0}", availUnits2),
                        string.Format("{0}", availUnits3),
                        string.Format("{0}", availUnits4),
                        string.Format("{0}", forfUnits11),
                        string.Format("{0}", forfUnits22),
                        string.Format("{0}", forfUnits33),
                        string.Format("{0}", forfUnits44),
                        string.Format("{0}", availUnitsT),
                        string.Format("{0}", forfUnitsT)});
#line 971
  testRunner.And("In EOL01301 I Perform Forfeiture Transaction as:", ((string)(null)), table10, "And ");
#line 974
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 975
 testRunner.Then("I expect to be in the \"EOL00119\" Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table11.AddRow(new string[] {
                        string.Format("{0}", selection1)});
#line 976
 testRunner.When("In EOL00119 I continue with the following details:", ((string)(null)), table11, "When ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "TotalUnits",
                        "RvsalRunNumber",
                        "RvsalTransNumber",
                        "TotalMoney"});
            table12.AddRow(new string[] {
                        string.Format("{0}", transNumber1),
                        string.Format("{0}", totalUnits),
                        string.Format("{0}", rvsalRunNumber),
                        string.Format("{0}", rvsalTransNumber),
                        string.Format("{0}", totalMoney)});
#line 979
 testRunner.When("In EOL00401 I continue with the following details:", ((string)(null)), table12, "When ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 41936: 09_ESTOC. Termination of Contract_EP")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("41936")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("Test1", "DEP", "ESTOC", "EP", "13A", "9923348", "", "I0030238486", "", "6.31", "0.00", "6.31", "ESRVQ", "9923349", "", "", "9923348", "6.31", null)]
        public virtual void TestCase4193609_ESTOC_TerminationOfContract_EP(
                    string test, 
                    string classCode, 
                    string selection, 
                    string registerType, 
                    string registerCode, 
                    string transNumber, 
                    string transDate, 
                    string searchName, 
                    string searchUsan, 
                    string savingsAmount, 
                    string interestAmount, 
                    string chequeAmount, 
                    string selection1, 
                    string transNumber1, 
                    string totalUnits, 
                    string rvsalRunNumber, 
                    string rvsalTransNumber, 
                    string totalMoney, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "CPU_AUTO",
                    "41936",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 41936: 09_ESTOC. Termination of Contract_EP", @__tags);
#line 991
this.ScenarioSetup(scenarioInfo);
#line 992
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 993
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 994
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 995
  testRunner.And("In EOL00113 I click on \"forfeitures and terminations\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection",
                        "RegisterType",
                        "RegisterCode",
                        "TransNumber",
                        "TransDate",
                        "SearchName",
                        "SearchUsan",
                        "SavingsAmount",
                        "InterestAmount",
                        "ChequeAmount"});
            table13.AddRow(new string[] {
                        string.Format("{0}", selection),
                        string.Format("{0}", registerType),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", transNumber),
                        string.Format("{0}", transDate),
                        string.Format("{0}", searchName),
                        string.Format("{0}", searchUsan),
                        string.Format("{0}", savingsAmount),
                        string.Format("{0}", interestAmount),
                        string.Format("{0}", chequeAmount)});
#line 996
  testRunner.And("In EOL01401 I continue with the following details:", ((string)(null)), table13, "And ");
#line 999
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1000
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1001
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1002
  testRunner.And("In EOL00113 I click on \"forfeitures and terminations\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table14.AddRow(new string[] {
                        string.Format("{0}", selection1)});
#line 1003
 testRunner.When("In EOL00119 I continue with the following details:", ((string)(null)), table14, "When ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "TotalUnits",
                        "RvsalRunNumber",
                        "RvsalTransNumber",
                        "TotalMoney"});
            table15.AddRow(new string[] {
                        string.Format("{0}", transNumber1),
                        string.Format("{0}", totalUnits),
                        string.Format("{0}", rvsalRunNumber),
                        string.Format("{0}", rvsalTransNumber),
                        string.Format("{0}", totalMoney)});
#line 1006
 testRunner.When("In EOL00401 I continue with the following details:", ((string)(null)), table15, "When ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 41887: 01_ESFRE Employee Requested Forfeiture")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("41887")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("Test1-DEP-All", "DEP", "ESFRE", "9923337", "", "I0030280334", "1000", "1000", "338", "247", "1000", "28", "25", "24", "25", "24", "2000", "585", "1000", "428", "2000", "585", "1000", "428", "4013", "4013", "ESRVF", "9923339", "4013", "", "9923337", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test2-DEP-Partial", "DEP", "ESFRE", "9923340", "", "I0100003422", "1000", "1000", "1000", "1000", "1000", "1000", "1000", "1000", "188", "24", "10200", "5800", "1391", "6500", "4000", "4000", "1140", "6500", "25841", "17590", "ESRVF", "9923341", "17590", "", "9923340", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test3-EXA-All", "EXA", "ESFRE", "9923350", "", "I0030234171", "57", "56", "67", "49", "4", "4", "5", "5", "7", "6", "229", "209", "", "", "229", "209", "", "", "438", "438", "ESRVF", "9923351", "438", "", "9923350", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test4-EXA-Partial", "EXA", "ESFRE", "9923352", "", "I0030281730", "10", "1", "1", "1", "1", "1", "1", "1", "1", "1", "49", "30", "", "", "10", "8", "", "", "79", "18", "ESRVF", "9923353", "18", "", "9923352", "", null)]
        public virtual void TestCase4188701_ESFREEmployeeRequestedForfeiture(
                    string test, 
                    string classCode, 
                    string selection, 
                    string transNumber, 
                    string transDate, 
                    string searchName, 
                    string forfUnits1, 
                    string forfUnits2, 
                    string forfUnits3, 
                    string forfUnits4, 
                    string forfUnits5, 
                    string forfUnits6, 
                    string forfUnits7, 
                    string forfUnits8, 
                    string forfUnits9, 
                    string forfUnits10, 
                    string availUnits1, 
                    string availUnits2, 
                    string availUnits3, 
                    string availUnits4, 
                    string forfUnits11, 
                    string forfUnits22, 
                    string forfUnits33, 
                    string forfUnits44, 
                    string availUnitsT, 
                    string forfUnitsT, 
                    string selection1, 
                    string transNumber1, 
                    string totalUnits, 
                    string rvsalRunNumber, 
                    string rvsalTransNumber, 
                    string totalMoney, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "CPU_AUTO",
                    "41887",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 41887: 01_ESFRE Employee Requested Forfeiture", @__tags);
#line 1020
this.ScenarioSetup(scenarioInfo);
#line 1021
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1022
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1023
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1024
  testRunner.And("In EOL00113 I click on \"forfeitures and terminations\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection",
                        "TransNumber",
                        "TransDate",
                        "SearchName",
                        "ForfUnits1",
                        "ForfUnits2",
                        "ForfUnits3",
                        "ForfUnits4",
                        "ForfUnits5",
                        "ForfUnits6",
                        "ForfUnits7",
                        "ForfUnits8",
                        "ForfUnits9",
                        "ForfUnits10",
                        "AvailUnits1",
                        "AvailUnits2",
                        "AvailUnits3",
                        "AvailUnits4",
                        "ForfUnits11",
                        "ForfUnits22",
                        "ForfUnits33",
                        "ForfUnits44",
                        "AvailUnitsT",
                        "ForfUnitsT"});
            table16.AddRow(new string[] {
                        string.Format("{0}", selection),
                        string.Format("{0}", transNumber),
                        string.Format("{0}", transDate),
                        string.Format("{0}", searchName),
                        string.Format("{0}", forfUnits1),
                        string.Format("{0}", forfUnits2),
                        string.Format("{0}", forfUnits3),
                        string.Format("{0}", forfUnits4),
                        string.Format("{0}", forfUnits5),
                        string.Format("{0}", forfUnits6),
                        string.Format("{0}", forfUnits7),
                        string.Format("{0}", forfUnits8),
                        string.Format("{0}", forfUnits9),
                        string.Format("{0}", forfUnits10),
                        string.Format("{0}", availUnits1),
                        string.Format("{0}", availUnits2),
                        string.Format("{0}", availUnits3),
                        string.Format("{0}", availUnits4),
                        string.Format("{0}", forfUnits11),
                        string.Format("{0}", forfUnits22),
                        string.Format("{0}", forfUnits33),
                        string.Format("{0}", forfUnits44),
                        string.Format("{0}", availUnitsT),
                        string.Format("{0}", forfUnitsT)});
#line 1025
  testRunner.And("In EOL01301 I Perform Forfeiture Transaction as:", ((string)(null)), table16, "And ");
#line 1028
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1029
 testRunner.Then("I expect to be in the \"EOL00119\" Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table17.AddRow(new string[] {
                        string.Format("{0}", selection1)});
#line 1030
 testRunner.When("In EOL00119 I continue with the following details:", ((string)(null)), table17, "When ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "TotalUnits",
                        "RvsalRunNumber",
                        "RvsalTransNumber",
                        "TotalMoney"});
            table18.AddRow(new string[] {
                        string.Format("{0}", transNumber1),
                        string.Format("{0}", totalUnits),
                        string.Format("{0}", rvsalRunNumber),
                        string.Format("{0}", rvsalTransNumber),
                        string.Format("{0}", totalMoney)});
#line 1033
 testRunner.When("In EOL00401 I continue with the following details:", ((string)(null)), table18, "When ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 41892: 04_ESFRC. Company Requested Forfeiture")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("41892")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("Test1-DEP-All", "DEP", "ESFRC", "9923342", "", "I0100002493", "2100", "1020", "4100", "5100", "4120", "3200", "1500", "6200", "339", "338", "12320", "15020", "924", "1000", "12320", "15020", "924", "1000", "30070", "30070", "ESRVF", "9923343", "30070", "", "9923342", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test2-DEP-Partial", "DEP", "ESFRC", "9923344", "", "I0030279042", "200", "200", "200", "200", "200", "200", "200", "200", "200", "200", "7483", "8321", "585", "210", "800", "600", "400", "200", "17026", "2427", "ESRVF", "9923345", "2427", "", "9923344", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test3-EXA-Partial", "EXA", "ESFRC", "9923354", "", "I0030249283", "50", "2", "2", "2", "2", "2", "2", "2", "2", "2", "67", "54", "", "", "50", "31", "", "", "121", "81", "ESRVF", "9923355", "81", "", "9923354", "", null)]
        public virtual void TestCase4189204_ESFRC_CompanyRequestedForfeiture(
                    string test, 
                    string classCode, 
                    string selection, 
                    string transNumber, 
                    string transDate, 
                    string searchName, 
                    string forfUnits1, 
                    string forfUnits2, 
                    string forfUnits3, 
                    string forfUnits4, 
                    string forfUnits5, 
                    string forfUnits6, 
                    string forfUnits7, 
                    string forfUnits8, 
                    string forfUnits9, 
                    string forfUnits10, 
                    string availUnits1, 
                    string availUnits2, 
                    string availUnits3, 
                    string availUnits4, 
                    string forfUnits11, 
                    string forfUnits22, 
                    string forfUnits33, 
                    string forfUnits44, 
                    string availUnitsT, 
                    string forfUnitsT, 
                    string selection1, 
                    string transNumber1, 
                    string totalUnits, 
                    string rvsalRunNumber, 
                    string rvsalTransNumber, 
                    string totalMoney, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "CPU_AUTO",
                    "41892",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 41892: 04_ESFRC. Company Requested Forfeiture", @__tags);
#line 1048
this.ScenarioSetup(scenarioInfo);
#line 1049
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1050
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1051
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1052
  testRunner.And("In EOL00113 I click on \"forfeitures and terminations\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection",
                        "TransNumber",
                        "TransDate",
                        "SearchName",
                        "ForfUnits1",
                        "ForfUnits2",
                        "ForfUnits3",
                        "ForfUnits4",
                        "ForfUnits5",
                        "ForfUnits6",
                        "ForfUnits7",
                        "ForfUnits8",
                        "ForfUnits9",
                        "ForfUnits10",
                        "AvailUnits1",
                        "AvailUnits2",
                        "AvailUnits3",
                        "AvailUnits4",
                        "ForfUnits11",
                        "ForfUnits22",
                        "ForfUnits33",
                        "ForfUnits44",
                        "AvailUnitsT",
                        "ForfUnitsT"});
            table19.AddRow(new string[] {
                        string.Format("{0}", selection),
                        string.Format("{0}", transNumber),
                        string.Format("{0}", transDate),
                        string.Format("{0}", searchName),
                        string.Format("{0}", forfUnits1),
                        string.Format("{0}", forfUnits2),
                        string.Format("{0}", forfUnits3),
                        string.Format("{0}", forfUnits4),
                        string.Format("{0}", forfUnits5),
                        string.Format("{0}", forfUnits6),
                        string.Format("{0}", forfUnits7),
                        string.Format("{0}", forfUnits8),
                        string.Format("{0}", forfUnits9),
                        string.Format("{0}", forfUnits10),
                        string.Format("{0}", availUnits1),
                        string.Format("{0}", availUnits2),
                        string.Format("{0}", availUnits3),
                        string.Format("{0}", availUnits4),
                        string.Format("{0}", forfUnits11),
                        string.Format("{0}", forfUnits22),
                        string.Format("{0}", forfUnits33),
                        string.Format("{0}", forfUnits44),
                        string.Format("{0}", availUnitsT),
                        string.Format("{0}", forfUnitsT)});
#line 1053
  testRunner.And("In EOL01301 I Perform Forfeiture Transaction as:", ((string)(null)), table19, "And ");
#line 1056
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1057
 testRunner.Then("I expect to be in the \"EOL00119\" Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table20.AddRow(new string[] {
                        string.Format("{0}", selection1)});
#line 1058
 testRunner.When("In EOL00119 I continue with the following details:", ((string)(null)), table20, "When ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "TotalUnits",
                        "RvsalRunNumber",
                        "RvsalTransNumber",
                        "TotalMoney"});
            table21.AddRow(new string[] {
                        string.Format("{0}", transNumber1),
                        string.Format("{0}", totalUnits),
                        string.Format("{0}", rvsalRunNumber),
                        string.Format("{0}", rvsalTransNumber),
                        string.Format("{0}", totalMoney)});
#line 1061
 testRunner.When("In EOL00401 I continue with the following details:", ((string)(null)), table21, "When ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 41951: 01_ESPAY ESS Payment Manual_EP_Deferred")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("41951")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("Test1", "DEP", "EP", "13A", "MAN", "", "", "", "", "", "", "", "", "", "", "", null)]
        public virtual void TestCase4195101_ESPAYESSPaymentManual_EP_Deferred(
                    string test, 
                    string classCode, 
                    string registerType, 
                    string registerCode, 
                    string selection, 
                    string transNumber, 
                    string paymentFrequency, 
                    string accumPeriod, 
                    string paymentNumber, 
                    string paymentStatus, 
                    string eol01901ReceiptCurrency, 
                    string paymentDate, 
                    string paymentAmount, 
                    string employerPymtAmt, 
                    string eol01901ExchangeRate, 
                    string searchName, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "CPU_AUTO",
                    "41951",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 41951: 01_ESPAY ESS Payment Manual_EP_Deferred", @__tags);
#line 1077
this.ScenarioSetup(scenarioInfo);
#line 1078
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1079
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1080
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1081
  testRunner.And("In EOL00113 I click on \"payments\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterType",
                        "RegisterCode",
                        "Selection",
                        "TransNumber",
                        "PaymentFrequency",
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentStatus",
                        "Eol01901ReceiptCurrency",
                        "PaymentDate",
                        "PaymentAmount",
                        "EmployerPymtAmt",
                        "Eol01901ExchangeRate",
                        "SearchName"});
            table22.AddRow(new string[] {
                        string.Format("{0}", registerType),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", selection),
                        string.Format("{0}", transNumber),
                        string.Format("{0}", paymentFrequency),
                        string.Format("{0}", accumPeriod),
                        string.Format("{0}", paymentNumber),
                        string.Format("{0}", paymentStatus),
                        string.Format("{0}", eol01901ReceiptCurrency),
                        string.Format("{0}", paymentDate),
                        string.Format("{0}", paymentAmount),
                        string.Format("{0}", employerPymtAmt),
                        string.Format("{0}", eol01901ExchangeRate),
                        string.Format("{0}", searchName)});
#line 1082
  testRunner.When("In EOL01901 I continue with the following details:", ((string)(null)), table22, "When ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 42876: 01_ESAWM - ESS Manual Award")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("42876")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("Test1-EM", "DEP", "EM", "13A", "AWM", "12/07/2013", "9923356", "", "", "100", "I0030057929", "100", "Matching", "100", "1008.00", "Unchanged", "Unchanged", "ESHT", "/DEP", "13A EM T 12/07/2013  None        None        12/07/2015      100   10.080000     " +
            " 1008.00", "", "* Register Type Totals                                                           " +
            "  MV at 21/04/15", "*                 Available  Unavailable    Reserved     Balance   Total Cost    " +
            "       12.700000", "*   EM                  100            0           0         100      1008.00    " +
            "         1270.00", "", "** Plan Total           100            0           0         100*     1008.00*   " +
            "         1270.00", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test2-EB", "DEP", "EB", "13A", "AWM", "12/07/2013", "9923357", "", "", "100", "I0030234171", "100", "Bonus", "100", "1080.00", "Unchanged", "Unchanged", "ESHT", "/DEP", "13A EB T 12/07/2013  None        None        12/07/2014      100   10.800000     " +
            " 1080.00", "", "* Register Type Totals                                                           " +
            "  MV at 21/04/15", "*                 Available  Unavailable    Reserved     Balance   Total Cost    " +
            "       12.700000", "*   EB                  100            0           0         100      1080.00    " +
            "         1270.00", "", "** Plan Total           100            0           0         100*     1080.00*   " +
            "         1270.00", "", "", "", null)]
        public virtual void TestCase4287601_ESAWM_ESSManualAward(
                    string test, 
                    string classCode, 
                    string registerType, 
                    string registerCode, 
                    string selection, 
                    string appropDate, 
                    string transNumber, 
                    string retentionDate, 
                    string taxRetentionDate, 
                    string totalUnits, 
                    string searchName, 
                    string totalUnits1, 
                    string registerType1, 
                    string units1, 
                    string money1, 
                    string retentionDate1, 
                    string taxRetentionDate1, 
                    string action, 
                    string locateArgument, 
                    string detailLine1, 
                    string detailLine2, 
                    string detailLine3, 
                    string detailLine4, 
                    string detailLine5, 
                    string detailLine6, 
                    string detailLine7, 
                    string detailLine8, 
                    string detailLine9, 
                    string detailLine10, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "CPU_AUTO",
                    "42876",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 42876: 01_ESAWM - ESS Manual Award", @__tags);
#line 1094
this.ScenarioSetup(scenarioInfo);
#line 1095
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1096
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1097
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1098
  testRunner.And("In EOL00113 I click on \"awards\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterType",
                        "RegisterCode",
                        "Selection",
                        "AppropDate",
                        "TransNumber",
                        "RetentionDate",
                        "TaxRetentionDate",
                        "TotalUnits",
                        "SearchName",
                        "TotalUnits1",
                        "RegisterType1",
                        "Units1",
                        "Money1",
                        "RetentionDate1",
                        "TaxRetentionDate1"});
            table23.AddRow(new string[] {
                        string.Format("{0}", registerType),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", selection),
                        string.Format("{0}", appropDate),
                        string.Format("{0}", transNumber),
                        string.Format("{0}", retentionDate),
                        string.Format("{0}", taxRetentionDate),
                        string.Format("{0}", totalUnits),
                        string.Format("{0}", searchName),
                        string.Format("{0}", totalUnits1),
                        string.Format("{0}", registerType1),
                        string.Format("{0}", units1),
                        string.Format("{0}", money1),
                        string.Format("{0}", retentionDate1),
                        string.Format("{0}", taxRetentionDate1)});
#line 1099
  testRunner.And("In EOL00901 I continue with the following details to Add Awards:", ((string)(null)), table23, "And ");
#line 1102
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1103
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1104
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1105
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "SearchName",
                        "DetailLine1",
                        "DetailLine2",
                        "DetailLine3",
                        "DetailLine4",
                        "DetailLine5",
                        "DetailLine6",
                        "DetailLine7",
                        "DetailLine8",
                        "DetailLine9",
                        "DetailLine10"});
            table24.AddRow(new string[] {
                        string.Format("{0}", searchName),
                        string.Format("{0}", detailLine1),
                        string.Format("{0}", detailLine2),
                        string.Format("{0}", detailLine3),
                        string.Format("{0}", detailLine4),
                        string.Format("{0}", detailLine5),
                        string.Format("{0}", detailLine6),
                        string.Format("{0}", detailLine7),
                        string.Format("{0}", detailLine8),
                        string.Format("{0}", detailLine9),
                        string.Format("{0}", detailLine10)});
#line 1106
 testRunner.Then("In ENSESS11 I verify the following details:", ((string)(null)), table24, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 41947: 15_ESLVA. Leaver Processing-All")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("41947")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("Test1", "DEP", "ESLVA", "9993357", "", "I0030284101", "11A", "13A", "13A", "13A", "13A", "13A", "13A", "13A", "13A", "20110712EF", "20130712EP", "20130812EP", "20130912EP", "20131014EP", "20131112EP", "20131212EP", "20140113EP", "20140212EP", "1000", "22", "22", "23", "23", "21", "33", "20", "20", "1000", "22", "22", "23", "23", "21", "33", "20", "20", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "12/07/2019", "12/07/2020", "12/07/2020", "12/07/2020", "12/07/2020", "12/07/2020", "12/07/2020", "12/07/2020", "12/07/2020", "ESHT", "/DEP", "10A EF T 12/07/2010  12/07/2013  12/07/2013  None           3100   10.000000     " +
            "31000.00", "11A EF T 12/07/2011  12/07/2019  12/07/2014  None           1000   10.000000     " +
            "10000.00", "11B EB T 12/07/2011  None        None        12/07/2012      450   10.800000     " +
            " 4860.00", "11B EN T 12/07/2011  None        None        None            102   10.000000     " +
            " 1020.00", "11A EM T 13/02/2012  13/02/2014  13/02/2014  13/02/2014      186    8.040000     " +
            " 1495.44", "11A EP T 13/02/2012  13/02/2013  13/02/2013  13/02/2013       37    8.020000     " +
            "  296.74", "11A EP T 13/03/2012  13/02/2013  13/02/2013  13/02/2013       37    8.150000     " +
            "  301.55", "11A EP T 13/04/2012  13/02/2013  13/02/2014  13/02/2013       34    8.640000     " +
            "  293.76", "11A EP T 11/05/2012  13/02/2013  13/02/2014  13/02/2013       37    8.310000     " +
            "  307.47", "11A EP T 12/06/2012  13/02/2013  13/02/2014  13/02/2013       39    7.670000     " +
            "  299.13", "M", "", "12A EB T 12/07/2012  None        None        12/07/2013      620   10.800000     " +
            " 6696.00", "13A EP   12/07/2013  12/07/2020  12/07/2020  None             22   10.390000     " +
            "  228.58", "13A EP   12/08/2013  12/07/2020  12/07/2020  None             22   10.260000     " +
            "  225.72", "13A EP   12/09/2013  12/07/2020  12/07/2020  None             23   10.230000     " +
            "  235.29", "13A EP   14/10/2013  12/07/2020  12/07/2020  None             23    9.940000     " +
            "  228.62", "13A EP   12/11/2013  12/07/2020  12/07/2020  None             21   10.890000     " +
            "  228.69", "13A EP   12/12/2013  12/07/2020  12/07/2020  None             33   10.640000     " +
            "  351.12", "13A EP   13/01/2014  12/07/2020  12/07/2020  None             20   11.380000     " +
            "  227.60", "13A EP   12/02/2014  12/07/2020  12/07/2020  None             20   11.640000     " +
            "  232.80", "", "", "* Register Type Totals                                                           " +
            "  MV at 21/04/15", "*                 Available  Unavailable    Reserved     Balance   Total Cost    " +
            "       12.700000", "*   EF                 4100            0           0        4100     41000.00    " +
            "        52070.00", "*   EM                  186            0           0         186      1495.44    " +
            "         2362.20", "*   EP                  368            0           0         368      3457.07    " +
            "         4673.60", "*   EB                 1070            0           0        1070     11556.00    " +
            "        13589.00", "*   EN                  102            0           0         102      1020.00    " +
            "         1295.40", "", "** Plan Total          5826            0           0        5826*    58528.51*   " +
            "        73990.20", "", "", "", "", "", "", "", "", "", null)]
        public virtual void TestCase4194715_ESLVA_LeaverProcessing_All(
                    string test, 
                    string classCode, 
                    string selection, 
                    string transNumber, 
                    string transDate, 
                    string searchName, 
                    string register1, 
                    string register2, 
                    string register3, 
                    string register4, 
                    string register5, 
                    string register6, 
                    string register7, 
                    string register8, 
                    string register9, 
                    string certID1, 
                    string certID2, 
                    string certID3, 
                    string certID4, 
                    string certID5, 
                    string certID6, 
                    string certID7, 
                    string certID8, 
                    string certID9, 
                    string currBal1, 
                    string currBal2, 
                    string currBal3, 
                    string currBal4, 
                    string currBal5, 
                    string currBal6, 
                    string currBal7, 
                    string currBal8, 
                    string currBal9, 
                    string relImm1, 
                    string relImm2, 
                    string relImm3, 
                    string relImm4, 
                    string relImm5, 
                    string relImm6, 
                    string relImm7, 
                    string relImm8, 
                    string relImm9, 
                    string maintRest1, 
                    string maintRest2, 
                    string maintRest3, 
                    string maintRest4, 
                    string maintRest5, 
                    string maintRest6, 
                    string maintRest7, 
                    string maintRest8, 
                    string maintRest9, 
                    string forfNow1, 
                    string forfNow2, 
                    string forfNow3, 
                    string forfNow4, 
                    string forfNow5, 
                    string forfNow6, 
                    string forfNow7, 
                    string forfNow8, 
                    string forfNow9, 
                    string availUnits1, 
                    string availUnits2, 
                    string availUnits3, 
                    string availUnits4, 
                    string availUnits5, 
                    string availUnits6, 
                    string availUnits7, 
                    string availUnits8, 
                    string availUnits9, 
                    string availDate1, 
                    string availDate2, 
                    string availDate3, 
                    string availDate4, 
                    string availDate5, 
                    string availDate6, 
                    string availDate7, 
                    string availDate8, 
                    string availDate9, 
                    string restEndDate1, 
                    string restEndDate2, 
                    string restEndDate3, 
                    string restEndDate4, 
                    string restEndDate5, 
                    string restEndDate6, 
                    string restEndDate7, 
                    string restEndDate8, 
                    string restEndDate9, 
                    string action, 
                    string locateArgument, 
                    string detailLine1, 
                    string detailLine2, 
                    string detailLine3, 
                    string detailLine4, 
                    string detailLine5, 
                    string detailLine6, 
                    string detailLine7, 
                    string detailLine8, 
                    string detailLine9, 
                    string detailLine10, 
                    string action1, 
                    string locateArgument1, 
                    string detailLine1A, 
                    string detailLine2A, 
                    string detailLine3A, 
                    string detailLine4A, 
                    string detailLine5A, 
                    string detailLine6A, 
                    string detailLine7A, 
                    string detailLine8A, 
                    string detailLine9A, 
                    string detailLine10A, 
                    string detailLine1B, 
                    string detailLine2B, 
                    string detailLine3B, 
                    string detailLine4B, 
                    string detailLine5B, 
                    string detailLine6B, 
                    string detailLine7B, 
                    string detailLine8B, 
                    string detailLine9B, 
                    string detailLine10B, 
                    string register10, 
                    string certID10, 
                    string currBal10, 
                    string relImm10, 
                    string maintRest10, 
                    string forfNow10, 
                    string availUnits10, 
                    string availDate10, 
                    string restEndDate10, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "CPU_AUTO",
                    "41947",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 41947: 15_ESLVA. Leaver Processing-All", @__tags);
#line 1120
this.ScenarioSetup(scenarioInfo);
#line 1122
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1123
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1124
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1125
  testRunner.And("In EOL00113 I click on \"forfeitures and terminations\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection",
                        "TransNumber",
                        "TransDate",
                        "SearchName",
                        "Register1",
                        "Register2",
                        "Register3",
                        "Register4",
                        "Register5",
                        "Register6",
                        "Register7",
                        "Register8",
                        "Register9",
                        "CertID1",
                        "CertID2",
                        "CertID3",
                        "CertID4",
                        "CertID5",
                        "CertID6",
                        "CertID7",
                        "CertID8",
                        "CertID9",
                        "CurrBal1",
                        "CurrBal2",
                        "CurrBal3",
                        "CurrBal4",
                        "CurrBal5",
                        "CurrBal6",
                        "CurrBal7",
                        "CurrBal8",
                        "CurrBal9",
                        "RelImm1",
                        "RelImm2",
                        "RelImm3",
                        "RelImm4",
                        "RelImm5",
                        "RelImm6",
                        "RelImm7",
                        "RelImm8",
                        "RelImm9",
                        "MaintRest1",
                        "MaintRest2",
                        "MaintRest3",
                        "MaintRest4",
                        "MaintRest5",
                        "MaintRest6",
                        "MaintRest7",
                        "MaintRest8",
                        "MaintRest9",
                        "ForfNow1",
                        "ForfNow2",
                        "ForfNow3",
                        "ForfNow4",
                        "ForfNow5",
                        "ForfNow6",
                        "ForfNow7",
                        "ForfNow8",
                        "ForfNow9",
                        "AvailUnits1",
                        "AvailUnits2",
                        "AvailUnits3",
                        "AvailUnits4",
                        "AvailUnits5",
                        "AvailUnits6",
                        "AvailUnits7",
                        "AvailUnits8",
                        "AvailUnits9",
                        "AvailDate1",
                        "AvailDate2",
                        "AvailDate3",
                        "AvailDate4",
                        "AvailDate5",
                        "AvailDate6",
                        "AvailDate7",
                        "AvailDate8",
                        "AvailDate9",
                        "RestEndDate1",
                        "RestEndDate2",
                        "RestEndDate3",
                        "RestEndDate4",
                        "RestEndDate5",
                        "RestEndDate6",
                        "RestEndDate7",
                        "RestEndDate8",
                        "RestEndDate9",
                        "Register10",
                        "CertID10",
                        "CurrBal10",
                        "RelImm10",
                        "MaintRest10",
                        "ForfNow10",
                        "AvailUnits10",
                        "AvailDate10",
                        "RestEndDate10"});
            table25.AddRow(new string[] {
                        string.Format("{0}", selection),
                        string.Format("{0}", transNumber),
                        string.Format("{0}", transDate),
                        string.Format("{0}", searchName),
                        string.Format("{0}", register1),
                        string.Format("{0}", register2),
                        string.Format("{0}", register3),
                        string.Format("{0}", register4),
                        string.Format("{0}", register5),
                        string.Format("{0}", register6),
                        string.Format("{0}", register7),
                        string.Format("{0}", register8),
                        string.Format("{0}", register9),
                        string.Format("{0}", certID1),
                        string.Format("{0}", certID2),
                        string.Format("{0}", certID3),
                        string.Format("{0}", certID4),
                        string.Format("{0}", certID5),
                        string.Format("{0}", certID6),
                        string.Format("{0}", certID7),
                        string.Format("{0}", certID8),
                        string.Format("{0}", certID9),
                        string.Format("{0}", currBal1),
                        string.Format("{0}", currBal2),
                        string.Format("{0}", currBal3),
                        string.Format("{0}", currBal4),
                        string.Format("{0}", currBal5),
                        string.Format("{0}", currBal6),
                        string.Format("{0}", currBal7),
                        string.Format("{0}", currBal8),
                        string.Format("{0}", currBal9),
                        string.Format("{0}", relImm1),
                        string.Format("{0}", relImm2),
                        string.Format("{0}", relImm3),
                        string.Format("{0}", relImm4),
                        string.Format("{0}", relImm5),
                        string.Format("{0}", relImm6),
                        string.Format("{0}", relImm7),
                        string.Format("{0}", relImm8),
                        string.Format("{0}", relImm9),
                        string.Format("{0}", maintRest1),
                        string.Format("{0}", maintRest2),
                        string.Format("{0}", maintRest3),
                        string.Format("{0}", maintRest4),
                        string.Format("{0}", maintRest5),
                        string.Format("{0}", maintRest6),
                        string.Format("{0}", maintRest7),
                        string.Format("{0}", maintRest8),
                        string.Format("{0}", maintRest9),
                        string.Format("{0}", forfNow1),
                        string.Format("{0}", forfNow2),
                        string.Format("{0}", forfNow3),
                        string.Format("{0}", forfNow4),
                        string.Format("{0}", forfNow5),
                        string.Format("{0}", forfNow6),
                        string.Format("{0}", forfNow7),
                        string.Format("{0}", forfNow8),
                        string.Format("{0}", forfNow9),
                        string.Format("{0}", availUnits1),
                        string.Format("{0}", availUnits2),
                        string.Format("{0}", availUnits3),
                        string.Format("{0}", availUnits4),
                        string.Format("{0}", availUnits5),
                        string.Format("{0}", availUnits6),
                        string.Format("{0}", availUnits7),
                        string.Format("{0}", availUnits8),
                        string.Format("{0}", availUnits9),
                        string.Format("{0}", availDate1),
                        string.Format("{0}", availDate2),
                        string.Format("{0}", availDate3),
                        string.Format("{0}", availDate4),
                        string.Format("{0}", availDate5),
                        string.Format("{0}", availDate6),
                        string.Format("{0}", availDate7),
                        string.Format("{0}", availDate8),
                        string.Format("{0}", availDate9),
                        string.Format("{0}", restEndDate1),
                        string.Format("{0}", restEndDate2),
                        string.Format("{0}", restEndDate3),
                        string.Format("{0}", restEndDate4),
                        string.Format("{0}", restEndDate5),
                        string.Format("{0}", restEndDate6),
                        string.Format("{0}", restEndDate7),
                        string.Format("{0}", restEndDate8),
                        string.Format("{0}", restEndDate9),
                        string.Format("{0}", register10),
                        string.Format("{0}", certID10),
                        string.Format("{0}", currBal10),
                        string.Format("{0}", relImm10),
                        string.Format("{0}", maintRest10),
                        string.Format("{0}", forfNow10),
                        string.Format("{0}", availUnits10),
                        string.Format("{0}", availDate10),
                        string.Format("{0}", restEndDate10)});
#line 1126
  testRunner.And("In EOL02201 I Perform Leaver Processing Transaction as:", ((string)(null)), table25, "And ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Register1",
                        "Register2",
                        "Register3",
                        "Register4",
                        "Register5",
                        "Register6",
                        "Register7",
                        "Register8",
                        "Register9",
                        "CertID1",
                        "CertID2",
                        "CertID3",
                        "CertID4",
                        "CertID5",
                        "CertID6",
                        "CertID7",
                        "CertID8",
                        "CertID9",
                        "RelImm1",
                        "RelImm2",
                        "RelImm3",
                        "RelImm4",
                        "RelImm5",
                        "RelImm6",
                        "RelImm7",
                        "RelImm8",
                        "RelImm9",
                        "MaintRest1",
                        "MaintRest2",
                        "MaintRest3",
                        "MaintRest4",
                        "MaintRest5",
                        "MaintRest6",
                        "MaintRest7",
                        "MaintRest8",
                        "MaintRest9",
                        "ForfNow1",
                        "ForfNow2",
                        "ForfNow3",
                        "ForfNow4",
                        "ForfNow5",
                        "ForfNow6",
                        "ForfNow7",
                        "ForfNow8",
                        "ForfNow9",
                        "AvailUnits1",
                        "AvailUnits2",
                        "AvailUnits3",
                        "AvailUnits4",
                        "AvailUnits5",
                        "AvailUnits6",
                        "AvailUnits7",
                        "AvailUnits8",
                        "AvailUnits9",
                        "RestEndDate1",
                        "RestEndDate2",
                        "RestEndDate3",
                        "RestEndDate4",
                        "RestEndDate5",
                        "RestEndDate6",
                        "RestEndDate7",
                        "RestEndDate8",
                        "RestEndDate9",
                        "AvailDate1",
                        "AvailDate2",
                        "AvailDate3",
                        "AvailDate4",
                        "AvailDate5",
                        "AvailDate6",
                        "AvailDate7",
                        "AvailDate8",
                        "AvailDate9",
                        "Register10",
                        "CertID10",
                        "CurrBal10",
                        "RelImm10",
                        "MaintRest10",
                        "ForfNow10",
                        "AvailUnits10",
                        "AvailDate10",
                        "RestEndDate10"});
            table26.AddRow(new string[] {
                        string.Format("{0}", register1),
                        string.Format("{0}", register2),
                        string.Format("{0}", register3),
                        string.Format("{0}", register4),
                        string.Format("{0}", register5),
                        string.Format("{0}", register6),
                        string.Format("{0}", register7),
                        string.Format("{0}", register8),
                        string.Format("{0}", register9),
                        string.Format("{0}", certID1),
                        string.Format("{0}", certID2),
                        string.Format("{0}", certID3),
                        string.Format("{0}", certID4),
                        string.Format("{0}", certID5),
                        string.Format("{0}", certID6),
                        string.Format("{0}", certID7),
                        string.Format("{0}", certID8),
                        string.Format("{0}", certID9),
                        string.Format("{0}", relImm1),
                        string.Format("{0}", relImm2),
                        string.Format("{0}", relImm3),
                        string.Format("{0}", relImm4),
                        string.Format("{0}", relImm5),
                        string.Format("{0}", relImm6),
                        string.Format("{0}", relImm7),
                        string.Format("{0}", relImm8),
                        string.Format("{0}", relImm9),
                        string.Format("{0}", maintRest1),
                        string.Format("{0}", maintRest2),
                        string.Format("{0}", maintRest3),
                        string.Format("{0}", maintRest4),
                        string.Format("{0}", maintRest5),
                        string.Format("{0}", maintRest6),
                        string.Format("{0}", maintRest7),
                        string.Format("{0}", maintRest8),
                        string.Format("{0}", maintRest9),
                        string.Format("{0}", forfNow1),
                        string.Format("{0}", forfNow2),
                        string.Format("{0}", forfNow3),
                        string.Format("{0}", forfNow4),
                        string.Format("{0}", forfNow5),
                        string.Format("{0}", forfNow6),
                        string.Format("{0}", forfNow7),
                        string.Format("{0}", forfNow8),
                        string.Format("{0}", forfNow9),
                        string.Format("{0}", availUnits1),
                        string.Format("{0}", availUnits2),
                        string.Format("{0}", availUnits3),
                        string.Format("{0}", availUnits4),
                        string.Format("{0}", availUnits5),
                        string.Format("{0}", availUnits6),
                        string.Format("{0}", availUnits7),
                        string.Format("{0}", availUnits8),
                        string.Format("{0}", availUnits9),
                        string.Format("{0}", restEndDate1),
                        string.Format("{0}", restEndDate2),
                        string.Format("{0}", restEndDate3),
                        string.Format("{0}", restEndDate4),
                        string.Format("{0}", restEndDate5),
                        string.Format("{0}", restEndDate6),
                        string.Format("{0}", restEndDate7),
                        string.Format("{0}", restEndDate8),
                        string.Format("{0}", restEndDate9),
                        string.Format("{0}", availDate1),
                        string.Format("{0}", availDate2),
                        string.Format("{0}", availDate3),
                        string.Format("{0}", availDate4),
                        string.Format("{0}", availDate5),
                        string.Format("{0}", availDate6),
                        string.Format("{0}", availDate7),
                        string.Format("{0}", availDate8),
                        string.Format("{0}", availDate9),
                        string.Format("{0}", register10),
                        string.Format("{0}", certID10),
                        string.Format("{0}", currBal10),
                        string.Format("{0}", relImm10),
                        string.Format("{0}", maintRest10),
                        string.Format("{0}", forfNow10),
                        string.Format("{0}", availUnits10),
                        string.Format("{0}", availDate10),
                        string.Format("{0}", restEndDate10)});
#line 1129
  testRunner.And("In EOL02204 I Perform Leaver Processing Transaction as:", ((string)(null)), table26, "And ");
#line 1132
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1133
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1134
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1135
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "SearchName",
                        "DetailLine1",
                        "DetailLine2",
                        "DetailLine3",
                        "DetailLine4",
                        "DetailLine5",
                        "DetailLine6",
                        "DetailLine7",
                        "DetailLine8",
                        "DetailLine9",
                        "DetailLine10"});
            table27.AddRow(new string[] {
                        string.Format("{0}", searchName),
                        string.Format("{0}", detailLine1),
                        string.Format("{0}", detailLine2),
                        string.Format("{0}", detailLine3),
                        string.Format("{0}", detailLine4),
                        string.Format("{0}", detailLine5),
                        string.Format("{0}", detailLine6),
                        string.Format("{0}", detailLine7),
                        string.Format("{0}", detailLine8),
                        string.Format("{0}", detailLine9),
                        string.Format("{0}", detailLine10)});
#line 1136
 testRunner.Then("In ENSESS11 I verify the following details:", ((string)(null)), table27, "Then ");
#line 1139
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "SearchName",
                        "DetailLine1",
                        "DetailLine2",
                        "DetailLine3",
                        "DetailLine4",
                        "DetailLine5",
                        "DetailLine6",
                        "DetailLine7",
                        "DetailLine8",
                        "DetailLine9",
                        "DetailLine10"});
            table28.AddRow(new string[] {
                        string.Format("{0}", searchName),
                        string.Format("{0}", detailLine1A),
                        string.Format("{0}", detailLine2A),
                        string.Format("{0}", detailLine3A),
                        string.Format("{0}", detailLine4A),
                        string.Format("{0}", detailLine5A),
                        string.Format("{0}", detailLine6A),
                        string.Format("{0}", detailLine7A),
                        string.Format("{0}", detailLine8A),
                        string.Format("{0}", detailLine9A),
                        string.Format("{0}", detailLine10A)});
#line 1140
 testRunner.Then("In ENSESS11 I verify the following details:", ((string)(null)), table28, "Then ");
#line 1143
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "SearchName",
                        "DetailLine1",
                        "DetailLine2",
                        "DetailLine3",
                        "DetailLine4",
                        "DetailLine5",
                        "DetailLine6",
                        "DetailLine7",
                        "DetailLine8",
                        "DetailLine9",
                        "DetailLine10"});
            table29.AddRow(new string[] {
                        string.Format("{0}", searchName),
                        string.Format("{0}", detailLine1B),
                        string.Format("{0}", detailLine2B),
                        string.Format("{0}", detailLine3B),
                        string.Format("{0}", detailLine4B),
                        string.Format("{0}", detailLine5B),
                        string.Format("{0}", detailLine6B),
                        string.Format("{0}", detailLine7B),
                        string.Format("{0}", detailLine8B),
                        string.Format("{0}", detailLine9B),
                        string.Format("{0}", detailLine10B)});
#line 1144
 testRunner.Then("In ENSESS11 I verify the following details:", ((string)(null)), table29, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 41947: 15_ESLVA. Leaver Processing-Partial")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("41947")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        [NUnit.Framework.TestCaseAttribute("Partial", "DEP", "ESLVA", "9993358", "", "I0030272480", "11A", "12A", "12A", "12A", "12A", "12A", "12A", "12A", "12A", "12A", "20110712EF", "20120712EP", "20120810EP", "20120912EP", "20121012EP", "20121113EP", "20121212EP", "20130114EP", "20130212EP", "20130312EP", "2100", "33", "31", "29", "30", "29", "28", "26", "25", "23", "1000", "10", "10", "10", "10", "29", "28", "26", "25", "23", "", "", "", "", "", "", "", "", "", "", "1100", "23", "21", "19", "20", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "12/07/2019", "12/07/2014", "12/07/2014", "12/07/2014", "12/07/2014", "12/07/2014", "12/07/2014", "12/07/2014", "12/07/2014", "12/07/2014", "12A", "12A", "12A", "13A", "13A", "13A", "13A", "13A", "13A", "13A", "20130412EP", "20130513EP", "20130612EP", "20130712EP", "20130812EP", "20130912EP", "20131014EP", "20131112EP", "20131212EP", "20140113EP", "25", "24", "24", "24", "24", "24", "26", "23", "23", "22", "25", "24", "24", "24", "24", "24", "26", "23", "23", "22", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "13A", "20140212EP", "21", "21", "", "", "", "", "12/07/2015", "13A", "", "", "", "", "", "", "", "", "", "20140212EP", "", "", "", "", "", "", "", "", "", "21", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "12/07/2015", "", "", "", "", "", "", "", "", "", "ESHT", "/DEP", "10A EF T 12/07/2010  12/07/2013  12/07/2013  None           1200   10.000000     " +
            "12000.00", "11A EF T 12/07/2011  12/07/2019  12/07/2014  None           1000   10.000000     " +
            "10000.00", "11B EB T 12/07/2011  None        None        12/07/2012      650   10.800000     " +
            " 7020.00", "11B EN T 12/07/2011  None        None        None            450   10.000000     " +
            " 4500.00", "11A EM T 13/02/2012  13/02/2014  13/02/2014  13/02/2014      373    8.040000     " +
            " 2998.92", "11A EP T 13/02/2012  13/02/2013  13/02/2013  13/02/2013       74    8.020000     " +
            "  593.48", "11A EP T 13/03/2012  13/02/2013  13/02/2013  13/02/2013       74    8.150000     " +
            "  603.10", "11A EP T 13/04/2012  13/02/2013  13/02/2014  13/02/2013       69    8.640000     " +
            "  596.16", "11A EP T 11/05/2012  13/02/2013  13/02/2014  13/02/2013       73    8.310000     " +
            "  606.63", "11A EP T 12/06/2012  13/02/2013  13/02/2014  13/02/2013       78    7.670000     " +
            "  598.26", "M", "", "12A EB T 12/07/2012  None        None        12/07/2013      520   10.800000     " +
            " 5616.00", "12A EP T 12/07/2012  12/07/2014  12/07/2014  12/07/2013       10    7.360000     " +
            "   73.60", "12A EP T 10/08/2012  12/07/2014  12/07/2014  10/08/2013       10    8.150000     " +
            "   81.50", "12A EP T 12/09/2012  12/07/2014  12/07/2014  12/09/2013       10    8.660000     " +
            "   86.60", "12A EP T 12/10/2012  12/07/2014  12/07/2014  12/10/2013       10    8.350000     " +
            "   83.50", "12A EP T 13/11/2012  12/07/2014  12/07/2014  13/11/2013       29    8.680000     " +
            "  251.72", "12A EP T 12/12/2012  12/07/2014  12/07/2014  12/12/2013       28    8.700000     " +
            "  243.60", "12A EP T 14/01/2013  12/07/2014  12/07/2014  14/01/2014       26    9.670000     " +
            "  251.42", "12A EP T 12/02/2013  12/07/2014  12/07/2014  12/02/2014       25   10.130000     " +
            "  253.25", "12A EP T 12/03/2013  12/07/2014  12/07/2014  12/03/2014       23   10.790000     " +
            "  248.17", "12A EP T 12/04/2013  12/07/2014  12/07/2014  12/04/2014       25   10.160000     " +
            "  254.00", "12A EP T 13/05/2013  12/07/2014  12/07/2014  13/05/2014       24   10.440000     " +
            "  250.56", "12A EP T 12/06/2013  12/07/2014  12/07/2014  12/06/2014       24   10.240000     " +
            "  245.76", "13A EP   12/07/2013  12/07/2015  12/07/2015  None             24   10.390000     " +
            "  249.36", "13A EP   12/08/2013  12/07/2015  12/07/2015  None             24   10.260000     " +
            "  246.24", "13A EP   12/09/2013  12/07/2015  12/07/2015  None             24   10.230000     " +
            "  245.52", "13A EP   14/10/2013  12/07/2015  12/07/2015  None             26    9.940000     " +
            "  258.44", "13A EP   12/11/2013  12/07/2015  12/07/2015  None             23   10.890000     " +
            "  250.47", "13A EP   12/12/2013  12/07/2015  12/07/2015  None             23   10.640000     " +
            "  244.72", "13A EP   13/01/2014  12/07/2015  12/07/2015  None             22   11.380000     " +
            "  250.36", "13A EP   12/02/2014  12/07/2015  12/07/2015  None             21   11.640000     " +
            "  244.44", "", "* Register Type Totals                                                           " +
            "  MV at 21/04/15", "*                 Available  Unavailable    Reserved     Balance   Total Cost    " +
            "       12.700000", "*   EF                 2200            0           0        2200     22000.00    " +
            "        27940.00", "*   EM                  373            0           0         373      2998.92    " +
            "         4737.10", "*   EP                  799            0           0         799      7310.86    " +
            "        10147.30", "*   EB                 1170            0           0        1170     12636.00    " +
            "        14859.00", "*   EN                  450            0           0         450      4500.00    " +
            "         5715.00", "", "", "** Plan Total          4992            0           0        4992*    49445.78*   " +
            "        63398.40", "", "", "", "", "", "", "", "", null)]
        public virtual void TestCase4194715_ESLVA_LeaverProcessing_Partial(
                    string test, 
                    string classCode, 
                    string selection, 
                    string transNumber, 
                    string transDate, 
                    string searchName, 
                    string register1, 
                    string register2, 
                    string register3, 
                    string register4, 
                    string register5, 
                    string register6, 
                    string register7, 
                    string register8, 
                    string register9, 
                    string register10, 
                    string certID1, 
                    string certID2, 
                    string certID3, 
                    string certID4, 
                    string certID5, 
                    string certID6, 
                    string certID7, 
                    string certID8, 
                    string certID9, 
                    string certID10, 
                    string currBal1, 
                    string currBal2, 
                    string currBal3, 
                    string currBal4, 
                    string currBal5, 
                    string currBal6, 
                    string currBal7, 
                    string currBal8, 
                    string currBal9, 
                    string currBal10, 
                    string relImm1, 
                    string relImm2, 
                    string relImm3, 
                    string relImm4, 
                    string relImm5, 
                    string relImm6, 
                    string relImm7, 
                    string relImm8, 
                    string relImm9, 
                    string relImm10, 
                    string maintRest1, 
                    string maintRest2, 
                    string maintRest3, 
                    string maintRest4, 
                    string maintRest5, 
                    string maintRest6, 
                    string maintRest7, 
                    string maintRest8, 
                    string maintRest9, 
                    string maintRest10, 
                    string forfNow1, 
                    string forfNow2, 
                    string forfNow3, 
                    string forfNow4, 
                    string forfNow5, 
                    string forfNow6, 
                    string forfNow7, 
                    string forfNow8, 
                    string forfNow9, 
                    string forfNow10, 
                    string availUnits1, 
                    string availUnits2, 
                    string availUnits3, 
                    string availUnits4, 
                    string availUnits5, 
                    string availUnits6, 
                    string availUnits7, 
                    string availUnits8, 
                    string availUnits9, 
                    string availUnits10, 
                    string availDate1, 
                    string availDate2, 
                    string availDate3, 
                    string availDate4, 
                    string availDate5, 
                    string availDate6, 
                    string availDate7, 
                    string availDate8, 
                    string availDate9, 
                    string availDate10, 
                    string restEndDate1, 
                    string restEndDate2, 
                    string restEndDate3, 
                    string restEndDate4, 
                    string restEndDate5, 
                    string restEndDate6, 
                    string restEndDate7, 
                    string restEndDate8, 
                    string restEndDate9, 
                    string restEndDate10, 
                    string register1A, 
                    string register2A, 
                    string register3A, 
                    string register4A, 
                    string register5A, 
                    string register6A, 
                    string register7A, 
                    string register8A, 
                    string register9A, 
                    string register10A, 
                    string certID1A, 
                    string certID2A, 
                    string certID3A, 
                    string certID4A, 
                    string certID5A, 
                    string certID6A, 
                    string certID7A, 
                    string certID8A, 
                    string certID9A, 
                    string certID10A, 
                    string currBal1A, 
                    string currBal2A, 
                    string currBal3A, 
                    string currBal4A, 
                    string currBal5A, 
                    string currBal6A, 
                    string currBal7A, 
                    string currBal8A, 
                    string currBal9A, 
                    string currBal10A, 
                    string relImm1A, 
                    string relImm2A, 
                    string relImm3A, 
                    string relImm4A, 
                    string relImm5A, 
                    string relImm6A, 
                    string relImm7A, 
                    string relImm8A, 
                    string relImm9A, 
                    string relImm10A, 
                    string maintRest1A, 
                    string maintRest2A, 
                    string maintRest3A, 
                    string maintRest4A, 
                    string maintRest5A, 
                    string maintRest6A, 
                    string maintRest7A, 
                    string maintRest8A, 
                    string maintRest9A, 
                    string maintRest10A, 
                    string forfNow1A, 
                    string forfNow2A, 
                    string forfNow3A, 
                    string forfNow4A, 
                    string forfNow5A, 
                    string forfNow6A, 
                    string forfNow7A, 
                    string forfNow8A, 
                    string forfNow9A, 
                    string forfNow10A, 
                    string availUnits1A, 
                    string availUnits2A, 
                    string availUnits3A, 
                    string availUnits4A, 
                    string availUnits5A, 
                    string availUnits6A, 
                    string availUnits7A, 
                    string availUnits8A, 
                    string availUnits9A, 
                    string availUnits10A, 
                    string availDate1A, 
                    string availDate2A, 
                    string availDate3A, 
                    string availDate4A, 
                    string availDate5A, 
                    string availDate6A, 
                    string availDate7A, 
                    string availDate8A, 
                    string availDate9A, 
                    string availDate10A, 
                    string restEndDate1A, 
                    string restEndDate2A, 
                    string restEndDate3A, 
                    string restEndDate4A, 
                    string restEndDate5A, 
                    string restEndDate6A, 
                    string restEndDate7A, 
                    string restEndDate8A, 
                    string restEndDate9A, 
                    string restEndDate10A, 
                    string register11A, 
                    string certID11A, 
                    string currBal11A, 
                    string relImm11A, 
                    string maintRest11A, 
                    string forfNow11A, 
                    string availUnits11A, 
                    string availDate11A, 
                    string restEndDate11A, 
                    string register1B, 
                    string register2B, 
                    string register3B, 
                    string register4B, 
                    string register5B, 
                    string register6B, 
                    string register7B, 
                    string register8B, 
                    string register9B, 
                    string register10B, 
                    string certID1B, 
                    string certID2B, 
                    string certID3B, 
                    string certID4B, 
                    string certID5B, 
                    string certID6B, 
                    string certID7B, 
                    string certID8B, 
                    string certID9B, 
                    string certID10B, 
                    string relImm1B, 
                    string relImm2B, 
                    string relImm3B, 
                    string relImm4B, 
                    string relImm5B, 
                    string relImm6B, 
                    string relImm7B, 
                    string relImm8B, 
                    string relImm9B, 
                    string relImm10B, 
                    string maintRest1B, 
                    string maintRest2B, 
                    string maintRest3B, 
                    string maintRest4B, 
                    string maintRest5B, 
                    string maintRest6B, 
                    string maintRest7B, 
                    string maintRest8B, 
                    string maintRest9B, 
                    string maintRest10B, 
                    string forfNow1B, 
                    string forfNow2B, 
                    string forfNow3B, 
                    string forfNow4B, 
                    string forfNow5B, 
                    string forfNow6B, 
                    string forfNow7B, 
                    string forfNow8B, 
                    string forfNow9B, 
                    string forfNow10B, 
                    string availUnits1B, 
                    string availUnits2B, 
                    string availUnits3B, 
                    string availUnits4B, 
                    string availUnits5B, 
                    string availUnits6B, 
                    string availUnits7B, 
                    string availUnits8B, 
                    string availUnits9B, 
                    string availUnits10B, 
                    string availDate1B, 
                    string availDate2B, 
                    string availDate3B, 
                    string availDate4B, 
                    string availDate5B, 
                    string availDate6B, 
                    string availDate7B, 
                    string availDate8B, 
                    string availDate9B, 
                    string availDate10B, 
                    string restEndDate1B, 
                    string restEndDate2B, 
                    string restEndDate3B, 
                    string restEndDate4B, 
                    string restEndDate5B, 
                    string restEndDate6B, 
                    string restEndDate7B, 
                    string restEndDate8B, 
                    string restEndDate9B, 
                    string restEndDate10B, 
                    string action, 
                    string locateArgument, 
                    string detailLine1, 
                    string detailLine2, 
                    string detailLine3, 
                    string detailLine4, 
                    string detailLine5, 
                    string detailLine6, 
                    string detailLine7, 
                    string detailLine8, 
                    string detailLine9, 
                    string detailLine10, 
                    string action1, 
                    string locateArgument1, 
                    string detailLine1A, 
                    string detailLine2A, 
                    string detailLine3A, 
                    string detailLine4A, 
                    string detailLine5A, 
                    string detailLine6A, 
                    string detailLine7A, 
                    string detailLine8A, 
                    string detailLine9A, 
                    string detailLine10A, 
                    string detailLine1B, 
                    string detailLine2B, 
                    string detailLine3B, 
                    string detailLine4B, 
                    string detailLine5B, 
                    string detailLine6B, 
                    string detailLine7B, 
                    string detailLine8B, 
                    string detailLine9B, 
                    string detailLine10B, 
                    string detailLine1C, 
                    string detailLine2C, 
                    string detailLine3C, 
                    string detailLine4C, 
                    string detailLine5C, 
                    string detailLine6C, 
                    string detailLine7C, 
                    string detailLine8C, 
                    string detailLine9C, 
                    string detailLine10C, 
                    string detailLine1D, 
                    string detailLine2D, 
                    string detailLine3D, 
                    string detailLine4D, 
                    string detailLine5D, 
                    string detailLine6D, 
                    string detailLine7D, 
                    string detailLine8D, 
                    string detailLine9D, 
                    string detailLine10D, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "CPU_AUTO",
                    "41947",
                    "EP_EmployeePlanProcessing",
                    "FullSmokeTest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 41947: 15_ESLVA. Leaver Processing-Partial", @__tags);
#line 1158
this.ScenarioSetup(scenarioInfo);
#line 1160
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1161
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1162
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1163
  testRunner.And("In EOL00113 I click on \"forfeitures and terminations\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection",
                        "TransNumber",
                        "TransDate",
                        "SearchName",
                        "Register1",
                        "Register2",
                        "Register3",
                        "Register4",
                        "Register5",
                        "Register6",
                        "Register7",
                        "Register8",
                        "Register9",
                        "Register10",
                        "CertID1",
                        "CertID2",
                        "CertID3",
                        "CertID4",
                        "CertID5",
                        "CertID6",
                        "CertID7",
                        "CertID8",
                        "CertID9",
                        "CertID10",
                        "CurrBal1",
                        "CurrBal2",
                        "CurrBal3",
                        "CurrBal4",
                        "CurrBal5",
                        "CurrBal6",
                        "CurrBal7",
                        "CurrBal8",
                        "CurrBal9",
                        "CurrBal10",
                        "RelImm1",
                        "RelImm2",
                        "RelImm3",
                        "RelImm4",
                        "RelImm5",
                        "RelImm6",
                        "RelImm7",
                        "RelImm8",
                        "RelImm9",
                        "RelImm10",
                        "MaintRest1",
                        "MaintRest2",
                        "MaintRest3",
                        "MaintRest4",
                        "MaintRest5",
                        "MaintRest6",
                        "MaintRest7",
                        "MaintRest8",
                        "MaintRest9",
                        "MaintRest10",
                        "ForfNow1",
                        "ForfNow2",
                        "ForfNow3",
                        "ForfNow4",
                        "ForfNow5",
                        "ForfNow6",
                        "ForfNow7",
                        "ForfNow8",
                        "ForfNow9",
                        "ForfNow10",
                        "AvailUnits1",
                        "AvailUnits2",
                        "AvailUnits3",
                        "AvailUnits4",
                        "AvailUnits5",
                        "AvailUnits6",
                        "AvailUnits7",
                        "AvailUnits8",
                        "AvailUnits9",
                        "AvailUnits10",
                        "AvailDate1",
                        "AvailDate2",
                        "AvailDate3",
                        "AvailDate4",
                        "AvailDate5",
                        "AvailDate6",
                        "AvailDate7",
                        "AvailDate8",
                        "AvailDate9",
                        "AvailDate10",
                        "RestEndDate1",
                        "RestEndDate2",
                        "RestEndDate3",
                        "RestEndDate4",
                        "RestEndDate5",
                        "RestEndDate6",
                        "RestEndDate7",
                        "RestEndDate8",
                        "RestEndDate9",
                        "RestEndDate10"});
            table30.AddRow(new string[] {
                        string.Format("{0}", selection),
                        string.Format("{0}", transNumber),
                        string.Format("{0}", transDate),
                        string.Format("{0}", searchName),
                        string.Format("{0}", register1),
                        string.Format("{0}", register2),
                        string.Format("{0}", register3),
                        string.Format("{0}", register4),
                        string.Format("{0}", register5),
                        string.Format("{0}", register6),
                        string.Format("{0}", register7),
                        string.Format("{0}", register8),
                        string.Format("{0}", register9),
                        string.Format("{0}", register10),
                        string.Format("{0}", certID1),
                        string.Format("{0}", certID2),
                        string.Format("{0}", certID3),
                        string.Format("{0}", certID4),
                        string.Format("{0}", certID5),
                        string.Format("{0}", certID6),
                        string.Format("{0}", certID7),
                        string.Format("{0}", certID8),
                        string.Format("{0}", certID9),
                        string.Format("{0}", certID10),
                        string.Format("{0}", currBal1),
                        string.Format("{0}", currBal2),
                        string.Format("{0}", currBal3),
                        string.Format("{0}", currBal4),
                        string.Format("{0}", currBal5),
                        string.Format("{0}", currBal6),
                        string.Format("{0}", currBal7),
                        string.Format("{0}", currBal8),
                        string.Format("{0}", currBal9),
                        string.Format("{0}", currBal10),
                        string.Format("{0}", relImm1),
                        string.Format("{0}", relImm2),
                        string.Format("{0}", relImm3),
                        string.Format("{0}", relImm4),
                        string.Format("{0}", relImm5),
                        string.Format("{0}", relImm6),
                        string.Format("{0}", relImm7),
                        string.Format("{0}", relImm8),
                        string.Format("{0}", relImm9),
                        string.Format("{0}", relImm10),
                        string.Format("{0}", maintRest1),
                        string.Format("{0}", maintRest2),
                        string.Format("{0}", maintRest3),
                        string.Format("{0}", maintRest4),
                        string.Format("{0}", maintRest5),
                        string.Format("{0}", maintRest6),
                        string.Format("{0}", maintRest7),
                        string.Format("{0}", maintRest8),
                        string.Format("{0}", maintRest9),
                        string.Format("{0}", maintRest10),
                        string.Format("{0}", forfNow1),
                        string.Format("{0}", forfNow2),
                        string.Format("{0}", forfNow3),
                        string.Format("{0}", forfNow4),
                        string.Format("{0}", forfNow5),
                        string.Format("{0}", forfNow6),
                        string.Format("{0}", forfNow7),
                        string.Format("{0}", forfNow8),
                        string.Format("{0}", forfNow9),
                        string.Format("{0}", forfNow10),
                        string.Format("{0}", availUnits1),
                        string.Format("{0}", availUnits2),
                        string.Format("{0}", availUnits3),
                        string.Format("{0}", availUnits4),
                        string.Format("{0}", availUnits5),
                        string.Format("{0}", availUnits6),
                        string.Format("{0}", availUnits7),
                        string.Format("{0}", availUnits8),
                        string.Format("{0}", availUnits9),
                        string.Format("{0}", availUnits10),
                        string.Format("{0}", availDate1),
                        string.Format("{0}", availDate2),
                        string.Format("{0}", availDate3),
                        string.Format("{0}", availDate4),
                        string.Format("{0}", availDate5),
                        string.Format("{0}", availDate6),
                        string.Format("{0}", availDate7),
                        string.Format("{0}", availDate8),
                        string.Format("{0}", availDate9),
                        string.Format("{0}", availDate10),
                        string.Format("{0}", restEndDate1),
                        string.Format("{0}", restEndDate2),
                        string.Format("{0}", restEndDate3),
                        string.Format("{0}", restEndDate4),
                        string.Format("{0}", restEndDate5),
                        string.Format("{0}", restEndDate6),
                        string.Format("{0}", restEndDate7),
                        string.Format("{0}", restEndDate8),
                        string.Format("{0}", restEndDate9),
                        string.Format("{0}", restEndDate10)});
#line 1164
  testRunner.And("In EOL02201 I Perform Leaver Processing Transaction as:", ((string)(null)), table30, "And ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Register1",
                        "Register2",
                        "Register3",
                        "Register4",
                        "Register5",
                        "Register6",
                        "Register7",
                        "Register8",
                        "Register9",
                        "Register10",
                        "CertID1",
                        "CertID2",
                        "CertID3",
                        "CertID4",
                        "CertID5",
                        "CertID6",
                        "CertID7",
                        "CertID8",
                        "CertID9",
                        "CertID10",
                        "CurrBal1",
                        "CurrBal2",
                        "CurrBal3",
                        "CurrBal4",
                        "CurrBal5",
                        "CurrBal6",
                        "CurrBal7",
                        "CurrBal8",
                        "CurrBal9",
                        "CurrBal10",
                        "RelImm1",
                        "RelImm2",
                        "RelImm3",
                        "RelImm4",
                        "RelImm5",
                        "RelImm6",
                        "RelImm7",
                        "RelImm8",
                        "RelImm9",
                        "RelImm10",
                        "MaintRest1",
                        "MaintRest2",
                        "MaintRest3",
                        "MaintRest4",
                        "MaintRest5",
                        "MaintRest6",
                        "MaintRest7",
                        "MaintRest8",
                        "MaintRest9",
                        "MaintRest10",
                        "ForfNow1",
                        "ForfNow2",
                        "ForfNow3",
                        "ForfNow4",
                        "ForfNow5",
                        "ForfNow6",
                        "ForfNow7",
                        "ForfNow8",
                        "ForfNow9",
                        "ForfNow10",
                        "AvailUnits1",
                        "AvailUnits2",
                        "AvailUnits3",
                        "AvailUnits4",
                        "AvailUnits5",
                        "AvailUnits6",
                        "AvailUnits7",
                        "AvailUnits8",
                        "AvailUnits9",
                        "AvailUnits10",
                        "AvailDate1",
                        "AvailDate2",
                        "AvailDate3",
                        "AvailDate4",
                        "AvailDate5",
                        "AvailDate6",
                        "AvailDate7",
                        "AvailDate8",
                        "AvailDate9",
                        "AvailDate10",
                        "RestEndDate1",
                        "RestEndDate2",
                        "RestEndDate3",
                        "RestEndDate4",
                        "RestEndDate5",
                        "RestEndDate6",
                        "RestEndDate7",
                        "RestEndDate8",
                        "RestEndDate9",
                        "RestEndDate10",
                        "Register11",
                        "CertID11",
                        "CurrBal11",
                        "RelImm11",
                        "MaintRest11",
                        "ForfNow11",
                        "AvailUnits11",
                        "AvailDate11",
                        "RestEndDate11"});
            table31.AddRow(new string[] {
                        string.Format("{0}", register1A),
                        string.Format("{0}", register2A),
                        string.Format("{0}", register3A),
                        string.Format("{0}", register4A),
                        string.Format("{0}", register5A),
                        string.Format("{0}", register6A),
                        string.Format("{0}", register7A),
                        string.Format("{0}", register8A),
                        string.Format("{0}", register9A),
                        string.Format("{0}", register10A),
                        string.Format("{0}", certID1A),
                        string.Format("{0}", certID2A),
                        string.Format("{0}", certID3A),
                        string.Format("{0}", certID4A),
                        string.Format("{0}", certID5A),
                        string.Format("{0}", certID6A),
                        string.Format("{0}", certID7A),
                        string.Format("{0}", certID8A),
                        string.Format("{0}", certID9A),
                        string.Format("{0}", certID10A),
                        string.Format("{0}", currBal1A),
                        string.Format("{0}", currBal2A),
                        string.Format("{0}", currBal3A),
                        string.Format("{0}", currBal4A),
                        string.Format("{0}", currBal5A),
                        string.Format("{0}", currBal6A),
                        string.Format("{0}", currBal7A),
                        string.Format("{0}", currBal8A),
                        string.Format("{0}", currBal9A),
                        string.Format("{0}", currBal10A),
                        string.Format("{0}", relImm1A),
                        string.Format("{0}", relImm2A),
                        string.Format("{0}", relImm3A),
                        string.Format("{0}", relImm4A),
                        string.Format("{0}", relImm5A),
                        string.Format("{0}", relImm6A),
                        string.Format("{0}", relImm7A),
                        string.Format("{0}", relImm8A),
                        string.Format("{0}", relImm9A),
                        string.Format("{0}", relImm10A),
                        string.Format("{0}", maintRest1A),
                        string.Format("{0}", maintRest2A),
                        string.Format("{0}", maintRest3A),
                        string.Format("{0}", maintRest4A),
                        string.Format("{0}", maintRest5A),
                        string.Format("{0}", maintRest6A),
                        string.Format("{0}", maintRest7A),
                        string.Format("{0}", maintRest8A),
                        string.Format("{0}", maintRest9A),
                        string.Format("{0}", maintRest10A),
                        string.Format("{0}", forfNow1A),
                        string.Format("{0}", forfNow2A),
                        string.Format("{0}", forfNow3A),
                        string.Format("{0}", forfNow4A),
                        string.Format("{0}", forfNow5A),
                        string.Format("{0}", forfNow6A),
                        string.Format("{0}", forfNow7A),
                        string.Format("{0}", forfNow8A),
                        string.Format("{0}", forfNow9A),
                        string.Format("{0}", forfNow10A),
                        string.Format("{0}", availUnits1A),
                        string.Format("{0}", availUnits2A),
                        string.Format("{0}", availUnits3A),
                        string.Format("{0}", availUnits4A),
                        string.Format("{0}", availUnits5A),
                        string.Format("{0}", availUnits6A),
                        string.Format("{0}", availUnits7A),
                        string.Format("{0}", availUnits8A),
                        string.Format("{0}", availUnits9A),
                        string.Format("{0}", availUnits10A),
                        string.Format("{0}", availDate1A),
                        string.Format("{0}", availDate2A),
                        string.Format("{0}", availDate3A),
                        string.Format("{0}", availDate4A),
                        string.Format("{0}", availDate5A),
                        string.Format("{0}", availDate6A),
                        string.Format("{0}", availDate7A),
                        string.Format("{0}", availDate8A),
                        string.Format("{0}", availDate9A),
                        string.Format("{0}", availDate10A),
                        string.Format("{0}", restEndDate1A),
                        string.Format("{0}", restEndDate2A),
                        string.Format("{0}", restEndDate3A),
                        string.Format("{0}", restEndDate4A),
                        string.Format("{0}", restEndDate5A),
                        string.Format("{0}", restEndDate6A),
                        string.Format("{0}", restEndDate7A),
                        string.Format("{0}", restEndDate8A),
                        string.Format("{0}", restEndDate9A),
                        string.Format("{0}", restEndDate10A),
                        string.Format("{0}", register11A),
                        string.Format("{0}", certID11A),
                        string.Format("{0}", currBal11A),
                        string.Format("{0}", relImm11A),
                        string.Format("{0}", maintRest11A),
                        string.Format("{0}", forfNow11A),
                        string.Format("{0}", availUnits11A),
                        string.Format("{0}", availDate11A),
                        string.Format("{0}", restEndDate11A)});
#line 1167
  testRunner.And("In EOL02203 I Perform Leaver Processing Transaction as:", ((string)(null)), table31, "And ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Register1",
                        "Register2",
                        "Register3",
                        "Register4",
                        "Register5",
                        "Register6",
                        "Register7",
                        "Register8",
                        "Register9",
                        "Register10",
                        "CertID1",
                        "CertID2",
                        "CertID3",
                        "CertID4",
                        "CertID5",
                        "CertID6",
                        "CertID7",
                        "CertID8",
                        "CertID9",
                        "CertID10",
                        "RelImm1",
                        "RelImm2",
                        "RelImm3",
                        "RelImm4",
                        "RelImm5",
                        "RelImm6",
                        "RelImm7",
                        "RelImm8",
                        "RelImm9",
                        "RelImm10",
                        "MaintRest1",
                        "MaintRest2",
                        "MaintRest3",
                        "MaintRest4",
                        "MaintRest5",
                        "MaintRest6",
                        "MaintRest7",
                        "MaintRest8",
                        "MaintRest9",
                        "MaintRest10",
                        "ForfNow1",
                        "ForfNow2",
                        "ForfNow3",
                        "ForfNow4",
                        "ForfNow5",
                        "ForfNow6",
                        "ForfNow7",
                        "ForfNow8",
                        "ForfNow9",
                        "ForfNow10",
                        "AvailUnits1",
                        "AvailUnits2",
                        "AvailUnits3",
                        "AvailUnits4",
                        "AvailUnits5",
                        "AvailUnits6",
                        "AvailUnits7",
                        "AvailUnits8",
                        "AvailUnits9",
                        "AvailUnits10",
                        "RestEndDate1",
                        "RestEndDate2",
                        "RestEndDate3",
                        "RestEndDate4",
                        "RestEndDate5",
                        "RestEndDate6",
                        "RestEndDate7",
                        "RestEndDate8",
                        "RestEndDate9",
                        "RestEndDate10",
                        "AvailDate1",
                        "AvailDate2",
                        "AvailDate3",
                        "AvailDate4",
                        "AvailDate5",
                        "AvailDate6",
                        "AvailDate7",
                        "AvailDate8",
                        "AvailDate9",
                        "AvailDate10"});
            table32.AddRow(new string[] {
                        string.Format("{0}", register1),
                        string.Format("{0}", register2),
                        string.Format("{0}", register3),
                        string.Format("{0}", register4),
                        string.Format("{0}", register5),
                        string.Format("{0}", register6),
                        string.Format("{0}", register7),
                        string.Format("{0}", register8),
                        string.Format("{0}", register9),
                        string.Format("{0}", register10),
                        string.Format("{0}", certID1),
                        string.Format("{0}", certID2),
                        string.Format("{0}", certID3),
                        string.Format("{0}", certID4),
                        string.Format("{0}", certID5),
                        string.Format("{0}", certID6),
                        string.Format("{0}", certID7),
                        string.Format("{0}", certID8),
                        string.Format("{0}", certID9),
                        string.Format("{0}", certID10),
                        string.Format("{0}", relImm1),
                        string.Format("{0}", relImm2),
                        string.Format("{0}", relImm3),
                        string.Format("{0}", relImm4),
                        string.Format("{0}", relImm5),
                        string.Format("{0}", relImm6),
                        string.Format("{0}", relImm7),
                        string.Format("{0}", relImm8),
                        string.Format("{0}", relImm9),
                        string.Format("{0}", relImm10),
                        string.Format("{0}", maintRest1),
                        string.Format("{0}", maintRest2),
                        string.Format("{0}", maintRest3),
                        string.Format("{0}", maintRest4),
                        string.Format("{0}", maintRest5),
                        string.Format("{0}", maintRest6),
                        string.Format("{0}", maintRest7),
                        string.Format("{0}", maintRest8),
                        string.Format("{0}", maintRest9),
                        string.Format("{0}", maintRest10),
                        string.Format("{0}", forfNow1),
                        string.Format("{0}", forfNow2),
                        string.Format("{0}", forfNow3),
                        string.Format("{0}", forfNow4),
                        string.Format("{0}", forfNow5),
                        string.Format("{0}", forfNow6),
                        string.Format("{0}", forfNow7),
                        string.Format("{0}", forfNow8),
                        string.Format("{0}", forfNow9),
                        string.Format("{0}", forfNow10),
                        string.Format("{0}", availUnits1),
                        string.Format("{0}", availUnits2),
                        string.Format("{0}", availUnits3),
                        string.Format("{0}", availUnits4),
                        string.Format("{0}", availUnits5),
                        string.Format("{0}", availUnits6),
                        string.Format("{0}", availUnits7),
                        string.Format("{0}", availUnits8),
                        string.Format("{0}", availUnits9),
                        string.Format("{0}", availUnits10),
                        string.Format("{0}", restEndDate1),
                        string.Format("{0}", restEndDate2),
                        string.Format("{0}", restEndDate3),
                        string.Format("{0}", restEndDate4),
                        string.Format("{0}", restEndDate5),
                        string.Format("{0}", restEndDate6),
                        string.Format("{0}", restEndDate7),
                        string.Format("{0}", restEndDate8),
                        string.Format("{0}", restEndDate9),
                        string.Format("{0}", restEndDate10),
                        string.Format("{0}", availDate1),
                        string.Format("{0}", availDate2),
                        string.Format("{0}", availDate3),
                        string.Format("{0}", availDate4),
                        string.Format("{0}", availDate5),
                        string.Format("{0}", availDate6),
                        string.Format("{0}", availDate7),
                        string.Format("{0}", availDate8),
                        string.Format("{0}", availDate9),
                        "AvailDate10"});
#line 1170
  testRunner.And("In EOL02204 I Perform Leaver Processing Transaction as:", ((string)(null)), table32, "And ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Register1",
                        "Register2",
                        "Register3",
                        "Register4",
                        "Register5",
                        "Register6",
                        "Register7",
                        "Register8",
                        "Register9",
                        "Register10",
                        "CertID1",
                        "CertID2",
                        "CertID3",
                        "CertID4",
                        "CertID5",
                        "CertID6",
                        "CertID7",
                        "CertID8",
                        "CertID9",
                        "CertID10",
                        "RelImm1",
                        "RelImm2",
                        "RelImm3",
                        "RelImm4",
                        "RelImm5",
                        "RelImm6",
                        "RelImm7",
                        "RelImm8",
                        "RelImm9",
                        "RelImm10",
                        "MaintRest1",
                        "MaintRest2",
                        "MaintRest3",
                        "MaintRest4",
                        "MaintRest5",
                        "MaintRest6",
                        "MaintRest7",
                        "MaintRest8",
                        "MaintRest9",
                        "MaintRest10",
                        "ForfNow1",
                        "ForfNow2",
                        "ForfNow3",
                        "ForfNow4",
                        "ForfNow5",
                        "ForfNow6",
                        "ForfNow7",
                        "ForfNow8",
                        "ForfNow9",
                        "ForfNow10",
                        "AvailUnits1",
                        "AvailUnits2",
                        "AvailUnits3",
                        "AvailUnits4",
                        "AvailUnits5",
                        "AvailUnits6",
                        "AvailUnits7",
                        "AvailUnits8",
                        "AvailUnits9",
                        "AvailUnits10",
                        "RestEndDate1",
                        "RestEndDate2",
                        "RestEndDate3",
                        "RestEndDate4",
                        "RestEndDate5",
                        "RestEndDate6",
                        "RestEndDate7",
                        "RestEndDate8",
                        "RestEndDate9",
                        "RestEndDate10",
                        "AvailDate1",
                        "AvailDate2",
                        "AvailDate3",
                        "AvailDate4",
                        "AvailDate5",
                        "AvailDate6",
                        "AvailDate7",
                        "AvailDate8",
                        "AvailDate9",
                        "AvailDate10"});
            table33.AddRow(new string[] {
                        string.Format("{0}", register1A),
                        string.Format("{0}", register2A),
                        string.Format("{0}", register3A),
                        string.Format("{0}", register4A),
                        string.Format("{0}", register5A),
                        string.Format("{0}", register6A),
                        string.Format("{0}", register7A),
                        string.Format("{0}", register8A),
                        string.Format("{0}", register9A),
                        string.Format("{0}", register10A),
                        string.Format("{0}", certID1A),
                        string.Format("{0}", certID2A),
                        string.Format("{0}", certID3A),
                        string.Format("{0}", certID4A),
                        string.Format("{0}", certID5A),
                        string.Format("{0}", certID6A),
                        string.Format("{0}", certID7A),
                        string.Format("{0}", certID8A),
                        string.Format("{0}", certID9A),
                        string.Format("{0}", certID10A),
                        string.Format("{0}", relImm1A),
                        string.Format("{0}", relImm2A),
                        string.Format("{0}", relImm3A),
                        string.Format("{0}", relImm4A),
                        string.Format("{0}", relImm5A),
                        string.Format("{0}", relImm6A),
                        string.Format("{0}", relImm7A),
                        string.Format("{0}", relImm8A),
                        string.Format("{0}", relImm9A),
                        string.Format("{0}", relImm10A),
                        string.Format("{0}", maintRest1A),
                        string.Format("{0}", maintRest2A),
                        string.Format("{0}", maintRest3A),
                        string.Format("{0}", maintRest4A),
                        string.Format("{0}", maintRest5A),
                        string.Format("{0}", maintRest6A),
                        string.Format("{0}", maintRest7A),
                        string.Format("{0}", maintRest8A),
                        string.Format("{0}", maintRest9A),
                        string.Format("{0}", maintRest10A),
                        string.Format("{0}", forfNow1A),
                        string.Format("{0}", forfNow2A),
                        string.Format("{0}", forfNow3A),
                        string.Format("{0}", forfNow4A),
                        string.Format("{0}", forfNow5A),
                        string.Format("{0}", forfNow6A),
                        string.Format("{0}", forfNow7A),
                        string.Format("{0}", forfNow8A),
                        string.Format("{0}", forfNow9A),
                        string.Format("{0}", forfNow10A),
                        string.Format("{0}", availUnits1A),
                        string.Format("{0}", availUnits2A),
                        string.Format("{0}", availUnits3A),
                        string.Format("{0}", availUnits4A),
                        string.Format("{0}", availUnits5A),
                        string.Format("{0}", availUnits6A),
                        string.Format("{0}", availUnits7A),
                        string.Format("{0}", availUnits8A),
                        string.Format("{0}", availUnits9A),
                        string.Format("{0}", availUnits10A),
                        string.Format("{0}", restEndDate1A),
                        string.Format("{0}", restEndDate2A),
                        string.Format("{0}", restEndDate3A),
                        string.Format("{0}", restEndDate4A),
                        string.Format("{0}", restEndDate5A),
                        string.Format("{0}", restEndDate6A),
                        string.Format("{0}", restEndDate7A),
                        string.Format("{0}", restEndDate8A),
                        string.Format("{0}", restEndDate9A),
                        string.Format("{0}", restEndDate10A),
                        string.Format("{0}", availDate1A),
                        string.Format("{0}", availDate2A),
                        string.Format("{0}", availDate3A),
                        string.Format("{0}", availDate4A),
                        string.Format("{0}", availDate5A),
                        string.Format("{0}", availDate6A),
                        string.Format("{0}", availDate7A),
                        string.Format("{0}", availDate8A),
                        string.Format("{0}", availDate9A),
                        string.Format("{0}", availDate10A)});
#line 1173
  testRunner.And("In EOL02204 I Perform Leaver Processing Transaction as:", ((string)(null)), table33, "And ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Register1",
                        "Register2",
                        "Register3",
                        "Register4",
                        "Register5",
                        "Register6",
                        "Register7",
                        "Register8",
                        "Register9",
                        "Register10",
                        "CertID1",
                        "CertID2",
                        "CertID3",
                        "CertID4",
                        "CertID5",
                        "CertID6",
                        "CertID7",
                        "CertID8",
                        "CertID9",
                        "CertID10",
                        "RelImm1",
                        "RelImm2",
                        "RelImm3",
                        "RelImm4",
                        "RelImm5",
                        "RelImm6",
                        "RelImm7",
                        "RelImm8",
                        "RelImm9",
                        "RelImm10",
                        "MaintRest1",
                        "MaintRest2",
                        "MaintRest3",
                        "MaintRest4",
                        "MaintRest5",
                        "MaintRest6",
                        "MaintRest7",
                        "MaintRest8",
                        "MaintRest9",
                        "MaintRest10",
                        "ForfNow1",
                        "ForfNow2",
                        "ForfNow3",
                        "ForfNow4",
                        "ForfNow5",
                        "ForfNow6",
                        "ForfNow7",
                        "ForfNow8",
                        "ForfNow9",
                        "ForfNow10",
                        "AvailUnits1",
                        "AvailUnits2",
                        "AvailUnits3",
                        "AvailUnits4",
                        "AvailUnits5",
                        "AvailUnits6",
                        "AvailUnits7",
                        "AvailUnits8",
                        "AvailUnits9",
                        "AvailUnits10",
                        "RestEndDate1",
                        "RestEndDate2",
                        "RestEndDate3",
                        "RestEndDate4",
                        "RestEndDate5",
                        "RestEndDate6",
                        "RestEndDate7",
                        "RestEndDate8",
                        "RestEndDate9",
                        "RestEndDate10",
                        "AvailDate1",
                        "AvailDate2",
                        "AvailDate3",
                        "AvailDate4",
                        "AvailDate5",
                        "AvailDate6",
                        "AvailDate7",
                        "AvailDate8",
                        "AvailDate9",
                        "AvailDate10"});
            table34.AddRow(new string[] {
                        string.Format("{0}", register1B),
                        string.Format("{0}", register2B),
                        string.Format("{0}", register3B),
                        string.Format("{0}", register4B),
                        string.Format("{0}", register5B),
                        string.Format("{0}", register6B),
                        string.Format("{0}", register7B),
                        string.Format("{0}", register8B),
                        string.Format("{0}", register9B),
                        string.Format("{0}", register10B),
                        string.Format("{0}", certID1B),
                        string.Format("{0}", certID2B),
                        string.Format("{0}", certID3B),
                        string.Format("{0}", certID4B),
                        string.Format("{0}", certID5B),
                        string.Format("{0}", certID6B),
                        string.Format("{0}", certID7B),
                        string.Format("{0}", certID8B),
                        string.Format("{0}", certID9B),
                        string.Format("{0}", certID10B),
                        string.Format("{0}", relImm1B),
                        string.Format("{0}", relImm2B),
                        string.Format("{0}", relImm3B),
                        string.Format("{0}", relImm4B),
                        string.Format("{0}", relImm5B),
                        string.Format("{0}", relImm6B),
                        string.Format("{0}", relImm7B),
                        string.Format("{0}", relImm8B),
                        string.Format("{0}", relImm9B),
                        string.Format("{0}", relImm10B),
                        string.Format("{0}", maintRest1B),
                        string.Format("{0}", maintRest2B),
                        string.Format("{0}", maintRest3B),
                        string.Format("{0}", maintRest4B),
                        string.Format("{0}", maintRest5B),
                        string.Format("{0}", maintRest6B),
                        string.Format("{0}", maintRest7B),
                        string.Format("{0}", maintRest8B),
                        string.Format("{0}", maintRest9B),
                        string.Format("{0}", maintRest10B),
                        string.Format("{0}", forfNow1B),
                        string.Format("{0}", forfNow2B),
                        string.Format("{0}", forfNow3B),
                        string.Format("{0}", forfNow4B),
                        string.Format("{0}", forfNow5B),
                        string.Format("{0}", forfNow6B),
                        string.Format("{0}", forfNow7B),
                        string.Format("{0}", forfNow8B),
                        string.Format("{0}", forfNow9B),
                        string.Format("{0}", forfNow10B),
                        string.Format("{0}", availUnits1B),
                        string.Format("{0}", availUnits2B),
                        string.Format("{0}", availUnits3B),
                        string.Format("{0}", availUnits4B),
                        string.Format("{0}", availUnits5B),
                        string.Format("{0}", availUnits6B),
                        string.Format("{0}", availUnits7B),
                        string.Format("{0}", availUnits8B),
                        string.Format("{0}", availUnits9B),
                        string.Format("{0}", availUnits10B),
                        string.Format("{0}", restEndDate1B),
                        string.Format("{0}", restEndDate2B),
                        string.Format("{0}", restEndDate3B),
                        string.Format("{0}", restEndDate4B),
                        string.Format("{0}", restEndDate5B),
                        string.Format("{0}", restEndDate6B),
                        string.Format("{0}", restEndDate7B),
                        string.Format("{0}", restEndDate8B),
                        string.Format("{0}", restEndDate9B),
                        string.Format("{0}", restEndDate10B),
                        string.Format("{0}", availDate1B),
                        string.Format("{0}", availDate2B),
                        string.Format("{0}", availDate3B),
                        string.Format("{0}", availDate4B),
                        string.Format("{0}", availDate5B),
                        string.Format("{0}", availDate6B),
                        string.Format("{0}", availDate7B),
                        string.Format("{0}", availDate8B),
                        string.Format("{0}", availDate9B),
                        string.Format("{0}", availDate10B)});
#line 1176
  testRunner.And("In EOL02204 I Perform Leaver Processing Transaction as:", ((string)(null)), table34, "And ");
#line 1179
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1180
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1181
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1182
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "SearchName",
                        "DetailLine1",
                        "DetailLine2",
                        "DetailLine3",
                        "DetailLine4",
                        "DetailLine5",
                        "DetailLine6",
                        "DetailLine7",
                        "DetailLine8",
                        "DetailLine9",
                        "DetailLine10"});
            table35.AddRow(new string[] {
                        string.Format("{0}", searchName),
                        string.Format("{0}", detailLine1),
                        string.Format("{0}", detailLine2),
                        string.Format("{0}", detailLine3),
                        string.Format("{0}", detailLine4),
                        string.Format("{0}", detailLine5),
                        string.Format("{0}", detailLine6),
                        string.Format("{0}", detailLine7),
                        string.Format("{0}", detailLine8),
                        string.Format("{0}", detailLine9),
                        string.Format("{0}", detailLine10)});
#line 1183
 testRunner.Then("In ENSESS11 I verify the following details:", ((string)(null)), table35, "Then ");
#line 1186
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "SearchName",
                        "DetailLine1",
                        "DetailLine2",
                        "DetailLine3",
                        "DetailLine4",
                        "DetailLine5",
                        "DetailLine6",
                        "DetailLine7",
                        "DetailLine8",
                        "DetailLine9",
                        "DetailLine10"});
            table36.AddRow(new string[] {
                        string.Format("{0}", searchName),
                        string.Format("{0}", detailLine1A),
                        string.Format("{0}", detailLine2A),
                        string.Format("{0}", detailLine3A),
                        string.Format("{0}", detailLine4A),
                        string.Format("{0}", detailLine5A),
                        string.Format("{0}", detailLine6A),
                        string.Format("{0}", detailLine7A),
                        string.Format("{0}", detailLine8A),
                        string.Format("{0}", detailLine9A),
                        string.Format("{0}", detailLine10A)});
#line 1187
 testRunner.Then("In ENSESS11 I verify the following details:", ((string)(null)), table36, "Then ");
#line 1190
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "SearchName",
                        "DetailLine1",
                        "DetailLine2",
                        "DetailLine3",
                        "DetailLine4",
                        "DetailLine5",
                        "DetailLine6",
                        "DetailLine7",
                        "DetailLine8",
                        "DetailLine9",
                        "DetailLine10"});
            table37.AddRow(new string[] {
                        string.Format("{0}", searchName),
                        string.Format("{0}", detailLine1B),
                        string.Format("{0}", detailLine2B),
                        string.Format("{0}", detailLine3B),
                        string.Format("{0}", detailLine4B),
                        string.Format("{0}", detailLine5B),
                        string.Format("{0}", detailLine6B),
                        string.Format("{0}", detailLine7B),
                        string.Format("{0}", detailLine8B),
                        string.Format("{0}", detailLine9B),
                        string.Format("{0}", detailLine10B)});
#line 1191
 testRunner.Then("In ENSESS11 I verify the following details:", ((string)(null)), table37, "Then ");
#line 1194
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "SearchName",
                        "DetailLine1",
                        "DetailLine2",
                        "DetailLine3",
                        "DetailLine4",
                        "DetailLine5",
                        "DetailLine6",
                        "DetailLine7",
                        "DetailLine8",
                        "DetailLine9",
                        "DetailLine10"});
            table38.AddRow(new string[] {
                        string.Format("{0}", searchName),
                        string.Format("{0}", detailLine1C),
                        string.Format("{0}", detailLine2C),
                        string.Format("{0}", detailLine3C),
                        string.Format("{0}", detailLine4C),
                        string.Format("{0}", detailLine5C),
                        string.Format("{0}", detailLine6C),
                        string.Format("{0}", detailLine7C),
                        string.Format("{0}", detailLine8C),
                        string.Format("{0}", detailLine9C),
                        string.Format("{0}", detailLine10C)});
#line 1195
 testRunner.Then("In ENSESS11 I verify the following details:", ((string)(null)), table38, "Then ");
#line 1198
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "SearchName",
                        "DetailLine1",
                        "DetailLine2",
                        "DetailLine3",
                        "DetailLine4",
                        "DetailLine5",
                        "DetailLine6",
                        "DetailLine7",
                        "DetailLine8",
                        "DetailLine9",
                        "DetailLine10"});
            table39.AddRow(new string[] {
                        string.Format("{0}", searchName),
                        string.Format("{0}", detailLine1D),
                        string.Format("{0}", detailLine2D),
                        string.Format("{0}", detailLine3D),
                        string.Format("{0}", detailLine4D),
                        string.Format("{0}", detailLine5D),
                        string.Format("{0}", detailLine6D),
                        string.Format("{0}", detailLine7D),
                        string.Format("{0}", detailLine8D),
                        string.Format("{0}", detailLine9D),
                        string.Format("{0}", detailLine10D)});
#line 1199
 testRunner.Then("In ENSESS11 I verify the following details:", ((string)(null)), table39, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 59795: 01_PAY_Payment")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO")]
        [NUnit.Framework.CategoryAttribute("59795")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("Test1", "LAS", "03A", "RMN", "9442358", "23/06/2015", "100.00", "I0030126408", "ESLB", "/LAS", "LAS EMPLOYEE SHARE PLAN AU LOANS", "97B 0000004014 12/12/1997          0       6165.00           0.00     No         " +
            "  0", "98A 0000004015 11/12/1998          0       6445.00           0.00     No         " +
            "  0", "99A 0000004016 14/01/2000          0       6315.00           0.00     No         " +
            "  0", "00A 0000004009 24/01/2001        486       8960.00           0.00     Yes        " +
            "  0", "01A 0000004010 13/12/2001        292       9105.00         970.12     No         " +
            "  0", "02A 0000004011 13/12/2002        292       8166.00         364.12     No         " +
            "  0", "03A 0000004012 19/12/2003        112       2991.36         355.08     No         " +
            "  0", "04A 0000004013 03/12/2004         77       2977.26        1348.73     No         " +
            "  0", "*Plan Total             1259*     51124.62*       3038.05 *", null)]
        public virtual void TestCase5979501_PAY_Payment(
                    string test, 
                    string classCode, 
                    string registerCode, 
                    string selection, 
                    string transNumber, 
                    string paymentDate, 
                    string paymentAmount, 
                    string searchName, 
                    string action, 
                    string locateArgument, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string line6, 
                    string line7, 
                    string line8, 
                    string line9, 
                    string line10, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "WES_AUTO",
                    "59795",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 59795: 01_PAY_Payment", @__tags);
#line 1212
this.ScenarioSetup(scenarioInfo);
#line 1214
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1215
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1216
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1217
  testRunner.And("In EOL00123 I Click on \"payments\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1218
  testRunner.And(string.Format("In EOL01901 I go to manual Payments Menu \"{0}\" \"{1}\"", registerCode, selection), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1219
  testRunner.And(string.Format("In EOL01901 I Add Manual Payment Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\"", transNumber, paymentDate, paymentAmount, searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1220
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1221
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1222
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1223
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Line1",
                        "Line2",
                        "Line3",
                        "Line4",
                        "Line5",
                        "Line6",
                        "Line7",
                        "Line8",
                        "Line9",
                        "Line10"});
            table40.AddRow(new string[] {
                        string.Format("{0}", line1),
                        string.Format("{0}", line2),
                        string.Format("{0}", line3),
                        string.Format("{0}", line4),
                        string.Format("{0}", line5),
                        string.Format("{0}", line6),
                        string.Format("{0}", line7),
                        string.Format("{0}", line8),
                        string.Format("{0}", line9),
                        string.Format("{0}", line10)});
#line 1224
 testRunner.Then("In ENSESS19 I should see Loan Balance details as", ((string)(null)), table40, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 59970: 01_AMN_Manual_Adhoc_Payment")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO")]
        [NUnit.Framework.CategoryAttribute("59970")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("Test1", "LAS", "02B", "RMN", "9442368", "23/06/2015", "100.00", "I3900021754", "ESLB", "/LAS", "LAS EMPLOYEE SHARE PLAN AU LOANS", "01A 0000048840 13/12/2001          0       9105.00           0.00     Yes        " +
            "  0", "01B 0000048841 13/12/2001        960      29985.80        3202.76     No         " +
            "  0", "02A 0000048842 13/12/2002        292       8166.00         364.12     No         " +
            "  0", "02B 0000048843 13/12/2002       7844     219992.04        9786.94     No         " +
            "  0", "03A 0000048844 19/12/2003        226       2991.36         455.08     No         " +
            "  0", "*Plan Total             9322*    270240.20*      13808.90 *", "", "", "", null)]
        public virtual void TestCase5997001_AMN_Manual_Adhoc_Payment(
                    string test, 
                    string classCode, 
                    string registerCode, 
                    string selection, 
                    string transNumber, 
                    string paymentDate, 
                    string paymentAmount, 
                    string searchName, 
                    string action, 
                    string locateArgument, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string line6, 
                    string line7, 
                    string line8, 
                    string line9, 
                    string line10, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "WES_AUTO",
                    "59970",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 59970: 01_AMN_Manual_Adhoc_Payment", @__tags);
#line 1237
this.ScenarioSetup(scenarioInfo);
#line 1239
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1240
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1241
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1242
  testRunner.And("In EOL00123 I Click on \"payments\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1243
  testRunner.And(string.Format("In EOL01901 I go to manual Payments Menu \"{0}\" \"{1}\"", registerCode, selection), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1244
  testRunner.And(string.Format("In EOL01901 I Add Manual Payment Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\"", transNumber, paymentDate, paymentAmount, searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1245
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1246
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1247
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1248
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Line1",
                        "Line2",
                        "Line3",
                        "Line4",
                        "Line5",
                        "Line6",
                        "Line7",
                        "Line8",
                        "Line9",
                        "Line10"});
            table41.AddRow(new string[] {
                        string.Format("{0}", line1),
                        string.Format("{0}", line2),
                        string.Format("{0}", line3),
                        string.Format("{0}", line4),
                        string.Format("{0}", line5),
                        string.Format("{0}", line6),
                        string.Format("{0}", line7),
                        string.Format("{0}", line8),
                        string.Format("{0}", line9),
                        string.Format("{0}", line10)});
#line 1249
 testRunner.Then("In ENSESS19 I should see Loan Balance details as", ((string)(null)), table41, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 59998: 01_RVM_Payment_Reversal")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO")]
        [NUnit.Framework.CategoryAttribute("59973")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("Test1", "LAS", "PAY", "03A", "RVM", "9332370", "", "6016", "55872109", "99.68", "ESLB", "/LAS", "I0030145691", "LAS EMPLOYEE SHARE PLAN AU LOANS", "97B 0000004626 12/12/1997          0       6165.00           0.00     No         " +
            "  0", "98A 0000004627 11/12/1998          0       6445.00           0.00     No         " +
            "  0", "99A 0000004628 14/01/2000          0       6315.00           0.00     No         " +
            "  0", "00A 0000004620 24/01/2001          0       8960.00           0.00     No         " +
            "  0", "00B 0000004621 24/01/2001        866      15984.64           0.00     Yes        " +
            "  0", "01A 0000004622 13/12/2001        292       9105.00         970.12     No         " +
            "  0", "01B 0000004623 13/12/2001       5437     169990.35       18164.14     No         " +
            "  0", "02A 0000004624 13/12/2002        292       8166.00         364.12     No         " +
            "  0", "03A 0000004625 19/12/2003        112       2991.36         554.76     No         " +
            "  0", "M", "", "*Plan Total             6999*    234122.35*      20053.14 *", "", "", "", "", "", "", "", "", "", null)]
        public virtual void TestCase5999801_RVM_Payment_Reversal(
                    string test, 
                    string classCode, 
                    string menuItem, 
                    string registerCode, 
                    string selection, 
                    string transNumber, 
                    string totalUnits, 
                    string rvsalRunNumber, 
                    string rvsalTransNumber, 
                    string totalMoney, 
                    string action, 
                    string locateArgument, 
                    string searchName, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string line6, 
                    string line7, 
                    string line8, 
                    string line9, 
                    string line10, 
                    string action1, 
                    string locateArgument1, 
                    string line1A, 
                    string line2A, 
                    string line3A, 
                    string line4A, 
                    string line5A, 
                    string line6A, 
                    string line7A, 
                    string line8A, 
                    string line9A, 
                    string line10A, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "WES_AUTO",
                    "59973",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 59998: 01_RVM_Payment_Reversal", @__tags);
#line 1262
this.ScenarioSetup(scenarioInfo);
#line 1264
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1265
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1266
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1267
  testRunner.And("In EOL00123 I Click on \"payments\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1268
  testRunner.And(string.Format("In EOL01901 I go to manual Payments Menu \"{0}\" \"{1}\"", registerCode, selection), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1269
  testRunner.And(string.Format("In EOL00401 I perform Reversal Transaction as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"", transNumber, totalUnits, rvsalRunNumber, rvsalTransNumber, totalMoney), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1270
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1271
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1272
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1273
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Line1",
                        "Line2",
                        "Line3",
                        "Line4",
                        "Line5",
                        "Line6",
                        "Line7",
                        "Line8",
                        "Line9",
                        "Line10"});
            table42.AddRow(new string[] {
                        string.Format("{0}", line1),
                        string.Format("{0}", line2),
                        string.Format("{0}", line3),
                        string.Format("{0}", line4),
                        string.Format("{0}", line5),
                        string.Format("{0}", line6),
                        string.Format("{0}", line7),
                        string.Format("{0}", line8),
                        string.Format("{0}", line9),
                        string.Format("{0}", line10)});
#line 1274
 testRunner.Then("In ENSESS19 I should see Loan Balance details as", ((string)(null)), table42, "Then ");
#line 1277
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Line1",
                        "Line2",
                        "Line3",
                        "Line4",
                        "Line5",
                        "Line6",
                        "Line7",
                        "Line8",
                        "Line9",
                        "Line10"});
            table43.AddRow(new string[] {
                        string.Format("{0}", line1A),
                        string.Format("{0}", line2A),
                        string.Format("{0}", line3A),
                        string.Format("{0}", line4A),
                        string.Format("{0}", line5A),
                        string.Format("{0}", line6A),
                        string.Format("{0}", line7A),
                        string.Format("{0}", line8A),
                        string.Format("{0}", line9A),
                        string.Format("{0}", line10A)});
#line 1278
 testRunner.Then("In ENSESS19 I should see Loan Balance details as", ((string)(null)), table43, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 59973: 01_IMN_Manual_Interest_Payment")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO")]
        [NUnit.Framework.CategoryAttribute("59973")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("Test1", "LAS", "02B", "IMN", "9332369", "23/06/2015", "100.00", "I0030186958", "ESLB", "/LAS", "LAS EMPLOYEE SHARE PLAN AU LOANS", "97B 0000006048 12/12/1997          0       6165.00           0.00     No         " +
            "  0", "98A 0000006049 11/12/1998          0       6445.00           0.00     No         " +
            "  0", "98B 0000006050 11/12/1998          0      15996.49           0.00     Yes        " +
            "  0", "99A 0000006051 14/01/2000          0       6315.00           0.00     Yes        " +
            "  0", "99B 0000006052 14/01/2000          0      15989.58           0.00     Yes        " +
            "  0", "00A 0000006041 24/01/2001          0       8960.00           0.00     Yes        " +
            "  0", "00B 0000006042 24/01/2001          0      15984.64           0.00     Yes        " +
            "  0", "01A 0000006043 13/12/2001        292       9105.00         970.12     No         " +
            "  0", "01B 0000006044 13/12/2001        768      23976.50        2558.78     No         " +
            "  0", "M", "", "02A 0000006045 13/12/2002        292       8166.00         364.12     No         " +
            "  0", "02B 0000006046 13/12/2002       4635     129975.50        5940.60     No         " +
            "  0", "03A 0000006047 19/12/2003        112       2991.36         455.08     No         " +
            "  0", "*Plan Total             6099*    250070.07*      10288.70 *", "", "", "", "", "", "", "IRV", "9332371", "", "6121", "9332369", "100.00", "LAS EMPLOYEE SHARE PLAN AU LOANS", "97B 0000006048 12/12/1997          0       6165.00           0.00     No         " +
            "  0", "98A 0000006049 11/12/1998          0       6445.00           0.00     No         " +
            "  0", "98B 0000006050 11/12/1998          0      15996.49           0.00     Yes        " +
            "  0", "99A 0000006051 14/01/2000          0       6315.00           0.00     Yes        " +
            "  0", "99B 0000006052 14/01/2000          0      15989.58           0.00     Yes        " +
            "  0", "00A 0000006041 24/01/2001          0       8960.00           0.00     Yes        " +
            "  0", "00B 0000006042 24/01/2001          0      15984.64           0.00     Yes        " +
            "  0", "01A 0000006043 13/12/2001        292       9105.00         970.12     No         " +
            "  0", "01B 0000006044 13/12/2001        768      23976.50        2558.78     No         " +
            "  0", "02A 0000006045 13/12/2002        292       8166.00         364.12     No         " +
            "  0", "02B 0000006046 13/12/2002       4635     129975.50        5840.60     No         " +
            "  0", "03A 0000006047 19/12/2003        112       2991.36         455.08     No         " +
            "  0", "*Plan Total             6099*    250070.07*      10188.70 *", "", "", "", "", "", "", null)]
        public virtual void TestCase5997301_IMN_Manual_Interest_Payment(
                    string test, 
                    string classCode, 
                    string registerCode, 
                    string selection, 
                    string transNumber, 
                    string paymentDate, 
                    string paymentAmount, 
                    string searchName, 
                    string action, 
                    string locateArgument, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string line6, 
                    string line7, 
                    string line8, 
                    string line9, 
                    string line10, 
                    string action1, 
                    string locateArgument1, 
                    string line1A, 
                    string line2A, 
                    string line3A, 
                    string line4A, 
                    string line5A, 
                    string line6A, 
                    string line7A, 
                    string line8A, 
                    string line9A, 
                    string line10A, 
                    string selection1, 
                    string transNumber1, 
                    string totalUnits, 
                    string rvsalRunNumber, 
                    string rvsalTransNumber, 
                    string totalMoney, 
                    string line1B, 
                    string line2B, 
                    string line3B, 
                    string line4B, 
                    string line5B, 
                    string line6B, 
                    string line7B, 
                    string line8B, 
                    string line9B, 
                    string line10B, 
                    string line1C, 
                    string line2C, 
                    string line3C, 
                    string line4C, 
                    string line5C, 
                    string line6C, 
                    string line7C, 
                    string line8C, 
                    string line9C, 
                    string line10C, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "WES_AUTO",
                    "59973",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 59973: 01_IMN_Manual_Interest_Payment", @__tags);
#line 1291
this.ScenarioSetup(scenarioInfo);
#line 1293
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1294
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1295
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1296
  testRunner.And("In EOL00123 I Click on \"payments\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1297
  testRunner.And(string.Format("In EOL01901 I go to manual Payments Menu \"{0}\" \"{1}\"", registerCode, selection), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1298
  testRunner.And(string.Format("In EOL01901 I Add Manual Payment Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\"", transNumber, paymentDate, paymentAmount, searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1299
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1300
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1301
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1302
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Line1",
                        "Line2",
                        "Line3",
                        "Line4",
                        "Line5",
                        "Line6",
                        "Line7",
                        "Line8",
                        "Line9",
                        "Line10"});
            table44.AddRow(new string[] {
                        string.Format("{0}", line1),
                        string.Format("{0}", line2),
                        string.Format("{0}", line3),
                        string.Format("{0}", line4),
                        string.Format("{0}", line5),
                        string.Format("{0}", line6),
                        string.Format("{0}", line7),
                        string.Format("{0}", line8),
                        string.Format("{0}", line9),
                        string.Format("{0}", line10)});
#line 1303
 testRunner.Then("In ENSESS19 I should see Loan Balance details as", ((string)(null)), table44, "Then ");
#line 1306
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Line1",
                        "Line2",
                        "Line3",
                        "Line4",
                        "Line5",
                        "Line6",
                        "Line7",
                        "Line8",
                        "Line9",
                        "Line10"});
            table45.AddRow(new string[] {
                        string.Format("{0}", line1A),
                        string.Format("{0}", line2A),
                        string.Format("{0}", line3A),
                        string.Format("{0}", line4A),
                        string.Format("{0}", line5A),
                        string.Format("{0}", line6A),
                        string.Format("{0}", line7A),
                        string.Format("{0}", line8A),
                        string.Format("{0}", line9A),
                        string.Format("{0}", line10A)});
#line 1307
 testRunner.Then("In ENSESS19 I should see Loan Balance details as", ((string)(null)), table45, "Then ");
#line 1310
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1311
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1312
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1313
  testRunner.And("In EOL00123 I Click on \"payments\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1314
  testRunner.And(string.Format("In EOL01901 I go to manual Payments Menu \"{0}\" \"{1}\"", registerCode, selection1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "TotalUnits",
                        "RvsalRunNumber",
                        "RvsalTransNumber",
                        "TotalMoney"});
            table46.AddRow(new string[] {
                        string.Format("{0}", transNumber1),
                        string.Format("{0}", totalUnits),
                        string.Format("{0}", rvsalRunNumber),
                        string.Format("{0}", rvsalTransNumber),
                        string.Format("{0}", totalMoney)});
#line 1315
  testRunner.And("In EOL00401 I continue with the following details:", ((string)(null)), table46, "And ");
#line 1318
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1319
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1320
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1321
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Line1",
                        "Line2",
                        "Line3",
                        "Line4",
                        "Line5",
                        "Line6",
                        "Line7",
                        "Line8",
                        "Line9",
                        "Line10"});
            table47.AddRow(new string[] {
                        string.Format("{0}", line1B),
                        string.Format("{0}", line2B),
                        string.Format("{0}", line3B),
                        string.Format("{0}", line4B),
                        string.Format("{0}", line5B),
                        string.Format("{0}", line6B),
                        string.Format("{0}", line7B),
                        string.Format("{0}", line8B),
                        string.Format("{0}", line9B),
                        string.Format("{0}", line10B)});
#line 1322
 testRunner.Then("In ENSESS19 I should see Loan Balance details as", ((string)(null)), table47, "Then ");
#line 1325
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Line1",
                        "Line2",
                        "Line3",
                        "Line4",
                        "Line5",
                        "Line6",
                        "Line7",
                        "Line8",
                        "Line9",
                        "Line10"});
            table48.AddRow(new string[] {
                        string.Format("{0}", line1C),
                        string.Format("{0}", line2C),
                        string.Format("{0}", line3C),
                        string.Format("{0}", line4C),
                        string.Format("{0}", line5C),
                        string.Format("{0}", line6C),
                        string.Format("{0}", line7C),
                        string.Format("{0}", line8C),
                        string.Format("{0}", line9C),
                        string.Format("{0}", line10C)});
#line 1326
 testRunner.Then("In ENSESS19 I should see Loan Balance details as", ((string)(null)), table48, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 60211: 01_ESRVW. Reconstruction Down Reversal")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO")]
        [NUnit.Framework.CategoryAttribute("59973")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("Test1", "LAS", "01B", "ESRVW", "9332380", "494", "5607", "46928584", "", "I0030553420", "ESLB", "/LAS", "LAS EMPLOYEE SHARE PLAN AU LOANS", "01A 0000029531 13/12/2001          0       9105.00           0.00     No         " +
            "  0", "01B 0000029532 13/12/2001        974      14992.90        1097.38     No         " +
            "  0", "02A 0000029533 13/12/2002        292       8166.00         364.12     No         " +
            "  0", "03A 0000029534 19/12/2003        112       2991.36         455.08     No         " +
            "  0", "03B 0000029535 19/12/2003        778      20992.00        3206.58     No         " +
            "  0", "*Plan Total             2156*     56247.26*       5123.16 *", "", "", "", null)]
        public virtual void TestCase6021101_ESRVW_ReconstructionDownReversal(
                    string test, 
                    string classCode, 
                    string registerCode, 
                    string selection, 
                    string transNumber, 
                    string totalUnits, 
                    string rvsalRunNumber, 
                    string rvsalTransNumber, 
                    string totalMoney, 
                    string searchName, 
                    string action, 
                    string locateArgument, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string line6, 
                    string line7, 
                    string line8, 
                    string line9, 
                    string line10, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "WES_AUTO",
                    "59973",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 60211: 01_ESRVW. Reconstruction Down Reversal", @__tags);
#line 1338
this.ScenarioSetup(scenarioInfo);
#line 1340
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1341
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1342
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1343
  testRunner.And("In EOL00123 I Click on \"reconstruction reversal processing\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode",
                        "Selection"});
            table49.AddRow(new string[] {
                        string.Format("{0}", registerCode),
                        string.Format("{0}", selection)});
#line 1344
  testRunner.And("In EOL00401 I go to reconstruction reversal Menu", ((string)(null)), table49, "And ");
#line 1347
  testRunner.And(string.Format("In EOL00401 I perform Reversal Transaction as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"", transNumber, totalUnits, rvsalRunNumber, rvsalTransNumber, totalMoney), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1348
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1349
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1350
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1351
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "Line1",
                        "Line2",
                        "Line3",
                        "Line4",
                        "Line5",
                        "Line6",
                        "Line7",
                        "Line8",
                        "Line9",
                        "Line10"});
            table50.AddRow(new string[] {
                        string.Format("{0}", line1),
                        string.Format("{0}", line2),
                        string.Format("{0}", line3),
                        string.Format("{0}", line4),
                        string.Format("{0}", line5),
                        string.Format("{0}", line6),
                        string.Format("{0}", line7),
                        string.Format("{0}", line8),
                        string.Format("{0}", line9),
                        string.Format("{0}", line10)});
#line 1352
 testRunner.Then("In ENSESS19 I should see Loan Balance details as", ((string)(null)), table50, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 60212: 01_ESRVX_Reconstruction_Up_Reversal")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO")]
        [NUnit.Framework.CategoryAttribute("60212")]
        [NUnit.Framework.CategoryAttribute("EP_EmployeePlanProcessing")]
        [NUnit.Framework.TestCaseAttribute("Test1", "LAS", "01B", "ESRVX", "9332381", "3837", "5939", "52994896", "", "I0030548833", "ESLB", "/LAS", "LAS EMPLOYEE SHARE PLAN AU LOANS", "01A 0000028967 13/12/2001          0       9105.00           0.00     No         " +
            "  0", "01B 0000028968 13/12/2001          0     119973.55           0.00     Yes        " +
            "  0", "02A 0000028969 13/12/2002        292       8166.00         364.12     No         " +
            "  0", "03A 0000028970 19/12/2003        112       2991.36         455.08     No         " +
            "  0", "03B 0000028971 19/12/2003        962      25977.60        3971.42     No         " +
            "  0", "*Plan Total             1366*    166213.51*       4790.62 *", "", "", "", null)]
        public virtual void TestCase6021201_ESRVX_Reconstruction_Up_Reversal(
                    string test, 
                    string classCode, 
                    string registerCode, 
                    string selection, 
                    string transNumber, 
                    string totalUnits, 
                    string rvsalRunNumber, 
                    string rvsalTransNumber, 
                    string totalMoney, 
                    string searchName, 
                    string action, 
                    string locateArgument, 
                    string line1, 
                    string line2, 
                    string line3, 
                    string line4, 
                    string line5, 
                    string line6, 
                    string line7, 
                    string line8, 
                    string line9, 
                    string line10, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "WES_AUTO",
                    "60212",
                    "EP_EmployeePlanProcessing"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 60212: 01_ESRVX_Reconstruction_Up_Reversal", @__tags);
#line 1364
this.ScenarioSetup(scenarioInfo);
#line 1366
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1367
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1368
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1369
  testRunner.And("In EOL00123 I Click on \"reconstruction reversal processing\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode",
                        "Selection"});
            table51.AddRow(new string[] {
                        string.Format("{0}", registerCode),
                        string.Format("{0}", selection)});
#line 1370
  testRunner.And("In EOL00401 I go to reconstruction reversal Menu", ((string)(null)), table51, "And ");
#line 1373
  testRunner.And(string.Format("In EOL00401 I perform Reversal Transaction as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"", transNumber, totalUnits, rvsalRunNumber, rvsalTransNumber, totalMoney), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1374
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1375
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1376
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1377
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Line1",
                        "Line2",
                        "Line3",
                        "Line4",
                        "Line5",
                        "Line6",
                        "Line7",
                        "Line8",
                        "Line9",
                        "Line10"});
            table52.AddRow(new string[] {
                        string.Format("{0}", line1),
                        string.Format("{0}", line2),
                        string.Format("{0}", line3),
                        string.Format("{0}", line4),
                        string.Format("{0}", line5),
                        string.Format("{0}", line6),
                        string.Format("{0}", line7),
                        string.Format("{0}", line8),
                        string.Format("{0}", line9),
                        string.Format("{0}", line10)});
#line 1378
 testRunner.Then("In ENSESS19 I should see Loan Balance details as", ((string)(null)), table52, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
