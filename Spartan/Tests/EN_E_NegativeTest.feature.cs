// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SCRIPAU.Automation.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("EN_E_NegativeTest")]
    public partial class EN_E_NegativeTestFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "EN_E_NegativeTest.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "EN_E_NegativeTest", "Ensure EN_E_NegativeTest Actions functionality covered", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18017: 04_Transaction history error messages (TH,DLH)")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_NegativeTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("18017")]
        [NUnit.Framework.TestCaseAttribute("TH", "X0012160437", "here is no trading history for holder <X0012160437>", null)]
        [NUnit.Framework.TestCaseAttribute("THD", "X0012160437", "There is no TRADE History matching trade ID <            > /Bulk Trans <        >" +
            "", null)]
        public virtual void TestCase1801704_TransactionHistoryErrorMessagesTHDLH(string action, string locateArgument, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_NegativeTest",
                    "CPU_AUTO",
                    "18017"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18017: 04_Transaction history error messages (TH,DLH)", @__tags);
#line 9
this.ScenarioSetup(scenarioInfo);
#line 10
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 11
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.Then(string.Format("I should see the below ErrorMessage \"{0}\"", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18000: 03_Pending Actions (PT/PEND) Specific Error messages")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_NegativeTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("18000")]
        [NUnit.Framework.TestCaseAttribute("PT", "X0012160437", "There are no pending trades for holder <X0012160437>", null)]
        [NUnit.Framework.TestCaseAttribute("PEND", "X0012160437", "There are no pending deals for this holder.", null)]
        public virtual void TestCase1800003_PendingActionsPTPENDSpecificErrorMessages(string action, string locateArgument, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_NegativeTest",
                    "CPU_AUTO",
                    "18000"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18000: 03_Pending Actions (PT/PEND) Specific Error messages", @__tags);
#line 26
this.ScenarioSetup(scenarioInfo);
#line 27
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 28
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
 testRunner.Then(string.Format("I should see the below ErrorMessage \"{0}\"", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17473: 03_Disbursement Types -Error Message")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_NegativeTest")]
        [NUnit.Framework.CategoryAttribute("DIV_A")]
        [NUnit.Framework.CategoryAttribute("17473")]
        [NUnit.Framework.TestCaseAttribute("DSC", "I0000001295", "", "There are no payment details for this holder.", null)]
        [NUnit.Framework.TestCaseAttribute("DS", "I0030163672", "", "There are no payment details for this holder.", null)]
        [NUnit.Framework.TestCaseAttribute("DSO", "I0030163672", "", "There are no payment details for this holder.", null)]
        [NUnit.Framework.TestCaseAttribute("DSP", "I0030163672", "", "There are no payment details for this holder.", null)]
        [NUnit.Framework.TestCaseAttribute("LDS", "I0030163672", "", "Please enter Account number/Ref number", null)]
        public virtual void TestCase1747303_DisbursementTypes_ErrorMessage(string action, string hIN, string locateArgument, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_NegativeTest",
                    "DIV_A",
                    "17473"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17473: 03_Disbursement Types -Error Message", @__tags);
#line 43
this.ScenarioSetup(scenarioInfo);
#line 44
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 45
 testRunner.When("In SELCOY01 I select the company: \"DIV_A\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 46
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", hIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
 testRunner.Then(string.Format("I should see the below ErrorMessage \"{0}\"", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View Dividend Plan Intentions -Error message")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_NegativeTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("ViewDivPlanIntentionsError")]
        public virtual void ViewDividendPlanIntentions_ErrorMessage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View Dividend Plan Intentions -Error message", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "EN_E_NegativeTest",
                        "CPU_AUTO",
                        "ViewDivPlanIntentionsError"});
#line 63
this.ScenarioSetup(scenarioInfo);
#line 65
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 66
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 67
  testRunner.And("I go to the Enquiry system for \"I0100007550\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "Action",
                        "DI"});
            table1.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 68
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table1, "And ");
#line 72
 testRunner.Then("I should not see Dividend Plan Intentions", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View Wire Instructions -Error message")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_NegativeTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("WireInstructionsError")]
        public virtual void ViewWireInstructions_ErrorMessage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View Wire Instructions -Error message", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "EN_E_NegativeTest",
                        "CPU_AUTO",
                        "WireInstructionsError"});
#line 79
this.ScenarioSetup(scenarioInfo);
#line 81
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 82
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 83
  testRunner.And("I go to the Enquiry system for \"I0100007550\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
 testRunner.Then("I should not see Wire Instructions", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 16785: 06_A Action for Error Messages")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_NegativeTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("16785")]
        [NUnit.Framework.TestCaseAttribute("H", "I0031748046", "", "There are no holdings for this holder.", null)]
        [NUnit.Framework.TestCaseAttribute("HE", "I0031748046", "", "There are no extra details record for this holder.", null)]
        [NUnit.Framework.TestCaseAttribute("PD", "I0031748046", "", "There are no payment details for this holder.", null)]
        [NUnit.Framework.TestCaseAttribute("PI", "I0031748046", "", "There is no payee instruction for this holder.", null)]
        [NUnit.Framework.TestCaseAttribute("R", "I0031748046", "", "This holder has no register details.", null)]
        [NUnit.Framework.TestCaseAttribute("C", "I0036199024", "", "This holder has no certificates.", null)]
        [NUnit.Framework.TestCaseAttribute("MJ", "I0036136464", "USD03", "There are no payment transactions for this holder", null)]
        [NUnit.Framework.TestCaseAttribute("DH", "I0031748046", "", "There is no Dividend History for this holder.", null)]
        [NUnit.Framework.TestCaseAttribute("N", "C9999999164", "", "There are no notings present for this holder", null)]
        [NUnit.Framework.TestCaseAttribute("N1", "C9999999164", "", "This holder does not hold this noting.  To see the", null)]
        [NUnit.Framework.TestCaseAttribute("D1", "C9999999164", "", "This holder does not hold this noting.  To see the", null)]
        [NUnit.Framework.TestCaseAttribute("P1", "C9999999164", "", "This holder does not hold this noting.  To see the", null)]
        [NUnit.Framework.TestCaseAttribute("CY", "C9999999164", "", "There are no Charity Elections for this holder.", null)]
        [NUnit.Framework.TestCaseAttribute("CA", "C9999999164", "", "There is no custodian access-code for this holder", null)]
        [NUnit.Framework.TestCaseAttribute("WR", "I0036470810", "", "There isn\'t a wire instruction for this holder.", null)]
        [NUnit.Framework.TestCaseAttribute("CH", "I0036470810", "", "There Is No CUM History Details For This Holder.", null)]
        [NUnit.Framework.TestCaseAttribute("EA", "C0009913176", "", "There are NO employee details for this holder", null)]
        [NUnit.Framework.TestCaseAttribute("ED", "C0009913176", "", "There are NO employee details for this holder", null)]
        public virtual void TestCase1678506_AActionForErrorMessages(string action, string hIN, string locateArgument, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_NegativeTest",
                    "NAB_AUTO",
                    "16785"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 16785: 06_A Action for Error Messages", @__tags);
#line 91
this.ScenarioSetup(scenarioInfo);
#line 92
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 93
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 94
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", hIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
 testRunner.Then(string.Format("I should see the below ErrorMessage \"{0}\"", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("16785_FailedTests")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_NegativeTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("16785")]
        [NUnit.Framework.TestCaseAttribute("ESAT", "I0033314515", "/PRS", "This action only valid for AESS Schemes.", "NAB_AUTO", null)]
        [NUnit.Framework.TestCaseAttribute("PID", "C0009913176", "", "PID action only valid from ED screen.", "NAB_AUTO", null)]
        [NUnit.Framework.TestCaseAttribute("ESAH", "I0033314515", "/OPT", "This action only valid for AESS Schemes.", "NAB_AUTO", null)]
        [NUnit.Framework.TestCaseAttribute("ESFR", "I0033314515", "/OPT", "Forfeiture not applicable for Employee status.", "NAB_AUTO", null)]
        [NUnit.Framework.TestCaseAttribute("SH", "I0036199024", "", "There are no static details for this holder.", "NAB2_AUTO", null)]
        public virtual void _16785_FailedTests(string action, string hIN, string locateArgument, string errorMessage, string cOY, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_NegativeTest",
                    "NAB_AUTO",
                    "16785"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("16785_FailedTests", @__tags);
#line 124
this.ScenarioSetup(scenarioInfo);
#line 125
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 126
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 127
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", hIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
 testRunner.Then(string.Format("I should see the below ErrorMessage \"{0}\"", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17345: 03_Error Messages")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_NegativeTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17345ss")]
        [NUnit.Framework.TestCaseAttribute("AS", "I0070036916", "I0070036916", "The holder does not have Acceptance Status Details.", null)]
        [NUnit.Framework.TestCaseAttribute("PM", "I0070036916", "I0070036916", "There is no corporate action Pending", null)]
        public virtual void TestCase1734503_ErrorMessages(string action, string hIN, string locateArgument, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_NegativeTest",
                    "NAB_AUTO",
                    "17345ss"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17345: 03_Error Messages", @__tags);
#line 144
this.ScenarioSetup(scenarioInfo);
#line 145
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 146
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 147
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", hIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 148
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 149
 testRunner.Then(string.Format("I should see the below ErrorMessage \"{0}\"", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17126: 03_Error messages where holder has no tax details")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_NegativeTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17126")]
        [NUnit.Framework.TestCaseAttribute("IR", "I0070036916", "I0070036916", "There are no IRL Tax details for this holder", "NAB_AUTO", null)]
        [NUnit.Framework.TestCaseAttribute("ZA", "I0070036916", "I0070036916", "There are no ZAF Tax details for this holder", "NAB_AUTO", null)]
        [NUnit.Framework.TestCaseAttribute("UT", "X0012160437", "X0012160437", "Invalid Action. Not a USA tax company", "CPU_AUTO", null)]
        public virtual void TestCase1712603_ErrorMessagesWhereHolderHasNoTaxDetails(string action, string hIN, string locateArgument, string errorMessage, string cOY, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_NegativeTest",
                    "NAB_AUTO",
                    "17126"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17126: 03_Error messages where holder has no tax details", @__tags);
#line 161
this.ScenarioSetup(scenarioInfo);
#line 162
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 163
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 164
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", hIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 165
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 166
 testRunner.Then(string.Format("I should see the below ErrorMessage \"{0}\"", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17986: 02_Main Menu Error Messages")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_NegativeTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17986")]
        [NUnit.Framework.TestCaseAttribute("Test1", "ABC", "SPECLS", "Service provider not on file", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "CTS", "DEF", "Service code for this Provider not on file", null)]
        public virtual void TestCase1798602_MainMenuErrorMessages(string test, string serviceProvide, string serviceCode, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_NegativeTest",
                    "NAB_AUTO",
                    "17986"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17986: 02_Main Menu Error Messages", @__tags);
#line 179
this.ScenarioSetup(scenarioInfo);
#line 181
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 182
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 183
 testRunner.When(string.Format("I enter following details in Service Level Reporting Details as \"{0}\" \"{1}\"", serviceProvide, serviceCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 184
 testRunner.Then(string.Format("I should see the below ErrorMessage \"{0}\"", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17988: 02_LD action Error messages")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_NegativeTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17988")]
        [NUnit.Framework.TestCaseAttribute("ZAF", "LD", "There is no holder with this domicile/post code on file.", null)]
        public virtual void TestCase1798802_LDActionErrorMessages(string locateArgument, string action, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_NegativeTest",
                    "NAB_AUTO",
                    "17988"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17988: 02_LD action Error messages", @__tags);
#line 196
this.ScenarioSetup(scenarioInfo);
#line 198
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 199
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 200
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 201
  testRunner.And(string.Format("I enter the following details as the Locate action \"{0}\" \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 202
 testRunner.Then(string.Format("I should see the below ErrorMessage \"{0}\"", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17990: 02_Markings/Certificates Error messages (LC,LCC,LE,LEC)-Test1")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_NegativeTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17990_1")]
        [NUnit.Framework.TestCaseAttribute("LC", "99999999", "No certificate match found.", null)]
        [NUnit.Framework.TestCaseAttribute("LCC", "99999999", "No certificate match found.", null)]
        [NUnit.Framework.TestCaseAttribute("LE", "99999999", "No certificate match found.", null)]
        [NUnit.Framework.TestCaseAttribute("LEC", "99999999", "No certificate match found.", null)]
        [NUnit.Framework.TestCaseAttribute("LCM", "99999999", "No marking match found", null)]
        public virtual void TestCase1799002_MarkingsCertificatesErrorMessagesLCLCCLELEC_Test1(string action, string locateArgument, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_NegativeTest",
                    "NAB_AUTO",
                    "17990_1"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17990: 02_Markings/Certificates Error messages (LC,LCC,LE,LEC)-Test1", @__tags);
#line 213
this.ScenarioSetup(scenarioInfo);
#line 215
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 216
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 217
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 218
  testRunner.And(string.Format("I enter the following details as the Locate action \"{0}\" \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 219
 testRunner.Then(string.Format("I should see the below ErrorMessage \"{0}\"", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17990: 02_Markings/Certificates Error messages (LC,LCC,LE,LEC)-Test2")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_NegativeTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17990_2")]
        [NUnit.Framework.TestCaseAttribute("LC", "", "Please enter Certificate/Class/Register/Holder", null)]
        [NUnit.Framework.TestCaseAttribute("LCC", "", "Please enter Certificate/Class/Register/Holder", null)]
        [NUnit.Framework.TestCaseAttribute("LE", "", "Please enter Certificate/Class/Register/Holder", null)]
        [NUnit.Framework.TestCaseAttribute("LEC", "", "Please enter Certificate/Class/Register/Holder", null)]
        [NUnit.Framework.TestCaseAttribute("LCM", "", "Please enter Certificate/Class/Register/Holder", null)]
        public virtual void TestCase1799002_MarkingsCertificatesErrorMessagesLCLCCLELEC_Test2(string action, string locateArgument, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_NegativeTest",
                    "NAB_AUTO",
                    "17990_2"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17990: 02_Markings/Certificates Error messages (LC,LCC,LE,LEC)-Test2", @__tags);
#line 234
this.ScenarioSetup(scenarioInfo);
#line 236
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 237
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 238
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 239
  testRunner.And(string.Format("I enter the following details as the Locate action \"{0}\" \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 240
 testRunner.Then(string.Format("I should see the below ErrorMessage \"{0}\"", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17993: 04_Markings/Certificates Error messages (LC,LCC,LCM,LE,LEC,LEM)")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_NegativeTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17993")]
        [NUnit.Framework.TestCaseAttribute("LC", "ORD", "Invalid certificate number", null)]
        [NUnit.Framework.TestCaseAttribute("LCC", "VIC", "Invalid certificate number", null)]
        [NUnit.Framework.TestCaseAttribute("LE", "I0033870752", "Invalid certificate number", null)]
        [NUnit.Framework.TestCaseAttribute("LEC", "12A", "Invalid certificate number", null)]
        [NUnit.Framework.TestCaseAttribute("LCM", "NSW", "Invalid certificate number", null)]
        [NUnit.Framework.TestCaseAttribute("lem", "CEN", "Invalid certificate number", null)]
        public virtual void TestCase1799304_MarkingsCertificatesErrorMessagesLCLCCLCMLELECLEM(string action, string locateArgument, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_NegativeTest",
                    "NAB_AUTO",
                    "17993"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17993: 04_Markings/Certificates Error messages (LC,LCC,LCM,LE,LEC,LEM)", @__tags);
#line 255
this.ScenarioSetup(scenarioInfo);
#line 257
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 258
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 259
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 260
  testRunner.And(string.Format("I enter the following details as the Locate action \"{0}\" \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 261
 testRunner.Then(string.Format("I should see the below ErrorMessage \"{0}\"", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18038: 03_Faster FIN Error Messages for Faster company")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_NegativeTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("18038")]
        [NUnit.Framework.TestCaseAttribute("X0012160437", "FIN", "Current holder is not a FASTER SCRIPLESS holder.", "TEST", "CPU_AUTO", null)]
        public virtual void TestCase1803803_FasterFINErrorMessagesForFasterCompany(string locateArgument, string action, string errorMessage, string password, string cOY, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_NegativeTest",
                    "CPU_AUTO",
                    "18038"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18038: 03_Faster FIN Error Messages for Faster company", @__tags);
#line 278
this.ScenarioSetup(scenarioInfo);
#line 280
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 281
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 282
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 283
  testRunner.And(string.Format("I enter the following details as the Locate action \"{0}\" \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 284
  testRunner.And(string.Format("I enter Fin Password as \"{0}\"", password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 285
 testRunner.Then(string.Format("I should see the below ErrorMessage \"{0}\"", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18037: 02_Faster FIN Error Message for Non-Faster company")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_NegativeTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("18037")]
        [NUnit.Framework.TestCaseAttribute("FIN", "Action only available for FASTER  company", "NAB_AUTO", "", null)]
        public virtual void TestCase1803702_FasterFINErrorMessageForNon_FasterCompany(string action, string errorMessage, string cOY, string locateArgument, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_NegativeTest",
                    "CPU_AUTO",
                    "18037"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18037: 02_Faster FIN Error Message for Non-Faster company", @__tags);
#line 297
this.ScenarioSetup(scenarioInfo);
#line 299
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 300
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 301
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 302
  testRunner.And(string.Format("I enter the following details as the Locate action \"{0}\" \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 303
 testRunner.Then(string.Format("I should see the below ErrorMessage \"{0}\"", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17368: 03_Error Messages -ESLT")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_NegativeTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17368")]
        [NUnit.Framework.TestCaseAttribute("ErrorMessage1", "ESLT", "I0033314515", "/ELA", "Please enter an ESS Loan Scheme.  Format: /Scheme/Reg Code.", null)]
        [NUnit.Framework.TestCaseAttribute("ErrorMessag2", "ESLT", "I0033314515", "/ELA/90A", "Invalid Register.", null)]
        [NUnit.Framework.TestCaseAttribute("ErrorMessag3", "ESLT", "I0033314515", "", "Please enter an ESS Loan Scheme.  Format: /Scheme/Reg Code.", null)]
        public virtual void TestCase1736803_ErrorMessages_ESLT(string message, string action, string hIN, string locateArgument, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_NegativeTest",
                    "NAB_AUTO",
                    "17368"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17368: 03_Error Messages -ESLT", @__tags);
#line 314
this.ScenarioSetup(scenarioInfo);
#line 315
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 316
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 317
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", hIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 318
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 319
 testRunner.Then(string.Format("I should see the below ErrorMessage \"{0}\"", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17371: 03_Error messages_ESOB_ESOT_RSOTF_ESLP")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_NegativeTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("17371")]
        [NUnit.Framework.TestCaseAttribute("Error1", "ESOB", "I0033870752", "/ATS", "This action only valid for Option type plans.", null)]
        [NUnit.Framework.TestCaseAttribute("Error2", "ESOB", "I0033870752", "/ESO", "This action only valid for Option type plans.", null)]
        [NUnit.Framework.TestCaseAttribute("Error3", "ESOB", "I0033870752", "/ELA", "This action only valid for Option type plans.", null)]
        [NUnit.Framework.TestCaseAttribute("Error4", "ESOT", "I0033870752", "/ATS", "This action only valid for Option type plans.", null)]
        [NUnit.Framework.TestCaseAttribute("Error5", "ESOT", "I0033870752", "/ESO", "This action only valid for Option type plans.", null)]
        [NUnit.Framework.TestCaseAttribute("Error6", "ESOT", "I0033870752", "/ELA", "This action only valid for Option type plans.", null)]
        [NUnit.Framework.TestCaseAttribute("Error7", "ESOTF", "I0033870752", "/ATS", "This action only valid for Option type plans.", null)]
        [NUnit.Framework.TestCaseAttribute("Error8", "ESOTF", "I0033870752", "/ESO", "This action only valid for Option type plans.", null)]
        [NUnit.Framework.TestCaseAttribute("Error9", "ESOTF", "I0033870752", "/ELA", "This action only valid for Option type plans.", null)]
        [NUnit.Framework.TestCaseAttribute("Error10", "ESLP", "I0033314515", "/ELA", "This action only valid for Option and AESS type plans.", null)]
        public virtual void TestCase1737103_ErrorMessages_ESOB_ESOT_RSOTF_ESLP(string message, string action, string hIN, string locateArgument, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_NegativeTest",
                    "NAB_AUTO",
                    "17371"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17371: 03_Error messages_ESOB_ESOT_RSOTF_ESLP", @__tags);
#line 332
this.ScenarioSetup(scenarioInfo);
#line 333
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 334
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 335
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", hIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 336
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 337
 testRunner.Then(string.Format("I should see the below ErrorMessage \"{0}\"", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18084: 03_Error messages for Payments and reference (LP)")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_NegativeTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("18084")]
        [NUnit.Framework.TestCaseAttribute("Error1", "LP", "Please enter Account number/Cheque number", "NAB_AUTO", "", null)]
        [NUnit.Framework.TestCaseAttribute("Error2", "LP", "Enter account number,reference number,payment method.", "NAB_AUTO", "DV122/313823D", null)]
        public virtual void TestCase1808403_ErrorMessagesForPaymentsAndReferenceLP(string message, string action, string errorMessage, string cOY, string locateArgument, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_NegativeTest",
                    "NAB_AUTO",
                    "18084"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18084: 03_Error messages for Payments and reference (LP)", @__tags);
#line 357
this.ScenarioSetup(scenarioInfo);
#line 359
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 360
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 361
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 362
  testRunner.And(string.Format("I enter the following details as the Locate action \"{0}\" \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 363
 testRunner.Then(string.Format("I should see the below ErrorMessage \"{0}\"", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18085: 04_Error messages for Payments and reference (LHR)")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_NegativeTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("18085")]
        [NUnit.Framework.TestCaseAttribute("Error1", "LHR", "X0019115721", "", "Must enter a reference or TOTR or TETR here", null)]
        [NUnit.Framework.TestCaseAttribute("Error2", "LHR", "X0019115721", "987654321", "No transactions with this trade reference", null)]
        public virtual void TestCase1808504_ErrorMessagesForPaymentsAndReferenceLHR(string message, string action, string hIN, string locateArgument, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_NegativeTest",
                    "NAB_AUTO",
                    "18085"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18085: 04_Error messages for Payments and reference (LHR)", @__tags);
#line 375
this.ScenarioSetup(scenarioInfo);
#line 376
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 377
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 378
  testRunner.And("I go to the Enquiry system and Search <X0019115721>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 379
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 380
 testRunner.Then(string.Format("I should see the below ErrorMessage \"{0}\"", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18203: 04.2_LEH Action Error Messages")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_NegativeTest")]
        [NUnit.Framework.CategoryAttribute("QBE_AUTO")]
        [NUnit.Framework.CategoryAttribute("18203")]
        public virtual void TestCase1820304_2_LEHActionErrorMessages()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18203: 04.2_LEH Action Error Messages", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "EN_E_NegativeTest",
                        "QBE_AUTO",
                        "18203"});
#line 413
this.ScenarioSetup(scenarioInfo);
#line 415
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 416
 testRunner.When("In SELCOY01 I select the company: \"QBE_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 417
  testRunner.And("I go to the Enquiry system for \"I8800303631\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "Action",
                        "LEH"});
            table2.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 418
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table2, "And ");
#line 422
 testRunner.Then("I expect to see error with text \"Enter Run Nbr/Trans Nbr in format rrrr/tttttttt." +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18149: 02_Error message for LEML Action")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_NegativeTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("18149")]
        [NUnit.Framework.TestCaseAttribute("LEML", "TE@COMPUTERSHARE.COM.AU", "No matches on email lookup for", null)]
        [NUnit.Framework.TestCaseAttribute("LMEL", "", "Invalid Action", null)]
        public virtual void TestCase1814902_ErrorMessageForLEMLAction(string action, string locateArgument, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_NegativeTest",
                    "NAB_AUTO",
                    "18149"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18149: 02_Error message for LEML Action", @__tags);
#line 429
this.ScenarioSetup(scenarioInfo);
#line 431
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 432
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 433
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 434
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 435
 testRunner.Then(string.Format("I should see the below ErrorMessage \"{0}\"", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18165: 01_Company Notice and Comms (NOT action)")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("DataChange")]
        [NUnit.Framework.CategoryAttribute("EN_E_NegativeTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("18165")]
        public virtual void TestCase1816501_CompanyNoticeAndCommsNOTAction()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18165: 01_Company Notice and Comms (NOT action)", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "DataChange",
                        "EN_E_NegativeTest",
                        "NAB_AUTO",
                        "18165"});
#line 448
this.ScenarioSetup(scenarioInfo);
#line 450
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 451
 testRunner.When("In SELCOY01 I select the company as \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 452
  testRunner.And("I go to \"company notice\" Control Code Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 453
  testRunner.And("In HKS01901 I removed Company notices", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 454
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 455
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 456
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "Action",
                        "NOT"});
            table3.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 457
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table3, "And ");
#line 461
 testRunner.Then("I expect to see error with text \"There is no current NOTICE for this company.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18300: 08_Events Error messages")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_NegativeTest")]
        [NUnit.Framework.CategoryAttribute("QBE_AUTO")]
        [NUnit.Framework.CategoryAttribute("18300")]
        public virtual void TestCase1830008_EventsErrorMessages()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18300: 08_Events Error messages", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "EN_E_NegativeTest",
                        "QBE_AUTO",
                        "18300"});
#line 468
this.ScenarioSetup(scenarioInfo);
#line 470
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 471
 testRunner.When("In SELCOY01 I select the company: \"QBE_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 472
  testRunner.And("I go to the Enquiry system for \"I5500007470\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table4.AddRow(new string[] {
                        "Action",
                        "EETD"});
            table4.AddRow(new string[] {
                        "Locate Argument",
                        "/EBS"});
#line 473
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table4, "And ");
#line 477
 testRunner.Then("I expect to see error with text \"Holder has no Events for this history selection." +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18426: 01_Certs with Last Txn details Error Messages_Test1")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_NegativeTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("18426_1")]
        [NUnit.Framework.TestCaseAttribute("E", "C0009913176", "", "This holder has no certificates.", null)]
        [NUnit.Framework.TestCaseAttribute("EC", "C0009913176", "", "This holder has no certificates.", null)]
        [NUnit.Framework.TestCaseAttribute("EB", "C0009913176", "", "No certificates with balances for this holder.", null)]
        [NUnit.Framework.TestCaseAttribute("EM", "C0009913176", "", "This holder has no markings.", null)]
        [NUnit.Framework.TestCaseAttribute("EMB", "C0009913176", "", "No markings with units for this holder", null)]
        [NUnit.Framework.TestCaseAttribute("ECB", "C0009913176", "", "No certificates with balances for this holder.", null)]
        public virtual void TestCase1842601_CertsWithLastTxnDetailsErrorMessages_Test1(string action, string hIN, string locateArgument, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_NegativeTest",
                    "NAB_AUTO",
                    "18426_1"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18426: 01_Certs with Last Txn details Error Messages_Test1", @__tags);
#line 484
this.ScenarioSetup(scenarioInfo);
#line 485
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 486
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 487
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", hIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 488
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 489
 testRunner.Then(string.Format("I should see the below ErrorMessage \"{0}\"", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18426: 02_Certs with Last Txn details Error Messages_Test2")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_NegativeTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("18426_2")]
        [NUnit.Framework.TestCaseAttribute("EB", "I0070036924", "", "Invalid action for uncertificated holder", null)]
        [NUnit.Framework.TestCaseAttribute("EC", "I0070036924", "", "Invalid action for uncertificated holder", null)]
        [NUnit.Framework.TestCaseAttribute("EM", "I0070036924", "", "Invalid action for uncertificated holder", null)]
        [NUnit.Framework.TestCaseAttribute("EMB", "I0070036924", "", "Invalid action for uncertificated holder", null)]
        [NUnit.Framework.TestCaseAttribute("ECB", "I0070036924", "", "Invalid action for uncertificated holder", null)]
        public virtual void TestCase1842602_CertsWithLastTxnDetailsErrorMessages_Test2(string action, string hIN, string locateArgument, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "EN_E_NegativeTest",
                    "NAB_AUTO",
                    "18426_2"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18426: 02_Certs with Last Txn details Error Messages_Test2", @__tags);
#line 505
this.ScenarioSetup(scenarioInfo);
#line 506
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 507
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 508
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", hIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 509
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 510
 testRunner.Then(string.Format("I should see the below ErrorMessage \"{0}\"", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 16851: 03_R action comparison- ErrorMessage")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("EN_E_NegativeTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("16851")]
        public virtual void TestCase1685103_RActionComparison_ErrorMessage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 16851: 03_R action comparison- ErrorMessage", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "EN_E_NegativeTest",
                        "NAB_AUTO",
                        "16851"});
#line 525
this.ScenarioSetup(scenarioInfo);
#line 527
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 528
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 529
  testRunner.And("I go to the Enquiry system for \"I0031748046\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table5.AddRow(new string[] {
                        "Action",
                        "R"});
            table5.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 530
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table5, "And ");
#line 534
 testRunner.Then("I expect to see error with text \"This holder has no register details.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
