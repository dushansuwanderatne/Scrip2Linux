// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SCRIPAU.Automation.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("EN_E_PostcodeEnquiry")]
    public partial class EN_E_PostcodeEnquiryFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "EN_E_PostcodeEnquiry.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "EN_E_PostcodeEnquiry", "Ensure EN_E_PostcodeEnquiry functionality covered", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18459: 01_Code Enquiries -DLAS")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("EN_E_PostcodeEnquiry")]
        [NUnit.Framework.CategoryAttribute("18459")]
        [NUnit.Framework.TestCaseAttribute("Test1", "A", "DLAS", "BLAIR", "", "BLAIR ATHOL", "BLAIR ATHOL", "BLAIRGOWRIE", "BLAIRMORE", "BLAIRMOUNT", "", "", "", "NSW", "SA", "VIC", "QLD", "NSW", "", "", "", "2560", "5084", "3942", "4625", "2559", "", "", "", "205", "520", "316", "440", "205", "", "", "", "014", "046", "032", "002", "014", "", "", "", "Australia", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "A", "DLAS", "HAWTHORN", "", "HAWTHORN", "HAWTHORN", "HAWTHORN EAST", "HAWTHORN NORTH", "HAWTHORN WEST", "HAWTHORNDENE", "HAWTHORNE", "", "SA", "VIC", "VIC", "VIC", "VIC", "SA", "QLD", "", "5062", "3122", "3123", "3122", "3122", "5051", "4171", "", "520", "315", "315", "315", "315", "520", "430", "", "047", "030", "030", "030", "030", "047", "035", "", "Australia", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "A", "DLAS", "VICTORIA", "WA", "VICTORIA PARK", "VICTORIA PARK", "VICTORIA ROCK", "", "", "", "", "", "WA", "WA", "WA", "", "", "", "", "", "6100", "6979", "6429", "", "", "", "", "", "630", "630", "670", "", "", "", "", "", "052", "052", "049", "", "", "", "", "", "Australia", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test4", "A", "DLAS", "CHURCHILL", "QLD", "CHURCHILL", "", "", "", "", "", "", "", "QLD", "", "", "", "", "", "", "", "4305", "", "", "", "", "", "", "", "420", "", "", "", "", "", "", "", "040", "", "", "", "", "", "", "", "Australia", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test5", "N", "DLAS", "WELLINGTON", "", "WELLINGTON", "WELLINGTON", "WELLINGTON EAST", "WELLINGTON FOREST", "WELLINGTON MILL", "WELLINGTON PARK", "WELLINGTON POINT", "", "NSW", "SA", "SA", "WA", "WA", "TAS", "QLD", "", "2820", "5259", "5259", "6236", "6236", "7054", "4160", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "New Zealand", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", null)]
        public virtual void TestCase1845901_CodeEnquiries_DLAS(
                    string test, 
                    string country, 
                    string displayOption, 
                    string startLocation, 
                    string state, 
                    string town1, 
                    string town2, 
                    string town3, 
                    string town4, 
                    string town5, 
                    string town6, 
                    string town7, 
                    string town8, 
                    string state1, 
                    string state2, 
                    string state3, 
                    string state4, 
                    string state5, 
                    string state6, 
                    string state7, 
                    string state8, 
                    string postcode1, 
                    string postcode2, 
                    string postcode3, 
                    string postcode4, 
                    string postcode5, 
                    string postcode6, 
                    string postcode7, 
                    string postcode8, 
                    string presort1, 
                    string presort2, 
                    string presort3, 
                    string presort4, 
                    string presort5, 
                    string presort6, 
                    string presort7, 
                    string presort8, 
                    string barcodePresort1, 
                    string barcodePresort2, 
                    string barcodePresort3, 
                    string barcodePresort4, 
                    string barcodePresort5, 
                    string barcodePresort6, 
                    string barcodePresort7, 
                    string barcodePresort8, 
                    string country1, 
                    string town9, 
                    string town10, 
                    string town11, 
                    string town12, 
                    string town13, 
                    string town14, 
                    string town15, 
                    string town16, 
                    string state9, 
                    string state10, 
                    string state11, 
                    string state12, 
                    string state13, 
                    string state14, 
                    string state15, 
                    string state16, 
                    string postcode9, 
                    string postcode10, 
                    string postcode11, 
                    string postcode12, 
                    string postcode13, 
                    string postcode14, 
                    string postcode15, 
                    string postcode16, 
                    string presort9, 
                    string presort10, 
                    string presort11, 
                    string presort12, 
                    string presort13, 
                    string presort14, 
                    string presort15, 
                    string presort16, 
                    string barcodePresort9, 
                    string barcodePresort10, 
                    string barcodePresort11, 
                    string barcodePresort12, 
                    string barcodePresort13, 
                    string barcodePresort14, 
                    string barcodePresort15, 
                    string barcodePresort16, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "NAB_AUTO",
                    "EN_E_PostcodeEnquiry",
                    "18459"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18459: 01_Code Enquiries -DLAS", @__tags);
#line 9
this.ScenarioSetup(scenarioInfo);
#line 11
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 12
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "Action",
                        "PCE"});
            table1.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 14
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table1, "And ");
#line 18
  testRunner.And(string.Format("I enter Postcode Enquiry System details as \"{0}\" \"{1}\" \"{2}\" \"{3}\"", country, displayOption, startLocation, state), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
 testRunner.Then(string.Format("ENSPCE10 I should see Town details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"" +
                        "{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"", country1, town1, town2, town3, town4, town5, town6, town7, town8, town9, town10, town11, town12, town13, town14, town15, town16), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 22
  testRunner.And(string.Format("ENSPCE10 I should see State details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" " +
                        "\"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\"", state1, state2, state3, state4, state5, state6, state7, state8, state9, state10, state11, state12, state13, state14, state15, state16), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
  testRunner.And(string.Format("ENSPCE10 I should see Postcode details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6" +
                        "}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\"", postcode1, postcode2, postcode3, postcode4, postcode5, postcode6, postcode7, postcode8, postcode9, postcode10, postcode11, postcode12, postcode13, postcode14, postcode15, postcode16), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
  testRunner.And(string.Format("ENSPCE10 I should see Presort details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}" +
                        "\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\"", presort1, presort2, presort3, presort4, presort5, presort6, presort7, presort8, presort9, presort10, presort11, presort12, presort13, presort14, presort15, presort16), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
  testRunner.And(string.Format("ENSPCE10 I should see BarcodePresort details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5" +
                        "}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\"", barcodePresort1, barcodePresort2, barcodePresort3, barcodePresort4, barcodePresort5, barcodePresort6, barcodePresort7, barcodePresort8, barcodePresort9, barcodePresort10, barcodePresort11, barcodePresort12, barcodePresort13, barcodePresort14, barcodePresort15, barcodePresort16), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18462: 02_Post Code Enquiries -DLPC/DLPS/DLBP")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("EN_E_PostcodeEnquiry")]
        [NUnit.Framework.CategoryAttribute("18462")]
        [NUnit.Framework.TestCaseAttribute("Test1", "A", "DLPC", "5000", "", "ADELAIDE", "ADELAIDE BC", "CITY WEST CAMPUS", "HALIFAX STREET", "HUTT STREET", "RUNDLE MALL", "STATION ARCADE", "STURT STREET", "SA", "SA", "SA", "SA", "SA", "SA", "SA", "SA", "5000", "5000", "5000", "5000", "5000", "5000", "5000", "5000", "524", "524", "524", "524", "524", "524", "524", "524", "045", "045", "045", "045", "045", "045", "045", "045", "Australia", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "A", "DLPC", "3122", "", "AUBURN SOUTH", "GLENFERRIE SOUTH", "HAWTHORN", "HAWTHORN NORTH", "HAWTHORN WEST", "", "", "", "VIC", "VIC", "VIC", "VIC", "VIC", "", "", "", "3122", "3122", "3122", "3122", "3122", "", "", "", "315", "315", "315", "315", "315", "", "", "", "030", "030", "030", "030", "030", "", "", "", "Australia", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "A", "DLPS", "628", "", "CITY DELIVERY CENTRE", "PERTH", "PERTH GPO", "PERTH", "HIGHGATE", "NORTHBRIDGE", "EAST PERTH", "KINGS PARK", "WA", "WA", "WA", "WA", "WA", "WA", "WA", "WA", "6000", "6000", "6000", "6001", "6003", "6003", "6004", "6005", "628", "628", "628", "628", "628", "628", "628", "628", "049", "049", "049", "049", "049", "049", "049", "049", "Australia", "WEST PERTH", "PERTH", "PERTH", "PERTH", "PERTH", "PERTH ST GEORGES TCE", "PERTH", "PERTH", "WA", "WA", "WA", "WA", "WA", "WA", "WA", "WA", "6005", "6800", "6809", "6827", "6830", "6831", "6837", "6838", "628", "628", "628", "628", "628", "628", "628", "628", "049", "049", "049", "049", "049", "049", "049", "049", null)]
        [NUnit.Framework.TestCaseAttribute("Test4", "A", "DLBP", "047", "", "CLARENCE GARDENS", "EDWARDSTOWN", "MELROSE PARK", "MELROSE PARK DC", "COLONEL LIGHT GARDENS", "CUMBERLAND PARK", "DAW PARK", "PANORAMA", "SA", "SA", "SA", "SA", "SA", "SA", "SA", "SA", "5039", "5039", "5039", "5039", "5041", "5041", "5041", "5041", "520", "520", "520", "520", "520", "520", "520", "520", "047", "047", "047", "047", "047", "047", "047", "047", "Australia", "WESTBOURNE PARK", "BEDFORD PARK", "CLOVELLY PARK", "FLINDERS UNIVERSITY", "PASADENA", "ST MARYS", "TONSLEY", "BELLEVUE HEIGHTS", "SA", "SA", "SA", "SA", "SA", "SA", "SA", "SA", "5041", "5042", "5042", "5042", "5042", "5042", "5042", "5050", "520", "520", "520", "520", "520", "520", "520", "520", "047", "047", "047", "047", "047", "047", "047", "047", null)]
        [NUnit.Framework.TestCaseAttribute("Test5", "N", "DLPC", "7054", "", "BARRETTA", "CONINGHAM", "ELECTRONA", "FERN TREE", "HOWDEN", "LESLIE VALE", "LOWER SNUG", "MARGATE", "TAS", "TAS", "TAS", "TAS", "TAS", "TAS", "TAS", "TAS", "7054", "7054", "7054", "7054", "7054", "7054", "7054", "7054", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "New Zealand", "NEIKA", "RIDGEWAY", "SNUG", "TINDERBOX", "WELLINGTON PARK", "", "", "", "TAS", "TAS", "TAS", "TAS", "TAS", "", "", "", "7054", "7054", "7054", "7054", "7054", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", null)]
        public virtual void TestCase1846202_PostCodeEnquiries_DLPCDLPSDLBP(
                    string test, 
                    string country, 
                    string displayOption, 
                    string startLocation, 
                    string state, 
                    string town1, 
                    string town2, 
                    string town3, 
                    string town4, 
                    string town5, 
                    string town6, 
                    string town7, 
                    string town8, 
                    string state1, 
                    string state2, 
                    string state3, 
                    string state4, 
                    string state5, 
                    string state6, 
                    string state7, 
                    string state8, 
                    string postcode1, 
                    string postcode2, 
                    string postcode3, 
                    string postcode4, 
                    string postcode5, 
                    string postcode6, 
                    string postcode7, 
                    string postcode8, 
                    string presort1, 
                    string presort2, 
                    string presort3, 
                    string presort4, 
                    string presort5, 
                    string presort6, 
                    string presort7, 
                    string presort8, 
                    string barcodePresort1, 
                    string barcodePresort2, 
                    string barcodePresort3, 
                    string barcodePresort4, 
                    string barcodePresort5, 
                    string barcodePresort6, 
                    string barcodePresort7, 
                    string barcodePresort8, 
                    string country1, 
                    string town9, 
                    string town10, 
                    string town11, 
                    string town12, 
                    string town13, 
                    string town14, 
                    string town15, 
                    string town16, 
                    string state9, 
                    string state10, 
                    string state11, 
                    string state12, 
                    string state13, 
                    string state14, 
                    string state15, 
                    string state16, 
                    string postcode9, 
                    string postcode10, 
                    string postcode11, 
                    string postcode12, 
                    string postcode13, 
                    string postcode14, 
                    string postcode15, 
                    string postcode16, 
                    string presort9, 
                    string presort10, 
                    string presort11, 
                    string presort12, 
                    string presort13, 
                    string presort14, 
                    string presort15, 
                    string presort16, 
                    string barcodePresort9, 
                    string barcodePresort10, 
                    string barcodePresort11, 
                    string barcodePresort12, 
                    string barcodePresort13, 
                    string barcodePresort14, 
                    string barcodePresort15, 
                    string barcodePresort16, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "NAB_AUTO",
                    "EN_E_PostcodeEnquiry",
                    "18462"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18462: 02_Post Code Enquiries -DLPC/DLPS/DLBP", @__tags);
#line 40
this.ScenarioSetup(scenarioInfo);
#line 42
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 43
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 44
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "Action",
                        "PCE"});
            table2.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 45
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table2, "And ");
#line 49
  testRunner.And(string.Format("I enter Postcode Enquiry System details as \"{0}\" \"{1}\" \"{2}\" \"{3}\"", country, displayOption, startLocation, state), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 testRunner.Then(string.Format("ENSPCE10 I should see Town details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"" +
                        "{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\"", country1, town1, town2, town3, town4, town5, town6, town7, town8, town9, town10, town11, town12, town13, town14, town15, town16), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 51
  testRunner.And(string.Format("ENSPCE10 I should see State details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" " +
                        "\"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\"", state1, state2, state3, state4, state5, state6, state7, state8, state9, state10, state11, state12, state13, state14, state15, state16), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
  testRunner.And(string.Format("ENSPCE10 I should see Postcode details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6" +
                        "}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\"", postcode1, postcode2, postcode3, postcode4, postcode5, postcode6, postcode7, postcode8, postcode9, postcode10, postcode11, postcode12, postcode13, postcode14, postcode15, postcode16), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
  testRunner.And(string.Format("ENSPCE10 I should see Presort details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}" +
                        "\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\"", presort1, presort2, presort3, presort4, presort5, presort6, presort7, presort8, presort9, presort10, presort11, presort12, presort13, presort14, presort15, presort16), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
  testRunner.And(string.Format("ENSPCE10 I should see BarcodePresort details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5" +
                        "}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\"", barcodePresort1, barcodePresort2, barcodePresort3, barcodePresort4, barcodePresort5, barcodePresort6, barcodePresort7, barcodePresort8, barcodePresort9, barcodePresort10, barcodePresort11, barcodePresort12, barcodePresort13, barcodePresort14, barcodePresort15, barcodePresort16), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18465: 03_Post Code Enquiries Error Messages for country-ENSPCE06")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("EN_E_PostcodeEnquiry")]
        [NUnit.Framework.CategoryAttribute("18465")]
        [NUnit.Framework.TestCaseAttribute("Test1", "I", "Please enter either: <space>, A, N, U", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "", "Invalid Country Selected", null)]
        public virtual void TestCase1846503_PostCodeEnquiriesErrorMessagesForCountry_ENSPCE06(string test, string country, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "NAB_AUTO",
                    "EN_E_PostcodeEnquiry",
                    "18465"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18465: 03_Post Code Enquiries Error Messages for country-ENSPCE06", @__tags);
#line 69
this.ScenarioSetup(scenarioInfo);
#line 71
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 72
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 73
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "Action",
                        "PCE"});
            table3.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 74
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table3, "And ");
#line 78
  testRunner.And(string.Format("In ENSPCE06 I enter country code as \"{0}\"", country), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
 testRunner.Then(string.Format("I should see the below ErrorMessage \"{0}\"", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18465: 03_Post Code Enquiries Error Messages for country -ENSPCE01")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("EN_E_PostcodeEnquiry")]
        [NUnit.Framework.CategoryAttribute("18465")]
        [NUnit.Framework.TestCaseAttribute("Test1", "A", "ABCD", "Your response of \"ABCD\" is not on the menu.", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "A", "", "Your response of \"<nothing>\" is not on the menu.", null)]
        public virtual void TestCase1846503_PostCodeEnquiriesErrorMessagesForCountry_ENSPCE01(string test, string country, string displayOption, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "NAB_AUTO",
                    "EN_E_PostcodeEnquiry",
                    "18465"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18465: 03_Post Code Enquiries Error Messages for country -ENSPCE01", @__tags);
#line 91
this.ScenarioSetup(scenarioInfo);
#line 93
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 94
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 95
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table4.AddRow(new string[] {
                        "Action",
                        "PCE"});
            table4.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 96
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table4, "And ");
#line 100
  testRunner.And(string.Format("In ENSPCE01 I enter Display Option as \"{0}\" \"{1}\"", country, displayOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 101
 testRunner.Then(string.Format("I should see the below ErrorMessage \"{0}\"", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18467: 04_Post Code Enquiries Error Messages for Display options")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("EN_E_PostcodeEnquiry")]
        [NUnit.Framework.CategoryAttribute("18467")]
        [NUnit.Framework.TestCaseAttribute("Test1", "A", "DLAS", "INDIA", "", "No Match On Location/State Found", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "A", "DLPC", "ABCD", "", "No Match On Postcode Found", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "A", "DLPC", "1234", "", "No Match On Postcode Found", null)]
        [NUnit.Framework.TestCaseAttribute("Test4", "A", "DLPC", "", "", "No Match On Postcode Found", null)]
        [NUnit.Framework.TestCaseAttribute("Test5", "A", "DLPS", "1234", "", "No Match On Presort Code Found", null)]
        [NUnit.Framework.TestCaseAttribute("Test6", "A", "DLBP", "999", "", "No Match On Barcode Presort Code Found", null)]
        public virtual void TestCase1846704_PostCodeEnquiriesErrorMessagesForDisplayOptions(string test, string country, string displayOption, string startLocation, string state, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "NAB_AUTO",
                    "EN_E_PostcodeEnquiry",
                    "18467"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18467: 04_Post Code Enquiries Error Messages for Display options", @__tags);
#line 113
this.ScenarioSetup(scenarioInfo);
#line 115
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 116
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 117
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table5.AddRow(new string[] {
                        "Action",
                        "PCE"});
            table5.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 118
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table5, "And ");
#line 122
  testRunner.And(string.Format("I Search Postcode Enquiry System details as \"{0}\" \"{1}\" \"{2}\" \"{3}\"", country, displayOption, startLocation, state), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 123
 testRunner.Then(string.Format("I should see the below ErrorMessage \"{0}\"", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
