// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SCRIPAU.Automation.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("PX_Online Proxy system")]
    public partial class PX_OnlineProxySystemFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "PX._Online Proxy System.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "PX_Online Proxy system", "In order to avoid silly mistakes\r\nAs a math idiot\r\nI want to be told the sum of t" +
                    "wo numbers", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case Proxy End to End -TO SAV")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("Proxy_System")]
        [NUnit.Framework.TestCaseAttribute("Test1", "CPU_AUTO", "2", "A", "TEST AUTOMATION-TO SAV", "01/08/2015", "PIN", "N", "CHM", "2", "N", "N", "", "N", "Y", "N", "N", "N", "N", "A", "N", "", "", "", "", "", "N", "", "", "N", "N", "", "", "N", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "R1", "R2", "RES1", "RES2", "Resolution Number 1", "Resolution Number 2", "FP", "FP", "", "", "", "", "N", "N", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "N", "N", "", "", "A", "", "mnp", "A", "DS1", "TEST DS1", "N", "B", "Y", "A", "DS2", "TEST DS2", "N", "N", "Y", "pet", "20", "FAB", "X0044132095", "P", "CHM", "DS2", "", "50", "F", "F", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "21", "UNFA", "X0055123268", "", "CHM", "", "", "", "", "", "200", "200", "200", "200", "200", "200", "200", "200", "200", "200", "3500", "R1", "R2", "3500", "3500", "1000", "1000", "2500", "2500", "LESS", "LESS", "C", "PHV", "S", "X0044132095", "CHM", "DS2", "50", "R1          F           60           60                                 120.00", "R2          F           60           60                                 120.00", "X0055123268", "CHM", "", "", "R1 .         200          200          200          200          200", "R2 .         200          200          200          200          200", "PAL", "PX", "P", "Y", "SURE", "SAV", null)]
        public virtual void TestCaseProxyEndToEnd_TOSAV(
                    string test, 
                    string cOY, 
                    string meetingNumber, 
                    string action, 
                    string meetingHeading, 
                    string meetingDate, 
                    string selection, 
                    string aTMeetingFlag, 
                    string chairman, 
                    string nbrRes, 
                    string schemeMeetingInd, 
                    string internetMeeting, 
                    string algorithmNumber, 
                    string remResOpenVotes, 
                    string classVotesInd, 
                    string sameClasses, 
                    string directVotingInd, 
                    string processingCutoff, 
                    string manualProcessCutOff, 
                    string nomNotPresent, 
                    string specialCondInd, 
                    string minBalanceYN, 
                    string runUpto, 
                    string maxVotesYN, 
                    string maxVotes, 
                    string groupApply, 
                    string specialCalcInd, 
                    string allCalc, 
                    string corpRepNotingNum, 
                    string preEncodedNotInp, 
                    string intermediaryOnlineProcessing, 
                    string imoOverVoteProcessingCutOff, 
                    string imoCosmosCompanyMeetingID, 
                    string activateAutoScheduledJobs, 
                    string activationFromDateRange, 
                    string activationTODateRange, 
                    string autoTopReport, 
                    string cutoffPoint, 
                    string entitlementClasses1, 
                    string entitlementClasses2, 
                    string entitlementClasses3, 
                    string entitlementClassGroups1, 
                    string entitlementClassGroups2, 
                    string entitlementClassGroups3, 
                    string entitlementOtherClass1, 
                    string entitlementOtherClass2, 
                    string entitlementOtherClass3, 
                    string autoPalsavReport, 
                    string briefDesc, 
                    string briefDesc2, 
                    string longDesc, 
                    string longDesc2, 
                    string votingFrmDesc, 
                    string votingFrmDesc2, 
                    string classCode, 
                    string classCode2, 
                    string classGroup, 
                    string classGroup2, 
                    string excClass, 
                    string excClass2, 
                    string otherReqdInd, 
                    string otherReqdInd2, 
                    string classCodeB1, 
                    string classCodeB2, 
                    string classCodeB3, 
                    string excClassB1, 
                    string excClassB2, 
                    string excClassB3, 
                    string rounding, 
                    string rounding2, 
                    string excClassCodesInd, 
                    string excClassCodesInd2, 
                    string excClassCode, 
                    string excClassCode2, 
                    string remResTickBox, 
                    string remResTickBox2, 
                    string nomOveRes, 
                    string nomOveRes2, 
                    string unitsIssuedOS, 
                    string unitsIssuedOS2, 
                    string unitsUpdMethod, 
                    string unitsUpdMethod2, 
                    string selection1, 
                    string action1St, 
                    string code, 
                    string name, 
                    string status, 
                    string type, 
                    string current, 
                    string action1St1, 
                    string code1, 
                    string name1, 
                    string status1, 
                    string type1, 
                    string current1, 
                    string selection2, 
                    string refNum, 
                    string proxyType, 
                    string holder, 
                    string sPFlag, 
                    string noma, 
                    string nomb, 
                    string failingA, 
                    string perA, 
                    string r01, 
                    string r02, 
                    string for01, 
                    string for02, 
                    string against01, 
                    string against02, 
                    string openTicked01, 
                    string openTicked02, 
                    string abstain01, 
                    string abstain02, 
                    string exclude01, 
                    string exclude02, 
                    string classEntitlement, 
                    string resDesc1, 
                    string resDesc2, 
                    string classEntitlement1, 
                    string classEntitlement2, 
                    string totalEntered1, 
                    string totalEntered2, 
                    string difference1, 
                    string difference2, 
                    string description1, 
                    string description2, 
                    string confirm, 
                    string refNumU, 
                    string proxyTypeU, 
                    string holderU, 
                    string sPFlagU, 
                    string nomaU, 
                    string nombU, 
                    string failingAU, 
                    string perAU, 
                    string r01U, 
                    string r02U, 
                    string for01U, 
                    string for02U, 
                    string against01U, 
                    string against02U, 
                    string openTicked01U, 
                    string openTicked02U, 
                    string abstain01U, 
                    string abstain02U, 
                    string exclude01U, 
                    string exclude02U, 
                    string classEntitlementU, 
                    string resDesc1U, 
                    string resDesc2U, 
                    string classEntitlement1U, 
                    string classEntitlement2U, 
                    string totalEntered1U, 
                    string totalEntered2U, 
                    string difference1U, 
                    string difference2U, 
                    string description1U, 
                    string description2U, 
                    string confirmU, 
                    string selection3, 
                    string action1, 
                    string holderSearchKey, 
                    string nomPersonA, 
                    string nomPersonB, 
                    string percentA, 
                    string resolutionLine1, 
                    string resolutionLine2, 
                    string holderSearchKey2, 
                    string nomPersonA2, 
                    string nomPersonB2, 
                    string percentA2, 
                    string resolutionLine12, 
                    string resolutionLine22, 
                    string selection4, 
                    string selection5, 
                    string action2, 
                    string confirm1, 
                    string finalConfirm, 
                    string selection6, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "Proxy_System"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case Proxy End to End -TO SAV", @__tags);
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
  testRunner.And(string.Format("In PXS00106 I enter Proxy Details as \"{0}\" \"{1}\"", meetingNumber, action), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
  testRunner.And(string.Format("In PXS00107 I enter proxy Details as \"{0}\" \"{1}\"", meetingHeading, meetingDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table1.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 13
  testRunner.And("In PXS00101 I enter proxy details:", ((string)(null)), table1, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "ATMeetingFlag",
                        "Chairman",
                        "NbrRes",
                        "SchemeMeetingInd",
                        "InternetMeeting",
                        "AlgorithmNumber",
                        "RemResOpenVotes",
                        "ClassVotesInd",
                        "SameClasses",
                        "DirectVotingInd",
                        "ProcessingCutoff",
                        "ManualProcessCutOff",
                        "NomNotPresent"});
            table2.AddRow(new string[] {
                        string.Format("{0}", aTMeetingFlag),
                        string.Format("{0}", chairman),
                        string.Format("{0}", nbrRes),
                        string.Format("{0}", schemeMeetingInd),
                        string.Format("{0}", internetMeeting),
                        string.Format("{0}", algorithmNumber),
                        string.Format("{0}", remResOpenVotes),
                        string.Format("{0}", classVotesInd),
                        string.Format("{0}", sameClasses),
                        string.Format("{0}", directVotingInd),
                        string.Format("{0}", processingCutoff),
                        string.Format("{0}", manualProcessCutOff),
                        string.Format("{0}", nomNotPresent)});
#line 17
  testRunner.And("In PXS00201 I enter Proxy System Control Setup details:", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "SpecialCondInd",
                        "MinBalanceYN",
                        "RunUpto",
                        "MaxVotesYN",
                        "MaxVotes",
                        "GroupApply",
                        "SpecialCalcInd",
                        "AllCalc",
                        "CorpRepNotingNum",
                        "PreEncodedNotInp"});
            table3.AddRow(new string[] {
                        string.Format("{0}", specialCondInd),
                        string.Format("{0}", minBalanceYN),
                        string.Format("{0}", runUpto),
                        string.Format("{0}", maxVotesYN),
                        string.Format("{0}", maxVotes),
                        string.Format("{0}", groupApply),
                        string.Format("{0}", specialCalcInd),
                        string.Format("{0}", allCalc),
                        string.Format("{0}", corpRepNotingNum),
                        string.Format("{0}", preEncodedNotInp)});
#line 20
  testRunner.And("In PXS00202 I enter Proxy System Control Setup details:", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "IntermediaryOnlineProcessing",
                        "ImoOverVoteProcessingCutOff",
                        "ImoCosmosCompanyMeetingID",
                        "ActivateAutoScheduledJobs",
                        "ActivationFromDateRange",
                        "ActivationTODateRange",
                        "AutoTopReport",
                        "CutoffPoint",
                        "EntitlementClasses1",
                        "EntitlementClasses2",
                        "EntitlementClasses3",
                        "EntitlementClassGroups1",
                        "EntitlementClassGroups2",
                        "EntitlementClassGroups3",
                        "EntitlementOtherClass1",
                        "EntitlementOtherClass2",
                        "EntitlementOtherClass3",
                        "AutoPalsavReport"});
            table4.AddRow(new string[] {
                        string.Format("{0}", intermediaryOnlineProcessing),
                        string.Format("{0}", imoOverVoteProcessingCutOff),
                        string.Format("{0}", imoCosmosCompanyMeetingID),
                        string.Format("{0}", activateAutoScheduledJobs),
                        "ActivationFromDateRange",
                        "ActivationTODateRange",
                        "AutoTopReport",
                        "CutoffPoint",
                        "EntitlementClasses1",
                        "EntitlementClasses2",
                        "EntitlementClasses3",
                        "EntitlementClassGroups1",
                        "EntitlementClassGroups2",
                        "EntitlementClassGroups3",
                        "EntitlementOtherClass1",
                        "EntitlementOtherClass2",
                        "EntitlementOtherClass3",
                        "AutoPalsavReport"});
#line 23
  testRunner.And("In PXS00203 I enter Proxy System Control Setup details:", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "BriefDesc",
                        "LongDesc",
                        "VotingFrmDesc",
                        "ClassCode",
                        "ClassGroup",
                        "ExcClass",
                        "OtherReqdInd",
                        "ClassCodeB1",
                        "ClassCodeB2",
                        "ClassCodeB3",
                        "ExcClassB1",
                        "ExcClassB2",
                        "ExcClassB3",
                        "Rounding",
                        "ExcClassCodesInd",
                        "ExcClassCode",
                        "RemResTickBox",
                        "NomOveRes",
                        "UnitsUpdMethod"});
            table5.AddRow(new string[] {
                        string.Format("{0}", briefDesc),
                        string.Format("{0}", longDesc),
                        string.Format("{0}", votingFrmDesc),
                        string.Format("{0}", classCode),
                        string.Format("{0}", classGroup),
                        string.Format("{0}", excClass),
                        string.Format("{0}", otherReqdInd),
                        string.Format("{0}", classCodeB1),
                        string.Format("{0}", classCodeB2),
                        string.Format("{0}", classCodeB3),
                        "ExcClassB1",
                        "ExcClassB2",
                        "ExcClassB3",
                        string.Format("{0}", rounding),
                        string.Format("{0}", excClassCodesInd),
                        string.Format("{0}", excClassCode),
                        string.Format("{0}", remResTickBox),
                        string.Format("{0}", nomOveRes),
                        string.Format("{0}", unitsUpdMethod)});
#line 26
  testRunner.And("In PXS00211 I enter Proxy System Control Setup details:", ((string)(null)), table5, "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "BriefDesc",
                        "LongDesc",
                        "VotingFrmDesc",
                        "ClassCode",
                        "ClassGroup",
                        "ExcClass",
                        "OtherReqdInd",
                        "ClassCodeB1",
                        "ClassCodeB2",
                        "ClassCodeB3",
                        "ExcClassB1",
                        "ExcClassB2",
                        "ExcClassB3",
                        "Rounding",
                        "ExcClassCodesInd",
                        "ExcClassCode",
                        "RemResTickBox",
                        "NomOveRes",
                        "UnitsUpdMethod"});
            table6.AddRow(new string[] {
                        string.Format("{0}", briefDesc2),
                        string.Format("{0}", longDesc2),
                        string.Format("{0}", votingFrmDesc2),
                        string.Format("{0}", classCode2),
                        string.Format("{0}", classGroup),
                        string.Format("{0}", excClass),
                        string.Format("{0}", otherReqdInd2),
                        string.Format("{0}", classCodeB1),
                        string.Format("{0}", classCodeB2),
                        string.Format("{0}", classCodeB3),
                        "ExcClassB1",
                        "ExcClassB2",
                        "ExcClassB3",
                        string.Format("{0}", rounding),
                        string.Format("{0}", excClassCodesInd),
                        string.Format("{0}", excClassCode),
                        string.Format("{0}", remResTickBox),
                        string.Format("{0}", nomOveRes2),
                        string.Format("{0}", unitsUpdMethod2)});
#line 29
  testRunner.And("In PXS00211 I enter Proxy System Control Setup details:", ((string)(null)), table6, "And ");
#line 32
  testRunner.And("I Transmit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
  testRunner.And("I Transmit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection1"});
            table7.AddRow(new string[] {
                        string.Format("{0}", selection1)});
#line 35
  testRunner.And("In PXS00101 I select proxy details Menu:", ((string)(null)), table7, "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Action1st",
                        "Code",
                        "Name",
                        "Status",
                        "Type",
                        "Current"});
            table8.AddRow(new string[] {
                        string.Format("{0}", action1St),
                        string.Format("{0}", code),
                        string.Format("{0}", name),
                        string.Format("{0}", status),
                        string.Format("{0}", type),
                        string.Format("{0}", current)});
#line 38
  testRunner.And("In NOMSCH01 I continue with the following details:", ((string)(null)), table8, "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Action1st",
                        "Code",
                        "Name",
                        "Status",
                        "Type",
                        "Current"});
            table9.AddRow(new string[] {
                        string.Format("{0}", action1St1),
                        string.Format("{0}", code1),
                        string.Format("{0}", name1),
                        string.Format("{0}", status1),
                        string.Format("{0}", type1),
                        string.Format("{0}", current1)});
#line 41
  testRunner.And("In NOMSCH01 I continue with the following details:", ((string)(null)), table9, "And ");
#line 44
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection1"});
            table10.AddRow(new string[] {
                        string.Format("{0}", selection2)});
#line 46
  testRunner.And("In PXS00101 I select proxy details Menu:", ((string)(null)), table10, "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "RefNum",
                        "ProxyType",
                        "Holder",
                        "SPFlag",
                        "Noma",
                        "Nomb",
                        "FailingA",
                        "PerA",
                        "R01",
                        "R02",
                        "For01",
                        "For02",
                        "Against01",
                        "Against02",
                        "OpenTicked01",
                        "OpenTicked02",
                        "Abstain01",
                        "Abstain02",
                        "Exclude01",
                        "Exclude02",
                        "ClassEntitlement",
                        "ResDesc1",
                        "ResDesc2",
                        "ClassEntitlement1",
                        "ClassEntitlement2",
                        "TotalEntered1",
                        "TotalEntered2",
                        "Difference1",
                        "Difference2",
                        "Description1",
                        "Description2",
                        "Confirm"});
            table11.AddRow(new string[] {
                        string.Format("{0}", refNum),
                        string.Format("{0}", proxyType),
                        string.Format("{0}", holder),
                        string.Format("{0}", sPFlag),
                        string.Format("{0}", noma),
                        string.Format("{0}", nomb),
                        string.Format("{0}", failingA),
                        string.Format("{0}", perA),
                        string.Format("{0}", r01),
                        string.Format("{0}", r02),
                        string.Format("{0}", for01),
                        string.Format("{0}", for02),
                        string.Format("{0}", against01),
                        string.Format("{0}", against02),
                        string.Format("{0}", openTicked01),
                        string.Format("{0}", openTicked02),
                        string.Format("{0}", abstain01),
                        string.Format("{0}", abstain02),
                        string.Format("{0}", exclude01),
                        string.Format("{0}", exclude02),
                        string.Format("{0}", classEntitlement),
                        string.Format("{0}", resDesc1),
                        string.Format("{0}", resDesc2),
                        string.Format("{0}", classEntitlement1),
                        string.Format("{0}", classEntitlement2),
                        string.Format("{0}", totalEntered1),
                        string.Format("{0}", totalEntered2),
                        string.Format("{0}", difference1),
                        string.Format("{0}", difference2),
                        string.Format("{0}", description1),
                        string.Format("{0}", description2),
                        string.Format("{0}", confirm)});
#line 49
  testRunner.And("In PXS02001 I continue with the following details:", ((string)(null)), table11, "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "RefNum",
                        "ProxyType",
                        "Holder",
                        "SPFlag",
                        "Noma",
                        "Nomb",
                        "FailingA",
                        "PerA",
                        "R01",
                        "R02",
                        "For01",
                        "For02",
                        "Against01",
                        "Against02",
                        "OpenTicked01",
                        "OpenTicked02",
                        "Abstain01",
                        "Abstain02",
                        "Exclude01",
                        "Exclude02",
                        "ClassEntitlement",
                        "ResDesc1",
                        "ResDesc2",
                        "ClassEntitlement1",
                        "ClassEntitlement2",
                        "TotalEntered1",
                        "TotalEntered2",
                        "Difference1",
                        "Difference2",
                        "Description1",
                        "Description2",
                        "Confirm"});
            table12.AddRow(new string[] {
                        string.Format("{0}", refNumU),
                        string.Format("{0}", proxyTypeU),
                        string.Format("{0}", holderU),
                        string.Format("{0}", sPFlagU),
                        string.Format("{0}", nomaU),
                        string.Format("{0}", nombU),
                        string.Format("{0}", failingAU),
                        string.Format("{0}", perAU),
                        string.Format("{0}", r01U),
                        string.Format("{0}", r02U),
                        string.Format("{0}", for01U),
                        string.Format("{0}", for02U),
                        string.Format("{0}", against01U),
                        string.Format("{0}", against02U),
                        string.Format("{0}", openTicked01U),
                        string.Format("{0}", openTicked02U),
                        string.Format("{0}", abstain01U),
                        string.Format("{0}", abstain02U),
                        string.Format("{0}", exclude01U),
                        string.Format("{0}", exclude02U),
                        string.Format("{0}", classEntitlementU),
                        string.Format("{0}", resDesc1U),
                        string.Format("{0}", resDesc2U),
                        string.Format("{0}", classEntitlement1U),
                        string.Format("{0}", classEntitlement2U),
                        string.Format("{0}", totalEntered1U),
                        string.Format("{0}", totalEntered2U),
                        string.Format("{0}", difference1U),
                        string.Format("{0}", difference2U),
                        string.Format("{0}", description1U),
                        string.Format("{0}", description2U),
                        string.Format("{0}", confirmU)});
#line 52
  testRunner.And("In PXS02001 I continue with the following details:", ((string)(null)), table12, "And ");
#line 55
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection1"});
            table13.AddRow(new string[] {
                        string.Format("{0}", selection3)});
#line 57
  testRunner.And("In PXS00101 I select proxy details Menu:", ((string)(null)), table13, "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Action",
                        "HolderSearchKey",
                        "NomPersonA",
                        "NomPersonB",
                        "PercentA",
                        "ResolutionLine1",
                        "ResolutionLine2"});
            table14.AddRow(new string[] {
                        string.Format("{0}", action1),
                        string.Format("{0}", holderSearchKey),
                        string.Format("{0}", nomPersonA),
                        string.Format("{0}", nomPersonB),
                        string.Format("{0}", percentA),
                        string.Format("{0}", resolutionLine1),
                        string.Format("{0}", resolutionLine2)});
#line 60
  testRunner.And("In PXS04001 I verify the Proxy Holder Vote Details as:", ((string)(null)), table14, "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Action",
                        "HolderSearchKey",
                        "NomPersonA",
                        "NomPersonB",
                        "PercentA",
                        "ResolutionLine1",
                        "ResolutionLine2"});
            table15.AddRow(new string[] {
                        string.Format("{0}", action1),
                        string.Format("{0}", holderSearchKey2),
                        string.Format("{0}", nomPersonA2),
                        string.Format("{0}", nomPersonB2),
                        string.Format("{0}", percentA2),
                        string.Format("{0}", resolutionLine12),
                        string.Format("{0}", resolutionLine22)});
#line 63
  testRunner.And("In PXS04001 I verify the Proxy Holder Vote Details as:", ((string)(null)), table15, "And ");
#line 66
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection1"});
            table16.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 68
  testRunner.And("In PXS00101 I select proxy details Menu:", ((string)(null)), table16, "And ");
#line 71
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria",
                        "PassCriteriaLNX",
                        "FailCriteriaLNX"});
            table17.AddRow(new string[] {
                        "completion",
                        "360",
                        "error",
                        "DONE",
                        "EXIT"});
#line 72
  testRunner.And("In JOBSUB90 I submit the Proxy report", ((string)(null)), table17, "And ");
#line 75
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 76
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection",
                        "MeetingNumber",
                        "Action"});
            table18.AddRow(new string[] {
                        string.Format("{0}", selection5),
                        string.Format("{0}", meetingNumber),
                        string.Format("{0}", action2)});
#line 77
  testRunner.And("In PXS00106 I Go to Proxy Meeting:", ((string)(null)), table18, "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection1"});
            table19.AddRow(new string[] {
                        string.Format("{0}", selection6)});
#line 81
  testRunner.And("In PXS00101 I select proxy details Menu:", ((string)(null)), table19, "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Confirm1",
                        "FinalConfirm"});
            table20.AddRow(new string[] {
                        string.Format("{0}", confirm1),
                        string.Format("{0}", finalConfirm)});
#line 84
  testRunner.And("In PXS00109 I continue with the following:", ((string)(null)), table20, "And ");
#line 87
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria",
                        "PassCriteriaLNX",
                        "FailCriteriaLNX"});
            table21.AddRow(new string[] {
                        "completion",
                        "360",
                        "error",
                        "DONE",
                        "EXIT"});
#line 88
  testRunner.And("In JOBSUB90 I submit the Proxy report", ((string)(null)), table21, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case Proxy End to End -SAV TO PST")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("Proxy_System")]
        [NUnit.Framework.TestCaseAttribute("Test1", "CPU_AUTO", "3", "A", "TEST AUTOMATION-SAV-PST", "01/08/2015", "PIN", "N", "CHM", "2", "N", "N", "", "N", "Y", "N", "N", "N", "N", "A", "N", "", "", "", "", "", "N", "", "", "N", "N", "", "", "N", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "R1", "R2", "RES1", "RES2", "Resolution Number 1", "Resolution Number 2", "FP", "FP", "", "", "", "", "N", "N", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "N", "N", "", "", "A", "", "mnp", "A", "DS1", "TEST DS1", "N", "B", "Y", "A", "DS2", "TEST DS2", "N", "N", "Y", "pet", "20", "FAB", "X0044132095", "P", "CHM", "DS2", "", "50", "F", "F", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "21", "UNFA", "X0055123268", "", "CHM", "", "", "", "", "", "200", "200", "200", "200", "200", "200", "200", "200", "200", "200", "3500", "R1", "R2", "3500", "3500", "1000", "1000", "2500", "2500", "LESS", "LESS", "C", "PHV", "S", "X0044132095", "CHM", "DS2", "50", "R1          F           60           60                                 120.00", "R2          F           60           60                                 120.00", "X0055123268", "CHM", "", "", "R1 .         200          200          200          200          200", "R2 .         200          200          200          200          200", "PAL", "PX", "P", "Y", "SURE", "SAV", "Y", "PCU", "AET", "SET", "1", "I0030047974", "", "", "NET", "", "", "I0100003091", "2", "NET", "", "", "DS2", "3", "VET", "4", "", "MARY JONES", "", "PAT", "S", "", "I0030047974", "", "I0030047974", "Voting Shareholder", "", "", "1", "", "Y", "R1 .          1318        0          0       0          0       1       1318", "R2 .          1318        0          0       0          0       1       1318", "", "", "DS2", "", "Nominated Person", "DS2", "N", "3", "", "Y", "R1 .            30        1         30       0          0       0          0", "R2 .            30        1         30       0          0       0          0", "NET", "", "", "CHM", "5", "PRE", "F", "Y", "A", "", "", "", "SCR", "", "PST", "F", "Y", "A", "", "", "", "N", null)]
        public virtual void TestCaseProxyEndToEnd_SAVTOPST(
                    string test, 
                    string cOY, 
                    string meetingNumber, 
                    string action, 
                    string meetingHeading, 
                    string meetingDate, 
                    string selection, 
                    string aTMeetingFlag, 
                    string chairman, 
                    string nbrRes, 
                    string schemeMeetingInd, 
                    string internetMeeting, 
                    string algorithmNumber, 
                    string remResOpenVotes, 
                    string classVotesInd, 
                    string sameClasses, 
                    string directVotingInd, 
                    string processingCutoff, 
                    string manualProcessCutOff, 
                    string nomNotPresent, 
                    string specialCondInd, 
                    string minBalanceYN, 
                    string runUpto, 
                    string maxVotesYN, 
                    string maxVotes, 
                    string groupApply, 
                    string specialCalcInd, 
                    string allCalc, 
                    string corpRepNotingNum, 
                    string preEncodedNotInp, 
                    string intermediaryOnlineProcessing, 
                    string imoOverVoteProcessingCutOff, 
                    string imoCosmosCompanyMeetingID, 
                    string activateAutoScheduledJobs, 
                    string activationFromDateRange, 
                    string activationTODateRange, 
                    string autoTopReport, 
                    string cutoffPoint, 
                    string entitlementClasses1, 
                    string entitlementClasses2, 
                    string entitlementClasses3, 
                    string entitlementClassGroups1, 
                    string entitlementClassGroups2, 
                    string entitlementClassGroups3, 
                    string entitlementOtherClass1, 
                    string entitlementOtherClass2, 
                    string entitlementOtherClass3, 
                    string autoPalsavReport, 
                    string briefDesc, 
                    string briefDesc2, 
                    string longDesc, 
                    string longDesc2, 
                    string votingFrmDesc, 
                    string votingFrmDesc2, 
                    string classCode, 
                    string classCode2, 
                    string classGroup, 
                    string classGroup2, 
                    string excClass, 
                    string excClass2, 
                    string otherReqdInd, 
                    string otherReqdInd2, 
                    string classCodeB1, 
                    string classCodeB2, 
                    string classCodeB3, 
                    string excClassB1, 
                    string excClassB2, 
                    string excClassB3, 
                    string rounding, 
                    string rounding2, 
                    string excClassCodesInd, 
                    string excClassCodesInd2, 
                    string excClassCode, 
                    string excClassCode2, 
                    string remResTickBox, 
                    string remResTickBox2, 
                    string nomOveRes, 
                    string nomOveRes2, 
                    string unitsIssuedOS, 
                    string unitsIssuedOS2, 
                    string unitsUpdMethod, 
                    string unitsUpdMethod2, 
                    string selection1, 
                    string action1St, 
                    string code, 
                    string name, 
                    string status, 
                    string type, 
                    string current, 
                    string action1St1, 
                    string code1, 
                    string name1, 
                    string status1, 
                    string type1, 
                    string current1, 
                    string selection2, 
                    string refNum, 
                    string proxyType, 
                    string holder, 
                    string sPFlag, 
                    string noma, 
                    string nomb, 
                    string failingA, 
                    string perA, 
                    string r01, 
                    string r02, 
                    string for01, 
                    string for02, 
                    string against01, 
                    string against02, 
                    string openTicked01, 
                    string openTicked02, 
                    string abstain01, 
                    string abstain02, 
                    string exclude01, 
                    string exclude02, 
                    string classEntitlement, 
                    string resDesc1, 
                    string resDesc2, 
                    string classEntitlement1, 
                    string classEntitlement2, 
                    string totalEntered1, 
                    string totalEntered2, 
                    string difference1, 
                    string difference2, 
                    string description1, 
                    string description2, 
                    string confirm, 
                    string refNumU, 
                    string proxyTypeU, 
                    string holderU, 
                    string sPFlagU, 
                    string nomaU, 
                    string nombU, 
                    string failingAU, 
                    string perAU, 
                    string r01U, 
                    string r02U, 
                    string for01U, 
                    string for02U, 
                    string against01U, 
                    string against02U, 
                    string openTicked01U, 
                    string openTicked02U, 
                    string abstain01U, 
                    string abstain02U, 
                    string exclude01U, 
                    string exclude02U, 
                    string classEntitlementU, 
                    string resDesc1U, 
                    string resDesc2U, 
                    string classEntitlement1U, 
                    string classEntitlement2U, 
                    string totalEntered1U, 
                    string totalEntered2U, 
                    string difference1U, 
                    string difference2U, 
                    string description1U, 
                    string description2U, 
                    string confirmU, 
                    string selection3, 
                    string action1, 
                    string holderSearchKey, 
                    string nomPersonA, 
                    string nomPersonB, 
                    string percentA, 
                    string resolutionLine1, 
                    string resolutionLine2, 
                    string holderSearchKey2, 
                    string nomPersonA2, 
                    string nomPersonB2, 
                    string percentA2, 
                    string resolutionLine12, 
                    string resolutionLine22, 
                    string selection4, 
                    string selection5, 
                    string action2, 
                    string confirm1, 
                    string finalConfirm, 
                    string selection6, 
                    string aTMeetingFlag1, 
                    string selection7, 
                    string selection8, 
                    string selection9, 
                    string attendeeNum, 
                    string holderName, 
                    string attendeeName, 
                    string attendeeNumber, 
                    string selection10, 
                    string attendeeNum1, 
                    string holderName1, 
                    string attendeeName1, 
                    string attendeeNumber1, 
                    string selection11, 
                    string attendeeNum2, 
                    string holderName2, 
                    string attendeeName2, 
                    string attendeeNumber2, 
                    string selection12, 
                    string attendeeNum3, 
                    string holderName3, 
                    string attendeeName3, 
                    string attendeeNumber3, 
                    string selection13, 
                    string action3, 
                    string holderSearchKey1, 
                    string holderSearchHin, 
                    string searchNomCode, 
                    string holderIdentifier, 
                    string statusLit, 
                    string nomPersonCode, 
                    string atdType, 
                    string atdNumber, 
                    string groupCode, 
                    string presentYN, 
                    string resolutionLine1A, 
                    string resolutionLine2A, 
                    string holderSearchKey13, 
                    string holderSearchHin3, 
                    string searchNomCode3, 
                    string holderIdentifier3, 
                    string statusLit3, 
                    string nomPersonCode3, 
                    string atdType3, 
                    string atdNumber3, 
                    string groupCode3, 
                    string presentYN3, 
                    string resolutionLine1A3, 
                    string resolutionLine2A3, 
                    string selection14, 
                    string attendeeNum4, 
                    string holderName4, 
                    string attendeeName4, 
                    string attendeeNumber4, 
                    string selection15, 
                    string reportType, 
                    string printHolderID, 
                    string reportSeq, 
                    string votingLevel, 
                    string res1To20Dsc1, 
                    string res1To20Dsc2, 
                    string selection16, 
                    string passwordInput, 
                    string selection17, 
                    string reportTypeP, 
                    string printHolderIDP, 
                    string reportSeqP, 
                    string votingLevelP, 
                    string res1To20Dsc1P, 
                    string res1To20Dsc2P, 
                    string voteIndP, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "Proxy_System"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case Proxy End to End -SAV TO PST", @__tags);
#line 98
this.ScenarioSetup(scenarioInfo);
#line 99
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 100
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection",
                        "MeetingNumber",
                        "Action"});
            table22.AddRow(new string[] {
                        string.Format("{0}", selection5),
                        string.Format("{0}", meetingNumber),
                        string.Format("{0}", action2)});
#line 101
  testRunner.And("In PXS00106 I Go to Proxy Meeting:", ((string)(null)), table22, "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection1"});
            table23.AddRow(new string[] {
                        string.Format("{0}", selection7)});
#line 104
  testRunner.And("In PXS00101 I select proxy details Menu:", ((string)(null)), table23, "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "ATMeetingFlag1"});
            table24.AddRow(new string[] {
                        string.Format("{0}", aTMeetingFlag1)});
#line 108
  testRunner.And("In PXS00201 I Change At Meeting details:", ((string)(null)), table24, "And ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection1"});
            table25.AddRow(new string[] {
                        string.Format("{0}", selection8)});
#line 111
  testRunner.And("In PXS00101 I select proxy details Menu:", ((string)(null)), table25, "And ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection",
                        "AttendeeNum",
                        "HolderName",
                        "AttendeeName",
                        "AttendeeNumber"});
            table26.AddRow(new string[] {
                        string.Format("{0}", selection9),
                        string.Format("{0}", attendeeNum),
                        string.Format("{0}", holderName),
                        string.Format("{0}", attendeeName),
                        string.Format("{0}", attendeeNumber)});
#line 115
  testRunner.And("In PXS01500 I Add Attendee list details:", ((string)(null)), table26, "And ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection",
                        "AttendeeNum",
                        "HolderName",
                        "AttendeeName",
                        "AttendeeNumber"});
            table27.AddRow(new string[] {
                        string.Format("{0}", selection10),
                        string.Format("{0}", attendeeNum1),
                        string.Format("{0}", holderName1),
                        string.Format("{0}", attendeeName1),
                        string.Format("{0}", attendeeNumber1)});
#line 119
  testRunner.And("In PXS01500 I Add Attendee list details:", ((string)(null)), table27, "And ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection",
                        "AttendeeNum",
                        "HolderName",
                        "AttendeeName",
                        "AttendeeNumber"});
            table28.AddRow(new string[] {
                        string.Format("{0}", selection11),
                        string.Format("{0}", attendeeNum2),
                        string.Format("{0}", holderName2),
                        string.Format("{0}", attendeeName2),
                        string.Format("{0}", attendeeNumber2)});
#line 123
  testRunner.And("In PXS01500 I Add Attendee list details:", ((string)(null)), table28, "And ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection",
                        "AttendeeNum",
                        "HolderName",
                        "AttendeeName",
                        "AttendeeNumber"});
            table29.AddRow(new string[] {
                        string.Format("{0}", selection12),
                        string.Format("{0}", attendeeNum3),
                        string.Format("{0}", holderName3),
                        string.Format("{0}", attendeeName3),
                        string.Format("{0}", attendeeNumber3)});
#line 127
  testRunner.And("In PXS01500 I Add Attendee list details:", ((string)(null)), table29, "And ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection",
                        "AttendeeNum",
                        "HolderName",
                        "AttendeeName",
                        "AttendeeNumber"});
            table30.AddRow(new string[] {
                        string.Format("{0}", selection14),
                        string.Format("{0}", attendeeNum4),
                        string.Format("{0}", holderName4),
                        string.Format("{0}", attendeeName4),
                        string.Format("{0}", attendeeNumber4)});
#line 131
  testRunner.And("In PXS01500 I Add Attendee list details:", ((string)(null)), table30, "And ");
#line 134
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection1"});
            table31.AddRow(new string[] {
                        string.Format("{0}", selection13)});
#line 135
  testRunner.And("In PXS00101 I select proxy details Menu:", ((string)(null)), table31, "And ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Action",
                        "HolderSearchKey",
                        "HolderSearchHin",
                        "SearchNomCode",
                        "HolderIdentifier",
                        "StatusLit",
                        "NomPersonCode",
                        "AtdType",
                        "AtdNumber",
                        "GroupCode",
                        "PresentYN",
                        "ResolutionLine1",
                        "ResolutionLine2"});
            table32.AddRow(new string[] {
                        string.Format("{0}", action3),
                        string.Format("{0}", holderSearchKey1),
                        string.Format("{0}", holderSearchHin),
                        string.Format("{0}", searchNomCode),
                        string.Format("{0}", holderIdentifier),
                        string.Format("{0}", statusLit),
                        string.Format("{0}", nomPersonCode),
                        string.Format("{0}", atdType),
                        string.Format("{0}", atdNumber),
                        string.Format("{0}", groupCode),
                        string.Format("{0}", presentYN),
                        string.Format("{0}", resolutionLine1A),
                        string.Format("{0}", resolutionLine2A)});
#line 139
  testRunner.And("In PXS04501 I verify Proxy Attendee details:", ((string)(null)), table32, "And ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection1"});
            table33.AddRow(new string[] {
                        string.Format("{0}", selection13)});
#line 142
  testRunner.And("In PXS00101 I select proxy details Menu:", ((string)(null)), table33, "And ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Action",
                        "HolderSearchKey",
                        "HolderSearchHin",
                        "SearchNomCode",
                        "HolderIdentifier",
                        "StatusLit",
                        "NomPersonCode",
                        "AtdType",
                        "AtdNumber",
                        "GroupCode",
                        "PresentYN",
                        "ResolutionLine1",
                        "ResolutionLine2"});
            table34.AddRow(new string[] {
                        string.Format("{0}", action3),
                        string.Format("{0}", holderSearchKey13),
                        string.Format("{0}", holderSearchHin3),
                        string.Format("{0}", searchNomCode3),
                        string.Format("{0}", holderIdentifier3),
                        string.Format("{0}", statusLit3),
                        string.Format("{0}", nomPersonCode3),
                        string.Format("{0}", atdType3),
                        string.Format("{0}", atdNumber3),
                        string.Format("{0}", groupCode3),
                        string.Format("{0}", presentYN3),
                        string.Format("{0}", resolutionLine1A3),
                        string.Format("{0}", resolutionLine2A3)});
#line 146
  testRunner.And("In PXS04501 I verify Proxy Attendee details:", ((string)(null)), table34, "And ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection1"});
            table35.AddRow(new string[] {
                        string.Format("{0}", selection15)});
#line 149
  testRunner.And("In PXS00101 I select proxy details Menu:", ((string)(null)), table35, "And ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportType",
                        "PrintHolderID",
                        "ReportSeq",
                        "VotingLevel",
                        "Res1to20Dsc1",
                        "Res1to20Dsc2"});
            table36.AddRow(new string[] {
                        string.Format("{0}", reportType),
                        string.Format("{0}", printHolderID),
                        string.Format("{0}", reportSeq),
                        string.Format("{0}", votingLevel),
                        string.Format("{0}", res1To20Dsc1),
                        string.Format("{0}", res1To20Dsc2)});
#line 153
  testRunner.And("In PXS00500 I run Pre Close Registration Report:", ((string)(null)), table36, "And ");
#line 156
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection1"});
            table37.AddRow(new string[] {
                        string.Format("{0}", selection16)});
#line 157
  testRunner.And("In PXS00101 I select proxy details Menu:", ((string)(null)), table37, "And ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "PasswordInput"});
            table38.AddRow(new string[] {
                        string.Format("{0}", passwordInput)});
#line 161
  testRunner.And("In PXS00103 I continue with the following details:", ((string)(null)), table38, "And ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection1"});
            table39.AddRow(new string[] {
                        string.Format("{0}", selection17)});
#line 164
  testRunner.And("In PXS00101 I select proxy details Menu:", ((string)(null)), table39, "And ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportType",
                        "PrintHolderID",
                        "ReportSeq",
                        "VotingLevel",
                        "Res1to20Dsc1",
                        "Res1to20Dsc2",
                        "VoteInd"});
            table40.AddRow(new string[] {
                        string.Format("{0}", reportTypeP),
                        string.Format("{0}", printHolderIDP),
                        string.Format("{0}", reportSeqP),
                        string.Format("{0}", votingLevelP),
                        string.Format("{0}", res1To20Dsc1P),
                        string.Format("{0}", res1To20Dsc2P),
                        string.Format("{0}", voteIndP)});
#line 168
  testRunner.And("In PXS00500 I run Post Close Registration Report:", ((string)(null)), table40, "And ");
#line 171
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case Proxy End to End -PST TO POLL")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("Proxy_System")]
        [NUnit.Framework.TestCaseAttribute("Test1", "CPU_AUTO", "PX", "4", "P", "PUP", "PRU", "N", "Y", "Y", "Y", "Y", "PVE", "V", "N", "5", "50", "50", "50", "50", "50", "50", "50", "", "PVE", "V", "A", "", "100", "100", "100", "100", "100", "100", "S", "MS LECDE YIQII A\'PAOGHF", "PR", "F", "Y", "A", "", "", "", "Y", null)]
        public virtual void TestCaseProxyEndToEnd_PSTTOPOLL(
                    string test, 
                    string cOY, 
                    string selection5, 
                    string meetingNumber, 
                    string action2, 
                    string selection18, 
                    string selection19, 
                    string consolidate, 
                    string r1, 
                    string r2, 
                    string c1, 
                    string c2, 
                    string selection20, 
                    string entryType, 
                    string searchType, 
                    string atdNumber, 
                    string for01, 
                    string for02, 
                    string against01, 
                    string against02, 
                    string abstain01, 
                    string abstain02, 
                    string action4, 
                    string search, 
                    string selection20A, 
                    string entryTypeA, 
                    string searchTypeA, 
                    string atdNumberA, 
                    string for01A, 
                    string for02A, 
                    string against01A, 
                    string against02A, 
                    string abstain01A, 
                    string abstain02A, 
                    string action4A, 
                    string searchA, 
                    string selection22, 
                    string reportTypePR, 
                    string printHolderIDPR, 
                    string reportSeqPR, 
                    string votingLevelPR, 
                    string res1To20Dsc1PR, 
                    string res1To20Dsc2PR, 
                    string voteIndPR, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "Proxy_System"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case Proxy End to End -PST TO POLL", @__tags);
#line 344
this.ScenarioSetup(scenarioInfo);
#line 345
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 346
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection",
                        "MeetingNumber",
                        "Action"});
            table41.AddRow(new string[] {
                        string.Format("{0}", selection5),
                        string.Format("{0}", meetingNumber),
                        string.Format("{0}", action2)});
#line 347
  testRunner.And("In PXS00106 I Go to Proxy Meeting:", ((string)(null)), table41, "And ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection1"});
            table42.AddRow(new string[] {
                        string.Format("{0}", selection18)});
#line 350
  testRunner.And("In PXS00101 I select proxy details Menu:", ((string)(null)), table42, "And ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection",
                        "Consolidate",
                        "R1",
                        "R2",
                        "C1",
                        "C2"});
            table43.AddRow(new string[] {
                        string.Format("{0}", selection19),
                        string.Format("{0}", consolidate),
                        string.Format("{0}", r1),
                        string.Format("{0}", r2),
                        string.Format("{0}", c1),
                        string.Format("{0}", c2)});
#line 354
  testRunner.And("In PXS00301 I Change Poll Resolution Update:", ((string)(null)), table43, "And ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection",
                        "EntryType",
                        "SearchType",
                        "AtdNumber",
                        "For01",
                        "For02",
                        "Against01",
                        "Against02",
                        "Abstain01",
                        "Abstain02",
                        "Action",
                        "Search"});
            table44.AddRow(new string[] {
                        string.Format("{0}", selection20),
                        string.Format("{0}", entryType),
                        string.Format("{0}", searchType),
                        string.Format("{0}", atdNumber),
                        string.Format("{0}", for01),
                        string.Format("{0}", for02),
                        string.Format("{0}", against01),
                        string.Format("{0}", against02),
                        string.Format("{0}", abstain01),
                        string.Format("{0}", abstain02),
                        string.Format("{0}", action4),
                        string.Format("{0}", search)});
#line 358
  testRunner.And("In PXS03600 I Add Poll Voting Entry:", ((string)(null)), table44, "And ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection",
                        "EntryType",
                        "SearchType",
                        "AtdNumber",
                        "For01",
                        "For02",
                        "Against01",
                        "Against02",
                        "Abstain01",
                        "Abstain02",
                        "Action",
                        "Search"});
            table45.AddRow(new string[] {
                        string.Format("{0}", selection20A),
                        string.Format("{0}", entryTypeA),
                        string.Format("{0}", searchTypeA),
                        string.Format("{0}", atdNumberA),
                        string.Format("{0}", for01A),
                        string.Format("{0}", for02A),
                        string.Format("{0}", against01A),
                        string.Format("{0}", against02A),
                        string.Format("{0}", abstain01A),
                        string.Format("{0}", abstain02A),
                        string.Format("{0}", action4A),
                        string.Format("{0}", searchA)});
#line 362
  testRunner.And("In PXS03600 I Add Poll Voting Entry:", ((string)(null)), table45, "And ");
#line 365
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection1"});
            table46.AddRow(new string[] {
                        string.Format("{0}", selection22)});
#line 366
  testRunner.And("In PXS00101 I select proxy details Menu:", ((string)(null)), table46, "And ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportType",
                        "PrintHolderID",
                        "ReportSeq",
                        "VotingLevel",
                        "Res1to20Dsc1",
                        "Res1to20Dsc2",
                        "VoteInd"});
            table47.AddRow(new string[] {
                        string.Format("{0}", reportTypePR),
                        string.Format("{0}", printHolderIDPR),
                        string.Format("{0}", reportSeqPR),
                        string.Format("{0}", votingLevelPR),
                        string.Format("{0}", res1To20Dsc1PR),
                        string.Format("{0}", res1To20Dsc2PR),
                        string.Format("{0}", voteIndPR)});
#line 370
  testRunner.And("In PXS00500 I run Post Close Registration Report:", ((string)(null)), table47, "And ");
#line 373
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 21044: 05_CDP Change/Delete Proxy")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("Proxy_System")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        [NUnit.Framework.CategoryAttribute("SmokeTestChangeProxy")]
        [NUnit.Framework.TestCaseAttribute("Test1", "CPU_AUTO", "PX", "1", "P", "CDP", "20", "", "C", "P", "CHM", "60", "SEC", "", "F", "A", "20", "", "D", "", "", "", "", "", "", "", null)]
        public virtual void TestCase2104405_CDPChangeDeleteProxy(
                    string test, 
                    string cOY, 
                    string selection5, 
                    string meetingNumber, 
                    string action2, 
                    string selection2, 
                    string refNum, 
                    string holderIdentifier, 
                    string action, 
                    string sPFlag, 
                    string noma, 
                    string perA, 
                    string nomb, 
                    string failingA, 
                    string r01, 
                    string r02, 
                    string refNumD, 
                    string holderIdentifierD, 
                    string actionD, 
                    string sPFlagD, 
                    string nomaD, 
                    string perAD, 
                    string nombD, 
                    string failingAD, 
                    string r01D, 
                    string r02D, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "Proxy_System",
                    "FullSmokeTest",
                    "SmokeTestChangeProxy"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 21044: 05_CDP Change/Delete Proxy", @__tags);
#line 384
this.ScenarioSetup(scenarioInfo);
#line 385
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 386
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection",
                        "MeetingNumber",
                        "Action"});
            table48.AddRow(new string[] {
                        string.Format("{0}", selection5),
                        string.Format("{0}", meetingNumber),
                        string.Format("{0}", action2)});
#line 387
  testRunner.And("In PXS00106 I Go to Proxy Meeting:", ((string)(null)), table48, "And ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection1"});
            table49.AddRow(new string[] {
                        string.Format("{0}", selection2)});
#line 390
  testRunner.And("In PXS00101 I select proxy details Menu:", ((string)(null)), table49, "And ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "RefNum",
                        "HolderIdentifier",
                        "Action",
                        "SPFlag",
                        "Noma",
                        "PerA",
                        "Nomb",
                        "FailingA",
                        "R01",
                        "R02"});
            table50.AddRow(new string[] {
                        string.Format("{0}", refNum),
                        string.Format("{0}", holderIdentifier),
                        string.Format("{0}", action),
                        string.Format("{0}", sPFlag),
                        string.Format("{0}", noma),
                        string.Format("{0}", perA),
                        string.Format("{0}", nomb),
                        string.Format("{0}", failingA),
                        string.Format("{0}", r01),
                        string.Format("{0}", r02)});
#line 394
  testRunner.And("In PXS02101 I Update Proxy transaction maintenance details:", ((string)(null)), table50, "And ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "RefNum",
                        "HolderIdentifier",
                        "Action",
                        "SPFlag",
                        "Noma",
                        "PerA",
                        "Nomb",
                        "FailingA",
                        "R01",
                        "R02"});
            table51.AddRow(new string[] {
                        string.Format("{0}", refNumD),
                        string.Format("{0}", holderIdentifierD),
                        string.Format("{0}", actionD),
                        string.Format("{0}", sPFlagD),
                        string.Format("{0}", nomaD),
                        string.Format("{0}", perAD),
                        string.Format("{0}", nombD),
                        string.Format("{0}", failingAD),
                        string.Format("{0}", r01D),
                        string.Format("{0}", r02D)});
#line 398
  testRunner.And("In PXS02101 I Update Proxy transaction maintenance details:", ((string)(null)), table51, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 29210: 04_DEL Delete Shareholder/Nominated Person Entry")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("Proxy_System")]
        [NUnit.Framework.TestCaseAttribute("Test1", "CPU_AUTO", "PX", "6", "P", "AET", "DEL", "1", "S", "Y", "2", "N", "3", "V", null)]
        public virtual void TestCase2921004_DELDeleteShareholderNominatedPersonEntry(string test, string cOY, string selection5, string meetingNumber, string action2, string selection1, string selection2, string attendeeNumber, string attendeeType, string confirm, string attendeeNumberN, string attendeeTypeN, string attendeeNumberV, string attendeeTypeV, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "Proxy_System"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 29210: 04_DEL Delete Shareholder/Nominated Person Entry", @__tags);
#line 488
this.ScenarioSetup(scenarioInfo);
#line 489
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 490
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection",
                        "MeetingNumber",
                        "Action"});
            table52.AddRow(new string[] {
                        string.Format("{0}", selection5),
                        string.Format("{0}", meetingNumber),
                        string.Format("{0}", action2)});
#line 491
  testRunner.And("In PXS00106 I Go to Proxy Meeting:", ((string)(null)), table52, "And ");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection1"});
            table53.AddRow(new string[] {
                        string.Format("{0}", selection1)});
#line 494
  testRunner.And("In PXS00101 I select proxy details Menu:", ((string)(null)), table53, "And ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table54.AddRow(new string[] {
                        string.Format("{0}", selection2)});
#line 497
  testRunner.And("In PXS01500 I continue with the following details:", ((string)(null)), table54, "And ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "AttendeeNumber",
                        "AttendeeType",
                        "Confirm"});
            table55.AddRow(new string[] {
                        string.Format("{0}", attendeeNumber),
                        string.Format("{0}", attendeeType),
                        string.Format("{0}", confirm)});
#line 501
  testRunner.And("In PXS01512 I Delete Entry:", ((string)(null)), table55, "And ");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table56.AddRow(new string[] {
                        string.Format("{0}", selection2)});
#line 504
  testRunner.And("In PXS01500 I continue with the following details:", ((string)(null)), table56, "And ");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "AttendeeNumber",
                        "AttendeeType",
                        "Confirm"});
            table57.AddRow(new string[] {
                        string.Format("{0}", attendeeNumberN),
                        string.Format("{0}", attendeeTypeN),
                        string.Format("{0}", confirm)});
#line 508
  testRunner.And("In PXS01512 I Delete Entry:", ((string)(null)), table57, "And ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table58.AddRow(new string[] {
                        string.Format("{0}", selection2)});
#line 511
  testRunner.And("In PXS01500 I continue with the following details:", ((string)(null)), table58, "And ");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "AttendeeNumber",
                        "AttendeeType",
                        "Confirm"});
            table59.AddRow(new string[] {
                        string.Format("{0}", attendeeNumberV),
                        string.Format("{0}", attendeeTypeV),
                        string.Format("{0}", confirm)});
#line 515
  testRunner.And("In PXS01512 I Delete Entry:", ((string)(null)), table59, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 29361: 03_DPE Delete Poll Entry")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("Proxy_System")]
        [NUnit.Framework.TestCaseAttribute("Test1", "CPU_AUTO", "PX", "7", "P", "PUP", "DPE", "A", "S", "A\'PAOGHF", "U", null)]
        public virtual void TestCase2936103_DPEDeletePollEntry(string test, string cOY, string selection5, string meetingNumber, string action2, string selection1, string selection2, string searchType, string action, string search, string action1, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "Proxy_System"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 29361: 03_DPE Delete Poll Entry", @__tags);
#line 525
this.ScenarioSetup(scenarioInfo);
#line 526
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 527
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection",
                        "MeetingNumber",
                        "Action"});
            table60.AddRow(new string[] {
                        string.Format("{0}", selection5),
                        string.Format("{0}", meetingNumber),
                        string.Format("{0}", action2)});
#line 528
 testRunner.And("In PXS00106 I Go to Proxy Meeting:", ((string)(null)), table60, "And ");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection1"});
            table61.AddRow(new string[] {
                        string.Format("{0}", selection1)});
#line 531
 testRunner.And("In PXS00101 I select proxy details Menu:", ((string)(null)), table61, "And ");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table62.AddRow(new string[] {
                        string.Format("{0}", selection2)});
#line 534
 testRunner.And("In PXS00102 I continue with the following details:", ((string)(null)), table62, "And ");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "SearchType"});
            table63.AddRow(new string[] {
                        string.Format("{0}", searchType)});
#line 538
 testRunner.And("In PXS03800 I continue with the following details:", ((string)(null)), table63, "And ");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "Action",
                        "Search",
                        "Action1"});
            table64.AddRow(new string[] {
                        string.Format("{0}", action),
                        string.Format("{0}", search),
                        string.Format("{0}", action1)});
#line 541
 testRunner.And("In PXS03801 I continue with the following details:", ((string)(null)), table64, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
