// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SCRIPAU.Automation.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("EN_E_FilteringActions")]
    public partial class EN_E_FilteringActionsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "EN_E_FilteringActions.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "EN_E_FilteringActions", "Ensure EN_E_FilteringActions functionality covered", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Set_Remove Class Filter")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("EN_E_FilteringActions")]
        public virtual void Set_RemoveClassFilter()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Set_Remove Class Filter", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "CPU_AUTO",
                        "EN_E_FilteringActions"});
#line 8
this.ScenarioSetup(scenarioInfo);
#line 10
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 11
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "Action",
                        "SCF"});
            table1.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 13
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table1, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "Class Code1",
                        "Y"});
            table2.AddRow(new string[] {
                        "Class Code2",
                        "Y"});
            table2.AddRow(new string[] {
                        "Class Code3",
                        "Y"});
            table2.AddRow(new string[] {
                        "Class Code4",
                        "Y"});
#line 17
  testRunner.And("In ENS01028 I set class code filter as below:", ((string)(null)), table2, "And ");
#line 23
 testRunner.Then("In ENS01090 class code filter display as \"* NOTICE 03/03/2014 *                  " +
                    "  *Class: AC1|ARC|ARU|ASA\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "Action",
                        "RCF"});
            table3.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 24
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table3, "When ");
#line 28
 testRunner.Then("In ENS01090 class code filter display as \"* NOTICE 03/03/2014 *\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Set_Remove Holder Filter")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("EN_E_FilteringActions")]
        public virtual void Set_RemoveHolderFilter()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Set_Remove Holder Filter", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "CPU_AUTO",
                        "EN_E_FilteringActions"});
#line 34
this.ScenarioSetup(scenarioInfo);
#line 36
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 37
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 38
  testRunner.And("I go to the Enquiry system for \"I0100007550\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table4.AddRow(new string[] {
                        "Action",
                        "SHF"});
            table4.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 39
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table5.AddRow(new string[] {
                        "Deceased",
                        "Y"});
            table5.AddRow(new string[] {
                        "Plan Election",
                        "Y"});
            table5.AddRow(new string[] {
                        "Joint Holdings",
                        "Y"});
            table5.AddRow(new string[] {
                        "Designated Account",
                        "Y"});
            table5.AddRow(new string[] {
                        "Notings",
                        "Y"});
#line 43
  testRunner.And("In ENS010HF I set holder filter as below:", ((string)(null)), table5, "And ");
#line 50
  testRunner.Then("In ENS01001 class code filter display as \"*Holder Filter: FAIL*\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table6.AddRow(new string[] {
                        "Action",
                        "RHF"});
            table6.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 51
  testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table6, "When ");
#line 55
  testRunner.Then("In ENS01001 class code filter display as \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Restrict Run Range")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("EN_E_FilteringActions")]
        public virtual void RestrictRunRange()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Restrict Run Range", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "CPU_AUTO",
                        "EN_E_FilteringActions"});
#line 61
this.ScenarioSetup(scenarioInfo);
#line 63
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 64
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 65
  testRunner.And("I go to Holder Enquiry System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table7.AddRow(new string[] {
                        "Action",
                        "RRUN"});
            table7.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 66
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table7, "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table8.AddRow(new string[] {
                        "Run From",
                        "4390"});
            table8.AddRow(new string[] {
                        "Run To",
                        "4398"});
#line 70
  testRunner.And("In ENS01029 I set Run Range Filter as below:", ((string)(null)), table8, "And ");
#line 74
  testRunner.And("I go to the Enquiry system for \"I0100007550\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
 testRunner.Then("In ENS01013 I should not see Register details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
