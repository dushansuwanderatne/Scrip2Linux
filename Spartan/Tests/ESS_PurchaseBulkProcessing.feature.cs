// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SCRIPAU.Automation.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ESS_PurchaseBulkProcessing")]
    public partial class ESS_PurchaseBulkProcessingFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ESS_PurchaseBulkProcessing.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ESS_PurchaseBulkProcessing", "In order to avoid silly mistakes\r\nAs a math idiot\r\nI want to be told the sum of t" +
                    "wo numbers", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Deferred Plan Manual Purchase EP")]
        [NUnit.Framework.CategoryAttribute("ESSPurchase")]
        [NUnit.Framework.TestCaseAttribute("Test1", "CPU_AUTO", "DEP", "EP", "13A", "ASA", "67350", "01/07/2013", "2500", "", "M", "", "", "", "", "I0100019183", "Partnership", "2500.00", "Unchanged", "Unchanged", "MAN", "67351", "M", "1", "1", "C", "", "02/07/2013", "250.00", "", "", "Part", "AUD", "RPH", "M", "1", "1", "", "", "", "", "", "", "B", "AWP", "DEP", "CBS", "B", "03/07/2013", "03/07/2013", "1000", "10.00000", "10.00000", "", "", "", "", "", "", "B", "03/07/2013", "10", "A", "A", "C", "C", "12/07/2013", "", "1", "250.00", "25", "250.00", "250.00", "", "", "", "", "GCB", "AUD", "03/07/2013", "03/07/2013", "", "AUD", "03/07/2013", "Y", "", "", "", "", "", "", "", "", "", "", "DP13A", "5555", "NDF", "1", "", "N", "FBS", "S", "", "", "", "", "", "", "", "", "", "", "", "", "S", "", "BTQ", "", "SETTLED", "1", "250.00", "Settled", "1", "25", "25", "250.00", "250.00", "ESAWP", "BPE", "P", "PURCHASE", "25", "250.00", "M", "", "", "", "C", "/DEP/13A", "DEP/DEFERRED EMP SHARE PLAN - AU", "13A 20130712EP   12/07/13            25", "**** Total for 20130712EP                 25", "", "", "", "", "", "", "", null)]
        public virtual void DeferredPlanManualPurchaseEP(
                    string test, 
                    string cOY, 
                    string classCode, 
                    string selection, 
                    string registerCode, 
                    string selection1, 
                    string transNumber, 
                    string transDate, 
                    string totalMoney, 
                    string totalUnits, 
                    string paymentFrequency, 
                    string residualInd, 
                    string grantCountry, 
                    string retentionDate, 
                    string taxRetentionDate, 
                    string searchName, 
                    string registerType1, 
                    string money1, 
                    string retentionDate1, 
                    string taxRetentionDate1, 
                    string selection2, 
                    string transNumberM, 
                    string paymentFrequencyM, 
                    string accumPeriod, 
                    string paymentNumber, 
                    string paymentStatus, 
                    string eol01901ReceiptCurrency, 
                    string paymentDate, 
                    string paymentAmount, 
                    string employerPymtAmt, 
                    string eol01901ExchangeRate, 
                    string registerType, 
                    string eol01902EmpBaseCurr, 
                    string selection3, 
                    string payFreq1, 
                    string accumPeriodFrom1, 
                    string accumPeriodTO1, 
                    string payFreq2, 
                    string accumPeriodFrom2, 
                    string accumPeriodTO2, 
                    string payFreq3, 
                    string accumPeriodFrom3, 
                    string accumPeriodTO3, 
                    string releaseMode, 
                    string confirmRelType, 
                    string bulkCode, 
                    string selection4, 
                    string menuSelection, 
                    string settlementDate, 
                    string tradeDate, 
                    string tradeTime, 
                    string indicativePrice, 
                    string finalPrice, 
                    string chargeCode1, 
                    string chargeCode2, 
                    string chargeCode3, 
                    string chargeDesc1, 
                    string chargeDesc2, 
                    string chargeDesc3, 
                    string confirmStatus, 
                    string confirmSettlement, 
                    string confirmFinalPrice, 
                    string menuSelection1, 
                    string confirmStatus1, 
                    string menuSelection2, 
                    string confirmStatus2, 
                    string awardDate, 
                    string registerCode1, 
                    string totalCount, 
                    string totalUnits1, 
                    string unitsCalc, 
                    string costOFShares, 
                    string totalCost, 
                    string residueKept, 
                    string residueRefunded, 
                    string taxONCharges, 
                    string accumCharges, 
                    string selection5, 
                    string bulkCurrency, 
                    string settlementFrom, 
                    string settlementTO, 
                    string bulkID1, 
                    string currency1, 
                    string settlementDate1, 
                    string processBulkInd1, 
                    string bulkID2, 
                    string currency2, 
                    string settlementDate2, 
                    string processBulkInd2, 
                    string bulkID3, 
                    string currency3, 
                    string settlementDate3, 
                    string processBulkInd3, 
                    string homeBankDesc, 
                    string ausTraceAccount, 
                    string paymentAccount, 
                    string orderNO, 
                    string ident, 
                    string nbrBulks, 
                    string paymentDate1, 
                    string addConvRateInd, 
                    string selection6, 
                    string menuSelection3, 
                    string settlementDateS, 
                    string tradeDateS, 
                    string tradeTimeS, 
                    string indicativePriceS, 
                    string finalPriceS, 
                    string registerCode1S, 
                    string chargeCode1S, 
                    string chargeCode2S, 
                    string chargeCode3S, 
                    string chargeDesc1S, 
                    string chargeDesc2S, 
                    string chargeDesc3S, 
                    string confirmStatus3, 
                    string awardDateS, 
                    string selection7, 
                    string bulkID, 
                    string status, 
                    string transCount, 
                    string transTotal, 
                    string statusDesc, 
                    string bulkCount, 
                    string bulkUnits, 
                    string transUnits, 
                    string bulkMoney, 
                    string transMoney, 
                    string tranTypeParent, 
                    string selection8, 
                    string bulkType, 
                    string bulkTypeDesc, 
                    string bulkTransUnits, 
                    string bulkTransMoney, 
                    string actionM, 
                    string bankType, 
                    string bankCode, 
                    string accountNumber, 
                    string action, 
                    string locateArgument, 
                    string certificateLine1, 
                    string certificateLine2, 
                    string certificateLine3, 
                    string certificateLine4, 
                    string certificateLine5, 
                    string certificateLine6, 
                    string certificateLine7, 
                    string certificateLine8, 
                    string certificateLine9, 
                    string certificateLine10, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ESSPurchase"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Deferred Plan Manual Purchase EP", @__tags);
#line 7
this.ScenarioSetup(scenarioInfo);
#line 9
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
  testRunner.And("In EOL00113 I click on \"awards\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table1.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 14
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table1, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table2.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 17
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table3.AddRow(new string[] {
                        string.Format("{0}", selection1)});
#line 20
  testRunner.And("In EOL00114 I continue with the following values:", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "TransDate",
                        "TotalMoney",
                        "TotalUnits",
                        "PaymentFrequency",
                        "ResidualInd",
                        "GrantCountry",
                        "RetentionDate",
                        "TaxRetentionDate",
                        "SearchName"});
            table4.AddRow(new string[] {
                        string.Format("{0}", transNumber),
                        string.Format("{0}", transDate),
                        string.Format("{0}", totalMoney),
                        string.Format("{0}", totalUnits),
                        string.Format("{0}", paymentFrequency),
                        string.Format("{0}", residualInd),
                        string.Format("{0}", grantCountry),
                        string.Format("{0}", retentionDate),
                        string.Format("{0}", taxRetentionDate),
                        string.Format("{0}", searchName)});
#line 23
  testRunner.And("In EOL00901 I Add Savings amount as:", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterType1",
                        "Money1",
                        "PaymentFrequency",
                        "RetentionDate",
                        "TaxRetentionDate"});
            table5.AddRow(new string[] {
                        string.Format("{0}", registerType1),
                        string.Format("{0}", money1),
                        string.Format("{0}", paymentFrequency),
                        string.Format("{0}", retentionDate1),
                        string.Format("{0}", taxRetentionDate1)});
#line 26
  testRunner.And("In EOL00905 I continue with the following values:", ((string)(null)), table5, "And ");
#line 29
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
  testRunner.And("In EOL00113 I click on \"payments\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table6.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 33
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table6, "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table7.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 36
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table7, "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table8.AddRow(new string[] {
                        string.Format("{0}", selection2)});
#line 39
  testRunner.And("In EOL00120 I continue with the following values:", ((string)(null)), table8, "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "PaymentFrequency",
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentStatus",
                        "Eol01901ReceiptCurrency",
                        "PaymentDate",
                        "PaymentAmount",
                        "EmployerPymtAmt",
                        "Eol01901ExchangeRate",
                        "SearchName"});
            table9.AddRow(new string[] {
                        string.Format("{0}", transNumberM),
                        string.Format("{0}", paymentFrequencyM),
                        string.Format("{0}", accumPeriod),
                        string.Format("{0}", paymentNumber),
                        string.Format("{0}", paymentStatus),
                        string.Format("{0}", eol01901ReceiptCurrency),
                        string.Format("{0}", paymentDate),
                        string.Format("{0}", paymentAmount),
                        string.Format("{0}", employerPymtAmt),
                        string.Format("{0}", eol01901ExchangeRate),
                        string.Format("{0}", searchName)});
#line 42
  testRunner.And("In EOL01901 I Add Manual Payment as:", ((string)(null)), table9, "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentFrequency",
                        "RegisterType",
                        "PaymentAmount",
                        "Eol01902EmpBaseCurr"});
            table10.AddRow(new string[] {
                        string.Format("{0}", accumPeriod),
                        string.Format("{0}", paymentNumber),
                        string.Format("{0}", paymentFrequency),
                        string.Format("{0}", registerType),
                        string.Format("{0}", paymentAmount),
                        string.Format("{0}", eol01902EmpBaseCurr)});
#line 45
  testRunner.And("In EOL01902 I verify the following values:", ((string)(null)), table10, "And ");
#line 48
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
  testRunner.And("In EOL00113 I click on \"releases\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table11.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 52
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table11, "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table12.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 55
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table12, "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table13.AddRow(new string[] {
                        string.Format("{0}", selection3)});
#line 58
  testRunner.And("In EOL00106 I continue with the following values:", ((string)(null)), table13, "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "PayFreq1",
                        "AccumPeriodFrom1",
                        "AccumPeriodTO1",
                        "PayFreq2",
                        "AccumPeriodFrom2",
                        "AccumPeriodTO2",
                        "PayFreq3",
                        "AccumPeriodFrom3",
                        "AccumPeriodTO3",
                        "ReleaseMode"});
            table14.AddRow(new string[] {
                        string.Format("{0}", payFreq1),
                        string.Format("{0}", accumPeriodFrom1),
                        string.Format("{0}", accumPeriodTO1),
                        string.Format("{0}", payFreq2),
                        string.Format("{0}", accumPeriodFrom2),
                        string.Format("{0}", accumPeriodTO2),
                        string.Format("{0}", payFreq3),
                        string.Format("{0}", accumPeriodFrom3),
                        string.Format("{0}", accumPeriodTO3),
                        string.Format("{0}", releaseMode)});
#line 61
  testRunner.And("In EOLBLK05 I continue with the following values:", ((string)(null)), table14, "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmRelType"});
            table15.AddRow(new string[] {
                        string.Format("{0}", confirmRelType)});
#line 64
  testRunner.And("In EOLBLK04 I continue with the following values:", ((string)(null)), table15, "And ");
#line 67
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table16.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 68
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table16, "And ");
#line 71
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkCode"});
            table17.AddRow(new string[] {
                        string.Format("{0}", bulkCode)});
#line 73
  testRunner.And("I go to the Bulk Processing System and select Bulk code as:", ((string)(null)), table17, "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table18.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 76
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table18, "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table19.AddRow(new string[] {
                        string.Format("{0}", menuSelection)});
#line 79
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table19, "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table20.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus)});
#line 83
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table20, "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table21.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 86
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table21, "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table22.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 89
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table22, "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table23.AddRow(new string[] {
                        string.Format("{0}", menuSelection1)});
#line 92
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table23, "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table24.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode1),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus1)});
#line 95
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table24, "And ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table25.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 98
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table25, "And ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table26.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 101
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table26, "And ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table27.AddRow(new string[] {
                        string.Format("{0}", menuSelection2)});
#line 104
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table27, "And ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table28.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode1),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus2),
                        string.Format("{0}", awardDate)});
#line 107
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table28, "And ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table29.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 110
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table29, "And ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "TotalCount",
                        "TotalUnits",
                        "SettlementDate",
                        "FinalPrice",
                        "UnitsCalc",
                        "CostOFShares",
                        "TotalCost",
                        "ResidueKept",
                        "ResidueRefunded",
                        "TaxONCharges",
                        "AccumCharges"});
            table30.AddRow(new string[] {
                        string.Format("{0}", totalCount),
                        string.Format("{0}", totalUnits1),
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", unitsCalc),
                        string.Format("{0}", costOFShares),
                        string.Format("{0}", totalCost),
                        string.Format("{0}", residueKept),
                        string.Format("{0}", residueRefunded),
                        string.Format("{0}", taxONCharges),
                        string.Format("{0}", accumCharges)});
#line 113
  testRunner.And("In OLSB0404 I verify the following values:", ((string)(null)), table30, "And ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table31.AddRow(new string[] {
                        string.Format("{0}", selection5)});
#line 116
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table31, "And ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkCurrency",
                        "SettlementFrom",
                        "SettlementTO"});
            table32.AddRow(new string[] {
                        string.Format("{0}", bulkCurrency),
                        string.Format("{0}", settlementFrom),
                        string.Format("{0}", settlementTO)});
#line 120
  testRunner.And("In OLSB0105 I continue with the following values:", ((string)(null)), table32, "And ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID1",
                        "Currency1",
                        "SettlementDate1",
                        "ProcessBulkInd1",
                        "BulkID2",
                        "Currency2",
                        "SettlementDate2",
                        "ProcessBulkInd2",
                        "BulkID3",
                        "Currency3",
                        "SettlementDate3",
                        "ProcessBulkInd3"});
            table33.AddRow(new string[] {
                        string.Format("{0}", bulkID1),
                        string.Format("{0}", currency1),
                        string.Format("{0}", settlementDate1),
                        string.Format("{0}", processBulkInd1),
                        string.Format("{0}", bulkID2),
                        string.Format("{0}", currency2),
                        string.Format("{0}", settlementDate2),
                        string.Format("{0}", processBulkInd2),
                        string.Format("{0}", bulkID3),
                        string.Format("{0}", currency3),
                        string.Format("{0}", settlementDate3),
                        string.Format("{0}", processBulkInd3)});
#line 123
  testRunner.And("In OLSB0106 I continue with the following values:", ((string)(null)), table33, "And ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "HomeBankDesc",
                        "AusTraceAccount"});
            table34.AddRow(new string[] {
                        string.Format("{0}", homeBankDesc),
                        string.Format("{0}", ausTraceAccount)});
#line 126
  testRunner.And("In OLSB0104 I verify the following values:", ((string)(null)), table34, "And ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "PaymentAccount",
                        "OrderNO",
                        "Ident",
                        "NbrBulks",
                        "SettlementFrom",
                        "SettlementTO",
                        "PaymentDate",
                        "AddConvRateInd"});
            table35.AddRow(new string[] {
                        string.Format("{0}", paymentAccount),
                        string.Format("{0}", orderNO),
                        string.Format("{0}", ident),
                        string.Format("{0}", nbrBulks),
                        string.Format("{0}", settlementFrom),
                        string.Format("{0}", settlementTO),
                        string.Format("{0}", paymentDate1),
                        string.Format("{0}", addConvRateInd)});
#line 129
  testRunner.And("In OLSB0101 I continue with the following values:", ((string)(null)), table35, "And ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table36.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 132
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table36, "And ");
#line 135
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table37.AddRow(new string[] {
                        string.Format("{0}", selection6)});
#line 137
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table37, "And ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table38.AddRow(new string[] {
                        string.Format("{0}", menuSelection3)});
#line 140
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table38, "And ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table39.AddRow(new string[] {
                        string.Format("{0}", settlementDateS),
                        string.Format("{0}", tradeDateS),
                        string.Format("{0}", tradeTimeS),
                        string.Format("{0}", indicativePriceS),
                        string.Format("{0}", finalPriceS),
                        string.Format("{0}", registerCode1S),
                        string.Format("{0}", chargeCode1S),
                        string.Format("{0}", chargeCode2S),
                        string.Format("{0}", chargeCode3S),
                        string.Format("{0}", chargeDesc1S),
                        string.Format("{0}", chargeDesc2S),
                        string.Format("{0}", chargeDesc3S),
                        string.Format("{0}", confirmStatus3),
                        string.Format("{0}", awardDateS)});
#line 143
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table39, "And ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table40.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 146
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table40, "And ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table41.AddRow(new string[] {
                        string.Format("{0}", selection7)});
#line 150
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table41, "And ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "Status",
                        "RegisterCode",
                        "TransCount",
                        "TransTotal",
                        "SettlementDate"});
            table42.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", status),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", transCount),
                        string.Format("{0}", transTotal),
                        string.Format("{0}", settlementDate3)});
#line 153
  testRunner.And("In BLKSCH01 I continue with the following values:", ((string)(null)), table42, "And ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "StatusDesc",
                        "BulkCount",
                        "BulkUnits",
                        "TransUnits",
                        "BulkMoney",
                        "TransMoney",
                        "TranTypeParent",
                        "HolderID",
                        "RegisterCode"});
            table43.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", statusDesc),
                        string.Format("{0}", bulkCount),
                        string.Format("{0}", bulkUnits),
                        string.Format("{0}", transUnits),
                        string.Format("{0}", bulkMoney),
                        string.Format("{0}", transMoney),
                        string.Format("{0}", tranTypeParent),
                        string.Format("{0}", searchName),
                        string.Format("{0}", registerCode)});
#line 156
  testRunner.And("In OLSB1010 I verify the following values:", ((string)(null)), table43, "And ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table44.AddRow(new string[] {
                        string.Format("{0}", selection8)});
#line 160
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table44, "And ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "Status",
                        "RegisterCode",
                        "TransCount",
                        "TransTotal",
                        "SettlementDate"});
            table45.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", status),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", transCount),
                        string.Format("{0}", transTotal),
                        string.Format("{0}", settlementDate3)});
#line 163
  testRunner.And("In BLKSCH01 I continue with the following values:", ((string)(null)), table45, "And ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkType",
                        "BulkTypeDesc",
                        "ClassCode",
                        "TotalCount",
                        "BulkTransUnits",
                        "BulkTransMoney",
                        "RegisterCode",
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "ActionM"});
            table46.AddRow(new string[] {
                        string.Format("{0}", bulkType),
                        string.Format("{0}", bulkTypeDesc),
                        string.Format("{0}", classCode),
                        string.Format("{0}", totalCount),
                        string.Format("{0}", bulkTransUnits),
                        string.Format("{0}", bulkTransMoney),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", actionM)});
#line 166
  testRunner.And("In BLKSCH02 I verify the following values:", ((string)(null)), table46, "And ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "FinalPrice",
                        "UnitsCalc",
                        "CostOFShares",
                        "TotalCost",
                        "ResidueKept",
                        "ResidueRefunded",
                        "PaymentAccount",
                        "BankType",
                        "BankCode",
                        "AccountNumber"});
            table47.AddRow(new string[] {
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", unitsCalc),
                        string.Format("{0}", costOFShares),
                        string.Format("{0}", totalCost),
                        string.Format("{0}", residueKept),
                        string.Format("{0}", residueRefunded),
                        string.Format("{0}", paymentAccount),
                        string.Format("{0}", bankType),
                        string.Format("{0}", bankCode),
                        string.Format("{0}", accountNumber)});
#line 169
  testRunner.And("In BLKSCH03 I verify the following values:", ((string)(null)), table47, "And ");
#line 172
  testRunner.And("I Escape to the Main Menu from Bulk Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 174
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 175
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table48.AddRow(new string[] {
                        string.Format("{0}", certificateLine1),
                        string.Format("{0}", certificateLine2),
                        string.Format("{0}", certificateLine3),
                        string.Format("{0}", certificateLine4),
                        string.Format("{0}", certificateLine5),
                        string.Format("{0}", certificateLine6),
                        string.Format("{0}", certificateLine7),
                        string.Format("{0}", certificateLine8),
                        string.Format("{0}", certificateLine9),
                        string.Format("{0}", certificateLine10)});
#line 176
 testRunner.Then("In ENS01012 I should see Register details as:", ((string)(null)), table48, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Exempt Plan Manual Purchase EP")]
        [NUnit.Framework.CategoryAttribute("ESSPurchase")]
        [NUnit.Framework.TestCaseAttribute("Test1", "CPU_AUTO", "EXA", "EP", "13A", "ASA", "67355", "01/07/2013", "2500", "", "M", "", "", "", "", "I0100019035", "Partnership", "2500.00", "Unchanged", "Unchanged", "MAN", "67356", "M", "1", "1", "C", "", "02/07/2013", "250.00", "", "", "Part", "AUD", "RPH", "M", "1", "1", "", "", "", "", "", "", "B", "AWP", "EXP", "CBS", "B", "03/07/2013", "03/07/2013", "1000", "10.00000", "10.00000", "", "", "", "", "", "", "B", "03/07/2013", "10", "A", "A", "C", "C", "12/07/2013", "", "1", "250.00", "25", "250.00", "250.00", "", "", "", "", "GCB", "AUD", "03/07/2013", "03/07/2013", "", "AUD", "03/07/2013", "Y", "", "", "", "", "", "", "", "", "", "", "EXA13", "5555", "NDF", "1", "", "N", "FBS", "S", "", "", "", "", "", "", "", "", "", "", "", "", "S", "", "BTQ", "", "SETTLED", "1", "250.00", "Settled", "1", "25", "25", "250.00", "250.00", "ESAWP", "BPE", "P", "PURCHASE", "25", "250.00", "M", "WBC", "033-033", "55665566", "C", "/EXA/13A", "EXA/EXEMPT EMP SHARE PLAN - AU", "13A 20130712EP   12/07/13            25", "**** Total for 20130712EP                 25", "", "", "", "", "", "", "", null)]
        public virtual void ExemptPlanManualPurchaseEP(
                    string test, 
                    string cOY, 
                    string classCode, 
                    string selection, 
                    string registerCode, 
                    string selection1, 
                    string transNumber, 
                    string transDate, 
                    string totalMoney, 
                    string totalUnits, 
                    string paymentFrequency, 
                    string residualInd, 
                    string grantCountry, 
                    string retentionDate, 
                    string taxRetentionDate, 
                    string searchName, 
                    string registerType1, 
                    string money1, 
                    string retentionDate1, 
                    string taxRetentionDate1, 
                    string selection2, 
                    string transNumberM, 
                    string paymentFrequencyM, 
                    string accumPeriod, 
                    string paymentNumber, 
                    string paymentStatus, 
                    string eol01901ReceiptCurrency, 
                    string paymentDate, 
                    string paymentAmount, 
                    string employerPymtAmt, 
                    string eol01901ExchangeRate, 
                    string registerType, 
                    string eol01902EmpBaseCurr, 
                    string selection3, 
                    string payFreq1, 
                    string accumPeriodFrom1, 
                    string accumPeriodTO1, 
                    string payFreq2, 
                    string accumPeriodFrom2, 
                    string accumPeriodTO2, 
                    string payFreq3, 
                    string accumPeriodFrom3, 
                    string accumPeriodTO3, 
                    string releaseMode, 
                    string confirmRelType, 
                    string bulkCode, 
                    string selection4, 
                    string menuSelection, 
                    string settlementDate, 
                    string tradeDate, 
                    string tradeTime, 
                    string indicativePrice, 
                    string finalPrice, 
                    string chargeCode1, 
                    string chargeCode2, 
                    string chargeCode3, 
                    string chargeDesc1, 
                    string chargeDesc2, 
                    string chargeDesc3, 
                    string confirmStatus, 
                    string confirmSettlement, 
                    string confirmFinalPrice, 
                    string menuSelection1, 
                    string confirmStatus1, 
                    string menuSelection2, 
                    string confirmStatus2, 
                    string awardDate, 
                    string registerCode1, 
                    string totalCount, 
                    string totalUnits1, 
                    string unitsCalc, 
                    string costOFShares, 
                    string totalCost, 
                    string residueKept, 
                    string residueRefunded, 
                    string taxONCharges, 
                    string accumCharges, 
                    string selection5, 
                    string bulkCurrency, 
                    string settlementFrom, 
                    string settlementTO, 
                    string bulkID1, 
                    string currency1, 
                    string settlementDate1, 
                    string processBulkInd1, 
                    string bulkID2, 
                    string currency2, 
                    string settlementDate2, 
                    string processBulkInd2, 
                    string bulkID3, 
                    string currency3, 
                    string settlementDate3, 
                    string processBulkInd3, 
                    string homeBankDesc, 
                    string ausTraceAccount, 
                    string paymentAccount, 
                    string orderNO, 
                    string ident, 
                    string nbrBulks, 
                    string paymentDate1, 
                    string addConvRateInd, 
                    string selection6, 
                    string menuSelection3, 
                    string settlementDateS, 
                    string tradeDateS, 
                    string tradeTimeS, 
                    string indicativePriceS, 
                    string finalPriceS, 
                    string registerCode1S, 
                    string chargeCode1S, 
                    string chargeCode2S, 
                    string chargeCode3S, 
                    string chargeDesc1S, 
                    string chargeDesc2S, 
                    string chargeDesc3S, 
                    string confirmStatus3, 
                    string awardDateS, 
                    string selection7, 
                    string bulkID, 
                    string status, 
                    string transCount, 
                    string transTotal, 
                    string statusDesc, 
                    string bulkCount, 
                    string bulkUnits, 
                    string transUnits, 
                    string bulkMoney, 
                    string transMoney, 
                    string tranTypeParent, 
                    string selection8, 
                    string bulkType, 
                    string bulkTypeDesc, 
                    string bulkTransUnits, 
                    string bulkTransMoney, 
                    string actionM, 
                    string bankType, 
                    string bankCode, 
                    string accountNumber, 
                    string action, 
                    string locateArgument, 
                    string certificateLine1, 
                    string certificateLine2, 
                    string certificateLine3, 
                    string certificateLine4, 
                    string certificateLine5, 
                    string certificateLine6, 
                    string certificateLine7, 
                    string certificateLine8, 
                    string certificateLine9, 
                    string certificateLine10, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ESSPurchase"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Exempt Plan Manual Purchase EP", @__tags);
#line 187
this.ScenarioSetup(scenarioInfo);
#line 189
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 190
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 191
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 193
  testRunner.And("In EOL00113 I click on \"awards\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table49.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 194
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table49, "And ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table50.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 197
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table50, "And ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table51.AddRow(new string[] {
                        string.Format("{0}", selection1)});
#line 200
  testRunner.And("In EOL00114 I continue with the following values:", ((string)(null)), table51, "And ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "TransDate",
                        "TotalMoney",
                        "TotalUnits",
                        "PaymentFrequency",
                        "ResidualInd",
                        "GrantCountry",
                        "RetentionDate",
                        "TaxRetentionDate",
                        "SearchName"});
            table52.AddRow(new string[] {
                        string.Format("{0}", transNumber),
                        string.Format("{0}", transDate),
                        string.Format("{0}", totalMoney),
                        string.Format("{0}", totalUnits),
                        string.Format("{0}", paymentFrequency),
                        string.Format("{0}", residualInd),
                        string.Format("{0}", grantCountry),
                        string.Format("{0}", retentionDate),
                        string.Format("{0}", taxRetentionDate),
                        string.Format("{0}", searchName)});
#line 203
  testRunner.And("In EOL00901 I Add Savings amount as:", ((string)(null)), table52, "And ");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterType1",
                        "Money1",
                        "PaymentFrequency",
                        "RetentionDate",
                        "TaxRetentionDate"});
            table53.AddRow(new string[] {
                        string.Format("{0}", registerType1),
                        string.Format("{0}", money1),
                        string.Format("{0}", paymentFrequency),
                        string.Format("{0}", retentionDate1),
                        string.Format("{0}", taxRetentionDate1)});
#line 206
  testRunner.And("In EOL00905 I continue with the following values:", ((string)(null)), table53, "And ");
#line 209
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 210
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 212
  testRunner.And("In EOL00113 I click on \"payments\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table54.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 213
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table54, "And ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table55.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 216
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table55, "And ");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table56.AddRow(new string[] {
                        string.Format("{0}", selection2)});
#line 219
  testRunner.And("In EOL00120 I continue with the following values:", ((string)(null)), table56, "And ");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "PaymentFrequency",
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentStatus",
                        "Eol01901ReceiptCurrency",
                        "PaymentDate",
                        "PaymentAmount",
                        "EmployerPymtAmt",
                        "Eol01901ExchangeRate",
                        "SearchName"});
            table57.AddRow(new string[] {
                        string.Format("{0}", transNumberM),
                        string.Format("{0}", paymentFrequencyM),
                        string.Format("{0}", accumPeriod),
                        string.Format("{0}", paymentNumber),
                        string.Format("{0}", paymentStatus),
                        string.Format("{0}", eol01901ReceiptCurrency),
                        string.Format("{0}", paymentDate),
                        string.Format("{0}", paymentAmount),
                        string.Format("{0}", employerPymtAmt),
                        string.Format("{0}", eol01901ExchangeRate),
                        string.Format("{0}", searchName)});
#line 222
  testRunner.And("In EOL01901 I Add Manual Payment as:", ((string)(null)), table57, "And ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentFrequency",
                        "RegisterType",
                        "PaymentAmount",
                        "Eol01902EmpBaseCurr"});
            table58.AddRow(new string[] {
                        string.Format("{0}", accumPeriod),
                        string.Format("{0}", paymentNumber),
                        string.Format("{0}", paymentFrequency),
                        string.Format("{0}", registerType),
                        string.Format("{0}", paymentAmount),
                        string.Format("{0}", eol01902EmpBaseCurr)});
#line 225
  testRunner.And("In EOL01902 I verify the following values:", ((string)(null)), table58, "And ");
#line 228
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 229
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 231
  testRunner.And("In EOL00113 I click on \"releases\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table59.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 232
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table59, "And ");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table60.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 235
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table60, "And ");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table61.AddRow(new string[] {
                        string.Format("{0}", selection3)});
#line 238
  testRunner.And("In EOL00106 I continue with the following values:", ((string)(null)), table61, "And ");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "PayFreq1",
                        "AccumPeriodFrom1",
                        "AccumPeriodTO1",
                        "PayFreq2",
                        "AccumPeriodFrom2",
                        "AccumPeriodTO2",
                        "PayFreq3",
                        "AccumPeriodFrom3",
                        "AccumPeriodTO3",
                        "ReleaseMode"});
            table62.AddRow(new string[] {
                        string.Format("{0}", payFreq1),
                        string.Format("{0}", accumPeriodFrom1),
                        string.Format("{0}", accumPeriodTO1),
                        string.Format("{0}", payFreq2),
                        string.Format("{0}", accumPeriodFrom2),
                        string.Format("{0}", accumPeriodTO2),
                        string.Format("{0}", payFreq3),
                        string.Format("{0}", accumPeriodFrom3),
                        string.Format("{0}", accumPeriodTO3),
                        string.Format("{0}", releaseMode)});
#line 241
  testRunner.And("In EOLBLK05 I continue with the following values:", ((string)(null)), table62, "And ");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmRelType"});
            table63.AddRow(new string[] {
                        string.Format("{0}", confirmRelType)});
#line 244
  testRunner.And("In EOLBLK04 I continue with the following values:", ((string)(null)), table63, "And ");
#line 247
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table64.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 248
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table64, "And ");
#line 251
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkCode"});
            table65.AddRow(new string[] {
                        string.Format("{0}", bulkCode)});
#line 253
  testRunner.And("I go to the Bulk Processing System and select Bulk code as:", ((string)(null)), table65, "And ");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table66.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 256
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table66, "And ");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table67.AddRow(new string[] {
                        string.Format("{0}", menuSelection)});
#line 259
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table67, "And ");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table68.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus)});
#line 263
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table68, "And ");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table69.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 266
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table69, "And ");
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table70.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 269
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table70, "And ");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table71.AddRow(new string[] {
                        string.Format("{0}", menuSelection1)});
#line 272
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table71, "And ");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table72.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode1),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus1)});
#line 275
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table72, "And ");
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table73.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 278
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table73, "And ");
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table74.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 281
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table74, "And ");
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table75.AddRow(new string[] {
                        string.Format("{0}", menuSelection2)});
#line 284
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table75, "And ");
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table76.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode1),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus2),
                        string.Format("{0}", awardDate)});
#line 287
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table76, "And ");
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table77.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 290
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table77, "And ");
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "TotalCount",
                        "TotalUnits",
                        "SettlementDate",
                        "FinalPrice",
                        "UnitsCalc",
                        "CostOFShares",
                        "TotalCost",
                        "ResidueKept",
                        "ResidueRefunded",
                        "TaxONCharges",
                        "AccumCharges"});
            table78.AddRow(new string[] {
                        string.Format("{0}", totalCount),
                        string.Format("{0}", totalUnits1),
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", unitsCalc),
                        string.Format("{0}", costOFShares),
                        string.Format("{0}", totalCost),
                        string.Format("{0}", residueKept),
                        string.Format("{0}", residueRefunded),
                        string.Format("{0}", taxONCharges),
                        string.Format("{0}", accumCharges)});
#line 293
  testRunner.And("In OLSB0404 I verify the following values:", ((string)(null)), table78, "And ");
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table79.AddRow(new string[] {
                        string.Format("{0}", selection5)});
#line 296
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table79, "And ");
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkCurrency",
                        "SettlementFrom",
                        "SettlementTO"});
            table80.AddRow(new string[] {
                        string.Format("{0}", bulkCurrency),
                        string.Format("{0}", settlementFrom),
                        string.Format("{0}", settlementTO)});
#line 300
  testRunner.And("In OLSB0105 I continue with the following values:", ((string)(null)), table80, "And ");
#line hidden
            TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID1",
                        "Currency1",
                        "SettlementDate1",
                        "ProcessBulkInd1",
                        "BulkID2",
                        "Currency2",
                        "SettlementDate2",
                        "ProcessBulkInd2",
                        "BulkID3",
                        "Currency3",
                        "SettlementDate3",
                        "ProcessBulkInd3"});
            table81.AddRow(new string[] {
                        string.Format("{0}", bulkID1),
                        string.Format("{0}", currency1),
                        string.Format("{0}", settlementDate1),
                        string.Format("{0}", processBulkInd1),
                        string.Format("{0}", bulkID2),
                        string.Format("{0}", currency2),
                        string.Format("{0}", settlementDate2),
                        string.Format("{0}", processBulkInd2),
                        string.Format("{0}", bulkID3),
                        string.Format("{0}", currency3),
                        string.Format("{0}", settlementDate3),
                        string.Format("{0}", processBulkInd3)});
#line 303
  testRunner.And("In OLSB0106 I continue with the following values:", ((string)(null)), table81, "And ");
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        "HomeBankDesc",
                        "AusTraceAccount"});
            table82.AddRow(new string[] {
                        string.Format("{0}", homeBankDesc),
                        string.Format("{0}", ausTraceAccount)});
#line 306
  testRunner.And("In OLSB0104 I verify the following values:", ((string)(null)), table82, "And ");
#line hidden
            TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                        "PaymentAccount",
                        "OrderNO",
                        "Ident",
                        "NbrBulks",
                        "SettlementFrom",
                        "SettlementTO",
                        "PaymentDate",
                        "AddConvRateInd"});
            table83.AddRow(new string[] {
                        string.Format("{0}", paymentAccount),
                        string.Format("{0}", orderNO),
                        string.Format("{0}", ident),
                        string.Format("{0}", nbrBulks),
                        string.Format("{0}", settlementFrom),
                        string.Format("{0}", settlementTO),
                        string.Format("{0}", paymentDate1),
                        string.Format("{0}", addConvRateInd)});
#line 309
  testRunner.And("In OLSB0101 I continue with the following values:", ((string)(null)), table83, "And ");
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table84.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 312
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table84, "And ");
#line 315
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table85.AddRow(new string[] {
                        string.Format("{0}", selection6)});
#line 317
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table85, "And ");
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table86.AddRow(new string[] {
                        string.Format("{0}", menuSelection3)});
#line 320
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table86, "And ");
#line hidden
            TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table87.AddRow(new string[] {
                        string.Format("{0}", settlementDateS),
                        string.Format("{0}", tradeDateS),
                        string.Format("{0}", tradeTimeS),
                        string.Format("{0}", indicativePriceS),
                        string.Format("{0}", finalPriceS),
                        string.Format("{0}", registerCode1S),
                        string.Format("{0}", chargeCode1S),
                        string.Format("{0}", chargeCode2S),
                        string.Format("{0}", chargeCode3S),
                        string.Format("{0}", chargeDesc1S),
                        string.Format("{0}", chargeDesc2S),
                        string.Format("{0}", chargeDesc3S),
                        string.Format("{0}", confirmStatus3),
                        string.Format("{0}", awardDateS)});
#line 323
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table87, "And ");
#line hidden
            TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table88.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 326
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table88, "And ");
#line hidden
            TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table89.AddRow(new string[] {
                        string.Format("{0}", selection7)});
#line 330
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table89, "And ");
#line hidden
            TechTalk.SpecFlow.Table table90 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "Status",
                        "RegisterCode",
                        "TransCount",
                        "TransTotal",
                        "SettlementDate"});
            table90.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", status),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", transCount),
                        string.Format("{0}", transTotal),
                        string.Format("{0}", settlementDate3)});
#line 333
  testRunner.And("In BLKSCH01 I continue with the following values:", ((string)(null)), table90, "And ");
#line hidden
            TechTalk.SpecFlow.Table table91 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "StatusDesc",
                        "BulkCount",
                        "BulkUnits",
                        "TransUnits",
                        "BulkMoney",
                        "TransMoney",
                        "TranTypeParent",
                        "HolderID",
                        "RegisterCode"});
            table91.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", statusDesc),
                        string.Format("{0}", bulkCount),
                        string.Format("{0}", bulkUnits),
                        string.Format("{0}", transUnits),
                        string.Format("{0}", bulkMoney),
                        string.Format("{0}", transMoney),
                        string.Format("{0}", tranTypeParent),
                        string.Format("{0}", searchName),
                        string.Format("{0}", registerCode)});
#line 336
  testRunner.And("In OLSB1010 I verify the following values:", ((string)(null)), table91, "And ");
#line hidden
            TechTalk.SpecFlow.Table table92 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table92.AddRow(new string[] {
                        string.Format("{0}", selection8)});
#line 340
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table92, "And ");
#line hidden
            TechTalk.SpecFlow.Table table93 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "Status",
                        "RegisterCode",
                        "TransCount",
                        "TransTotal",
                        "SettlementDate"});
            table93.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", status),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", transCount),
                        string.Format("{0}", transTotal),
                        string.Format("{0}", settlementDate3)});
#line 343
  testRunner.And("In BLKSCH01 I continue with the following values:", ((string)(null)), table93, "And ");
#line hidden
            TechTalk.SpecFlow.Table table94 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkType",
                        "BulkTypeDesc",
                        "ClassCode",
                        "TotalCount",
                        "BulkTransUnits",
                        "BulkTransMoney",
                        "RegisterCode",
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "ActionM"});
            table94.AddRow(new string[] {
                        string.Format("{0}", bulkType),
                        string.Format("{0}", bulkTypeDesc),
                        string.Format("{0}", classCode),
                        string.Format("{0}", totalCount),
                        string.Format("{0}", bulkTransUnits),
                        string.Format("{0}", bulkTransMoney),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", actionM)});
#line 346
  testRunner.And("In BLKSCH02 I verify the following values:", ((string)(null)), table94, "And ");
#line hidden
            TechTalk.SpecFlow.Table table95 = new TechTalk.SpecFlow.Table(new string[] {
                        "FinalPrice",
                        "UnitsCalc",
                        "CostOFShares",
                        "TotalCost",
                        "ResidueKept",
                        "ResidueRefunded",
                        "PaymentAccount",
                        "BankType",
                        "BankCode",
                        "AccountNumber"});
            table95.AddRow(new string[] {
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", unitsCalc),
                        string.Format("{0}", costOFShares),
                        string.Format("{0}", totalCost),
                        string.Format("{0}", residueKept),
                        string.Format("{0}", residueRefunded),
                        string.Format("{0}", paymentAccount),
                        string.Format("{0}", bankType),
                        string.Format("{0}", bankCode),
                        string.Format("{0}", accountNumber)});
#line 349
  testRunner.And("In BLKSCH03 I verify the following values:", ((string)(null)), table95, "And ");
#line 352
  testRunner.And("I Escape to the Main Menu from Bulk Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 354
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 355
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table96 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table96.AddRow(new string[] {
                        string.Format("{0}", certificateLine1),
                        string.Format("{0}", certificateLine2),
                        string.Format("{0}", certificateLine3),
                        string.Format("{0}", certificateLine4),
                        string.Format("{0}", certificateLine5),
                        string.Format("{0}", certificateLine6),
                        string.Format("{0}", certificateLine7),
                        string.Format("{0}", certificateLine8),
                        string.Format("{0}", certificateLine9),
                        string.Format("{0}", certificateLine10)});
#line 356
 testRunner.Then("In ENS01012 I should see Register details as:", ((string)(null)), table96, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Deferred Plan Manual Purchase EB/EN")]
        [NUnit.Framework.CategoryAttribute("ESSPurchase")]
        [NUnit.Framework.TestCaseAttribute("Test1", "CPU_AUTO", "DMA", "EB", "14A", "ASA", "67360", "01/07/2014", "1000", "", "Y", "", "", "", "", "I0100007444", "Bonus", "1000.00", "Unchanged", "Unchanged", "MAN", "67361", "Y", "1", "1", "C", "", "01/07/2014", "1000.00", "", "", "Bonus", "AUD", "RPH", "Y", "1", "1", "", "", "", "", "", "", "B", "ABO", "ABO", "CBS", "B", "02/07/2014", "02/07/2014", "1000", "10.00000", "10.00000", "", "", "", "", "", "", "B", "02/07/2014", "10", "A", "A", "C", "C", "01/07/2014", "", "1", "1000.00", "100", "1000.00", "1000.00", "", "", "", "", "GCB", "AUD", "02/07/2014", "02/07/2014", "", "AUD", "02/07/2014", "Y", "", "", "", "", "", "", "", "", "", "", "DMA14", "5555", "NDF", "1", "", "N", "FBS", "S", "", "", "", "", "", "", "", "", "", "", "", "", "S", "", "BTQ", "", "SETTLED", "1", "1000.00", "Settled", "1", "100", "100", "1000.00", "1000.00", "ESABO", "BPE", "P", "PURCHASE", "100", "1000.00", "M", "WBC", "033-033", "55665566", "C", "/DMA/14A", "DMA/AMP COMPANY EB/EN", "14A 20140701EB   01/07/14           100", "**** Total for 20140701EB                100", "14A 20140701EN   01/07/14             0", "**** Total for 20140701EN                  0", "", "", "", "", "", "/PHA/14A", "PHA/PHANTOM ESAP MATCHING", "14A 20140701EN   01/07/14           100", "**** Total for 20140701EN                100", "", "", "", "", "", "", "", null)]
        public virtual void DeferredPlanManualPurchaseEBEN(
                    string test, 
                    string cOY, 
                    string classCode, 
                    string selection, 
                    string registerCode, 
                    string selection1, 
                    string transNumber, 
                    string transDate, 
                    string totalMoney, 
                    string totalUnits, 
                    string paymentFrequency, 
                    string residualInd, 
                    string grantCountry, 
                    string retentionDate, 
                    string taxRetentionDate, 
                    string searchName, 
                    string registerType1, 
                    string money1, 
                    string retentionDate1, 
                    string taxRetentionDate1, 
                    string selection2, 
                    string transNumberM, 
                    string paymentFrequencyM, 
                    string accumPeriod, 
                    string paymentNumber, 
                    string paymentStatus, 
                    string eol01901ReceiptCurrency, 
                    string paymentDate, 
                    string paymentAmount, 
                    string employerPymtAmt, 
                    string eol01901ExchangeRate, 
                    string registerType, 
                    string eol01902EmpBaseCurr, 
                    string selection3, 
                    string payFreq1, 
                    string accumPeriodFrom1, 
                    string accumPeriodTO1, 
                    string payFreq2, 
                    string accumPeriodFrom2, 
                    string accumPeriodTO2, 
                    string payFreq3, 
                    string accumPeriodFrom3, 
                    string accumPeriodTO3, 
                    string releaseMode, 
                    string confirmRelType, 
                    string bulkCode, 
                    string selection4, 
                    string menuSelection, 
                    string settlementDate, 
                    string tradeDate, 
                    string tradeTime, 
                    string indicativePrice, 
                    string finalPrice, 
                    string chargeCode1, 
                    string chargeCode2, 
                    string chargeCode3, 
                    string chargeDesc1, 
                    string chargeDesc2, 
                    string chargeDesc3, 
                    string confirmStatus, 
                    string confirmSettlement, 
                    string confirmFinalPrice, 
                    string menuSelection1, 
                    string confirmStatus1, 
                    string menuSelection2, 
                    string confirmStatus2, 
                    string awardDate, 
                    string registerCode1, 
                    string totalCount, 
                    string totalUnits1, 
                    string unitsCalc, 
                    string costOFShares, 
                    string totalCost, 
                    string residueKept, 
                    string residueRefunded, 
                    string taxONCharges, 
                    string accumCharges, 
                    string selection5, 
                    string bulkCurrency, 
                    string settlementFrom, 
                    string settlementTO, 
                    string bulkID1, 
                    string currency1, 
                    string settlementDate1, 
                    string processBulkInd1, 
                    string bulkID2, 
                    string currency2, 
                    string settlementDate2, 
                    string processBulkInd2, 
                    string bulkID3, 
                    string currency3, 
                    string settlementDate3, 
                    string processBulkInd3, 
                    string homeBankDesc, 
                    string ausTraceAccount, 
                    string paymentAccount, 
                    string orderNO, 
                    string ident, 
                    string nbrBulks, 
                    string paymentDate1, 
                    string addConvRateInd, 
                    string selection6, 
                    string menuSelection3, 
                    string settlementDateS, 
                    string tradeDateS, 
                    string tradeTimeS, 
                    string indicativePriceS, 
                    string finalPriceS, 
                    string registerCode1S, 
                    string chargeCode1S, 
                    string chargeCode2S, 
                    string chargeCode3S, 
                    string chargeDesc1S, 
                    string chargeDesc2S, 
                    string chargeDesc3S, 
                    string confirmStatus3, 
                    string awardDateS, 
                    string selection7, 
                    string bulkID, 
                    string status, 
                    string transCount, 
                    string transTotal, 
                    string statusDesc, 
                    string bulkCount, 
                    string bulkUnits, 
                    string transUnits, 
                    string bulkMoney, 
                    string transMoney, 
                    string tranTypeParent, 
                    string selection8, 
                    string bulkType, 
                    string bulkTypeDesc, 
                    string bulkTransUnits, 
                    string bulkTransMoney, 
                    string actionM, 
                    string bankType, 
                    string bankCode, 
                    string accountNumber, 
                    string action, 
                    string locateArgument, 
                    string certificateLine1, 
                    string certificateLine2, 
                    string certificateLine3, 
                    string certificateLine4, 
                    string certificateLine5, 
                    string certificateLine6, 
                    string certificateLine7, 
                    string certificateLine8, 
                    string certificateLine9, 
                    string certificateLine10, 
                    string locateArgument1, 
                    string certificateLine1P, 
                    string certificateLine2P, 
                    string certificateLine3P, 
                    string certificateLine4P, 
                    string certificateLine5P, 
                    string certificateLine6P, 
                    string certificateLine7P, 
                    string certificateLine8P, 
                    string certificateLine9P, 
                    string certificateLine10P, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ESSPurchase"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Deferred Plan Manual Purchase EB/EN", @__tags);
#line 367
this.ScenarioSetup(scenarioInfo);
#line 369
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 370
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 371
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 373
  testRunner.And("In EOL00113 I click on \"awards\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table97 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table97.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 374
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table97, "And ");
#line hidden
            TechTalk.SpecFlow.Table table98 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table98.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 377
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table98, "And ");
#line hidden
            TechTalk.SpecFlow.Table table99 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table99.AddRow(new string[] {
                        string.Format("{0}", selection1)});
#line 380
  testRunner.And("In EOL00114 I continue with the following values:", ((string)(null)), table99, "And ");
#line hidden
            TechTalk.SpecFlow.Table table100 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "TransDate",
                        "TotalMoney",
                        "TotalUnits",
                        "PaymentFrequency",
                        "ResidualInd",
                        "GrantCountry",
                        "RetentionDate",
                        "TaxRetentionDate",
                        "SearchName"});
            table100.AddRow(new string[] {
                        string.Format("{0}", transNumber),
                        string.Format("{0}", transDate),
                        string.Format("{0}", totalMoney),
                        string.Format("{0}", totalUnits),
                        string.Format("{0}", paymentFrequency),
                        string.Format("{0}", residualInd),
                        string.Format("{0}", grantCountry),
                        string.Format("{0}", retentionDate),
                        string.Format("{0}", taxRetentionDate),
                        string.Format("{0}", searchName)});
#line 383
  testRunner.And("In EOL00901 I Add Savings amount as:", ((string)(null)), table100, "And ");
#line hidden
            TechTalk.SpecFlow.Table table101 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterType1",
                        "Money1",
                        "PaymentFrequency",
                        "RetentionDate",
                        "TaxRetentionDate"});
            table101.AddRow(new string[] {
                        string.Format("{0}", registerType1),
                        string.Format("{0}", money1),
                        string.Format("{0}", paymentFrequency),
                        string.Format("{0}", retentionDate1),
                        string.Format("{0}", taxRetentionDate1)});
#line 386
  testRunner.And("In EOL00905 I continue with the following values:", ((string)(null)), table101, "And ");
#line 389
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 390
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 392
  testRunner.And("In EOL00113 I click on \"payments\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table102 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table102.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 393
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table102, "And ");
#line hidden
            TechTalk.SpecFlow.Table table103 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table103.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 396
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table103, "And ");
#line hidden
            TechTalk.SpecFlow.Table table104 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table104.AddRow(new string[] {
                        string.Format("{0}", selection2)});
#line 399
  testRunner.And("In EOL00120 I continue with the following values:", ((string)(null)), table104, "And ");
#line hidden
            TechTalk.SpecFlow.Table table105 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "PaymentFrequency",
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentStatus",
                        "Eol01901ReceiptCurrency",
                        "PaymentDate",
                        "PaymentAmount",
                        "EmployerPymtAmt",
                        "Eol01901ExchangeRate",
                        "SearchName"});
            table105.AddRow(new string[] {
                        string.Format("{0}", transNumberM),
                        string.Format("{0}", paymentFrequencyM),
                        string.Format("{0}", accumPeriod),
                        string.Format("{0}", paymentNumber),
                        string.Format("{0}", paymentStatus),
                        string.Format("{0}", eol01901ReceiptCurrency),
                        string.Format("{0}", paymentDate),
                        string.Format("{0}", paymentAmount),
                        string.Format("{0}", employerPymtAmt),
                        string.Format("{0}", eol01901ExchangeRate),
                        string.Format("{0}", searchName)});
#line 402
  testRunner.And("In EOL01901 I Add Manual Payment as:", ((string)(null)), table105, "And ");
#line hidden
            TechTalk.SpecFlow.Table table106 = new TechTalk.SpecFlow.Table(new string[] {
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentFrequency",
                        "RegisterType",
                        "PaymentAmount",
                        "Eol01902EmpBaseCurr"});
            table106.AddRow(new string[] {
                        string.Format("{0}", accumPeriod),
                        string.Format("{0}", paymentNumber),
                        string.Format("{0}", paymentFrequency),
                        string.Format("{0}", registerType),
                        string.Format("{0}", paymentAmount),
                        string.Format("{0}", eol01902EmpBaseCurr)});
#line 405
  testRunner.And("In EOL01902 I verify the following values:", ((string)(null)), table106, "And ");
#line 408
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 409
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 411
  testRunner.And("In EOL00113 I click on \"releases\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table107 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table107.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 412
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table107, "And ");
#line hidden
            TechTalk.SpecFlow.Table table108 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table108.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 415
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table108, "And ");
#line hidden
            TechTalk.SpecFlow.Table table109 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table109.AddRow(new string[] {
                        string.Format("{0}", selection3)});
#line 418
  testRunner.And("In EOL00106 I continue with the following values:", ((string)(null)), table109, "And ");
#line hidden
            TechTalk.SpecFlow.Table table110 = new TechTalk.SpecFlow.Table(new string[] {
                        "PayFreq1",
                        "AccumPeriodFrom1",
                        "AccumPeriodTO1",
                        "PayFreq2",
                        "AccumPeriodFrom2",
                        "AccumPeriodTO2",
                        "PayFreq3",
                        "AccumPeriodFrom3",
                        "AccumPeriodTO3",
                        "ReleaseMode"});
            table110.AddRow(new string[] {
                        string.Format("{0}", payFreq1),
                        string.Format("{0}", accumPeriodFrom1),
                        string.Format("{0}", accumPeriodTO1),
                        string.Format("{0}", payFreq2),
                        string.Format("{0}", accumPeriodFrom2),
                        string.Format("{0}", accumPeriodTO2),
                        string.Format("{0}", payFreq3),
                        string.Format("{0}", accumPeriodFrom3),
                        string.Format("{0}", accumPeriodTO3),
                        string.Format("{0}", releaseMode)});
#line 421
  testRunner.And("In EOLBLK05 I continue with the following values:", ((string)(null)), table110, "And ");
#line hidden
            TechTalk.SpecFlow.Table table111 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmRelType"});
            table111.AddRow(new string[] {
                        string.Format("{0}", confirmRelType)});
#line 424
  testRunner.And("In EOLBLK04 I continue with the following values:", ((string)(null)), table111, "And ");
#line 427
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table112 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table112.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 428
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table112, "And ");
#line 431
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table113 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkCode"});
            table113.AddRow(new string[] {
                        string.Format("{0}", bulkCode)});
#line 433
  testRunner.And("I go to the Bulk Processing System and select Bulk code as:", ((string)(null)), table113, "And ");
#line hidden
            TechTalk.SpecFlow.Table table114 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table114.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 436
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table114, "And ");
#line hidden
            TechTalk.SpecFlow.Table table115 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table115.AddRow(new string[] {
                        string.Format("{0}", menuSelection)});
#line 439
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table115, "And ");
#line hidden
            TechTalk.SpecFlow.Table table116 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table116.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus)});
#line 443
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table116, "And ");
#line hidden
            TechTalk.SpecFlow.Table table117 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table117.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 446
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table117, "And ");
#line hidden
            TechTalk.SpecFlow.Table table118 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table118.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 449
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table118, "And ");
#line hidden
            TechTalk.SpecFlow.Table table119 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table119.AddRow(new string[] {
                        string.Format("{0}", menuSelection1)});
#line 452
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table119, "And ");
#line hidden
            TechTalk.SpecFlow.Table table120 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table120.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode1),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus1)});
#line 455
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table120, "And ");
#line hidden
            TechTalk.SpecFlow.Table table121 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table121.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 458
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table121, "And ");
#line hidden
            TechTalk.SpecFlow.Table table122 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table122.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 461
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table122, "And ");
#line hidden
            TechTalk.SpecFlow.Table table123 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table123.AddRow(new string[] {
                        string.Format("{0}", menuSelection2)});
#line 464
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table123, "And ");
#line hidden
            TechTalk.SpecFlow.Table table124 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table124.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode1),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus2),
                        string.Format("{0}", awardDate)});
#line 467
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table124, "And ");
#line hidden
            TechTalk.SpecFlow.Table table125 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table125.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 470
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table125, "And ");
#line hidden
            TechTalk.SpecFlow.Table table126 = new TechTalk.SpecFlow.Table(new string[] {
                        "TotalCount",
                        "TotalUnits",
                        "SettlementDate",
                        "FinalPrice",
                        "UnitsCalc",
                        "CostOFShares",
                        "TotalCost",
                        "ResidueKept",
                        "ResidueRefunded",
                        "TaxONCharges",
                        "AccumCharges"});
            table126.AddRow(new string[] {
                        string.Format("{0}", totalCount),
                        string.Format("{0}", totalUnits1),
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", unitsCalc),
                        string.Format("{0}", costOFShares),
                        string.Format("{0}", totalCost),
                        string.Format("{0}", residueKept),
                        string.Format("{0}", residueRefunded),
                        string.Format("{0}", taxONCharges),
                        string.Format("{0}", accumCharges)});
#line 473
  testRunner.And("In OLSB0404 I verify the following values:", ((string)(null)), table126, "And ");
#line hidden
            TechTalk.SpecFlow.Table table127 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table127.AddRow(new string[] {
                        string.Format("{0}", selection5)});
#line 476
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table127, "And ");
#line hidden
            TechTalk.SpecFlow.Table table128 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkCurrency",
                        "SettlementFrom",
                        "SettlementTO"});
            table128.AddRow(new string[] {
                        string.Format("{0}", bulkCurrency),
                        string.Format("{0}", settlementFrom),
                        string.Format("{0}", settlementTO)});
#line 480
  testRunner.And("In OLSB0105 I continue with the following values:", ((string)(null)), table128, "And ");
#line hidden
            TechTalk.SpecFlow.Table table129 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID1",
                        "Currency1",
                        "SettlementDate1",
                        "ProcessBulkInd1",
                        "BulkID2",
                        "Currency2",
                        "SettlementDate2",
                        "ProcessBulkInd2",
                        "BulkID3",
                        "Currency3",
                        "SettlementDate3",
                        "ProcessBulkInd3"});
            table129.AddRow(new string[] {
                        string.Format("{0}", bulkID1),
                        string.Format("{0}", currency1),
                        string.Format("{0}", settlementDate1),
                        string.Format("{0}", processBulkInd1),
                        string.Format("{0}", bulkID2),
                        string.Format("{0}", currency2),
                        string.Format("{0}", settlementDate2),
                        string.Format("{0}", processBulkInd2),
                        string.Format("{0}", bulkID3),
                        string.Format("{0}", currency3),
                        string.Format("{0}", settlementDate3),
                        string.Format("{0}", processBulkInd3)});
#line 483
  testRunner.And("In OLSB0106 I continue with the following values:", ((string)(null)), table129, "And ");
#line hidden
            TechTalk.SpecFlow.Table table130 = new TechTalk.SpecFlow.Table(new string[] {
                        "HomeBankDesc",
                        "AusTraceAccount"});
            table130.AddRow(new string[] {
                        string.Format("{0}", homeBankDesc),
                        string.Format("{0}", ausTraceAccount)});
#line 486
  testRunner.And("In OLSB0104 I verify the following values:", ((string)(null)), table130, "And ");
#line hidden
            TechTalk.SpecFlow.Table table131 = new TechTalk.SpecFlow.Table(new string[] {
                        "PaymentAccount",
                        "OrderNO",
                        "Ident",
                        "NbrBulks",
                        "SettlementFrom",
                        "SettlementTO",
                        "PaymentDate",
                        "AddConvRateInd"});
            table131.AddRow(new string[] {
                        string.Format("{0}", paymentAccount),
                        string.Format("{0}", orderNO),
                        string.Format("{0}", ident),
                        string.Format("{0}", nbrBulks),
                        string.Format("{0}", settlementFrom),
                        string.Format("{0}", settlementTO),
                        string.Format("{0}", paymentDate1),
                        string.Format("{0}", addConvRateInd)});
#line 489
  testRunner.And("In OLSB0101 I continue with the following values:", ((string)(null)), table131, "And ");
#line hidden
            TechTalk.SpecFlow.Table table132 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table132.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 492
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table132, "And ");
#line 495
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table133 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table133.AddRow(new string[] {
                        string.Format("{0}", selection6)});
#line 497
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table133, "And ");
#line hidden
            TechTalk.SpecFlow.Table table134 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table134.AddRow(new string[] {
                        string.Format("{0}", menuSelection3)});
#line 500
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table134, "And ");
#line hidden
            TechTalk.SpecFlow.Table table135 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table135.AddRow(new string[] {
                        string.Format("{0}", settlementDateS),
                        string.Format("{0}", tradeDateS),
                        string.Format("{0}", tradeTimeS),
                        string.Format("{0}", indicativePriceS),
                        string.Format("{0}", finalPriceS),
                        string.Format("{0}", registerCode1S),
                        string.Format("{0}", chargeCode1S),
                        string.Format("{0}", chargeCode2S),
                        string.Format("{0}", chargeCode3S),
                        string.Format("{0}", chargeDesc1S),
                        string.Format("{0}", chargeDesc2S),
                        string.Format("{0}", chargeDesc3S),
                        string.Format("{0}", confirmStatus3),
                        string.Format("{0}", awardDateS)});
#line 503
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table135, "And ");
#line hidden
            TechTalk.SpecFlow.Table table136 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table136.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 506
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table136, "And ");
#line hidden
            TechTalk.SpecFlow.Table table137 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table137.AddRow(new string[] {
                        string.Format("{0}", selection7)});
#line 510
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table137, "And ");
#line hidden
            TechTalk.SpecFlow.Table table138 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "Status",
                        "RegisterCode",
                        "TransCount",
                        "TransTotal",
                        "SettlementDate"});
            table138.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", status),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", transCount),
                        string.Format("{0}", transTotal),
                        string.Format("{0}", settlementDate3)});
#line 513
  testRunner.And("In BLKSCH01 I continue with the following values:", ((string)(null)), table138, "And ");
#line hidden
            TechTalk.SpecFlow.Table table139 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "StatusDesc",
                        "BulkCount",
                        "BulkUnits",
                        "TransUnits",
                        "BulkMoney",
                        "TransMoney",
                        "TranTypeParent",
                        "HolderID",
                        "RegisterCode"});
            table139.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", statusDesc),
                        string.Format("{0}", bulkCount),
                        string.Format("{0}", bulkUnits),
                        string.Format("{0}", transUnits),
                        string.Format("{0}", bulkMoney),
                        string.Format("{0}", transMoney),
                        string.Format("{0}", tranTypeParent),
                        string.Format("{0}", searchName),
                        string.Format("{0}", registerCode)});
#line 516
  testRunner.And("In OLSB1010 I verify the following values:", ((string)(null)), table139, "And ");
#line hidden
            TechTalk.SpecFlow.Table table140 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table140.AddRow(new string[] {
                        string.Format("{0}", selection8)});
#line 520
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table140, "And ");
#line hidden
            TechTalk.SpecFlow.Table table141 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "Status",
                        "RegisterCode",
                        "TransCount",
                        "TransTotal",
                        "SettlementDate"});
            table141.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", status),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", transCount),
                        string.Format("{0}", transTotal),
                        string.Format("{0}", settlementDate3)});
#line 523
  testRunner.And("In BLKSCH01 I continue with the following values:", ((string)(null)), table141, "And ");
#line hidden
            TechTalk.SpecFlow.Table table142 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkType",
                        "BulkTypeDesc",
                        "ClassCode",
                        "TotalCount",
                        "BulkTransUnits",
                        "BulkTransMoney",
                        "RegisterCode",
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "ActionM"});
            table142.AddRow(new string[] {
                        string.Format("{0}", bulkType),
                        string.Format("{0}", bulkTypeDesc),
                        string.Format("{0}", classCode),
                        string.Format("{0}", totalCount),
                        string.Format("{0}", bulkTransUnits),
                        string.Format("{0}", bulkTransMoney),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", actionM)});
#line 526
  testRunner.And("In BLKSCH02 I verify the following values:", ((string)(null)), table142, "And ");
#line hidden
            TechTalk.SpecFlow.Table table143 = new TechTalk.SpecFlow.Table(new string[] {
                        "FinalPrice",
                        "UnitsCalc",
                        "CostOFShares",
                        "TotalCost",
                        "ResidueKept",
                        "ResidueRefunded",
                        "PaymentAccount",
                        "BankType",
                        "BankCode",
                        "AccountNumber"});
            table143.AddRow(new string[] {
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", unitsCalc),
                        string.Format("{0}", costOFShares),
                        string.Format("{0}", totalCost),
                        string.Format("{0}", residueKept),
                        string.Format("{0}", residueRefunded),
                        string.Format("{0}", paymentAccount),
                        string.Format("{0}", bankType),
                        string.Format("{0}", bankCode),
                        string.Format("{0}", accountNumber)});
#line 529
  testRunner.And("In BLKSCH03 I verify the following values:", ((string)(null)), table143, "And ");
#line 532
  testRunner.And("I Escape to the Main Menu from Bulk Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 534
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 535
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table144 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table144.AddRow(new string[] {
                        string.Format("{0}", certificateLine1),
                        string.Format("{0}", certificateLine2),
                        string.Format("{0}", certificateLine3),
                        string.Format("{0}", certificateLine4),
                        string.Format("{0}", certificateLine5),
                        string.Format("{0}", certificateLine6),
                        string.Format("{0}", certificateLine7),
                        string.Format("{0}", certificateLine8),
                        string.Format("{0}", certificateLine9),
                        string.Format("{0}", certificateLine10)});
#line 536
 testRunner.Then("In ENS01012 I should see Register details as:", ((string)(null)), table144, "Then ");
#line 539
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table145 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table145.AddRow(new string[] {
                        string.Format("{0}", certificateLine1P),
                        string.Format("{0}", certificateLine2P),
                        string.Format("{0}", certificateLine3P),
                        string.Format("{0}", certificateLine4P),
                        string.Format("{0}", certificateLine5P),
                        string.Format("{0}", certificateLine6P),
                        string.Format("{0}", certificateLine7P),
                        string.Format("{0}", certificateLine8P),
                        string.Format("{0}", certificateLine9P),
                        string.Format("{0}", certificateLine10P)});
#line 540
 testRunner.Then("In ENS01012 I should see Register details as:", ((string)(null)), table145, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Deferred Plan Manual Purchase EP/EM")]
        [NUnit.Framework.CategoryAttribute("ESSPurchase")]
        [NUnit.Framework.TestCaseAttribute("Test1", "CPU_AUTO", "EDP", "EP", "14A", "ASA", "67370", "01/07/2014", "1000", "", "M", "", "", "", "", "I0100007401", "Partnership", "1000.00", "", "", "MAN", "67371", "M", "1", "1", "C", "", "01/07/2014", "1000.00", "", "", "Part", "AUD", "RPH", "M", "1", "1", "", "", "", "", "", "", "B", "AWP", "EDP", "CBS", "B", "02/07/2014", "02/07/2014", "1000", "10.00000", "10.00000", "", "", "", "", "", "", "B", "02/07/2014", "10", "A", "A", "C", "C", "01/07/2014", "", "1", "1000.00", "100", "1000.00", "1000.00", "", "", "", "", "GCB", "AUD", "02/07/2014", "02/07/2014", "", "AUD", "02/07/2014", "Y", "", "", "", "", "", "", "", "", "", "", "EDP14", "5555", "NDF", "1", "", "N", "FBS", "S", "", "", "", "", "", "", "", "", "", "", "", "", "S", "", "BTQ", "", "SETTLED", "1", "1000.00", "Settled", "1", "100", "100", "1000.00", "1000.00", "ESAWP", "BPE", "P", "PURCHASE", "100", "1000.00", "M", "WBC", "033-033", "55665566", "C", "/EDP/14A", "EDP/EXPAT DEFERRED PLAN", "14A 20140701EM   01/07/14            11", "**** Total for 20140701EM                 11", "14A 20140701EP   01/07/14           100", "**** Total for 20140701EP                100", "", "", "", "", "", null)]
        public virtual void DeferredPlanManualPurchaseEPEM(
                    string test, 
                    string cOY, 
                    string classCode, 
                    string selection, 
                    string registerCode, 
                    string selection1, 
                    string transNumber, 
                    string transDate, 
                    string totalMoney, 
                    string totalUnits, 
                    string paymentFrequency, 
                    string residualInd, 
                    string grantCountry, 
                    string retentionDate, 
                    string taxRetentionDate, 
                    string searchName, 
                    string registerType1, 
                    string money1, 
                    string retentionDate1, 
                    string taxRetentionDate1, 
                    string selection2, 
                    string transNumberM, 
                    string paymentFrequencyM, 
                    string accumPeriod, 
                    string paymentNumber, 
                    string paymentStatus, 
                    string eol01901ReceiptCurrency, 
                    string paymentDate, 
                    string paymentAmount, 
                    string employerPymtAmt, 
                    string eol01901ExchangeRate, 
                    string registerType, 
                    string eol01902EmpBaseCurr, 
                    string selection3, 
                    string payFreq1, 
                    string accumPeriodFrom1, 
                    string accumPeriodTO1, 
                    string payFreq2, 
                    string accumPeriodFrom2, 
                    string accumPeriodTO2, 
                    string payFreq3, 
                    string accumPeriodFrom3, 
                    string accumPeriodTO3, 
                    string releaseMode, 
                    string confirmRelType, 
                    string bulkCode, 
                    string selection4, 
                    string menuSelection, 
                    string settlementDate, 
                    string tradeDate, 
                    string tradeTime, 
                    string indicativePrice, 
                    string finalPrice, 
                    string chargeCode1, 
                    string chargeCode2, 
                    string chargeCode3, 
                    string chargeDesc1, 
                    string chargeDesc2, 
                    string chargeDesc3, 
                    string confirmStatus, 
                    string confirmSettlement, 
                    string confirmFinalPrice, 
                    string menuSelection1, 
                    string confirmStatus1, 
                    string menuSelection2, 
                    string confirmStatus2, 
                    string awardDate, 
                    string registerCode1, 
                    string totalCount, 
                    string totalUnits1, 
                    string unitsCalc, 
                    string costOFShares, 
                    string totalCost, 
                    string residueKept, 
                    string residueRefunded, 
                    string taxONCharges, 
                    string accumCharges, 
                    string selection5, 
                    string bulkCurrency, 
                    string settlementFrom, 
                    string settlementTO, 
                    string bulkID1, 
                    string currency1, 
                    string settlementDate1, 
                    string processBulkInd1, 
                    string bulkID2, 
                    string currency2, 
                    string settlementDate2, 
                    string processBulkInd2, 
                    string bulkID3, 
                    string currency3, 
                    string settlementDate3, 
                    string processBulkInd3, 
                    string homeBankDesc, 
                    string ausTraceAccount, 
                    string paymentAccount, 
                    string orderNO, 
                    string ident, 
                    string nbrBulks, 
                    string paymentDate1, 
                    string addConvRateInd, 
                    string selection6, 
                    string menuSelection3, 
                    string settlementDateS, 
                    string tradeDateS, 
                    string tradeTimeS, 
                    string indicativePriceS, 
                    string finalPriceS, 
                    string registerCode1S, 
                    string chargeCode1S, 
                    string chargeCode2S, 
                    string chargeCode3S, 
                    string chargeDesc1S, 
                    string chargeDesc2S, 
                    string chargeDesc3S, 
                    string confirmStatus3, 
                    string awardDateS, 
                    string selection7, 
                    string bulkID, 
                    string status, 
                    string transCount, 
                    string transTotal, 
                    string statusDesc, 
                    string bulkCount, 
                    string bulkUnits, 
                    string transUnits, 
                    string bulkMoney, 
                    string transMoney, 
                    string tranTypeParent, 
                    string selection8, 
                    string bulkType, 
                    string bulkTypeDesc, 
                    string bulkTransUnits, 
                    string bulkTransMoney, 
                    string actionM, 
                    string bankType, 
                    string bankCode, 
                    string accountNumber, 
                    string action, 
                    string locateArgument, 
                    string certificateLine1, 
                    string certificateLine2, 
                    string certificateLine3, 
                    string certificateLine4, 
                    string certificateLine5, 
                    string certificateLine6, 
                    string certificateLine7, 
                    string certificateLine8, 
                    string certificateLine9, 
                    string certificateLine10, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ESSPurchase"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Deferred Plan Manual Purchase EP/EM", @__tags);
#line 550
this.ScenarioSetup(scenarioInfo);
#line 552
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 553
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 554
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 556
  testRunner.And("In EOL00113 I click on \"awards\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table146 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table146.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 557
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table146, "And ");
#line hidden
            TechTalk.SpecFlow.Table table147 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table147.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 560
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table147, "And ");
#line hidden
            TechTalk.SpecFlow.Table table148 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table148.AddRow(new string[] {
                        string.Format("{0}", selection1)});
#line 563
  testRunner.And("In EOL00114 I continue with the following values:", ((string)(null)), table148, "And ");
#line hidden
            TechTalk.SpecFlow.Table table149 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "TransDate",
                        "TotalMoney",
                        "TotalUnits",
                        "PaymentFrequency",
                        "ResidualInd",
                        "GrantCountry",
                        "RetentionDate",
                        "TaxRetentionDate",
                        "SearchName"});
            table149.AddRow(new string[] {
                        string.Format("{0}", transNumber),
                        string.Format("{0}", transDate),
                        string.Format("{0}", totalMoney),
                        string.Format("{0}", totalUnits),
                        string.Format("{0}", paymentFrequency),
                        string.Format("{0}", residualInd),
                        string.Format("{0}", grantCountry),
                        string.Format("{0}", retentionDate),
                        string.Format("{0}", taxRetentionDate),
                        string.Format("{0}", searchName)});
#line 566
  testRunner.And("In EOL00901 I Add Savings amount as:", ((string)(null)), table149, "And ");
#line hidden
            TechTalk.SpecFlow.Table table150 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterType1",
                        "Money1",
                        "PaymentFrequency",
                        "RetentionDate",
                        "TaxRetentionDate"});
            table150.AddRow(new string[] {
                        string.Format("{0}", registerType1),
                        string.Format("{0}", money1),
                        string.Format("{0}", paymentFrequency),
                        string.Format("{0}", retentionDate1),
                        string.Format("{0}", taxRetentionDate1)});
#line 569
  testRunner.And("In EOL00905 I continue with the following values:", ((string)(null)), table150, "And ");
#line 572
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 573
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 575
  testRunner.And("In EOL00113 I click on \"payments\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table151 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table151.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 576
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table151, "And ");
#line hidden
            TechTalk.SpecFlow.Table table152 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table152.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 579
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table152, "And ");
#line hidden
            TechTalk.SpecFlow.Table table153 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table153.AddRow(new string[] {
                        string.Format("{0}", selection2)});
#line 582
  testRunner.And("In EOL00120 I continue with the following values:", ((string)(null)), table153, "And ");
#line hidden
            TechTalk.SpecFlow.Table table154 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "PaymentFrequency",
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentStatus",
                        "Eol01901ReceiptCurrency",
                        "PaymentDate",
                        "PaymentAmount",
                        "EmployerPymtAmt",
                        "Eol01901ExchangeRate",
                        "SearchName"});
            table154.AddRow(new string[] {
                        string.Format("{0}", transNumberM),
                        string.Format("{0}", paymentFrequencyM),
                        string.Format("{0}", accumPeriod),
                        string.Format("{0}", paymentNumber),
                        string.Format("{0}", paymentStatus),
                        string.Format("{0}", eol01901ReceiptCurrency),
                        string.Format("{0}", paymentDate),
                        string.Format("{0}", paymentAmount),
                        string.Format("{0}", employerPymtAmt),
                        string.Format("{0}", eol01901ExchangeRate),
                        string.Format("{0}", searchName)});
#line 585
  testRunner.And("In EOL01901 I Add Manual Payment as:", ((string)(null)), table154, "And ");
#line hidden
            TechTalk.SpecFlow.Table table155 = new TechTalk.SpecFlow.Table(new string[] {
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentFrequency",
                        "RegisterType",
                        "PaymentAmount",
                        "Eol01902EmpBaseCurr"});
            table155.AddRow(new string[] {
                        string.Format("{0}", accumPeriod),
                        string.Format("{0}", paymentNumber),
                        string.Format("{0}", paymentFrequency),
                        string.Format("{0}", registerType),
                        string.Format("{0}", paymentAmount),
                        string.Format("{0}", eol01902EmpBaseCurr)});
#line 588
  testRunner.And("In EOL01902 I verify the following values:", ((string)(null)), table155, "And ");
#line 591
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 592
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 594
  testRunner.And("In EOL00113 I click on \"releases\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table156 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table156.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 595
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table156, "And ");
#line hidden
            TechTalk.SpecFlow.Table table157 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table157.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 598
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table157, "And ");
#line hidden
            TechTalk.SpecFlow.Table table158 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table158.AddRow(new string[] {
                        string.Format("{0}", selection3)});
#line 601
  testRunner.And("In EOL00106 I continue with the following values:", ((string)(null)), table158, "And ");
#line hidden
            TechTalk.SpecFlow.Table table159 = new TechTalk.SpecFlow.Table(new string[] {
                        "PayFreq1",
                        "AccumPeriodFrom1",
                        "AccumPeriodTO1",
                        "PayFreq2",
                        "AccumPeriodFrom2",
                        "AccumPeriodTO2",
                        "PayFreq3",
                        "AccumPeriodFrom3",
                        "AccumPeriodTO3",
                        "ReleaseMode"});
            table159.AddRow(new string[] {
                        string.Format("{0}", payFreq1),
                        string.Format("{0}", accumPeriodFrom1),
                        string.Format("{0}", accumPeriodTO1),
                        string.Format("{0}", payFreq2),
                        string.Format("{0}", accumPeriodFrom2),
                        string.Format("{0}", accumPeriodTO2),
                        string.Format("{0}", payFreq3),
                        string.Format("{0}", accumPeriodFrom3),
                        string.Format("{0}", accumPeriodTO3),
                        string.Format("{0}", releaseMode)});
#line 604
  testRunner.And("In EOLBLK05 I continue with the following values:", ((string)(null)), table159, "And ");
#line hidden
            TechTalk.SpecFlow.Table table160 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmRelType"});
            table160.AddRow(new string[] {
                        string.Format("{0}", confirmRelType)});
#line 607
  testRunner.And("In EOLBLK04 I continue with the following values:", ((string)(null)), table160, "And ");
#line 610
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table161 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table161.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 611
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table161, "And ");
#line 614
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table162 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkCode"});
            table162.AddRow(new string[] {
                        string.Format("{0}", bulkCode)});
#line 616
  testRunner.And("I go to the Bulk Processing System and select Bulk code as:", ((string)(null)), table162, "And ");
#line hidden
            TechTalk.SpecFlow.Table table163 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table163.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 619
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table163, "And ");
#line hidden
            TechTalk.SpecFlow.Table table164 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table164.AddRow(new string[] {
                        string.Format("{0}", menuSelection)});
#line 622
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table164, "And ");
#line hidden
            TechTalk.SpecFlow.Table table165 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table165.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus)});
#line 626
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table165, "And ");
#line hidden
            TechTalk.SpecFlow.Table table166 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table166.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 629
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table166, "And ");
#line hidden
            TechTalk.SpecFlow.Table table167 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table167.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 632
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table167, "And ");
#line hidden
            TechTalk.SpecFlow.Table table168 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table168.AddRow(new string[] {
                        string.Format("{0}", menuSelection1)});
#line 635
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table168, "And ");
#line hidden
            TechTalk.SpecFlow.Table table169 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table169.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode1),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus1)});
#line 638
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table169, "And ");
#line hidden
            TechTalk.SpecFlow.Table table170 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table170.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 641
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table170, "And ");
#line hidden
            TechTalk.SpecFlow.Table table171 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table171.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 644
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table171, "And ");
#line hidden
            TechTalk.SpecFlow.Table table172 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table172.AddRow(new string[] {
                        string.Format("{0}", menuSelection2)});
#line 647
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table172, "And ");
#line hidden
            TechTalk.SpecFlow.Table table173 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table173.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode1),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus2),
                        string.Format("{0}", awardDate)});
#line 650
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table173, "And ");
#line hidden
            TechTalk.SpecFlow.Table table174 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table174.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 653
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table174, "And ");
#line hidden
            TechTalk.SpecFlow.Table table175 = new TechTalk.SpecFlow.Table(new string[] {
                        "TotalCount",
                        "TotalUnits",
                        "SettlementDate",
                        "FinalPrice",
                        "UnitsCalc",
                        "CostOFShares",
                        "TotalCost",
                        "ResidueKept",
                        "ResidueRefunded",
                        "TaxONCharges",
                        "AccumCharges"});
            table175.AddRow(new string[] {
                        string.Format("{0}", totalCount),
                        string.Format("{0}", totalUnits1),
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", unitsCalc),
                        string.Format("{0}", costOFShares),
                        string.Format("{0}", totalCost),
                        string.Format("{0}", residueKept),
                        string.Format("{0}", residueRefunded),
                        string.Format("{0}", taxONCharges),
                        string.Format("{0}", accumCharges)});
#line 656
  testRunner.And("In OLSB0404 I verify the following values:", ((string)(null)), table175, "And ");
#line hidden
            TechTalk.SpecFlow.Table table176 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table176.AddRow(new string[] {
                        string.Format("{0}", selection5)});
#line 659
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table176, "And ");
#line hidden
            TechTalk.SpecFlow.Table table177 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkCurrency",
                        "SettlementFrom",
                        "SettlementTO"});
            table177.AddRow(new string[] {
                        string.Format("{0}", bulkCurrency),
                        string.Format("{0}", settlementFrom),
                        string.Format("{0}", settlementTO)});
#line 663
  testRunner.And("In OLSB0105 I continue with the following values:", ((string)(null)), table177, "And ");
#line hidden
            TechTalk.SpecFlow.Table table178 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID1",
                        "Currency1",
                        "SettlementDate1",
                        "ProcessBulkInd1",
                        "BulkID2",
                        "Currency2",
                        "SettlementDate2",
                        "ProcessBulkInd2",
                        "BulkID3",
                        "Currency3",
                        "SettlementDate3",
                        "ProcessBulkInd3"});
            table178.AddRow(new string[] {
                        string.Format("{0}", bulkID1),
                        string.Format("{0}", currency1),
                        string.Format("{0}", settlementDate1),
                        string.Format("{0}", processBulkInd1),
                        string.Format("{0}", bulkID2),
                        string.Format("{0}", currency2),
                        string.Format("{0}", settlementDate2),
                        string.Format("{0}", processBulkInd2),
                        string.Format("{0}", bulkID3),
                        string.Format("{0}", currency3),
                        string.Format("{0}", settlementDate3),
                        string.Format("{0}", processBulkInd3)});
#line 666
  testRunner.And("In OLSB0106 I continue with the following values:", ((string)(null)), table178, "And ");
#line hidden
            TechTalk.SpecFlow.Table table179 = new TechTalk.SpecFlow.Table(new string[] {
                        "HomeBankDesc",
                        "AusTraceAccount"});
            table179.AddRow(new string[] {
                        string.Format("{0}", homeBankDesc),
                        string.Format("{0}", ausTraceAccount)});
#line 669
  testRunner.And("In OLSB0104 I verify the following values:", ((string)(null)), table179, "And ");
#line hidden
            TechTalk.SpecFlow.Table table180 = new TechTalk.SpecFlow.Table(new string[] {
                        "PaymentAccount",
                        "OrderNO",
                        "Ident",
                        "NbrBulks",
                        "SettlementFrom",
                        "SettlementTO",
                        "PaymentDate",
                        "AddConvRateInd"});
            table180.AddRow(new string[] {
                        string.Format("{0}", paymentAccount),
                        string.Format("{0}", orderNO),
                        string.Format("{0}", ident),
                        string.Format("{0}", nbrBulks),
                        string.Format("{0}", settlementFrom),
                        string.Format("{0}", settlementTO),
                        string.Format("{0}", paymentDate1),
                        string.Format("{0}", addConvRateInd)});
#line 672
  testRunner.And("In OLSB0101 I continue with the following values:", ((string)(null)), table180, "And ");
#line hidden
            TechTalk.SpecFlow.Table table181 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table181.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 675
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table181, "And ");
#line 678
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table182 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table182.AddRow(new string[] {
                        string.Format("{0}", selection6)});
#line 680
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table182, "And ");
#line hidden
            TechTalk.SpecFlow.Table table183 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table183.AddRow(new string[] {
                        string.Format("{0}", menuSelection3)});
#line 683
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table183, "And ");
#line hidden
            TechTalk.SpecFlow.Table table184 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table184.AddRow(new string[] {
                        string.Format("{0}", settlementDateS),
                        string.Format("{0}", tradeDateS),
                        string.Format("{0}", tradeTimeS),
                        string.Format("{0}", indicativePriceS),
                        string.Format("{0}", finalPriceS),
                        string.Format("{0}", registerCode1S),
                        string.Format("{0}", chargeCode1S),
                        string.Format("{0}", chargeCode2S),
                        string.Format("{0}", chargeCode3S),
                        string.Format("{0}", chargeDesc1S),
                        string.Format("{0}", chargeDesc2S),
                        string.Format("{0}", chargeDesc3S),
                        string.Format("{0}", confirmStatus3),
                        string.Format("{0}", awardDateS)});
#line 686
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table184, "And ");
#line hidden
            TechTalk.SpecFlow.Table table185 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table185.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 689
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table185, "And ");
#line hidden
            TechTalk.SpecFlow.Table table186 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table186.AddRow(new string[] {
                        string.Format("{0}", selection7)});
#line 693
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table186, "And ");
#line hidden
            TechTalk.SpecFlow.Table table187 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "Status",
                        "RegisterCode",
                        "TransCount",
                        "TransTotal",
                        "SettlementDate"});
            table187.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", status),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", transCount),
                        string.Format("{0}", transTotal),
                        string.Format("{0}", settlementDate3)});
#line 696
  testRunner.And("In BLKSCH01 I continue with the following values:", ((string)(null)), table187, "And ");
#line hidden
            TechTalk.SpecFlow.Table table188 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "StatusDesc",
                        "BulkCount",
                        "BulkUnits",
                        "TransUnits",
                        "BulkMoney",
                        "TransMoney",
                        "TranTypeParent",
                        "HolderID",
                        "RegisterCode"});
            table188.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", statusDesc),
                        string.Format("{0}", bulkCount),
                        string.Format("{0}", bulkUnits),
                        string.Format("{0}", transUnits),
                        string.Format("{0}", bulkMoney),
                        string.Format("{0}", transMoney),
                        string.Format("{0}", tranTypeParent),
                        string.Format("{0}", searchName),
                        string.Format("{0}", registerCode)});
#line 699
  testRunner.And("In OLSB1010 I verify the following values:", ((string)(null)), table188, "And ");
#line hidden
            TechTalk.SpecFlow.Table table189 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table189.AddRow(new string[] {
                        string.Format("{0}", selection8)});
#line 703
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table189, "And ");
#line hidden
            TechTalk.SpecFlow.Table table190 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "Status",
                        "RegisterCode",
                        "TransCount",
                        "TransTotal",
                        "SettlementDate"});
            table190.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", status),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", transCount),
                        string.Format("{0}", transTotal),
                        string.Format("{0}", settlementDate3)});
#line 706
  testRunner.And("In BLKSCH01 I continue with the following values:", ((string)(null)), table190, "And ");
#line hidden
            TechTalk.SpecFlow.Table table191 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkType",
                        "BulkTypeDesc",
                        "ClassCode",
                        "TotalCount",
                        "BulkTransUnits",
                        "BulkTransMoney",
                        "RegisterCode",
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "ActionM"});
            table191.AddRow(new string[] {
                        string.Format("{0}", bulkType),
                        string.Format("{0}", bulkTypeDesc),
                        string.Format("{0}", classCode),
                        string.Format("{0}", totalCount),
                        string.Format("{0}", bulkTransUnits),
                        string.Format("{0}", bulkTransMoney),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", actionM)});
#line 709
  testRunner.And("In BLKSCH02 I verify the following values:", ((string)(null)), table191, "And ");
#line hidden
            TechTalk.SpecFlow.Table table192 = new TechTalk.SpecFlow.Table(new string[] {
                        "FinalPrice",
                        "UnitsCalc",
                        "CostOFShares",
                        "TotalCost",
                        "ResidueKept",
                        "ResidueRefunded",
                        "PaymentAccount",
                        "BankType",
                        "BankCode",
                        "AccountNumber"});
            table192.AddRow(new string[] {
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", unitsCalc),
                        string.Format("{0}", costOFShares),
                        string.Format("{0}", totalCost),
                        string.Format("{0}", residueKept),
                        string.Format("{0}", residueRefunded),
                        string.Format("{0}", paymentAccount),
                        string.Format("{0}", bankType),
                        string.Format("{0}", bankCode),
                        string.Format("{0}", accountNumber)});
#line 712
  testRunner.And("In BLKSCH03 I verify the following values:", ((string)(null)), table192, "And ");
#line 715
  testRunner.And("I Escape to the Main Menu from Bulk Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 717
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", searchName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 718
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table193 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table193.AddRow(new string[] {
                        string.Format("{0}", certificateLine1),
                        string.Format("{0}", certificateLine2),
                        string.Format("{0}", certificateLine3),
                        string.Format("{0}", certificateLine4),
                        string.Format("{0}", certificateLine5),
                        string.Format("{0}", certificateLine6),
                        string.Format("{0}", certificateLine7),
                        string.Format("{0}", certificateLine8),
                        string.Format("{0}", certificateLine9),
                        string.Format("{0}", certificateLine10)});
#line 719
 testRunner.Then("In ENS01012 I should see Register details as:", ((string)(null)), table193, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Deferred Plan Bulk Purchase EP")]
        [NUnit.Framework.CategoryAttribute("ESSPurchase")]
        [NUnit.Framework.TestCaseAttribute("Test1", "CPU_AUTO", "DEP", "EP", "12A", "INT", "12/07/2012", "ESSUPL_ESS.CSV", "F", "N", "Y", "N", "N", "Y", "N", "N", "Y", "N", "N", "N", "Y", "N", "F", "Y", "", "UPL", "", "C", "Bulk Upload Process", "", "A", "MAN", "67380", "M", "1", "1", "C", "", "12/07/2012", "150.00", "", "", "I0030238206", "Part", "AUD", "67381", "M", "1", "1", "C", "", "12/07/2012", "250.00", "", "", "I0030303521", "Part", "AUD", "67382", "M", "1", "1", "C", "", "12/07/2012", "300.00", "", "", "I0030303539", "Part", "AUD", "RPH", "M", "1", "1", "", "", "", "", "", "", "B", "AWP", "DEP", "CBS", "B", "16/07/2012", "16/07/2012", "1000", "10.00000", "10.00000", "", "", "", "", "", "", "B", "A", "C", "16/07/2012", "10.00000", "", "A", "C", "12/07/2012", "3", "700.00", "70", "700.00", "700.00", "", "", "", "", "GCB", "AUD", "16/07/2012", "16/07/2012", "", "AUD", "16/07/2012", "Y", "", "", "", "", "", "", "", "", "", "", "DP12A", "5555", "NDF", "1", "", "N", "S", "", "", "", "", "", "", "", "", "", "", "", "", "S", "", "FBS", "BTQ", "", "SETTLED", "3", "700.00", "Settled", "3", "70", "15", "700.00", "150.00", "ESAWP", "I0030238206", "F", "70", "25", "700.00", "250.00", "I0030303521", "70", "30", "700.00", "300.00", "I0030303539", "BPE", "P", "PURCHASE", "70", "700.00", "M", "", "", "", "C", "/DEP/12A", "DEP/DEFERRED EMP SHARE PLAN - AU", "12A 20120712EB   12/07/12           450", "**** Total for 20120712EB                450", "12A 20120712EP   12/07/12            15", "**** Total for 20120712EP                 15", "", "", "", "", "", "S", "DEP/DEFERRED EMP SHARE PLAN - AU", "12A 20120712EP   12/07/12            25", "**** Total for 20120712EP                 25", "", "", "", "", "", "", "", "DEP/DEFERRED EMP SHARE PLAN - AU", "12A 20120712EP   12/07/12            30", "**** Total for 20120712EP                 30", "", "", "", "", "", "", "", null)]
        public virtual void DeferredPlanBulkPurchaseEP(
                    string test, 
                    string cOY, 
                    string classCode, 
                    string selection, 
                    string registerCode, 
                    string selection1, 
                    string appropDate, 
                    string inputFilename, 
                    string nameSelection, 
                    string pCSelection, 
                    string addressMatching, 
                    string allowBlankAddress, 
                    string updateAddrDetails, 
                    string updateEmpDetails, 
                    string autoGenEmpUnqID, 
                    string clearEmpUnqID, 
                    string updateContactDets, 
                    string uploadTfn, 
                    string updateMandates, 
                    string updateDrp, 
                    string runTrnedt, 
                    string createNewAccounts, 
                    string reportFullTotals, 
                    string autoFtpReportsInd, 
                    string fileName, 
                    string selection2, 
                    string timestamp, 
                    string confirm, 
                    string reportHeading, 
                    string reportDate, 
                    string reportSequence, 
                    string selection3, 
                    string transNumber1, 
                    string paymentFrequency1, 
                    string accumPeriod1, 
                    string paymentNumber1, 
                    string paymentStatus1, 
                    string eol01901ReceiptCurrency1, 
                    string paymentDate1, 
                    string paymentAmount1, 
                    string employerPymtAmt1, 
                    string eol01901ExchangeRate1, 
                    string searchName1, 
                    string registerType1, 
                    string eol01902EmpBaseCurr1, 
                    string transNumber2, 
                    string paymentFrequency2, 
                    string accumPeriod2, 
                    string paymentNumber2, 
                    string paymentStatus2, 
                    string eol01901ReceiptCurrency2, 
                    string paymentDate2, 
                    string paymentAmount2, 
                    string employerPymtAmt2, 
                    string eol01901ExchangeRate2, 
                    string searchName2, 
                    string registerType2, 
                    string eol01902EmpBaseCurr2, 
                    string transNumber3, 
                    string paymentFrequency3, 
                    string accumPeriod3, 
                    string paymentNumber3, 
                    string paymentStatus3, 
                    string eol01901ReceiptCurrency3, 
                    string paymentDate3, 
                    string paymentAmount3, 
                    string employerPymtAmt3, 
                    string eol01901ExchangeRate3, 
                    string searchName3, 
                    string registerType3, 
                    string eol01902EmpBaseCurr3, 
                    string selection4, 
                    string payFreq1, 
                    string accumPeriodFrom1, 
                    string accumPeriodTO1, 
                    string payFreq2, 
                    string accumPeriodFrom2, 
                    string accumPeriodTO2, 
                    string payFreq3, 
                    string accumPeriodFrom3, 
                    string accumPeriodTO3, 
                    string releaseMode, 
                    string confirmRelType, 
                    string bulkCode, 
                    string selection5, 
                    string menuSelection, 
                    string settlementDate, 
                    string tradeDate, 
                    string tradeTime, 
                    string indicativePrice, 
                    string finalPrice, 
                    string chargeCode1, 
                    string chargeCode2, 
                    string chargeCode3, 
                    string chargeDesc1, 
                    string chargeDesc2, 
                    string chargeDesc3, 
                    string confirmStatus, 
                    string confirmStatus1, 
                    string confirmStatus2, 
                    string confirmSettlement, 
                    string confirmFinalPrice, 
                    string registerCode1, 
                    string menuSelection1, 
                    string menuSelection2, 
                    string awardDate, 
                    string totalCount, 
                    string totalUnits1, 
                    string unitsCalc, 
                    string costOFShares, 
                    string totalCost, 
                    string residueKept, 
                    string residueRefunded, 
                    string taxONCharges, 
                    string accumCharges, 
                    string selection6, 
                    string bulkCurrency, 
                    string settlementFrom, 
                    string settlementTO, 
                    string bulkID1, 
                    string currency1, 
                    string settlementDate1, 
                    string processBulkInd1, 
                    string bulkID2, 
                    string currency2, 
                    string settlementDate2, 
                    string processBulkInd2, 
                    string bulkID3, 
                    string currency3, 
                    string settlementDate3, 
                    string processBulkInd3, 
                    string homeBankDesc, 
                    string ausTraceAccount, 
                    string paymentAccount, 
                    string orderNO, 
                    string ident, 
                    string nbrBulks, 
                    string paymentDate, 
                    string addConvRateInd, 
                    string menuSelection3, 
                    string settlementDateS, 
                    string tradeDateS, 
                    string tradeTimeS, 
                    string indicativePriceS, 
                    string finalPriceS, 
                    string registerCode1S, 
                    string chargeCode1S, 
                    string chargeCode2S, 
                    string chargeCode3S, 
                    string chargeDesc1S, 
                    string chargeDesc2S, 
                    string chargeDesc3S, 
                    string confirmStatus3, 
                    string awardDateS, 
                    string selection7, 
                    string selection8, 
                    string bulkID, 
                    string status, 
                    string transCount, 
                    string transTotal, 
                    string statusDesc, 
                    string bulkCount, 
                    string bulkUnits, 
                    string transUnits, 
                    string bulkMoney, 
                    string transMoney, 
                    string tranTypeParent, 
                    string holderID1, 
                    string enquiryAction, 
                    string bulkUnits1, 
                    string transUnits1, 
                    string bulkMoney1, 
                    string transMoney1, 
                    string holderID2, 
                    string bulkUnits2, 
                    string transUnits2, 
                    string bulkMoney2, 
                    string transMoney2, 
                    string holderID3, 
                    string selection9, 
                    string bulkType, 
                    string bulkTypeDesc, 
                    string bulkTransUnits, 
                    string bulkTransMoney, 
                    string actionM, 
                    string bankType, 
                    string bankCode, 
                    string accountNumber, 
                    string action, 
                    string locateArgument, 
                    string certificateLine1A, 
                    string certificateLine2A, 
                    string certificateLine3A, 
                    string certificateLine4A, 
                    string certificateLine5A, 
                    string certificateLine6A, 
                    string certificateLine7A, 
                    string certificateLine8A, 
                    string certificateLine9A, 
                    string certificateLine10A, 
                    string action1, 
                    string certificateLine1B, 
                    string certificateLine2B, 
                    string certificateLine3B, 
                    string certificateLine4B, 
                    string certificateLine5B, 
                    string certificateLine6B, 
                    string certificateLine7B, 
                    string certificateLine8B, 
                    string certificateLine9B, 
                    string certificateLine10B, 
                    string certificateLine1C, 
                    string certificateLine2C, 
                    string certificateLine3C, 
                    string certificateLine4C, 
                    string certificateLine5C, 
                    string certificateLine6C, 
                    string certificateLine7C, 
                    string certificateLine8C, 
                    string certificateLine9C, 
                    string certificateLine10C, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ESSPurchase"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Deferred Plan Bulk Purchase EP", @__tags);
#line 730
this.ScenarioSetup(scenarioInfo);
#line 733
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 734
 testRunner.When(string.Format("In SELCOY01 I select the company as \"{0}\"", cOY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 735
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 737
  testRunner.And("In EOL00113 I click on \"awards\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table194 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table194.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 738
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table194, "And ");
#line hidden
            TechTalk.SpecFlow.Table table195 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table195.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 741
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table195, "And ");
#line hidden
            TechTalk.SpecFlow.Table table196 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table196.AddRow(new string[] {
                        string.Format("{0}", selection1)});
#line 744
  testRunner.And("In EOL00114 I continue with the following values:", ((string)(null)), table196, "And ");
#line hidden
            TechTalk.SpecFlow.Table table197 = new TechTalk.SpecFlow.Table(new string[] {
                        "AppropDate"});
            table197.AddRow(new string[] {
                        string.Format("{0}", appropDate)});
#line 747
  testRunner.And("In EOL00116 I continue with the following values:", ((string)(null)), table197, "And ");
#line hidden
            TechTalk.SpecFlow.Table table198 = new TechTalk.SpecFlow.Table(new string[] {
                        "InputFilename",
                        "NameSelection",
                        "PCSelection",
                        "AddressMatching",
                        "AllowBlankAddress",
                        "UpdateAddrDetails",
                        "UpdateEmpDetails",
                        "AutoGenEmpUnqID",
                        "ClearEmpUnqID",
                        "UpdateContactDets",
                        "UploadTfn",
                        "UpdateMandates",
                        "UpdateDrp",
                        "RunTrnedt",
                        "CreateNewAccounts",
                        "ReportFullTotals",
                        "AutoFtpReportsInd"});
            table198.AddRow(new string[] {
                        string.Format("{0}", inputFilename),
                        string.Format("{0}", nameSelection),
                        string.Format("{0}", pCSelection),
                        string.Format("{0}", addressMatching),
                        string.Format("{0}", allowBlankAddress),
                        string.Format("{0}", updateAddrDetails),
                        string.Format("{0}", updateEmpDetails),
                        string.Format("{0}", autoGenEmpUnqID),
                        string.Format("{0}", clearEmpUnqID),
                        string.Format("{0}", updateContactDets),
                        string.Format("{0}", uploadTfn),
                        string.Format("{0}", updateMandates),
                        string.Format("{0}", updateDrp),
                        string.Format("{0}", runTrnedt),
                        string.Format("{0}", createNewAccounts),
                        string.Format("{0}", reportFullTotals),
                        string.Format("{0}", autoFtpReportsInd)});
#line 750
  testRunner.And("In EOL00501 I continue with the following values:", ((string)(null)), table198, "And ");
#line 753
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table199 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table199.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 754
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table199, "And ");
#line hidden
            TechTalk.SpecFlow.Table table200 = new TechTalk.SpecFlow.Table(new string[] {
                        "COY",
                        "FileName"});
            table200.AddRow(new string[] {
                        string.Format("{0}", cOY),
                        string.Format("{0}", fileName)});
#line 757
 testRunner.When("I read Timestamps from the Health and Integrity file as:", ((string)(null)), table200, "When ");
#line 760
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 761
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 762
  testRunner.And("In EOL00113 I click on \"awards\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table201 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table201.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 763
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table201, "And ");
#line hidden
            TechTalk.SpecFlow.Table table202 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table202.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 766
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table202, "And ");
#line hidden
            TechTalk.SpecFlow.Table table203 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table203.AddRow(new string[] {
                        string.Format("{0}", selection2)});
#line 770
  testRunner.And("In EOL00114 I continue with the following values:", ((string)(null)), table203, "And ");
#line hidden
            TechTalk.SpecFlow.Table table204 = new TechTalk.SpecFlow.Table(new string[] {
                        "AppropDate"});
            table204.AddRow(new string[] {
                        string.Format("{0}", appropDate)});
#line 773
  testRunner.And("In EOL00116 I continue with the following values:", ((string)(null)), table204, "And ");
#line hidden
            TechTalk.SpecFlow.Table table205 = new TechTalk.SpecFlow.Table(new string[] {
                        "Timestamp",
                        "ReportFullTotals",
                        "AutoFtpReportsInd",
                        "Confirm"});
            table205.AddRow(new string[] {
                        string.Format("{0}", timestamp),
                        string.Format("{0}", reportFullTotals),
                        string.Format("{0}", autoFtpReportsInd),
                        string.Format("{0}", confirm)});
#line 776
  testRunner.And("In EOL00601 I continue with the following values:", ((string)(null)), table205, "And ");
#line hidden
            TechTalk.SpecFlow.Table table206 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReportHeading",
                        "ReportDate",
                        "ReportSequence"});
            table206.AddRow(new string[] {
                        string.Format("{0}", reportHeading),
                        string.Format("{0}", reportDate),
                        string.Format("{0}", reportSequence)});
#line 779
  testRunner.And("In EOL00602 I continue with the following values:", ((string)(null)), table206, "And ");
#line 782
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table207 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table207.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 783
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table207, "And ");
#line 786
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 787
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 789
  testRunner.And("In EOL00113 I click on \"payments\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table208 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table208.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 790
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table208, "And ");
#line hidden
            TechTalk.SpecFlow.Table table209 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table209.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 793
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table209, "And ");
#line hidden
            TechTalk.SpecFlow.Table table210 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table210.AddRow(new string[] {
                        string.Format("{0}", selection3)});
#line 796
  testRunner.And("In EOL00120 I continue with the following values:", ((string)(null)), table210, "And ");
#line hidden
            TechTalk.SpecFlow.Table table211 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "PaymentFrequency",
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentStatus",
                        "Eol01901ReceiptCurrency",
                        "PaymentDate",
                        "PaymentAmount",
                        "EmployerPymtAmt",
                        "Eol01901ExchangeRate",
                        "SearchName"});
            table211.AddRow(new string[] {
                        string.Format("{0}", transNumber1),
                        string.Format("{0}", paymentFrequency1),
                        string.Format("{0}", accumPeriod1),
                        string.Format("{0}", paymentNumber1),
                        string.Format("{0}", paymentStatus1),
                        string.Format("{0}", eol01901ReceiptCurrency1),
                        string.Format("{0}", paymentDate1),
                        string.Format("{0}", paymentAmount1),
                        string.Format("{0}", employerPymtAmt1),
                        string.Format("{0}", eol01901ExchangeRate1),
                        string.Format("{0}", searchName1)});
#line 799
  testRunner.And("In EOL01901 I Add Manual Payment as:", ((string)(null)), table211, "And ");
#line hidden
            TechTalk.SpecFlow.Table table212 = new TechTalk.SpecFlow.Table(new string[] {
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentFrequency",
                        "RegisterType",
                        "PaymentAmount",
                        "Eol01902EmpBaseCurr"});
            table212.AddRow(new string[] {
                        string.Format("{0}", accumPeriod1),
                        string.Format("{0}", paymentNumber1),
                        string.Format("{0}", paymentFrequency1),
                        string.Format("{0}", registerType1),
                        string.Format("{0}", paymentAmount1),
                        string.Format("{0}", eol01902EmpBaseCurr1)});
#line 802
  testRunner.And("In EOL01902 I verify the following values:", ((string)(null)), table212, "And ");
#line hidden
            TechTalk.SpecFlow.Table table213 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "PaymentFrequency",
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentStatus",
                        "Eol01901ReceiptCurrency",
                        "PaymentDate",
                        "PaymentAmount",
                        "EmployerPymtAmt",
                        "Eol01901ExchangeRate",
                        "SearchName"});
            table213.AddRow(new string[] {
                        string.Format("{0}", transNumber2),
                        string.Format("{0}", paymentFrequency2),
                        string.Format("{0}", accumPeriod2),
                        string.Format("{0}", paymentNumber2),
                        string.Format("{0}", paymentStatus2),
                        string.Format("{0}", eol01901ReceiptCurrency2),
                        string.Format("{0}", paymentDate2),
                        string.Format("{0}", paymentAmount2),
                        string.Format("{0}", employerPymtAmt2),
                        string.Format("{0}", eol01901ExchangeRate2),
                        string.Format("{0}", searchName2)});
#line 805
  testRunner.And("In EOL01901 I Add Manual Payment as:", ((string)(null)), table213, "And ");
#line hidden
            TechTalk.SpecFlow.Table table214 = new TechTalk.SpecFlow.Table(new string[] {
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentFrequency",
                        "RegisterType",
                        "PaymentAmount",
                        "Eol01902EmpBaseCurr"});
            table214.AddRow(new string[] {
                        string.Format("{0}", accumPeriod2),
                        string.Format("{0}", paymentNumber2),
                        string.Format("{0}", paymentFrequency2),
                        string.Format("{0}", registerType2),
                        string.Format("{0}", paymentAmount2),
                        string.Format("{0}", eol01902EmpBaseCurr2)});
#line 808
  testRunner.And("In EOL01902 I verify the following values:", ((string)(null)), table214, "And ");
#line hidden
            TechTalk.SpecFlow.Table table215 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "PaymentFrequency",
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentStatus",
                        "Eol01901ReceiptCurrency",
                        "PaymentDate",
                        "PaymentAmount",
                        "EmployerPymtAmt",
                        "Eol01901ExchangeRate",
                        "SearchName"});
            table215.AddRow(new string[] {
                        string.Format("{0}", transNumber3),
                        string.Format("{0}", paymentFrequency3),
                        string.Format("{0}", accumPeriod3),
                        string.Format("{0}", paymentNumber3),
                        string.Format("{0}", paymentStatus3),
                        string.Format("{0}", eol01901ReceiptCurrency3),
                        string.Format("{0}", paymentDate3),
                        string.Format("{0}", paymentAmount3),
                        string.Format("{0}", employerPymtAmt3),
                        string.Format("{0}", eol01901ExchangeRate3),
                        string.Format("{0}", searchName3)});
#line 811
  testRunner.And("In EOL01901 I Add Manual Payment as:", ((string)(null)), table215, "And ");
#line hidden
            TechTalk.SpecFlow.Table table216 = new TechTalk.SpecFlow.Table(new string[] {
                        "AccumPeriod",
                        "PaymentNumber",
                        "PaymentFrequency",
                        "RegisterType",
                        "PaymentAmount",
                        "Eol01902EmpBaseCurr"});
            table216.AddRow(new string[] {
                        string.Format("{0}", accumPeriod3),
                        string.Format("{0}", paymentNumber3),
                        string.Format("{0}", paymentFrequency3),
                        string.Format("{0}", registerType3),
                        string.Format("{0}", paymentAmount3),
                        string.Format("{0}", eol01902EmpBaseCurr3)});
#line 814
  testRunner.And("In EOL01902 I verify the following values:", ((string)(null)), table216, "And ");
#line 817
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 819
  testRunner.And(string.Format("I go to the Employee Scheme Processing Menu \"{0}\"", classCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 820
  testRunner.And("In EOL00113 I click on \"releases\" Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table217 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table217.AddRow(new string[] {
                        string.Format("{0}", selection)});
#line 821
  testRunner.And("In EOL00115 I select the Register Type as:", ((string)(null)), table217, "And ");
#line hidden
            TechTalk.SpecFlow.Table table218 = new TechTalk.SpecFlow.Table(new string[] {
                        "RegisterCode"});
            table218.AddRow(new string[] {
                        string.Format("{0}", registerCode)});
#line 824
  testRunner.And("In EOL00103 I select the RegisterCode as:", ((string)(null)), table218, "And ");
#line hidden
            TechTalk.SpecFlow.Table table219 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table219.AddRow(new string[] {
                        string.Format("{0}", selection4)});
#line 827
  testRunner.And("In EOL00106 I continue with the following values:", ((string)(null)), table219, "And ");
#line hidden
            TechTalk.SpecFlow.Table table220 = new TechTalk.SpecFlow.Table(new string[] {
                        "PayFreq1",
                        "AccumPeriodFrom1",
                        "AccumPeriodTO1",
                        "PayFreq2",
                        "AccumPeriodFrom2",
                        "AccumPeriodTO2",
                        "PayFreq3",
                        "AccumPeriodFrom3",
                        "AccumPeriodTO3",
                        "ReleaseMode"});
            table220.AddRow(new string[] {
                        string.Format("{0}", payFreq1),
                        string.Format("{0}", accumPeriodFrom1),
                        string.Format("{0}", accumPeriodTO1),
                        string.Format("{0}", payFreq2),
                        string.Format("{0}", accumPeriodFrom2),
                        string.Format("{0}", accumPeriodTO2),
                        string.Format("{0}", payFreq3),
                        string.Format("{0}", accumPeriodFrom3),
                        string.Format("{0}", accumPeriodTO3),
                        string.Format("{0}", releaseMode)});
#line 830
  testRunner.And("In EOLBLK05 I continue with the following values:", ((string)(null)), table220, "And ");
#line hidden
            TechTalk.SpecFlow.Table table221 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmRelType"});
            table221.AddRow(new string[] {
                        string.Format("{0}", confirmRelType)});
#line 833
  testRunner.And("In EOLBLK04 I continue with the following values:", ((string)(null)), table221, "And ");
#line 836
  testRunner.And("I continue to the report submit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table222 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table222.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 837
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table222, "And ");
#line 840
  testRunner.And("I Escape to the Main Menu from Employee Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table223 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkCode"});
            table223.AddRow(new string[] {
                        string.Format("{0}", bulkCode)});
#line 842
  testRunner.And("I go to the Bulk Processing System and select Bulk code as:", ((string)(null)), table223, "And ");
#line hidden
            TechTalk.SpecFlow.Table table224 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table224.AddRow(new string[] {
                        string.Format("{0}", selection5)});
#line 845
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table224, "And ");
#line hidden
            TechTalk.SpecFlow.Table table225 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table225.AddRow(new string[] {
                        string.Format("{0}", menuSelection)});
#line 848
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table225, "And ");
#line hidden
            TechTalk.SpecFlow.Table table226 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table226.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus)});
#line 852
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table226, "And ");
#line hidden
            TechTalk.SpecFlow.Table table227 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table227.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 855
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table227, "And ");
#line hidden
            TechTalk.SpecFlow.Table table228 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table228.AddRow(new string[] {
                        string.Format("{0}", selection5)});
#line 858
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table228, "And ");
#line hidden
            TechTalk.SpecFlow.Table table229 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table229.AddRow(new string[] {
                        string.Format("{0}", menuSelection1)});
#line 861
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table229, "And ");
#line hidden
            TechTalk.SpecFlow.Table table230 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus"});
            table230.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode1),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus1)});
#line 864
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table230, "And ");
#line hidden
            TechTalk.SpecFlow.Table table231 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table231.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 867
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table231, "And ");
#line hidden
            TechTalk.SpecFlow.Table table232 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table232.AddRow(new string[] {
                        string.Format("{0}", selection5)});
#line 870
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table232, "And ");
#line hidden
            TechTalk.SpecFlow.Table table233 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table233.AddRow(new string[] {
                        string.Format("{0}", menuSelection2)});
#line 873
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table233, "And ");
#line hidden
            TechTalk.SpecFlow.Table table234 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table234.AddRow(new string[] {
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", registerCode1),
                        string.Format("{0}", chargeCode1),
                        string.Format("{0}", chargeCode2),
                        string.Format("{0}", chargeCode3),
                        string.Format("{0}", chargeDesc1),
                        string.Format("{0}", chargeDesc2),
                        string.Format("{0}", chargeDesc3),
                        string.Format("{0}", confirmStatus2),
                        string.Format("{0}", awardDate)});
#line 876
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table234, "And ");
#line hidden
            TechTalk.SpecFlow.Table table235 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table235.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 879
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table235, "And ");
#line hidden
            TechTalk.SpecFlow.Table table236 = new TechTalk.SpecFlow.Table(new string[] {
                        "TotalCount",
                        "TotalUnits",
                        "SettlementDate",
                        "FinalPrice",
                        "UnitsCalc",
                        "CostOFShares",
                        "TotalCost",
                        "ResidueKept",
                        "ResidueRefunded",
                        "TaxONCharges",
                        "AccumCharges"});
            table236.AddRow(new string[] {
                        string.Format("{0}", totalCount),
                        string.Format("{0}", totalUnits1),
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", unitsCalc),
                        string.Format("{0}", costOFShares),
                        string.Format("{0}", totalCost),
                        string.Format("{0}", residueKept),
                        string.Format("{0}", residueRefunded),
                        string.Format("{0}", taxONCharges),
                        string.Format("{0}", accumCharges)});
#line 882
 testRunner.And("In OLSB0404 I verify the following values:", ((string)(null)), table236, "And ");
#line hidden
            TechTalk.SpecFlow.Table table237 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table237.AddRow(new string[] {
                        string.Format("{0}", selection6)});
#line 885
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table237, "And ");
#line hidden
            TechTalk.SpecFlow.Table table238 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkCurrency",
                        "SettlementFrom",
                        "SettlementTO"});
            table238.AddRow(new string[] {
                        string.Format("{0}", bulkCurrency),
                        string.Format("{0}", settlementFrom),
                        string.Format("{0}", settlementTO)});
#line 889
 testRunner.And("In OLSB0105 I continue with the following values:", ((string)(null)), table238, "And ");
#line hidden
            TechTalk.SpecFlow.Table table239 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID1",
                        "Currency1",
                        "SettlementDate1",
                        "ProcessBulkInd1",
                        "BulkID2",
                        "Currency2",
                        "SettlementDate2",
                        "ProcessBulkInd2",
                        "BulkID3",
                        "Currency3",
                        "SettlementDate3",
                        "ProcessBulkInd3"});
            table239.AddRow(new string[] {
                        string.Format("{0}", bulkID1),
                        string.Format("{0}", currency1),
                        string.Format("{0}", settlementDate1),
                        string.Format("{0}", processBulkInd1),
                        string.Format("{0}", bulkID2),
                        string.Format("{0}", currency2),
                        string.Format("{0}", settlementDate2),
                        string.Format("{0}", processBulkInd2),
                        string.Format("{0}", bulkID3),
                        string.Format("{0}", currency3),
                        string.Format("{0}", settlementDate3),
                        string.Format("{0}", processBulkInd3)});
#line 892
  testRunner.And("In OLSB0106 I continue with the following values:", ((string)(null)), table239, "And ");
#line hidden
            TechTalk.SpecFlow.Table table240 = new TechTalk.SpecFlow.Table(new string[] {
                        "HomeBankDesc",
                        "AusTraceAccount"});
            table240.AddRow(new string[] {
                        string.Format("{0}", homeBankDesc),
                        string.Format("{0}", ausTraceAccount)});
#line 895
 testRunner.And("In OLSB0104 I verify the following values:", ((string)(null)), table240, "And ");
#line hidden
            TechTalk.SpecFlow.Table table241 = new TechTalk.SpecFlow.Table(new string[] {
                        "PaymentAccount",
                        "OrderNO",
                        "Ident",
                        "NbrBulks",
                        "SettlementFrom",
                        "SettlementTO",
                        "PaymentDate",
                        "AddConvRateInd"});
            table241.AddRow(new string[] {
                        string.Format("{0}", paymentAccount),
                        string.Format("{0}", orderNO),
                        string.Format("{0}", ident),
                        string.Format("{0}", nbrBulks),
                        string.Format("{0}", settlementFrom),
                        string.Format("{0}", settlementTO),
                        string.Format("{0}", paymentDate),
                        string.Format("{0}", addConvRateInd)});
#line 898
  testRunner.And("In OLSB0101 I continue with the following values:", ((string)(null)), table241, "And ");
#line hidden
            TechTalk.SpecFlow.Table table242 = new TechTalk.SpecFlow.Table(new string[] {
                        "PassCriteria",
                        "timeout",
                        "FailCriteria"});
            table242.AddRow(new string[] {
                        "completion",
                        "600",
                        "error"});
#line 901
  testRunner.And("In JOBSUB90 I submit the report for VMS and Linux", ((string)(null)), table242, "And ");
#line 904
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table243 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table243.AddRow(new string[] {
                        string.Format("{0}", selection7)});
#line 906
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table243, "And ");
#line hidden
            TechTalk.SpecFlow.Table table244 = new TechTalk.SpecFlow.Table(new string[] {
                        "MenuSelection"});
            table244.AddRow(new string[] {
                        string.Format("{0}", menuSelection3)});
#line 909
  testRunner.And("In OLSB0401 I change the Bulk Status as:", ((string)(null)), table244, "And ");
#line hidden
            TechTalk.SpecFlow.Table table245 = new TechTalk.SpecFlow.Table(new string[] {
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "RegisterCode",
                        "ChargeCode1",
                        "ChargeCode2",
                        "ChargeCode3",
                        "ChargeDesc1",
                        "ChargeDesc2",
                        "ChargeDesc3",
                        "ConfirmStatus",
                        "AwardDate"});
            table245.AddRow(new string[] {
                        string.Format("{0}", settlementDateS),
                        string.Format("{0}", tradeDateS),
                        string.Format("{0}", tradeTimeS),
                        string.Format("{0}", indicativePriceS),
                        string.Format("{0}", finalPriceS),
                        string.Format("{0}", registerCode1S),
                        string.Format("{0}", chargeCode1S),
                        string.Format("{0}", chargeCode2S),
                        string.Format("{0}", chargeCode3S),
                        string.Format("{0}", chargeDesc1S),
                        string.Format("{0}", chargeDesc2S),
                        string.Format("{0}", chargeDesc3S),
                        string.Format("{0}", confirmStatus3),
                        string.Format("{0}", awardDateS)});
#line 912
  testRunner.And("In OLSB0402 I change the Bulk Status as:", ((string)(null)), table245, "And ");
#line hidden
            TechTalk.SpecFlow.Table table246 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmSettlement",
                        "ConfirmFinalPrice"});
            table246.AddRow(new string[] {
                        string.Format("{0}", confirmSettlement),
                        string.Format("{0}", confirmFinalPrice)});
#line 915
  testRunner.And("In OLSB0403 I continue with the following values:", ((string)(null)), table246, "And ");
#line hidden
            TechTalk.SpecFlow.Table table247 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table247.AddRow(new string[] {
                        string.Format("{0}", selection8)});
#line 919
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table247, "And ");
#line hidden
            TechTalk.SpecFlow.Table table248 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "Status",
                        "RegisterCode",
                        "TransCount",
                        "TransTotal",
                        "SettlementDate"});
            table248.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", status),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", transCount),
                        string.Format("{0}", transTotal),
                        string.Format("{0}", settlementDate3)});
#line 922
  testRunner.And("In BLKSCH01 I continue with the following values:", ((string)(null)), table248, "And ");
#line hidden
            TechTalk.SpecFlow.Table table249 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "StatusDesc",
                        "BulkCount",
                        "BulkUnits",
                        "TransUnits",
                        "BulkMoney",
                        "TransMoney",
                        "TranTypeParent",
                        "HolderID",
                        "RegisterCode"});
            table249.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", statusDesc),
                        string.Format("{0}", bulkCount),
                        string.Format("{0}", bulkUnits),
                        string.Format("{0}", transUnits),
                        string.Format("{0}", bulkMoney),
                        string.Format("{0}", transMoney),
                        string.Format("{0}", tranTypeParent),
                        string.Format("{0}", holderID1),
                        string.Format("{0}", registerCode)});
#line 925
  testRunner.And("In OLSB1010 I verify the following values:", ((string)(null)), table249, "And ");
#line hidden
            TechTalk.SpecFlow.Table table250 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnquiryAction"});
            table250.AddRow(new string[] {
                        string.Format("{0}", enquiryAction)});
#line 928
  testRunner.And("In OLSB1010 I continue with the following values:", ((string)(null)), table250, "And ");
#line hidden
            TechTalk.SpecFlow.Table table251 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "StatusDesc",
                        "BulkCount",
                        "BulkUnits",
                        "TransUnits",
                        "BulkMoney",
                        "TransMoney",
                        "TranTypeParent",
                        "HolderID",
                        "RegisterCode"});
            table251.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", statusDesc),
                        string.Format("{0}", bulkCount),
                        string.Format("{0}", bulkUnits1),
                        string.Format("{0}", transUnits1),
                        string.Format("{0}", bulkMoney1),
                        string.Format("{0}", transMoney1),
                        string.Format("{0}", tranTypeParent),
                        string.Format("{0}", holderID2),
                        string.Format("{0}", registerCode)});
#line 931
  testRunner.And("In OLSB1010 I verify the following values:", ((string)(null)), table251, "And ");
#line hidden
            TechTalk.SpecFlow.Table table252 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnquiryAction"});
            table252.AddRow(new string[] {
                        string.Format("{0}", enquiryAction)});
#line 934
  testRunner.And("In OLSB1010 I continue with the following values:", ((string)(null)), table252, "And ");
#line hidden
            TechTalk.SpecFlow.Table table253 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "StatusDesc",
                        "BulkCount",
                        "BulkUnits",
                        "TransUnits",
                        "BulkMoney",
                        "TransMoney",
                        "TranTypeParent",
                        "HolderID",
                        "RegisterCode"});
            table253.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", statusDesc),
                        string.Format("{0}", bulkCount),
                        string.Format("{0}", bulkUnits2),
                        string.Format("{0}", transUnits2),
                        string.Format("{0}", bulkMoney2),
                        string.Format("{0}", transMoney2),
                        string.Format("{0}", tranTypeParent),
                        string.Format("{0}", holderID3),
                        string.Format("{0}", registerCode)});
#line 937
  testRunner.And("In OLSB1010 I verify the following values:", ((string)(null)), table253, "And ");
#line 940
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table254 = new TechTalk.SpecFlow.Table(new string[] {
                        "Selection"});
            table254.AddRow(new string[] {
                        string.Format("{0}", selection9)});
#line 941
  testRunner.And("In OLSBLK02 I continue with the following values:", ((string)(null)), table254, "And ");
#line hidden
            TechTalk.SpecFlow.Table table255 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkID",
                        "Status",
                        "RegisterCode",
                        "TransCount",
                        "TransTotal",
                        "SettlementDate"});
            table255.AddRow(new string[] {
                        string.Format("{0}", bulkID),
                        string.Format("{0}", status),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", transCount),
                        string.Format("{0}", transTotal),
                        string.Format("{0}", settlementDate3)});
#line 944
  testRunner.And("In BLKSCH01 I continue with the following values:", ((string)(null)), table255, "And ");
#line hidden
            TechTalk.SpecFlow.Table table256 = new TechTalk.SpecFlow.Table(new string[] {
                        "BulkType",
                        "BulkTypeDesc",
                        "ClassCode",
                        "TotalCount",
                        "BulkTransUnits",
                        "BulkTransMoney",
                        "RegisterCode",
                        "SettlementDate",
                        "TradeDate",
                        "TradeTime",
                        "IndicativePrice",
                        "FinalPrice",
                        "ActionM"});
            table256.AddRow(new string[] {
                        string.Format("{0}", bulkType),
                        string.Format("{0}", bulkTypeDesc),
                        string.Format("{0}", classCode),
                        string.Format("{0}", totalCount),
                        string.Format("{0}", bulkTransUnits),
                        string.Format("{0}", bulkTransMoney),
                        string.Format("{0}", registerCode),
                        string.Format("{0}", settlementDate),
                        string.Format("{0}", tradeDate),
                        string.Format("{0}", tradeTime),
                        string.Format("{0}", indicativePrice),
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", actionM)});
#line 947
  testRunner.And("In BLKSCH02 I verify the following values:", ((string)(null)), table256, "And ");
#line hidden
            TechTalk.SpecFlow.Table table257 = new TechTalk.SpecFlow.Table(new string[] {
                        "FinalPrice",
                        "UnitsCalc",
                        "CostOFShares",
                        "TotalCost",
                        "ResidueKept",
                        "ResidueRefunded",
                        "PaymentAccount",
                        "BankType",
                        "BankCode",
                        "AccountNumber"});
            table257.AddRow(new string[] {
                        string.Format("{0}", finalPrice),
                        string.Format("{0}", unitsCalc),
                        string.Format("{0}", costOFShares),
                        string.Format("{0}", totalCost),
                        string.Format("{0}", residueKept),
                        string.Format("{0}", residueRefunded),
                        string.Format("{0}", paymentAccount),
                        string.Format("{0}", bankType),
                        string.Format("{0}", bankCode),
                        string.Format("{0}", accountNumber)});
#line 950
  testRunner.And("In BLKSCH03 I verify the following values:", ((string)(null)), table257, "And ");
#line 953
  testRunner.And("I Escape to the Main Menu from Bulk Processing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 955
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", holderID1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 956
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table258 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table258.AddRow(new string[] {
                        string.Format("{0}", certificateLine1A),
                        string.Format("{0}", certificateLine2A),
                        string.Format("{0}", certificateLine3A),
                        string.Format("{0}", certificateLine4A),
                        string.Format("{0}", certificateLine5A),
                        string.Format("{0}", certificateLine6A),
                        string.Format("{0}", certificateLine7A),
                        string.Format("{0}", certificateLine8A),
                        string.Format("{0}", certificateLine9A),
                        string.Format("{0}", certificateLine10A)});
#line 957
 testRunner.Then("In ENS01012 I should see Register details as:", ((string)(null)), table258, "Then ");
#line 960
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, holderID2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 961
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table259 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table259.AddRow(new string[] {
                        string.Format("{0}", certificateLine1B),
                        string.Format("{0}", certificateLine2B),
                        string.Format("{0}", certificateLine3B),
                        string.Format("{0}", certificateLine4B),
                        string.Format("{0}", certificateLine5B),
                        string.Format("{0}", certificateLine6B),
                        string.Format("{0}", certificateLine7B),
                        string.Format("{0}", certificateLine8B),
                        string.Format("{0}", certificateLine9B),
                        string.Format("{0}", certificateLine10B)});
#line 962
 testRunner.Then("In ENS01012 I should see Register details as:", ((string)(null)), table259, "Then ");
#line 965
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, holderID3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 966
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table260 = new TechTalk.SpecFlow.Table(new string[] {
                        "CertificateLine1",
                        "CertificateLine2",
                        "CertificateLine3",
                        "CertificateLine4",
                        "CertificateLine5",
                        "CertificateLine6",
                        "CertificateLine7",
                        "CertificateLine8",
                        "CertificateLine9",
                        "CertificateLine10"});
            table260.AddRow(new string[] {
                        string.Format("{0}", certificateLine1C),
                        string.Format("{0}", certificateLine2C),
                        string.Format("{0}", certificateLine3C),
                        string.Format("{0}", certificateLine4C),
                        string.Format("{0}", certificateLine5C),
                        string.Format("{0}", certificateLine6C),
                        string.Format("{0}", certificateLine7C),
                        string.Format("{0}", certificateLine8C),
                        string.Format("{0}", certificateLine9C),
                        string.Format("{0}", certificateLine10C)});
#line 967
 testRunner.Then("In ENS01012 I should see Register details as:", ((string)(null)), table260, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
