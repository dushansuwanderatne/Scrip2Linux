// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SCRIPAU.Automation.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("EN_E_PrintOption")]
    public partial class EN_E_PrintOptionFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "EN_E_PrintOption.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "EN_E_PrintOption", "Ensure EN_E_PrintOption functionality covered", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18472: Print Options")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("EN_E_PrintOption")]
        [NUnit.Framework.CategoryAttribute("18472")]
        [NUnit.Framework.TestCaseAttribute("All", "HP", "", "R", "1111", "H", "1112", "PP", "1113", "IS", "1115", "S", "FS", "1116", "S", "I0030047974", "I0030048032", "I0030049756", "N0060000052", null)]
        public virtual void TestCase18472PrintOptions(
                    string test, 
                    string action, 
                    string locateArgument, 
                    string formatType, 
                    string reference, 
                    string formatType1, 
                    string reference1, 
                    string action1, 
                    string reference2, 
                    string action2, 
                    string reference3, 
                    string statementDefinition, 
                    string action3, 
                    string reference4, 
                    string searchAction, 
                    string searchHolder1, 
                    string searchHolder2, 
                    string searchHolder3, 
                    string searchHolder4, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "CPU_AUTO",
                    "EN_E_PrintOption",
                    "18472"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18472: Print Options", @__tags);
#line 9
this.ScenarioSetup(scenarioInfo);
#line 11
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 12
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
  testRunner.And("I go to the Enquiry system for \"I0030047974\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
  testRunner.And(string.Format("In ENS01080 I enter Holding Print Extract details as \"{0}\"", formatType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
  testRunner.And(string.Format("In ENS01081 I Enter Extract reference as \"{0}\"", reference), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
 testRunner.Then("I expect to be in the \"ENS01001\" Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 18
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", searchAction, searchHolder1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 19
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
  testRunner.And(string.Format("In ENS01080 I enter Holding Print Extract details as \"{0}\"", formatType1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
  testRunner.And(string.Format("In ENS01081 I Enter Extract reference as \"{0}\"", reference1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
 testRunner.Then("I expect to be in the \"ENS01001\" Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 23
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", searchAction, searchHolder2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action1, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
  testRunner.And(string.Format("In ENS01082 I Enter Extract reference as \"{0}\"", reference2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.Then("I expect to be in the \"ENS01001\" Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 27
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", searchAction, searchHolder3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action2, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
  testRunner.And(string.Format("In ENS01084 I Enter Issuer Statement Extract details as \"{0}\" \"{1}\"", statementDefinition, reference3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.Then("I expect to be in the \"ENS01001\" Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 31
 testRunner.When(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", searchAction, searchHolder4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action3, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderIdentifier",
                        "Destination",
                        "Reference",
                        "OpsInitials",
                        "RunFrom",
                        "RunTO",
                        "ClassCode"});
            table1.AddRow(new string[] {
                        "",
                        string.Format("{0}", statementDefinition),
                        string.Format("{0}", reference4),
                        "",
                        "",
                        "",
                        ""});
#line 33
  testRunner.And("In ENS01085 I continue with the following details:", ((string)(null)), table1, "And ");
#line 36
 testRunner.Then("I expect to be in the \"ENS01001\" Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18480: 04_Marking History (MP Action)")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("EN_E_PrintOption")]
        [NUnit.Framework.CategoryAttribute("18480")]
        [NUnit.Framework.TestCaseAttribute("MP", "", "1115", "00123456ST02", null)]
        public virtual void TestCase1848004_MarkingHistoryMPAction(string action, string locateArgument, string reference, string markingNbr, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "NAB_AUTO",
                    "EN_E_PrintOption",
                    "18480"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18480: 04_Marking History (MP Action)", @__tags);
#line 48
this.ScenarioSetup(scenarioInfo);
#line 50
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 51
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 52
  testRunner.And("I go to the Enquiry system for \"C0009906408\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
  testRunner.And(string.Format("In ENS01089 I enter Marking Print Extract details as \"{0}\" \"{1}\"", reference, markingNbr), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
 testRunner.Then("I expect to be in the \"ENS01001\" Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
