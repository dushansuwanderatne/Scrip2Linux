// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SCRIPAU.Automation.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("OL_SDM_StaticDetailMaintenance")]
    public partial class OL_SDM_StaticDetailMaintenanceFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "OL_SDM_StaticDetailMaintenance.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "OL_SDM_StaticDetailMaintenance", "Ensure SDM. Static Detail Maintenance functionality covered", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Update Employee Details -Change Employee to Leaver")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("OL_Online")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        public virtual void UpdateEmployeeDetails_ChangeEmployeeToLeaver()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Update Employee Details -Change Employee to Leaver", new string[] {
                        "winformsTest",
                        "OL_Online",
                        "CPU_AUTO",
                        "OL_SDM_StaticDetailMaintenance"});
#line 8
this.ScenarioSetup(scenarioInfo);
#line 10
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 11
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
  testRunner.And("I search \"I0100007801\" in Static Details update Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "Action",
                        "C"});
            table1.AddRow(new string[] {
                        "Tran No",
                        "155"});
            table1.AddRow(new string[] {
                        "Emp Status",
                        "L"});
            table1.AddRow(new string[] {
                        "Leaver Code",
                        "LLL"});
            table1.AddRow(new string[] {
                        "Effective Date",
                        "01/01/2008"});
#line 13
 testRunner.When("I update Employee Details \"employee status\" as below:", ((string)(null)), table1, "When ");
#line 20
  testRunner.And("I go to the Enquiry system for \"I0100007801\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "HIN",
                        "I0100007801"});
            table2.AddRow(new string[] {
                        "Employee ID",
                        "0001020288"});
            table2.AddRow(new string[] {
                        "Preferred Name",
                        "KUQKEIV NJUATTOD"});
            table2.AddRow(new string[] {
                        "Business Unit",
                        "CSUK"});
            table2.AddRow(new string[] {
                        "Employee Status",
                        "L"});
            table2.AddRow(new string[] {
                        "Leaver Code",
                        "LLL"});
            table2.AddRow(new string[] {
                        "Effective Date",
                        "01/01/2008"});
#line 21
 testRunner.Then("In ENSESS01 I should see the holder Employee Details as below:", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18129: 01 - Search by Holder ID")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("OL_Online")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("18129")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.TestCaseAttribute("X0054356552", "A&G         ROBERTSPTYLTA&G", "COY", "3205", "90304337", "", "1442", "DEF", "", "", "A&G", "AB123456", "A & G ROBERTS PTY LTD", "TEST AUTOMATION", ",C/-HEWISON&ASSOCIATES P/L", "LEVEL 4 102 ALBERT ROAD", "SOUTH MELBOURNE VIC", "", "Returned mail", "Exception", "Payee instruction direct/bulk", "Holder Extra details present", "Shareholder Review", "N", "F", "N", "N", "05/2015", "R (Nominated)", "01/01/2015", "B", "W9", "W8", "D", "CU", null)]
        [NUnit.Framework.TestCaseAttribute("I0034882762", "AUTOMATION  GUY   KURZMAADALKU", "JNT", "4001", "49937071", "", "60254", "", "", "", "", "", "MR GUY KURZMANN &", "TEST AUTOMATION", "<ADAL KURZMANN S/FUND A/C>,", "C/- ABN AMRO MORGANS MPS", "GPO BOX 582", "BRISBANE QLD", "Exception", "Payee instruction direct/bulk", "Nil holding on trading classes", "No Annual Report", "", "N", "N", "N", "N", "", "N (Default)", "", "B", "W9", "W8", "D", "CU", null)]
        [NUnit.Framework.TestCaseAttribute("C9999999164", "A/C         US    DIRECTCREDIT", "CNT", "3000", "", "", "", "", "", "", "", "", "US DIRECT CREDIT CONTROL A/C", "TEST AUTOMATION", "SERVICES PTY LTD", "GPO BOX 2975", "MELBOURNE VIC", "", "Exception", "Nil holding on trading classes", "No Annual Report", "", "", "N", "N", "N", "N", "", "N (Default)", "", "B", "W9", "W8", "D", "CU", null)]
        [NUnit.Framework.TestCaseAttribute("I0035493034", "ABRAHAMS    LESLEYJANE", "IND", "2830", "34608673", "", "60254", "", "", "", "", "", "MRS LESLEY JANE ABRAHAMS,", "TEST AUTOMATION", "1R DELALAH DOWNS ROAD", "DUBBO NSW", "", "", "Exception", "Payee instruction direct/bulk", "Noting:N1", "Holder Extra details present", "Communication Methods Present", "N", "N", "N", "N", "", "N (Default)", "", "B", "W9", "W8", "D", "CU", null)]
        [NUnit.Framework.TestCaseAttribute("I0035565469", "BOTHKAMP    AUSTRALIAPTYBOTHKA", "COY", "6005", "48873037", "", "60254", "", "", "", "", "", "BOTHKAMP AUSTRALIA PTY LTD", "<BOTHKAMP AUSTRALIA A/C>,", "C/- KINGSTON ADMINISTRATION", "SERVICES PTY LTD", "LEVEL 2/76 KINGS PARK ROAD", "WEST PERTH WA", "Exception", "Payee instruction direct/bulk", "Nil holding on trading classes", "No Annual Report", "", "N", "N", "N", "N", "", "N (Default)", "", "B", "W9", "W8", "D", "CU", null)]
        public virtual void TestCase1812901_SearchByHolderID(
                    string hIN, 
                    string key, 
                    string type, 
                    string postcode, 
                    string dPID, 
                    string group, 
                    string brokerCode, 
                    string varField, 
                    string register, 
                    string taxCode, 
                    string keyModifier, 
                    string alternateID, 
                    string name, 
                    string address1, 
                    string address2, 
                    string address3, 
                    string address4, 
                    string address5, 
                    string warning1, 
                    string warning2, 
                    string warning3, 
                    string warning4, 
                    string warning5, 
                    string deceased, 
                    string exception, 
                    string suppress, 
                    string stopTrade, 
                    string retMail, 
                    string aRReport, 
                    string birthDate, 
                    string hVFFlag1, 
                    string hVFFlag2, 
                    string hVFFlag3, 
                    string hVFFlag4, 
                    string hVFFlag5, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "OL_Online",
                    "NAB_AUTO",
                    "18129",
                    "OL_SDM_StaticDetailMaintenance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18129: 01 - Search by Holder ID", @__tags);
#line 36
this.ScenarioSetup(scenarioInfo);
#line 37
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 38
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 39
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
  testRunner.And(string.Format("OLS01101 I Search the Holder as \"{0}\"", hIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.Then(string.Format("In OLS01102 I should see Holder Static Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", key, hIN, type, postcode, dPID, group, brokerCode, varField, register, taxCode, keyModifier, alternateID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 42
 testRunner.Then(string.Format("In OLS01102 I should see Holder Address Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" " +
                        "\"{5}\"", name, address1, address2, address3, address4, address5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 43
 testRunner.Then(string.Format("In OLS01102 I should see Holder Warning as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"", warning1, warning2, warning3, warning4, warning5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 44
 testRunner.Then(string.Format("In OLS01102 I should see Holder Flags as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}" +
                        "\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", deceased, exception, suppress, stopTrade, retMail, aRReport, birthDate, hVFFlag1, hVFFlag2, hVFFlag3, hVFFlag4, hVFFlag5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18130: 02 - Search by Holder Name")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("OL_Online")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("18130")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.TestCaseAttribute("I0032734596", "MILDENHALL  CAROLI", "IND", "3141", "62415726", "", "60254", "", "", "", "", "", "MILDENHALL", null)]
        [NUnit.Framework.TestCaseAttribute("X0053349706", "XIE         ZHONG LI", "IND", "2142", "50945055", "", "2662", "", "", "", "", "", "XIE", null)]
        [NUnit.Framework.TestCaseAttribute("C9999999147", "UK          DIRECTCREDIT", "CNT", "3001", "", "", "", "", "", "", "", "", "UK", null)]
        [NUnit.Framework.TestCaseAttribute("I0031315280", "LAVERY      HUGH  JOHN  LAVERY", "JNT", "4064", "31540343", "", "60254", "", "", "", "", "", "MR HUGH JOHN LAVERY", null)]
        [NUnit.Framework.TestCaseAttribute("I0035565469", "BOTHKAMP    AUSTRALIAPTYBOTHKA", "COY", "6005", "48873037", "", "60254", "", "", "", "", "", "BOTHKAMP AUSTRALIA PTY", null)]
        public virtual void TestCase1813002_SearchByHolderName(string hIN, string key, string type, string postcode, string dPID, string group, string brokerCode, string varField, string register, string taxCode, string keyModifier, string alternateID, string searchString, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "OL_Online",
                    "NAB_AUTO",
                    "18130",
                    "OL_SDM_StaticDetailMaintenance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18130: 02 - Search by Holder Name", @__tags);
#line 58
this.ScenarioSetup(scenarioInfo);
#line 59
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 60
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 61
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
  testRunner.And(string.Format("OLS01101 I Search the Holder as \"{0}\"", searchString), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
 testRunner.Then(string.Format("In OLS01102 I should see Holder Static Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", key, hIN, type, postcode, dPID, group, brokerCode, varField, register, taxCode, keyModifier, alternateID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18131: 03 - Search by Holder ID not an exact match")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("OL_Online")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("18131")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.TestCaseAttribute("X0051115481", "ICAITKEN    PTYLTD      AITKEN", "COY", "2536", "71010325", "", "4064", "", "", "", "", "", "I003488", null)]
        [NUnit.Framework.TestCaseAttribute("X0053349706", "XIE         ZHONG LI", "IND", "2142", "50945055", "", "2662", "", "", "", "", "", "X00543", null)]
        public virtual void TestCase1813103_SearchByHolderIDNotAnExactMatch(string hIN, string key, string type, string postcode, string dPID, string group, string brokerCode, string varField, string register, string taxCode, string keyModifier, string alternateID, string searchString, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "OL_Online",
                    "NAB_AUTO",
                    "18131",
                    "OL_SDM_StaticDetailMaintenance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18131: 03 - Search by Holder ID not an exact match", @__tags);
#line 78
this.ScenarioSetup(scenarioInfo);
#line 79
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 80
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 81
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
  testRunner.And(string.Format("OLS01101 I Search the Holder as \"{0}\"", searchString), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
 testRunner.Then(string.Format("In OLS01102 I should see Holder Static Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", key, hIN, type, postcode, dPID, group, brokerCode, varField, register, taxCode, keyModifier, alternateID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18132: 04 - Search by Holder Name not an exact match")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("18132")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.TestCaseAttribute("X0044473445", "CAROSELLI   JOHN", "IND", "3060", "45143877", "", "1227", "", "", "", "", "", "CAROLINE", null)]
        [NUnit.Framework.TestCaseAttribute("X0062631686", "ROBERTS     CHRISTJAMES", "IND", "2120", "64949418", "", "1227", "", "", "", "", "", "ROBERTS", null)]
        [NUnit.Framework.TestCaseAttribute("I0035136461", "DENNIS      GUY   MICHAE44", "IND", "2119", "54524031", "", "60254", "", "", "", "", "", "DENNIS", null)]
        [NUnit.Framework.TestCaseAttribute("I0035565469", "BOTHKAMP    AUSTRALIAPTYBOTHKA", "COY", "6005", "48873037", "", "60254", "", "", "", "", "", "BOTHKAMP", null)]
        [NUnit.Framework.TestCaseAttribute("X0050621138", "MITCHELL    ALLAN       A&LMIT", "JNT", "4655", "55126913", "", "4094", "", "", "", "", "", "MISS", null)]
        public virtual void TestCase1813204_SearchByHolderNameNotAnExactMatch(string hIN, string key, string type, string postcode, string dPID, string group, string brokerCode, string varField, string register, string taxCode, string keyModifier, string alternateID, string searchString, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "NAB_AUTO",
                    "18132",
                    "OL_SDM_StaticDetailMaintenance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18132: 04 - Search by Holder Name not an exact match", @__tags);
#line 94
this.ScenarioSetup(scenarioInfo);
#line 95
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 96
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 97
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 98
  testRunner.And(string.Format("OLS01101 I Search the Holder as \"{0}\"", searchString), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 99
 testRunner.Then(string.Format("In OLS01102 I should see Holder Static Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", key, hIN, type, postcode, dPID, group, brokerCode, varField, register, taxCode, keyModifier, alternateID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17821: Payee Action - Direct Credits Type")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("OL_Online")]
        [NUnit.Framework.CategoryAttribute("NAB_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("17821")]
        [NUnit.Framework.TestCaseAttribute("AUS", "X0019091414", "S", "BULLUSS     ROBERT", "X0019091414", "IND", "MR ROBERT BULLUSS,", "7 FINSBURY CLOSE", "ROWVILLE VIC", "", "", "", "10", "083-214", "19558733", "BULLUSS R", "", "", "", "", "Payee instruction direct/bulk", "Holder Extra details present", "Communication Methods Present", "No Annual Report", "", null)]
        [NUnit.Framework.TestCaseAttribute("GBR", "I0035337890", "S", "APPLEYARD   AVRIL V", "I0035337890", "IND", "MRS AVRIL V APPLEYARD", "20 GRANGE PARK TERRACE", "LEEDS", "WEST YORKSHIRE LS8 3BX", "UNITED KINGDOM", "", "30", "05-00-65", "10415411", "AVRIL VERONICA APPLEYARD", "YORKSHIRE BANK PLC", "293 ROUNDHAY RD", "LEEDS", "", "OUTSTANDING PAYMENT", "Overseas domicile", "Payee instruction direct/bulk", "Holder Extra details present", "No Annual Report", null)]
        public virtual void TestCase17821PayeeAction_DirectCreditsType(
                    string test, 
                    string updateOption, 
                    string action, 
                    string key, 
                    string hIN, 
                    string type, 
                    string name, 
                    string address1, 
                    string address2, 
                    string address3, 
                    string address4, 
                    string address5, 
                    string bankSystem, 
                    string bSB, 
                    string accountNbr, 
                    string accountName, 
                    string payeeAddress1, 
                    string payeeAddress2, 
                    string payeeAddress3, 
                    string payeeAddress4, 
                    string warning1, 
                    string warning2, 
                    string warning3, 
                    string warning4, 
                    string warning5, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "OL_Online",
                    "NAB_AUTO",
                    "OL_SDM_StaticDetailMaintenance",
                    "17821"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17821: Payee Action - Direct Credits Type", @__tags);
#line 115
this.ScenarioSetup(scenarioInfo);
#line 116
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 117
 testRunner.When("In SELCOY01 I select the company: \"NAB_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 118
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 119
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "Action",
                        "P"});
            table3.AddRow(new string[] {
                        "UpdateOption",
                        ""});
#line 120
  testRunner.And("In OLS01101 I enter following details as the update option as below:", ((string)(null)), table3, "And ");
#line 124
 testRunner.Then(string.Format("In OLS01103 I should see Holder Address Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" " +
                        "\"{5}\" \"{6}\" \"{7}\" \"{8}\"", key, hIN, type, name, address1, address2, address3, address4, address5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 125
  testRunner.And(string.Format("In OLS01103 I should see Payee Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6" +
                        "}\" \"{7}\"", bankSystem, bSB, accountNbr, accountName, payeeAddress1, payeeAddress2, payeeAddress3, payeeAddress4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 126
  testRunner.And(string.Format("In OLS01103 I should see Holder Warnings as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"", warning1, warning2, warning3, warning4, warning5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case -Direct Credit -End to End")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("OL_Online")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.TestCaseAttribute("AUS-M", "I0165168551", "S", "10100", "A", "062", "192", "343670", "AUTOMATION BANK ACCOUNT1", "10", "062-192", "", "", "", "", "M", "10101", "183", "334", "22067410", "NEW BANK ACCOUNT1", "183-334", "10102", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "U", "PI", null)]
        [NUnit.Framework.TestCaseAttribute("AUS-C", "I0030256514", "S", "10200", "A", "013", "006", "9901442", "AUTOMATION BANK ACCOUNT2", "10", "013-006", "", "", "", "", "C", "10201", "062", "192", "343670", "NEW BANK ACCOUNT2", "062-192", "10202", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "U", "PI", null)]
        [NUnit.Framework.TestCaseAttribute("NZL-M", "I0030297750", "S", "10300", "N", "", "", "14671-000", "AUTOMATION BANK ACCOUNT3", "20", "02-1235", "", "", "", "", "M", "10301", "", "", "4976-000", "NEW BANK ACCOUNT3", "01-1839", "10302", "02", "1235", "14671", "000", "01", "1839", "4976", "000", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "U", "PI", null)]
        [NUnit.Framework.TestCaseAttribute("NZL-C", "X0025957083", "S", "10400", "N", "", "", "14671-000", "AUTOMATION BANK ACCOUNT4", "20", "02-1235", "", "", "", "", "C", "10401", "", "", "4976-000", "NEW BANK ACCOUNT4", "01-1839", "10402", "02", "1235", "14671", "000", "01", "1839", "4976", "000", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "U", "PI", null)]
        [NUnit.Framework.TestCaseAttribute("GBR-M", "I0131736240", "S", "10500", "G", "", "", "10000400", "AUTOMATION BANK ACCOUNT5", "30", "05-00-65", "YORKSHIRE BANK PLC", "293 ROUNDHAY RD", "LEEDS", "", "M", "10501", "", "", "10000401", "NEW BANK ACCOUNT5", "16-08-88", "10502", "", "", "", "", "", "", "", "", "05", "00", "65", "16", "08", "88", "", "", "", "", "THE ROYAL BANK OF SCOTLAND PLC", "P O BOX 966 CONSORT HSE", "LOMBARD CENTRE EAST ST", "", "U", "PI", null)]
        [NUnit.Framework.TestCaseAttribute("GBR-C", "X0038768786", "S", "10600", "G", "", "", "10000400", "AUTOMATION BANK ACCOUNT6", "30", "05-00-65", "YORKSHIRE BANK PLC", "293 ROUNDHAY RD", "LEEDS", "", "C", "10601", "", "", "10000401", "NEW BANK ACCOUNT6", "16-08-88", "10602", "", "", "", "", "", "", "", "", "05", "00", "65", "16", "08", "88", "", "", "", "", "THE ROYAL BANK OF SCOTLAND PLC", "P O BOX 966 CONSORT HSE", "LOMBARD CENTRE EAST ST", "", "U", "PI", null)]
        [NUnit.Framework.TestCaseAttribute("USA-M", "X0037459194", "S", "10700", "U", "", "", "625991", "AUTOMATION BANK ACCOUNT7", "22", "011000536", "", "", "", "", "M", "10701", "", "", "11111111", "NEW BANK ACCOUNT7", "011904315", "10702", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "011000536", "S", "011904315", "C", "", "", "", "", "U", "PI", null)]
        [NUnit.Framework.TestCaseAttribute("USA-C", "I0030559762", "S", "10800", "U", "", "", "625991", "AUTOMATION BANK ACCOUNT8", "22", "011000536", "", "", "", "", "C", "10801", "", "", "11111111", "NEW BANK ACCOUNT7", "011904315", "10802", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "011000536", "C", "011904315", "S", "", "", "", "", "U", "PI", null)]
        public virtual void TestCase_DirectCredit_EndToEnd(
                    string test, 
                    string updateOption, 
                    string action, 
                    string tranNO, 
                    string instructionType, 
                    string bSB1, 
                    string bSB2, 
                    string accountNbr, 
                    string accountName, 
                    string bankSystem, 
                    string bSB, 
                    string payeeAddress1, 
                    string payeeAddress2, 
                    string payeeAddress3, 
                    string payeeAddress4, 
                    string changeModify, 
                    string newTranNO, 
                    string newBSB1, 
                    string newBSB2, 
                    string newAccountNbr, 
                    string newAccountName, 
                    string newBSB, 
                    string newTranNO1, 
                    string nZBank, 
                    string nZBranch, 
                    string nZAccountNbr, 
                    string nZSuffix, 
                    string newNZBank, 
                    string newNZBranch, 
                    string newNZAccountNbr, 
                    string newNZSuffix, 
                    string sortCode1, 
                    string sortCode2, 
                    string sortCode3, 
                    string newSortCode1, 
                    string newSortCode2, 
                    string newSortCode3, 
                    string routingNbr, 
                    string accountType, 
                    string newRoutingNbr, 
                    string newAccountType, 
                    string newPayeeAddress1, 
                    string newPayeeAddress2, 
                    string newPayeeAddress3, 
                    string newPayeeAddress4, 
                    string action1, 
                    string updateOption1, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "OL_Online",
                    "WES_AUTO",
                    "OL_SDM_StaticDetailMaintenance"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case -Direct Credit -End to End", @__tags);
#line 139
this.ScenarioSetup(scenarioInfo);
#line 140
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 141
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 142
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 143
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 144
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action1, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 145
 testRunner.When(string.Format("In OLS01303 I Add Payee Instructions as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\"" +
                        " \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\"", tranNO, instructionType, bSB1, bSB2, accountNbr, accountName, nZBank, nZBranch, nZAccountNbr, nZSuffix, sortCode1, sortCode2, sortCode3, routingNbr, accountType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 146
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 147
 testRunner.When(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table4.AddRow(new string[] {
                        "Action",
                        "P"});
            table4.AddRow(new string[] {
                        "UpdateOption",
                        ""});
#line 148
  testRunner.And("In OLS01101 I enter following details as the update option as below:", ((string)(null)), table4, "And ");
#line 152
 testRunner.Then(string.Format("In OLS01103 I should see Payee Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6" +
                        "}\" \"{7}\"", bankSystem, bSB, accountNbr, accountName, payeeAddress1, payeeAddress2, payeeAddress3, payeeAddress4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 153
 testRunner.When(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 154
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action1, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 155
 testRunner.When(string.Format("In OLS01303 I Change Payee Instructions as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{" +
                        "6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\"", changeModify, newTranNO, instructionType, newBSB1, newBSB2, newAccountNbr, newAccountName, newNZBank, newNZBranch, newNZAccountNbr, newNZSuffix, newSortCode1, newSortCode2, newSortCode3, newRoutingNbr, newAccountType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 156
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 157
 testRunner.When(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table5.AddRow(new string[] {
                        "Action",
                        "P"});
            table5.AddRow(new string[] {
                        "UpdateOption",
                        ""});
#line 158
  testRunner.And("In OLS01101 I enter following details as the update option as below:", ((string)(null)), table5, "And ");
#line 162
 testRunner.Then(string.Format("In OLS01103 I should see Payee Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6" +
                        "}\" \"{7}\"", bankSystem, newBSB, newAccountNbr, newAccountName, newPayeeAddress1, newPayeeAddress2, newPayeeAddress3, newPayeeAddress4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 163
 testRunner.When(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action1, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 164
  testRunner.And(string.Format("In OLS01303 I Delete Payee Instructions \"{0}\"", newTranNO1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table6.AddRow(new string[] {
                        "Action",
                        "P"});
            table6.AddRow(new string[] {
                        "UpdateOption",
                        ""});
#line 165
  testRunner.And("In OLS01101 I enter following details as the update option as below:", ((string)(null)), table6, "And ");
#line 169
 testRunner.Then("I should see the below ErrorMessage \"There are no payee details for this holder\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17504: 01 - Payee Action : Third Party Type - Add, Change/Modify & Dele" +
            "te")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("OL_Online")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("17504")]
        [NUnit.Framework.TestCaseAttribute("I0132235031", "S", "U", "PI", "10900", "P", "TEST AUTOMATION", "425 JOHNSTONE STREET", "426 JOHNSTONE STREET", "427 JOHNSTONE STREET", "ABBORTSFORD", "VIC", "3000", "M", "10901", "TEST AUTOMATION1", "426 JOHNSTONE STREET1", "427 JOHNSTONE STREET1", "428 JOHNSTONE STREET1", "ABBORTSFORD", "VIC", "3210", "10902", null)]
        [NUnit.Framework.TestCaseAttribute("X0008462771", "S", "U", "PI", "11100", "P", "TEST AUTOMATION1", "425 JOHNSTONE STREET", "426 JOHNSTONE STREET", "427 JOHNSTONE STREET", "ABBORTSFORD", "UNITED STATES", "USA", "C", "11101", "TEST AUTOMATION2", "426 JOHNSTONE STREET2", "427 JOHNSTONE STREET2", "428 JOHNSTONE STREET2", "ABBORTSFORD", "UNITED STATES", "USA", "11102", null)]
        public virtual void TestCase1750401_PayeeActionThirdPartyType_AddChangeModifyDelete(
                    string updateOption, 
                    string action, 
                    string action1, 
                    string updateOption1, 
                    string tranNO, 
                    string instructionType, 
                    string payeeeAddress1, 
                    string payeeeAddress2, 
                    string payeeeAddress3, 
                    string payeeeAddress4, 
                    string payeeeAddress5, 
                    string payeeeAddress6, 
                    string payeePostcode, 
                    string changeModify, 
                    string newTranNO, 
                    string newPayeeeAddress1, 
                    string newPayeeeAddress2, 
                    string newPayeeeAddress3, 
                    string newPayeeeAddress4, 
                    string newPayeeeAddress5, 
                    string newPayeeeAddress6, 
                    string newPayeePostcode, 
                    string newTranNO1, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "OL_Online",
                    "WES_AUTO",
                    "OL_SDM_StaticDetailMaintenance",
                    "17504"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17504: 01 - Payee Action : Third Party Type - Add, Change/Modify & Dele" +
                    "te", @__tags);
#line 187
this.ScenarioSetup(scenarioInfo);
#line 188
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 189
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 190
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 191
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 192
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action1, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 193
 testRunner.When(string.Format("In OLS01301 I Add Third Party Payee Instructions as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"" +
                        " \"{5}\" \"{6}\" \"{7}\" \"{8}\"", tranNO, instructionType, payeeeAddress1, payeeeAddress2, payeeeAddress3, payeeeAddress4, payeeeAddress5, payeeeAddress6, payeePostcode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table7.AddRow(new string[] {
                        "Action",
                        "P"});
            table7.AddRow(new string[] {
                        "UpdateOption",
                        ""});
#line 194
  testRunner.And("In OLS01101 I enter following details as the update option as below:", ((string)(null)), table7, "And ");
#line 198
 testRunner.Then(string.Format("In OLS01103 I should see Holder Payee Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{" +
                        "5}\" \"{6}\"", payeeeAddress1, payeeeAddress2, payeeeAddress3, payeeeAddress4, payeeeAddress5, payeeeAddress6, payeePostcode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 199
 testRunner.When(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action1, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 200
  testRunner.And(string.Format("In OLS01301 I Change Third Party Payee Instructions as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{" +
                        "4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\"", changeModify, newTranNO, instructionType, newPayeeeAddress1, newPayeeeAddress2, newPayeeeAddress3, newPayeeeAddress4, newPayeeeAddress5, newPayeeeAddress6, newPayeePostcode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table8.AddRow(new string[] {
                        "Action",
                        "P"});
            table8.AddRow(new string[] {
                        "UpdateOption",
                        ""});
#line 201
  testRunner.And("In OLS01101 I enter following details as the update option as below:", ((string)(null)), table8, "And ");
#line 205
 testRunner.Then(string.Format("In OLS01103 I should see Holder Payee Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{" +
                        "5}\" \"{6}\"", newPayeeeAddress1, newPayeeeAddress2, newPayeeeAddress3, newPayeeeAddress4, newPayeeeAddress5, newPayeeeAddress6, newPayeePostcode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 206
 testRunner.When(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action1, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 207
  testRunner.And(string.Format("In OLS01303 I Delete Payee Instructions \"{0}\"", newTranNO1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table9.AddRow(new string[] {
                        "Action",
                        "P"});
            table9.AddRow(new string[] {
                        "UpdateOption",
                        ""});
#line 208
  testRunner.And("In OLS01101 I enter following details as the update option as below:", ((string)(null)), table9, "And ");
#line 212
 testRunner.Then("I should see the below ErrorMessage \"There are no payee details for this holder\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17819: 02 - Payee Action : Bulk Payment Type - Add, Change/Modify & Del" +
            "ete")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("OL_Online")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("17819")]
        [NUnit.Framework.TestCaseAttribute("I0132235031", "S", "U", "PI", "11200", "B", "M", "11201", "11202", "45", "TEST AUTOMATION1", "99", "TEST AUTOMATION2", "**     BANK UNKNOWN    **", null)]
        [NUnit.Framework.TestCaseAttribute("X0009219722", "S", "U", "PI", "11300", "B", "C", "11301", "11302", "45", "TEST AUTOMATION2", "99", "TEST AUTOMATION3", "**     BANK UNKNOWN    **", null)]
        public virtual void TestCase1781902_PayeeActionBulkPaymentType_AddChangeModifyDelete(string updateOption, string action, string action1, string updateOption1, string tranNO, string instructionType, string changeModify, string newTranNO, string newTranNO1, string bankSystem, string accountName, string newBankSystem, string newAccountName, string payeeAddress, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "OL_Online",
                    "WES_AUTO",
                    "OL_SDM_StaticDetailMaintenance",
                    "17819"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17819: 02 - Payee Action : Bulk Payment Type - Add, Change/Modify & Del" +
                    "ete", @__tags);
#line 225
this.ScenarioSetup(scenarioInfo);
#line 226
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 227
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 228
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 229
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 230
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action1, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 231
 testRunner.When(string.Format("In OLS01301 I Add Bulk Payment Instructions as \"{0}\" \"{1}\" \"{2}\" \"{3}\"", tranNO, instructionType, bankSystem, accountName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table10.AddRow(new string[] {
                        "Action",
                        "P"});
            table10.AddRow(new string[] {
                        "UpdateOption",
                        ""});
#line 232
  testRunner.And("In OLS01101 I enter following details as the update option as below:", ((string)(null)), table10, "And ");
#line 236
 testRunner.Then(string.Format("In OLS01103 I should see Holder Bulk Payment Instructions as \"{0}\" \"{1}\" \"{2}\"", bankSystem, accountName, payeeAddress), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 237
 testRunner.When(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action1, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 238
  testRunner.And(string.Format("In OLS01301 I Change Bulk Payment Instructions as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"", changeModify, newTranNO, instructionType, newBankSystem, newAccountName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table11.AddRow(new string[] {
                        "Action",
                        "P"});
            table11.AddRow(new string[] {
                        "UpdateOption",
                        ""});
#line 239
  testRunner.And("In OLS01101 I enter following details as the update option as below:", ((string)(null)), table11, "And ");
#line 243
 testRunner.Then(string.Format("In OLS01103 I should see Holder Bulk Payment Instructions as \"{0}\" \"{1}\" \"{2}\"", newBankSystem, newAccountName, payeeAddress), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 244
 testRunner.When(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action1, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 245
  testRunner.And(string.Format("In OLS01303 I Delete Payee Instructions \"{0}\"", newTranNO1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table12.AddRow(new string[] {
                        "Action",
                        "P"});
            table12.AddRow(new string[] {
                        "UpdateOption",
                        ""});
#line 246
  testRunner.And("In OLS01101 I enter following details as the update option as below:", ((string)(null)), table12, "And ");
#line 250
 testRunner.Then("I should see the below ErrorMessage \"There are no payee details for this holder\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17820: 03 - Payee Action : Foreign Cheque Type - Add, Change/Modify & D" +
            "elete")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("OL_Online")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("17820")]
        [NUnit.Framework.TestCaseAttribute("I0030414730", "S", "U", "PI", "11400", "F", "M", "11401", "11402", "GBP", "USD", "Payee Instruction: Foreign Chq", "Holder Extra details present", "No DPID allocated", "No Annual Report", "", null)]
        public virtual void TestCase1782003_PayeeActionForeignChequeType_AddChangeModifyDelete(
                    string updateOption, 
                    string action, 
                    string action1, 
                    string updateOption1, 
                    string tranNO, 
                    string instructionType, 
                    string changeModify, 
                    string newTranNO, 
                    string newTranNO1, 
                    string currency, 
                    string newCurrency, 
                    string warning1, 
                    string warning2, 
                    string warning3, 
                    string warning4, 
                    string warning5, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "OL_Online",
                    "WES_AUTO",
                    "OL_SDM_StaticDetailMaintenance",
                    "17820"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17820: 03 - Payee Action : Foreign Cheque Type - Add, Change/Modify & D" +
                    "elete", @__tags);
#line 262
this.ScenarioSetup(scenarioInfo);
#line 263
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 264
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 265
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 266
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 267
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action1, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 268
 testRunner.When(string.Format("In OLS01301 I Add Foreign Cheque Instructions as \"{0}\" \"{1}\" \"{2}\"", tranNO, instructionType, currency), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table13.AddRow(new string[] {
                        "Action",
                        "P"});
            table13.AddRow(new string[] {
                        "UpdateOption",
                        ""});
#line 269
  testRunner.And("In OLS01101 I enter following details as the update option as below:", ((string)(null)), table13, "And ");
#line 273
 testRunner.Then(string.Format("In OLS01103 I should see Holder Warnings as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"", warning1, warning2, warning3, warning4, warning5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 274
 testRunner.When(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action1, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 275
  testRunner.And(string.Format("In OLS01301 I Change Foreign Cheque Instructions as \"{0}\" \"{1}\" \"{2}\" \"{3}\"", changeModify, newTranNO, instructionType, newCurrency), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table14.AddRow(new string[] {
                        "Action",
                        "P"});
            table14.AddRow(new string[] {
                        "UpdateOption",
                        ""});
#line 276
  testRunner.And("In OLS01101 I enter following details as the update option as below:", ((string)(null)), table14, "And ");
#line 280
 testRunner.Then(string.Format("In OLS01103 I should see Holder Warnings as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"", warning1, warning2, warning3, warning4, warning5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 281
 testRunner.When(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action1, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 282
  testRunner.And(string.Format("In OLS01303 I Delete Payee Instructions \"{0}\"", newTranNO1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table15.AddRow(new string[] {
                        "Action",
                        "P"});
            table15.AddRow(new string[] {
                        "UpdateOption",
                        ""});
#line 283
  testRunner.And("In OLS01101 I enter following details as the update option as below:", ((string)(null)), table15, "And ");
#line 287
 testRunner.Then("I should see the below ErrorMessage \"There are no payee details for this holder\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18305: 05 - Free format noting (N1-N5) Update noting with no data chang" +
            "e")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("OL_Online")]
        [NUnit.Framework.CategoryAttribute("ANZ_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("18305")]
        [NUnit.Framework.TestCaseAttribute("N1", "S", "U", "I0010425832", "15000", null)]
        public virtual void TestCase1830505_FreeFormatNotingN1_N5UpdateNotingWithNoDataChange(string updateOption1, string action, string action1, string updateOption, string newTranNO, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "OL_Online",
                    "ANZ_AUTO",
                    "OL_SDM_StaticDetailMaintenance",
                    "18305"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18305: 05 - Free format noting (N1-N5) Update noting with no data chang" +
                    "e", @__tags);
#line 444
this.ScenarioSetup(scenarioInfo);
#line 445
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 446
 testRunner.When("In SELCOY01 I select the company: \"ANZ_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 447
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 448
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 449
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action1, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 450
 testRunner.When(string.Format("In OLS01404 I Change Noting as \"{0}\"", newTranNO), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 451
 testRunner.Then("I should see the below ErrorMessage \"Warning : No changes made to record.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18256: 03- Display Noting - Holder with N1-N5 Notings")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("OL_Online")]
        [NUnit.Framework.CategoryAttribute("ANZ_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("18256")]
        [NUnit.Framework.TestCaseAttribute("N", "", "S", "I0010425832", "P1. Power of Attorney (1)", "P2. Power of Attorney (2)", "P3. Power of Attorney (3)", "D1. Deceased Estate noting (1)", "D2. Deceased Estate noting (2)", "D3. Deceased Estate noting (3)", "D4. Deceased Estate noting (4)", "D5. Deceased Estate noting (5)", "N1. Free format noting (1)", "N2. Free format noting (2)", "N3. Free format noting (3)", "N4. Free format noting (4)", "N5. Free format noting (5)", null)]
        public virtual void TestCase1825603_DisplayNoting_HolderWithN1_N5Notings(
                    string action1, 
                    string updateOption1, 
                    string action, 
                    string updateOption, 
                    string p1, 
                    string p2, 
                    string p3, 
                    string d1, 
                    string d2, 
                    string d3, 
                    string d4, 
                    string d5, 
                    string n1, 
                    string n2, 
                    string n3, 
                    string n4, 
                    string n5, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "OL_Online",
                    "ANZ_AUTO",
                    "OL_SDM_StaticDetailMaintenance",
                    "18256"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18256: 03- Display Noting - Holder with N1-N5 Notings", @__tags);
#line 462
this.ScenarioSetup(scenarioInfo);
#line 463
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 464
 testRunner.When("In SELCOY01 I select the company: \"ANZ_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 465
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 466
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 467
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action1, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 468
 testRunner.Then(string.Format("In OLS01104 I should see Notings Display menu as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{" +
                        "5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\"", p1, p2, p3, d1, d2, d3, d4, d5, n1, n2, n3, n4, n5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18496: 05 - Deceased Estate noting  - Update D1 noting with no data cha" +
            "nge")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("OL_Online")]
        [NUnit.Framework.CategoryAttribute("ANZ_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("18496")]
        [NUnit.Framework.TestCaseAttribute("S", "I0010425832", "U", "D1", "30100", null)]
        public virtual void TestCase1849605_DeceasedEstateNoting_UpdateD1NotingWithNoDataChange(string action, string updateOption, string action1, string updateOption1, string tran, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "OL_Online",
                    "ANZ_AUTO",
                    "OL_SDM_StaticDetailMaintenance",
                    "18496"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18496: 05 - Deceased Estate noting  - Update D1 noting with no data cha" +
                    "nge", @__tags);
#line 480
this.ScenarioSetup(scenarioInfo);
#line 481
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 482
 testRunner.When("In SELCOY01 I select the company: \"ANZ_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 483
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 484
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 485
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action1, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 486
  testRunner.And(string.Format("In OLS01403 I change Deceased Estate Noting TranNo as \"{0}\"", tran), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 487
 testRunner.Then("I should see the below ErrorMessage \"Warning : No changes made to record.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18419: 04 - Power of Attorney - Update P1 noting with no data change")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("OL_Online")]
        [NUnit.Framework.CategoryAttribute("ANZ_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("18419")]
        [NUnit.Framework.TestCaseAttribute("S", "I0010425832", "U", "P1", "30200", null)]
        public virtual void TestCase1841904_PowerOfAttorney_UpdateP1NotingWithNoDataChange(string action, string updateOption, string action1, string updateOption1, string tran, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "OL_Online",
                    "ANZ_AUTO",
                    "OL_SDM_StaticDetailMaintenance",
                    "18419"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18419: 04 - Power of Attorney - Update P1 noting with no data change", @__tags);
#line 497
this.ScenarioSetup(scenarioInfo);
#line 498
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 499
 testRunner.When("In SELCOY01 I select the company: \"ANZ_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 500
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 501
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 502
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action1, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 503
  testRunner.And(string.Format("In OLS01401 I change Power of Attorney Noting TranNo as \"{0}\"", tran), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 504
 testRunner.Then("I should see the below ErrorMessage \"Warning : No changes made to record.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18503: 01 - Display Noting - Holder without any Notings")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("OL_Online")]
        [NUnit.Framework.CategoryAttribute("ANZ_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("18503")]
        [NUnit.Framework.TestCaseAttribute("S", "X0046311183", "N", "", null)]
        public virtual void TestCase1850301_DisplayNoting_HolderWithoutAnyNotings(string action, string updateOption, string action1, string updateOption1, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "OL_Online",
                    "ANZ_AUTO",
                    "OL_SDM_StaticDetailMaintenance",
                    "18503"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18503: 01 - Display Noting - Holder without any Notings", @__tags);
#line 514
this.ScenarioSetup(scenarioInfo);
#line 515
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 516
 testRunner.When("In SELCOY01 I select the company: \"ANZ_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 517
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 518
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 519
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action1, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 520
 testRunner.Then("I should see the below ErrorMessage \"There are no notings present for this holder" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18342: 01 - Add Holder with different Holder Types")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("OL_Online")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("18342")]
        [NUnit.Framework.TestCaseAttribute("I0180005285", "U", "AH", "CNT", "6001", "", "", "", "59999", "", "", "DIRECT CREDIT", "CONTROL HOLDER", "C/- COMPUTERSHARE LIMITED", "PO BOX 103", "ABBOTSFORD", "VIC 3067", "N", "", "N", "", "A (Nominated)", "", "", "N", "39", "CR", "22", "DC", "DC", "N", "N", "N", "CREDIT      DIRECT", "", "", "Nil holding on trading classes", "Full Annual Report", "", "", "", "A", null)]
        [NUnit.Framework.TestCaseAttribute("I0030242084", "U", "AH", "IND", "5400", "", "", "", "59999", "", "", "MR ANTHONY ABELA", "13 ZAMBESI ROAD", "SEVEN HILLS", "BOULIVARD", "NSW", "AUSTRALIA", "N", "", "N", "", "R (Nominated)", "", "", "N", "39", "CR", "22", "DC", "DC", "N", "N", "N", "ABELA       ANTHON", "", "", "** LIKE HOLDER PRESENT **", "Nil holding on trading classes", "No DPID allocated", "Shareholder Review", "", "R", null)]
        [NUnit.Framework.TestCaseAttribute("I0035948449", "U", "AH", "JNT", "5073", "", "", "", "59999", "", "", "MR TEST BANSEMER +", "MRS TEST BANSEMER,", "7 COURTABIE AVENUE", "ROSTREVOR SA", "", "", "N", "", "N", "", "A (Nominated)", "", "", "N", "39", "CR", "22", "DC", "DC", "N", "N", "N", "BANSEMER    TEST", "56416019", "", "Nil holding on trading classes", "Full Annual Report", "", "", "", "A", null)]
        [NUnit.Framework.TestCaseAttribute("I0033358113", "U", "AH", "COY", "2059", "", "", "", "59999", "", "0034422877", "BISCIDALE PTY LTD", "<GORMAN SUPERANNUATION A/C>,", "PO BOX 101", "FREMANTLE WA", "", "", "N", "", "N", "", "N (Nominated)", "", "", "N", "39", "CR", "22", "DC", "DC", "N", "N", "N", "BISCIDALE   PTYLTD      GORMAN", "61799222", "", "Nil holding on trading classes", "No Annual Report", "", "", "", "N", null)]
        [NUnit.Framework.TestCaseAttribute("I0027496415", "U", "AH", "COY", "3205", "", "", "", "59999", "324234", "0034469652", "BOTHKAMP AUSTRALIA PTY LTD", "<BOTHKAMP AUSTRALIA A/C>,", "C/- KINGSTON ADMINISTRATION", "SERVICES PTY LTD", "LEVEL 2/76 KINGS PARK ROAD", "WEST PERTH WA", "N", "", "N", "", "N (Nominated)", "", "", "N", "39", "CR", "22", "DC", "DC", "N", "N", "N", "BOTHKAMP    AUSTRALIAPTY324234", "48873037", "", "** LIKE HOLDER PRESENT **", "Nil holding on trading classes", "No Annual Report", "", "", "N", null)]
        [NUnit.Framework.TestCaseAttribute("I0036044217", "U", "AH", "JNT", "NZL", "XXX", "", "22", "59999", "643543", "0034469654", "MRS SALLY BREMNER + MR THOMAS", "CRAIG + MR GEOFFREY SAUNDERS", "<CRAIG BREMNER FAMILY A/C>,", "10 WROXTON TERRACE MERIVALE", "10 WROXTON TERRACE MERIVALE", "CHRISTCHURCH 8014", "N", "", "N", "", "N (Nominated)", "", "", "N", "39", "CR", "22", "DC", "DC", "N", "N", "N", "BREMNER     SALLY       643543", "", "", "Overseas domicile", "Non standard tax rates", "Nil holding on trading classes", "No Annual Report", "", "N", null)]
        public virtual void TestCase1834201_AddHolderWithDifferentHolderTypes(
                    string hIN, 
                    string action, 
                    string updateOption, 
                    string type, 
                    string postcode, 
                    string taxcode, 
                    string group, 
                    string varField, 
                    string brokerCode, 
                    string keyModifier, 
                    string alternateID, 
                    string name, 
                    string address1, 
                    string address2, 
                    string address3, 
                    string address4, 
                    string address5, 
                    string deceased, 
                    string exception, 
                    string suppress, 
                    string retMail, 
                    string aReport1, 
                    string refID, 
                    string birthDate, 
                    string stopTrade, 
                    string hVFFlag1, 
                    string hVFFlag2, 
                    string hVFFlag3, 
                    string hVFFlag4, 
                    string hVFFlag5, 
                    string updateTFN, 
                    string updateExtraDetails, 
                    string updateEmpDetails, 
                    string key, 
                    string dPID, 
                    string register, 
                    string warning1, 
                    string warning2, 
                    string warning3, 
                    string warning4, 
                    string warning5, 
                    string aReport, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "OL_Online",
                    "WES_AUTO",
                    "OL_SDM_StaticDetailMaintenance",
                    "18342"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18342: 01 - Add Holder with different Holder Types", @__tags);
#line 530
this.ScenarioSetup(scenarioInfo);
#line 531
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 532
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 533
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 534
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 535
  testRunner.And(string.Format("In OLS01202 I enter Holder details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"" +
                        "{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\"", hIN, type, postcode, taxcode, group, varField, brokerCode, keyModifier, alternateID, name, address1, address2, address3, address4, address5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 536
  testRunner.And(string.Format("In OLS01202 I enter Holder Flags details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"" +
                        "{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\"", deceased, exception, suppress, retMail, aReport, refID, birthDate, stopTrade, hVFFlag1, hVFFlag2, hVFFlag3, hVFFlag4, hVFFlag5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 537
  testRunner.And(string.Format("In OLS01210 I enter confirmation details as \"{0}\" \"{1}\" \"{2}\"", updateTFN, updateExtraDetails, updateEmpDetails), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 538
 testRunner.When("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 539
  testRunner.And(string.Format("OLS01101 I Search the Holder as \"{0}\"", hIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 540
 testRunner.Then(string.Format("In OLS01102 I should see Holder Static Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", key, hIN, type, postcode, dPID, group, brokerCode, varField, register, taxcode, keyModifier, alternateID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 541
  testRunner.And(string.Format("In OLS01102 I should see Holder Address Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" " +
                        "\"{5}\"", name, address1, address2, address3, address4, address5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 542
  testRunner.And(string.Format("In OLS01102 I should see Holder Warning as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"", warning1, warning2, warning3, warning4, warning5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 543
  testRunner.And(string.Format("In OLS01102 I should see Holder Flags as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}" +
                        "\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", deceased, exception, suppress, stopTrade, retMail, aReport1, birthDate, hVFFlag1, hVFFlag2, hVFFlag3, hVFFlag4, hVFFlag5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18433: 02 - Add Holder : Esc validation - holder not saved")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("OL_Online")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("18433")]
        [NUnit.Framework.TestCaseAttribute("I0970063382", "U", "AH", "IND", "6001", "", "", "", "59999", "", "", "MS NICOLA BROADLEY", "CONTROL HOLDER", "C/- COMPUTERSHARE LIMITED", "PO BOX 103", "ABBOTSFORD", "VIC 3067", "N", "", "N", "", "", "", "N", "39", "CR", "22", "DC", "DC", "N", null)]
        public virtual void TestCase1843302_AddHolderEscValidation_HolderNotSaved(
                    string hIN, 
                    string action, 
                    string updateOption, 
                    string type, 
                    string postcode, 
                    string taxcode, 
                    string group, 
                    string varField, 
                    string brokerCode, 
                    string keyModifier, 
                    string alternateID, 
                    string name, 
                    string address1, 
                    string address2, 
                    string address3, 
                    string address4, 
                    string address5, 
                    string deceased, 
                    string exception, 
                    string suppress, 
                    string retMail, 
                    string refID, 
                    string birthDate, 
                    string stopTrade, 
                    string hVFFlag1, 
                    string hVFFlag2, 
                    string hVFFlag3, 
                    string hVFFlag4, 
                    string hVFFlag5, 
                    string aReport, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "OL_Online",
                    "WES_AUTO",
                    "OL_SDM_StaticDetailMaintenance",
                    "18433"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18433: 02 - Add Holder : Esc validation - holder not saved", @__tags);
#line 560
this.ScenarioSetup(scenarioInfo);
#line 561
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 562
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 563
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 564
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 565
  testRunner.And(string.Format("In OLS01202 I enter Holder details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"" +
                        "{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\"", hIN, type, postcode, taxcode, group, varField, brokerCode, keyModifier, alternateID, name, address1, address2, address3, address4, address5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 566
  testRunner.And(string.Format("In OLS01202 I enter Holder Flags details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"" +
                        "{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\"", deceased, exception, suppress, retMail, aReport, refID, birthDate, stopTrade, hVFFlag1, hVFFlag2, hVFFlag3, hVFFlag4, hVFFlag5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 567
 testRunner.When("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 568
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 569
  testRunner.And(string.Format("OLS01101 I Search the Holder as \"{0}\"", hIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 570
 testRunner.Then("I should see the below ErrorMessage \"The code you are searching for is not on fil" +
                    "e.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18439: 04 - Add Holder with Holder Extra")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("OL_Online")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("18439")]
        [NUnit.Framework.TestCaseAttribute("I0032960367", "U", "AH", "IND", "3067", "", "", "", "59999", "", "", "MR EXTRA DETAILS", "ADDRESS1", "ADDRESS2", "PO BOX 103", "ABBOTSFORD", "VIC 3067", "N", "", "N", "", "N (Nominated)", "", "", "N", "39", "CR", "22", "DC", "DC", "N", "Y", "N", "DETAILS     EXTRA", "36577907", "", "Nil holding on trading classes", "Holder Extra details present", "No Annual Report", "", "", "N", "20100", "200100", "0385100100", "0385100101", "0385100102", "0433123456", "AUTOMATION@COMPUTERSHARE.COM", "", "", "", "", "", "", "", "", "", "HE", "", "", null)]
        public virtual void TestCase1843904_AddHolderWithHolderExtra(
                    string hIN, 
                    string action, 
                    string updateOption, 
                    string type, 
                    string postcode, 
                    string taxcode, 
                    string group, 
                    string varField, 
                    string brokerCode, 
                    string keyModifier, 
                    string alternateID, 
                    string name, 
                    string address1, 
                    string address2, 
                    string address3, 
                    string address4, 
                    string address5, 
                    string deceased, 
                    string exception, 
                    string suppress, 
                    string retMail, 
                    string aReport1, 
                    string refID, 
                    string birthDate, 
                    string stopTrade, 
                    string hVFFlag1, 
                    string hVFFlag2, 
                    string hVFFlag3, 
                    string hVFFlag4, 
                    string hVFFlag5, 
                    string updateTFN, 
                    string updateExtraDetails, 
                    string updateEmpDetails, 
                    string key, 
                    string dPID, 
                    string register, 
                    string warning1, 
                    string warning2, 
                    string warning3, 
                    string warning4, 
                    string warning5, 
                    string aReport, 
                    string tran, 
                    string extraHolderID, 
                    string homeTell, 
                    string workTell, 
                    string fax, 
                    string mobile, 
                    string email, 
                    string flag1, 
                    string flag2, 
                    string flag3, 
                    string flag4, 
                    string flag5, 
                    string flag6, 
                    string flag7, 
                    string flag8, 
                    string flag9, 
                    string updateOption1, 
                    string returnedEmail, 
                    string emailFailCount, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "OL_Online",
                    "WES_AUTO",
                    "OL_SDM_StaticDetailMaintenance",
                    "18439"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18439: 04 - Add Holder with Holder Extra", @__tags);
#line 581
this.ScenarioSetup(scenarioInfo);
#line 582
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 583
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 584
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 585
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 586
  testRunner.And(string.Format("In OLS01202 I enter Holder details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"" +
                        "{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\"", hIN, type, postcode, taxcode, group, varField, brokerCode, keyModifier, alternateID, name, address1, address2, address3, address4, address5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 587
  testRunner.And(string.Format("In OLS01202 I enter Holder Flags details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"" +
                        "{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\"", deceased, exception, suppress, retMail, aReport, refID, birthDate, stopTrade, hVFFlag1, hVFFlag2, hVFFlag3, hVFFlag4, hVFFlag5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 588
  testRunner.And(string.Format("In OLS01210 I enter confirmation details as \"{0}\" \"{1}\" \"{2}\"", updateTFN, updateExtraDetails, updateEmpDetails), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 589
  testRunner.And(string.Format("In OLS01801 I Add Holder Extra Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6" +
                        "}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"{17}\"", tran, extraHolderID, homeTell, workTell, fax, mobile, email, returnedEmail, emailFailCount, flag1, flag2, flag3, flag4, flag5, flag6, flag7, flag8, flag9), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 590
 testRunner.When("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 591
  testRunner.And(string.Format("OLS01101 I Search the Holder as \"{0}\"", hIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 592
 testRunner.Then(string.Format("In OLS01102 I should see Holder Static Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", key, hIN, type, postcode, dPID, group, brokerCode, varField, register, taxcode, keyModifier, alternateID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 593
  testRunner.And(string.Format("In OLS01102 I should see Holder Address Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" " +
                        "\"{5}\"", name, address1, address2, address3, address4, address5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 594
  testRunner.And(string.Format("In OLS01102 I should see Holder Warning as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"", warning1, warning2, warning3, warning4, warning5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 595
  testRunner.And(string.Format("In OLS01102 I should see Holder Flags as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}" +
                        "\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", deceased, exception, suppress, stopTrade, retMail, aReport1, birthDate, hVFFlag1, hVFFlag2, hVFFlag3, hVFFlag4, hVFFlag5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 596
 testRunner.When(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 597
 testRunner.Then(string.Format("In OLS01801 I should see Holder Extra Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{" +
                        "5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\"", extraHolderID, homeTell, workTell, fax, mobile, email, flag1, flag2, flag3, flag4, flag5, flag6, flag7, flag8, flag9), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18441: 06 - Add Holder with Employee Details")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("OL_Online")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("18441")]
        [NUnit.Framework.TestCaseAttribute("I0035493034", "U", "AH", "COY", "3175", "", "", "", "59999", "", "", "MR ED UPDATE", "ADDRESS1", "ADDRESS2", "ADDRESS3", "ADDRESS4", "ADDRESS5", "N", "", "N", "", "N (Nominated)", "", "", "N", "39", "CR", "22", "DC", "DC", "N", "N", "Y", "UPDATE      ED", "", "", "Nil holding on trading classes", "No DPID allocated", "No Annual Report", "", "", "N", "20300", "0000012345", "01/01/2015", "E", "EEE", "14", "ED", null)]
        public virtual void TestCase1844106_AddHolderWithEmployeeDetails(
                    string hIN, 
                    string action, 
                    string updateOption, 
                    string type, 
                    string postcode, 
                    string taxcode, 
                    string group, 
                    string varField, 
                    string brokerCode, 
                    string keyModifier, 
                    string alternateID, 
                    string name, 
                    string address1, 
                    string address2, 
                    string address3, 
                    string address4, 
                    string address5, 
                    string deceased, 
                    string exception, 
                    string suppress, 
                    string retMail, 
                    string aReport1, 
                    string refID, 
                    string birthDate, 
                    string stopTrade, 
                    string hVFFlag1, 
                    string hVFFlag2, 
                    string hVFFlag3, 
                    string hVFFlag4, 
                    string hVFFlag5, 
                    string updateTFN, 
                    string updateExtraDetails, 
                    string updateEmpDetails, 
                    string key, 
                    string dPID, 
                    string register, 
                    string warning1, 
                    string warning2, 
                    string warning3, 
                    string warning4, 
                    string warning5, 
                    string aReport, 
                    string tranNo, 
                    string employeeID, 
                    string effectiveDate, 
                    string employeeStatus, 
                    string leaverCode, 
                    string payrollID, 
                    string updateOption1, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "OL_Online",
                    "WES_AUTO",
                    "OL_SDM_StaticDetailMaintenance",
                    "18441"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18441: 06 - Add Holder with Employee Details", @__tags);
#line 641
this.ScenarioSetup(scenarioInfo);
#line 642
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 643
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 644
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 645
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 646
  testRunner.And(string.Format("In OLS01202 I enter Holder details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"" +
                        "{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\"", hIN, type, postcode, taxcode, group, varField, brokerCode, keyModifier, alternateID, name, address1, address2, address3, address4, address5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 647
  testRunner.And(string.Format("In OLS01202 I enter Holder Flags details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"" +
                        "{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\"", deceased, exception, suppress, retMail, aReport, refID, birthDate, stopTrade, hVFFlag1, hVFFlag2, hVFFlag3, hVFFlag4, hVFFlag5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 648
  testRunner.And(string.Format("In OLS01210 I enter confirmation details as \"{0}\" \"{1}\" \"{2}\"", updateTFN, updateExtraDetails, updateEmpDetails), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 649
  testRunner.And(string.Format("In EOL01701 I Add ESS Employee Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4} \"{5}\"", tranNo, employeeID, effectiveDate, employeeStatus, leaverCode, payrollID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 650
 testRunner.Then(string.Format("In OLS01102 I should see Holder Static Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", key, hIN, type, postcode, dPID, group, brokerCode, varField, register, taxcode, keyModifier, alternateID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 651
  testRunner.And(string.Format("In OLS01102 I should see Holder Address Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" " +
                        "\"{5}\"", name, address1, address2, address3, address4, address5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 652
  testRunner.And(string.Format("In OLS01102 I should see Holder Warning as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"", warning1, warning2, warning3, warning4, warning5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 653
  testRunner.And(string.Format("In OLS01102 I should see Holder Flags as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}" +
                        "\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", deceased, exception, suppress, stopTrade, retMail, aReport1, birthDate, hVFFlag1, hVFFlag2, hVFFlag3, hVFFlag4, hVFFlag5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 654
 testRunner.When(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 655
  testRunner.And(string.Format("In EOL01701 I should see ESS Employee Details as \"{0}\" \"{1}\" \"{2}\" \"{3} \"{4}\"", employeeID, effectiveDate, employeeStatus, leaverCode, payrollID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18782: 02 - Update Menu Option - enable SC Option")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("OL_Online")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("18782")]
        [NUnit.Framework.TestCaseAttribute("S", "X0009828133", "AH. Add Holder(s)", "NA. Name and Address changes", "HE. Holder Extra Details", "UD. Unconfirmed Deceased", "CD. Confirmed Deceased", "PI. Payee Instructions", "WR. Overseas Wire Instructions", "CY. Charity Election", "ED. Employee Details", "VP. Vesting Performance Schedule Change", "UX. US Taxpayer Details - Investors", "IR. IRL Taxpayer Details", "ZA. ZAF Taxpayer Details", "D1. Deceased Estate notings (1)", "D2. Deceased Estate notings (2)", "D3. Deceased Estate notings (3)", "D4. Deceased Estate notings (4)", "D5. Deceased Estate notings (5)", "P1. Power of Attorney (1)", "P2. Power of Attorney (2)", "P3. Power of Attorney (3)", "N1. Free format noting (1)", "N2. Free format noting (2)", "N3. Free format noting (3)", "N4. Free format noting (4)", "N5. Free format noting (5)", "U", "HE", "20500", "", "0385100100", "0385100101", "0385100102", "0433100100", "AUTOMATION@CPU.COM.AU", "", "", "", "", "", "", "", "", "", "SC. Shareholder Communication Methods", "", "", "", null)]
        public virtual void TestCase1878202_UpdateMenuOption_EnableSCOption(
                    string action, 
                    string updateOption, 
                    string aH, 
                    string nA, 
                    string hE, 
                    string uD, 
                    string cD, 
                    string pI, 
                    string wR, 
                    string cY, 
                    string eD, 
                    string vP, 
                    string uX, 
                    string iR, 
                    string zA, 
                    string d1, 
                    string d2, 
                    string d3, 
                    string d4, 
                    string d5, 
                    string p1, 
                    string p2, 
                    string p3, 
                    string n1, 
                    string n2, 
                    string n3, 
                    string n4, 
                    string n5, 
                    string action1, 
                    string updateOption1, 
                    string tran, 
                    string extraHolderID, 
                    string homeTell, 
                    string workTell, 
                    string fax, 
                    string mobile, 
                    string email, 
                    string flag1, 
                    string flag2, 
                    string flag3, 
                    string flag4, 
                    string flag5, 
                    string flag6, 
                    string flag7, 
                    string flag8, 
                    string flag9, 
                    string sC, 
                    string updateOption2, 
                    string returnedEmail, 
                    string emailFailCount, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "OL_Online",
                    "WES_AUTO",
                    "OL_SDM_StaticDetailMaintenance",
                    "18782"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18782: 02 - Update Menu Option - enable SC Option", @__tags);
#line 686
this.ScenarioSetup(scenarioInfo);
#line 687
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 688
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 689
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 690
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 691
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action1, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 692
  testRunner.And(string.Format("In OLS01801 I Add Holder Extra Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6" +
                        "}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"{17}\"", tran, extraHolderID, homeTell, workTell, fax, mobile, email, returnedEmail, emailFailCount, flag1, flag2, flag3, flag4, flag5, flag6, flag7, flag8, flag9), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 693
  testRunner.And("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 694
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action1, updateOption2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 695
 testRunner.Then(string.Format("In OLS01120 I should see Static Details menu options Part1 as \"{0}\" \"{1}\" \"{2}\" \"" +
                        "{3}\" \"{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", aH, nA, hE, uD, cD, pI, wR, eD, vP, uX, iR, zA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 696
  testRunner.And(string.Format("In OLS01120 I should see Static Details menu options Notings as \"{0}\" \"{1}\" \"{2}\"" +
                        " \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\"", d1, d2, d3, d4, d5, p1, p2, p3, n1, n2, n3, n4, n5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 697
  testRunner.And(string.Format("In OLS01120 I should see Static Details menu options Part2 as \"{0}\"", cY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 698
  testRunner.And(string.Format("In OLS01120 I should see Static Details menu options Part2 as \"{0}\"", sC), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 699
 testRunner.When("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 700
 testRunner.Then("I expect to be in the \"OLS01101\" Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 19920: 03 - Update Menu Option - enable FIN Options-Test1")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("OL_Online")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("19920")]
        [NUnit.Framework.TestCaseAttribute("N0330344571", "S", "AH. Add Holder(s)", "NA. Name and Address changes", "HE. Holder Extra Details", "UD. Unconfirmed Deceased", "CD. Confirmed Deceased", "PI. Payee Instructions", "WR. Overseas Wire Instructions", "CY. Charity Election", "ED. Employee Details", "VP. Vesting Performance Schedule Change", "UX. US Taxpayer Details - Investors", "IR. IRL Taxpayer Details", "ZA. ZAF Taxpayer Details", "D1. Deceased Estate notings (1)", "D2. Deceased Estate notings (2)", "D3. Deceased Estate notings (3)", "D4. Deceased Estate notings (4)", "D5. Deceased Estate notings (5)", "P1. Power of Attorney (1)", "P2. Power of Attorney (2)", "P3. Power of Attorney (3)", "N1. Free format noting (1)", "N2. Free format noting (2)", "N3. Free format noting (3)", "N4. Free format noting (4)", "N5. Free format noting (5)", "U", "", "FC. Change FIN", "FG. Generate New FIN", null)]
        public virtual void TestCase1992003_UpdateMenuOption_EnableFINOptions_Test1(
                    string updateOption, 
                    string action, 
                    string aH, 
                    string nA, 
                    string hE, 
                    string uD, 
                    string cD, 
                    string pI, 
                    string wR, 
                    string cY, 
                    string eD, 
                    string vP, 
                    string uX, 
                    string iR, 
                    string zA, 
                    string d1, 
                    string d2, 
                    string d3, 
                    string d4, 
                    string d5, 
                    string p1, 
                    string p2, 
                    string p3, 
                    string n1, 
                    string n2, 
                    string n3, 
                    string n4, 
                    string n5, 
                    string action1, 
                    string updateOption1, 
                    string fC, 
                    string fG, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "OL_Online",
                    "WES_AUTO",
                    "OL_SDM_StaticDetailMaintenance",
                    "19920"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 19920: 03 - Update Menu Option - enable FIN Options-Test1", @__tags);
#line 712
this.ScenarioSetup(scenarioInfo);
#line 713
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 714
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 715
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 716
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 717
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action1, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 718
 testRunner.Then(string.Format("In OLS01120 I should see Static Details menu options Part1 as \"{0}\" \"{1}\" \"{2}\" \"" +
                        "{3}\" \"{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", aH, nA, hE, uD, cD, pI, wR, eD, vP, uX, iR, zA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 719
  testRunner.And(string.Format("In OLS01120 I should see Static Details menu options Notings as \"{0}\" \"{1}\" \"{2}\"" +
                        " \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\"", d1, d2, d3, d4, d5, p1, p2, p3, n1, n2, n3, n4, n5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 720
  testRunner.And(string.Format("In OLS01120 I should see Static Details menu options Part2 as \"{0}\"", fC), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 721
  testRunner.And(string.Format("In OLS01120 I should see Static Details menu options Part2 as \"{0}\"", fG), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 722
 testRunner.When("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 723
 testRunner.Then("I expect to be in the \"OLS01101\" Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 19920: 03 - Update Menu Option - enable FIN Options-Test2")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("OL_Online")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("19920")]
        [NUnit.Framework.TestCaseAttribute("N0330344571", "S", "AH. Add Holder(s)", "NA. Name and Address changes", "HE. Holder Extra Details", "UD. Unconfirmed Deceased", "CD. Confirmed Deceased", "PI. Payee Instructions", "WR. Overseas Wire Instructions", "CY. Charity Election", "ED. Employee Details", "VP. Vesting Performance Schedule Change", "UX. US Taxpayer Details - Investors", "IR. IRL Taxpayer Details", "ZA. ZAF Taxpayer Details", "D1. Deceased Estate notings (1)", "D2. Deceased Estate notings (2)", "D3. Deceased Estate notings (3)", "D4. Deceased Estate notings (4)", "D5. Deceased Estate notings (5)", "P1. Power of Attorney (1)", "P2. Power of Attorney (2)", "P3. Power of Attorney (3)", "N1. Free format noting (1)", "N2. Free format noting (2)", "N3. Free format noting (3)", "N4. Free format noting (4)", "N5. Free format noting (5)", "U", "", "FL. Load CSN FIN", null)]
        public virtual void TestCase1992003_UpdateMenuOption_EnableFINOptions_Test2(
                    string updateOption, 
                    string action, 
                    string aH, 
                    string nA, 
                    string hE, 
                    string uD, 
                    string cD, 
                    string pI, 
                    string wR, 
                    string cY, 
                    string eD, 
                    string vP, 
                    string uX, 
                    string iR, 
                    string zA, 
                    string d1, 
                    string d2, 
                    string d3, 
                    string d4, 
                    string d5, 
                    string p1, 
                    string p2, 
                    string p3, 
                    string n1, 
                    string n2, 
                    string n3, 
                    string n4, 
                    string n5, 
                    string action1, 
                    string updateOption1, 
                    string fL, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "OL_Online",
                    "WES_AUTO",
                    "OL_SDM_StaticDetailMaintenance",
                    "19920"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 19920: 03 - Update Menu Option - enable FIN Options-Test2", @__tags);
#line 735
this.ScenarioSetup(scenarioInfo);
#line 736
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 737
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 738
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 739
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 740
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action1, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 741
 testRunner.Then(string.Format("In OLS01120 I should see Static Details menu options Part1 as \"{0}\" \"{1}\" \"{2}\" \"" +
                        "{3}\" \"{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", aH, nA, hE, uD, cD, pI, wR, eD, vP, uX, iR, zA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 742
  testRunner.And(string.Format("In OLS01120 I should see Static Details menu options Notings as \"{0}\" \"{1}\" \"{2}\"" +
                        " \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\"", d1, d2, d3, d4, d5, p1, p2, p3, n1, n2, n3, n4, n5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 743
  testRunner.And(string.Format("In OLS01120 I should see Static Details menu options Part2 as \"{0}\"", fL), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 744
 testRunner.When("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 745
 testRunner.Then("I expect to be in the \"OLS01101\" Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18447: 01 - Name & Address Change with different Holder Types")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("18447")]
        [NUnit.Framework.TestCaseAttribute("I0030374649", "U", "NA", "IND", "6001", "", "", "", "57516", "", "", "CHNAGE DCREDIT", "CONTROL HOLDER", "C/- COMPUTERSHARE LIMITED", "PO BOX 103", "ABBOTSFORD", "VIC 3067", "N", "", "N", "", "A (Nominated)", "", "", "N", "39", "CR", "22", "DC", "DC", "N", "N", "N", "DCREDIT     CHNAGE", "36577907", "", "Payee instruction direct/bulk", "Full Annual Report", "", "", "", "A", "S", "I0030374649", "M", "40100", null)]
        public virtual void TestCase1844701_NameAddressChangeWithDifferentHolderTypes(
                    string hIN, 
                    string action, 
                    string updateOption, 
                    string type, 
                    string postcode, 
                    string taxcode, 
                    string group, 
                    string varField, 
                    string brokerCode, 
                    string keyModifier, 
                    string alternateID, 
                    string name, 
                    string address1, 
                    string address2, 
                    string address3, 
                    string address4, 
                    string address5, 
                    string deceased, 
                    string exception, 
                    string suppress, 
                    string retMail, 
                    string aReport1, 
                    string refID, 
                    string birthDate, 
                    string stopTrade, 
                    string hVFFlag1, 
                    string hVFFlag2, 
                    string hVFFlag3, 
                    string hVFFlag4, 
                    string hVFFlag5, 
                    string updateTFN, 
                    string updateExtraDetails, 
                    string updateEmpDetails, 
                    string key, 
                    string dPID, 
                    string register, 
                    string warning1, 
                    string warning2, 
                    string warning3, 
                    string warning4, 
                    string warning5, 
                    string aReport, 
                    string action1, 
                    string updateOption1, 
                    string modifyType, 
                    string tran, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "WES_AUTO",
                    "OL_SDM_StaticDetailMaintenance",
                    "18447"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18447: 01 - Name & Address Change with different Holder Types", @__tags);
#line 782
this.ScenarioSetup(scenarioInfo);
#line 783
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 784
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 785
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 786
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action1, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 787
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 788
  testRunner.And(string.Format("In OLS01201 I Change Holder details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" " +
                        "\"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\"", modifyType, tran, type, postcode, taxcode, group, varField, brokerCode, keyModifier, alternateID, name, address1, address2, address3, address4, address5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 789
  testRunner.And(string.Format("In OLS01202 I enter Holder Flags details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"" +
                        "{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\"", deceased, exception, suppress, retMail, aReport, refID, birthDate, stopTrade, hVFFlag1, hVFFlag2, hVFFlag3, hVFFlag4, hVFFlag5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 790
  testRunner.And(string.Format("In OLS01210 I enter confirmation details as \"{0}\" \"{1}\" \"{2}\"", updateTFN, updateExtraDetails, updateEmpDetails), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 791
 testRunner.When("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 792
  testRunner.And(string.Format("OLS01101 I Search the Holder as \"{0}\"", hIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 793
 testRunner.Then(string.Format("In OLS01102 I should see Holder Static Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", key, hIN, type, postcode, dPID, group, brokerCode, varField, register, taxcode, keyModifier, alternateID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 794
  testRunner.And(string.Format("In OLS01102 I should see Holder Address Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" " +
                        "\"{5}\"", name, address1, address2, address3, address4, address5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 795
  testRunner.And(string.Format("In OLS01102 I should see Holder Warning as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"", warning1, warning2, warning3, warning4, warning5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 796
  testRunner.And(string.Format("In OLS01102 I should see Holder Flags as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}" +
                        "\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", deceased, exception, suppress, stopTrade, retMail, aReport1, birthDate, hVFFlag1, hVFFlag2, hVFFlag3, hVFFlag4, hVFFlag5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18457: 06 - Name & Address Change - with Holder Extra")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("18457")]
        [NUnit.Framework.TestCaseAttribute("I0131542810", "U", "NA", "IND", "3067", "", "", "", "57516", "", "", "MR EXTRA DETAILS", "ADDRESS1", "ADDRESS2", "PO BOX 103", "ABBOTSFORD", "VIC 3067", "N", "", "N", "", "N (Nominated)", "", "", "N", "39", "CR", "22", "DC", "DC", "N", "Y", "N", "DETAILS     EXTRA", "36577907", "", "Payee instruction direct/bulk", "Holder Extra details present", "No Annual Report", "", "", "N", "40102", "200100", "0385100100", "0385100101", "0385100102", "0433123456", "AUTOMATION@COMPUTERSHARE.COM", "", "", "", "", "", "", "", "", "", "HE", "I0131542810", "M", "40101", "S", "M", "", "", null)]
        [NUnit.Framework.TestCaseAttribute("I0131543514", "U", "NA", "IND", "3067", "", "", "", "57516", "", "", "MR EDETAILS CHANGE", "ADDRESS1", "ADDRESS2", "PO BOX 103", "ABBOTSFORD", "VIC 3067", "N", "", "N", "", "N (Nominated)", "", "", "N", "39", "CR", "22", "DC", "DC", "N", "Y", "N", "CHANGE      EDETAI", "36577907", "", "Payee instruction direct/bulk", "Plan participant", "Holder Extra details present", "Communication Methods Present", "No Annual Report", "N", "40104", "200100", "0385100100", "0385100101", "0385100102", "0433123456", "AUTOMATION@COMPUTERSHARE.COM", "", "", "", "", "", "", "", "", "", "HE", "I0131543514", "M", "40103", "S", "C", "", "", null)]
        public virtual void TestCase1845706_NameAddressChange_WithHolderExtra(
                    string hIN, 
                    string action, 
                    string updateOption, 
                    string type, 
                    string postcode, 
                    string taxcode, 
                    string group, 
                    string varField, 
                    string brokerCode, 
                    string keyModifier, 
                    string alternateID, 
                    string name, 
                    string address1, 
                    string address2, 
                    string address3, 
                    string address4, 
                    string address5, 
                    string deceased, 
                    string exception, 
                    string suppress, 
                    string retMail, 
                    string aReport1, 
                    string refID, 
                    string birthDate, 
                    string stopTrade, 
                    string hVFFlag1, 
                    string hVFFlag2, 
                    string hVFFlag3, 
                    string hVFFlag4, 
                    string hVFFlag5, 
                    string updateTFN, 
                    string updateExtraDetails, 
                    string updateEmpDetails, 
                    string key, 
                    string dPID, 
                    string register, 
                    string warning1, 
                    string warning2, 
                    string warning3, 
                    string warning4, 
                    string warning5, 
                    string aReport, 
                    string tran, 
                    string extraHolderID, 
                    string homeTell, 
                    string workTell, 
                    string fax, 
                    string mobile, 
                    string email, 
                    string flag1, 
                    string flag2, 
                    string flag3, 
                    string flag4, 
                    string flag5, 
                    string flag6, 
                    string flag7, 
                    string flag8, 
                    string flag9, 
                    string updateOption1, 
                    string updateOption2, 
                    string modifyType, 
                    string tran1, 
                    string action2, 
                    string modifyType1, 
                    string returnedEmail, 
                    string emailFailCount, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "WES_AUTO",
                    "OL_SDM_StaticDetailMaintenance",
                    "18457"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18457: 06 - Name & Address Change - with Holder Extra", @__tags);
#line 807
this.ScenarioSetup(scenarioInfo);
#line 808
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 809
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 810
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 811
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action2, updateOption2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 812
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 813
  testRunner.And(string.Format("In OLS01201 I Change Holder details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" " +
                        "\"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\"", modifyType, tran1, type, postcode, taxcode, group, varField, brokerCode, keyModifier, alternateID, name, address1, address2, address3, address4, address5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 814
  testRunner.And(string.Format("In OLS01202 I enter Holder Flags details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"" +
                        "{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\"", deceased, exception, suppress, retMail, aReport, refID, birthDate, stopTrade, hVFFlag1, hVFFlag2, hVFFlag3, hVFFlag4, hVFFlag5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 815
  testRunner.And(string.Format("In OLS01210 I enter confirmation details as \"{0}\" \"{1}\" \"{2}\"", updateTFN, updateExtraDetails, updateEmpDetails), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 816
  testRunner.And(string.Format("In OLS01801 I Change Holder Extra Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" " +
                        "\"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"{17}\" " +
                        "\"{18}\"", modifyType1, tran, extraHolderID, homeTell, workTell, fax, mobile, email, returnedEmail, emailFailCount, flag1, flag2, flag3, flag4, flag5, flag6, flag7, flag8, flag9), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 817
 testRunner.When("I PressESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 818
  testRunner.And(string.Format("OLS01101 I Search the Holder as \"{0}\"", hIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 819
 testRunner.Then(string.Format("In OLS01102 I should see Holder Static Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", key, hIN, type, postcode, dPID, group, brokerCode, varField, register, taxcode, keyModifier, alternateID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 820
  testRunner.And(string.Format("In OLS01102 I should see Holder Address Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" " +
                        "\"{5}\"", name, address1, address2, address3, address4, address5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 821
  testRunner.And(string.Format("In OLS01102 I should see Holder Warning as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"", warning1, warning2, warning3, warning4, warning5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 822
  testRunner.And(string.Format("In OLS01102 I should see Holder Flags as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}" +
                        "\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", deceased, exception, suppress, stopTrade, retMail, aReport1, birthDate, hVFFlag1, hVFFlag2, hVFFlag3, hVFFlag4, hVFFlag5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 823
 testRunner.When(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 824
 testRunner.Then(string.Format("In OLS01801 I should see Holder Extra Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{" +
                        "5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\"", extraHolderID, homeTell, workTell, fax, mobile, email, flag1, flag2, flag3, flag4, flag5, flag6, flag7, flag8, flag9), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 18499: 07 - Name & Address Change - with Employee Details")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.TestCaseAttribute("I0030264088", "U", "NA", "IND", "3175", "", "", "", "57516", "", "", "MR ED UPDATE1", "ADDRESS1", "ADDRESS2", "ADDRESS3", "ADDRESS4", "ADDRESS5", "N", "", "N", "", "N (Nominated)", "", "", "N", "39", "CR", "22", "DC", "DC", "N", "N", "Y", "UPDATE1     ED", "", "", "Nil holding on trading classes", "No DPID allocated", "No Annual Report", "", "", "N", "765800", "0000012345", "01/01/2015", "E", "EEE", "14", "ED", "S", "I0030264088", "M", "M", "765801", "U", "ED", "C", null)]
        public virtual void TestCase1849907_NameAddressChange_WithEmployeeDetails(
                    string hIN, 
                    string action, 
                    string updateOption, 
                    string type, 
                    string postcode, 
                    string taxcode, 
                    string group, 
                    string varField, 
                    string brokerCode, 
                    string keyModifier, 
                    string alternateID, 
                    string name, 
                    string address1, 
                    string address2, 
                    string address3, 
                    string address4, 
                    string address5, 
                    string deceased, 
                    string exception, 
                    string suppress, 
                    string retMail, 
                    string aReport1, 
                    string refID, 
                    string birthDate, 
                    string stopTrade, 
                    string hVFFlag1, 
                    string hVFFlag2, 
                    string hVFFlag3, 
                    string hVFFlag4, 
                    string hVFFlag5, 
                    string updateTFN, 
                    string updateExtraDetails, 
                    string updateEmpDetails, 
                    string key, 
                    string dPID, 
                    string register, 
                    string warning1, 
                    string warning2, 
                    string warning3, 
                    string warning4, 
                    string warning5, 
                    string aReport, 
                    string tranNo, 
                    string employeeID, 
                    string effectiveDate, 
                    string employeeStatus, 
                    string leaverCode, 
                    string payrollID, 
                    string updateOption1, 
                    string action2, 
                    string updateOption2, 
                    string modifyType1, 
                    string modifyType, 
                    string tran1, 
                    string action3, 
                    string updateOption3, 
                    string action4, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 18499: 07 - Name & Address Change - with Employee Details", @__tags);
#line 833
this.ScenarioSetup(scenarioInfo);
#line 834
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 835
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 836
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 837
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action2, updateOption2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 838
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 839
  testRunner.And(string.Format("In OLS01201 I Change Holder details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" " +
                        "\"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\"", modifyType, tran1, type, postcode, taxcode, group, varField, brokerCode, keyModifier, alternateID, name, address1, address2, address3, address4, address5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 840
  testRunner.And(string.Format("In OLS01202 I enter Holder Flags details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"" +
                        "{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\"", deceased, exception, suppress, retMail, aReport, refID, birthDate, stopTrade, hVFFlag1, hVFFlag2, hVFFlag3, hVFFlag4, hVFFlag5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 841
  testRunner.And(string.Format("In OLS01210 I enter confirmation details as \"{0}\" \"{1}\" \"{2}\"", updateTFN, updateExtraDetails, updateEmpDetails), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 842
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action3, updateOption3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "TranNo",
                        "EmployeeID",
                        "EffectiveDate",
                        "EmployeeStatus",
                        "LeaverCode",
                        "PayrollID",
                        "Action"});
            table16.AddRow(new string[] {
                        string.Format("{0}", tranNo),
                        string.Format("{0}", employeeID),
                        string.Format("{0}", effectiveDate),
                        string.Format("{0}", employeeStatus),
                        string.Format("{0}", leaverCode),
                        string.Format("{0}", payrollID),
                        string.Format("{0}", action4)});
#line 843
  testRunner.And("In EOL01701 I Change ESS Employee Details as:", ((string)(null)), table16, "And ");
#line 846
 testRunner.Then(string.Format("In OLS01102 I should see Holder Static Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", key, hIN, type, postcode, dPID, group, brokerCode, varField, register, taxcode, keyModifier, alternateID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 847
  testRunner.And(string.Format("In OLS01102 I should see Holder Address Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" " +
                        "\"{5}\"", name, address1, address2, address3, address4, address5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 848
  testRunner.And(string.Format("In OLS01102 I should see Holder Warning as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"", warning1, warning2, warning3, warning4, warning5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 849
  testRunner.And(string.Format("In OLS01102 I should see Holder Flags as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6}" +
                        "\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\"", deceased, exception, suppress, stopTrade, retMail, aReport1, birthDate, hVFFlag1, hVFFlag2, hVFFlag3, hVFFlag4, hVFFlag5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 850
 testRunner.When(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 851
  testRunner.And(string.Format("In EOL01701 I should see ESS Employee Details as \"{0}\" \"{1}\" \"{2}\" \"{3} \"{4}\"", employeeID, effectiveDate, employeeStatus, leaverCode, payrollID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 20171: 05 -Charity Election (CY) - Validation for Participation Option " +
            " field")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("OL_Online")]
        [NUnit.Framework.CategoryAttribute("ANZ_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("20171")]
        [NUnit.Framework.TestCaseAttribute("Y", "N", "S", "X0051616189", "U", "CY", "A", "ORD", "38100", "P", "Participation Option (P)ercentage is not", null)]
        [NUnit.Framework.TestCaseAttribute("Y", "Y", "S", "X0051616189", "U", "CY", "A", "ORD", "38100", "D", "At least one Election must be specified,", null)]
        public virtual void TestCase2017105_CharityElectionCY_ValidationForParticipationOptionField(string charityDollars, string charityPercentage, string action, string updateOption, string action1, string updateOption1, string action2, string actionClass, string tran, string participationOption, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "OL_Online",
                    "ANZ_AUTO",
                    "OL_SDM_StaticDetailMaintenance",
                    "20171"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 20171: 05 -Charity Election (CY) - Validation for Participation Option " +
                    " field", @__tags);
#line 935
this.ScenarioSetup(scenarioInfo);
#line 936
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 937
 testRunner.When("In SELCOY01 I select the company: \"ANZ_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 938
  testRunner.And(string.Format("I change Charity Participation Fileds in Company Options as \"{0}\" \"{1}\"", charityDollars, charityPercentage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 939
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 940
 testRunner.When("In SELCOY01 I select the company: \"ANZ_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 941
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 942
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 943
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action1, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 944
  testRunner.And(string.Format("In OLS03501 I Enter Action Details as \"{0}\" \"{1}\"", action2, actionClass), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 945
  testRunner.And(string.Format("In OLS03502 I Enter Charity Details as \"{0}\" \"{1}\"", tran, participationOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 946
 testRunner.Then(string.Format("I should see the below ErrorMessage \"{0}\"", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 20454: 01 - Load,Change & Generated FIN - Error messages validation for" +
            " invlaid Company & Holder")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("OL_Online")]
        [NUnit.Framework.CategoryAttribute("ANZ_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("20454")]
        [NUnit.Framework.TestCaseAttribute("L0000082767", "S", "U", "FL", "29100", "L0000082767", "9986", "9986", "9986", null)]
        [NUnit.Framework.TestCaseAttribute("N0999999999", "S", "U", "FL", "29101", "N0999999999", "5432", "5432", "5432", null)]
        public virtual void TestCase2045401_LoadChangeGeneratedFIN_ErrorMessagesValidationForInvlaidCompanyHolder(string updateOption, string action, string action1, string updateOption1, string tran, string hIN, string loadFIN, string validateFIN, string pinNumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "OL_Online",
                    "ANZ_AUTO",
                    "OL_SDM_StaticDetailMaintenance",
                    "20454"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 20454: 01 - Load,Change & Generated FIN - Error messages validation for" +
                    " invlaid Company & Holder", @__tags);
#line 1007
this.ScenarioSetup(scenarioInfo);
#line 1008
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1009
 testRunner.When("In SELCOY01 I select the company: \"ANZ_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1010
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1011
  testRunner.And(string.Format("In Online Data Entry System I enter search option as \"{0}\" \"{1}\"", action, updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1012
  testRunner.And(string.Format("In Online Data Entry System I enter search option as \"{0}\" \"{1}\"", action1, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1013
  testRunner.And(string.Format("In OLS01630 I Enter CSN FIN Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\"", tran, hIN, loadFIN, validateFIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1014
 testRunner.Then("I expect to be in the \"OLS01102\" Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 20877: 01 - Holder Extra Details (HE) - Add ,Change/Modify, Delete Hold" +
            "er extra details to different holder types")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("OL_Online")]
        [NUnit.Framework.CategoryAttribute("ANZ_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        [NUnit.Framework.CategoryAttribute("20877")]
        [NUnit.Framework.TestCaseAttribute("X0040581421", "S", "U", "HE", "29707", "EU888997662312312324", "+61 3 8978 65789 121", "+61 3 98334 44545466", "+61 3 8978 657895 51", "+61 409 876 778 1123", "TEST.HE@COMPUTERSHARE.COM.AU", "", "", "T", "S2", "S3", "TT", "E4", "", "L2", "RM", "N", "RETIREMENT", "TEST FLAG 2", "TEST FLAG 3", "TEST FLAG4", "AML CPM Multi Participant", "", "2012LH ID WITH RE-CON CAMPAIGN", "RETURNED CHEQUES", "PRIVACY OPT OUT", "M", "29708", "EU888997662312312325", "+61 3 8978 65789 122", "+61 3 98334 44545462", "+61 3 8978 657895 52", "+61 409 876 778 1122", "AUTO.HE@COMPUTERSHARE.COM.AU", "", "", "T", "S2", "S3", "TT", "E4", "", "L2", "RM", "N", "D", "29709", "Y", null)]
        public virtual void TestCase2087701_HolderExtraDetailsHE_AddChangeModifyDeleteHolderExtraDetailsToDifferentHolderTypes(
                    string updateOption, 
                    string action, 
                    string action1, 
                    string updateOption1, 
                    string tran, 
                    string extraHolderID, 
                    string homeTell, 
                    string workTell, 
                    string fax, 
                    string mobile, 
                    string email, 
                    string returnedEmail, 
                    string emailFailCount, 
                    string flag1, 
                    string flag2, 
                    string flag3, 
                    string flag4, 
                    string flag5, 
                    string flag6, 
                    string flag7, 
                    string flag8, 
                    string flag9, 
                    string flag1Desc, 
                    string flag2Desc, 
                    string flag3Desc, 
                    string flag4Desc, 
                    string flag5Desc, 
                    string flag6Desc, 
                    string flag7Desc, 
                    string flag8Desc, 
                    string flag9Desc, 
                    string modifyType, 
                    string newTran, 
                    string newExtraHolderID, 
                    string newHomeTell, 
                    string newWorkTell, 
                    string newFax, 
                    string newMobile, 
                    string newEmail, 
                    string newReturnedEmail, 
                    string newEmailFailCount, 
                    string newFlag1, 
                    string newFlag2, 
                    string newFlag3, 
                    string newFlag4, 
                    string newFlag5, 
                    string newFlag6, 
                    string newFlag7, 
                    string newFlag8, 
                    string newFlag9, 
                    string newModifyType, 
                    string newTran1, 
                    string confirmDelete, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "OL_Online",
                    "ANZ_AUTO",
                    "OL_SDM_StaticDetailMaintenance",
                    "FullSmokeTest",
                    "20877"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 20877: 01 - Holder Extra Details (HE) - Add ,Change/Modify, Delete Hold" +
                    "er extra details to different holder types", @__tags);
#line 1183
this.ScenarioSetup(scenarioInfo);
#line 1184
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1185
 testRunner.When("In SELCOY01 I select the company: \"ANZ_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1186
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1187
  testRunner.And(string.Format("In Online Data Entry System I enter search option as \"{0}\" \"{1}\"", action, updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1188
  testRunner.And(string.Format("In Online Data Entry System I enter search option as \"{0}\" \"{1}\"", action1, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1189
  testRunner.And(string.Format("In OLS01801 I Add Holder Extra Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" \"{6" +
                        "}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"{17}\"", tran, extraHolderID, homeTell, workTell, fax, mobile, email, returnedEmail, emailFailCount, flag1, flag2, flag3, flag4, flag5, flag6, flag7, flag8, flag9), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1190
 testRunner.Then("I expect to be in the \"OLS01102\" Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1191
 testRunner.When(string.Format("In Online Data Entry System I enter search option as \"{0}\" \"{1}\"", action1, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1192
 testRunner.Then(string.Format("In OLS01801 I should see Holder Extra Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{" +
                        "5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\"", extraHolderID, homeTell, workTell, fax, mobile, email, flag1, flag2, flag3, flag4, flag5, flag6, flag7, flag8, flag9), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1193
  testRunner.And(string.Format("In OLS01801 I should see Holder Extra Details Part2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{" +
                        "4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\"", returnedEmail, emailFailCount, flag1Desc, flag2Desc, flag3Desc, flag4Desc, flag5Desc, flag6Desc, flag7Desc, flag8Desc, flag9Desc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1194
 testRunner.When(string.Format("In OLS01801 I Change Holder Extra Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{5}\" " +
                        "\"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\" \"{15}\" \"{16}\" \"{17}\" " +
                        "\"{18}\"", modifyType, newTran, newExtraHolderID, newHomeTell, newWorkTell, newFax, newMobile, newEmail, newReturnedEmail, newEmailFailCount, newFlag1, newFlag2, newFlag3, newFlag4, newFlag5, newFlag6, newFlag7, newFlag8, newFlag9), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1195
 testRunner.Then("I expect to be in the \"OLS01102\" Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1196
 testRunner.When(string.Format("In Online Data Entry System I enter search option as \"{0}\" \"{1}\"", action1, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1197
 testRunner.Then(string.Format("In OLS01801 I should see Holder Extra Details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"{" +
                        "5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\"", newExtraHolderID, newHomeTell, newWorkTell, newFax, newMobile, newEmail, newFlag1, newFlag2, newFlag3, newFlag4, newFlag5, newFlag6, newFlag7, newFlag8, newFlag9), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1198
  testRunner.And(string.Format("In OLS01801 I should see Holder Extra Details Part2 as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{" +
                        "4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\"", newReturnedEmail, newEmailFailCount, flag1Desc, flag2Desc, flag3Desc, flag4Desc, flag5Desc, flag6Desc, flag7Desc, flag8Desc, flag9Desc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1199
 testRunner.When(string.Format("In OLS01801 I Delete Holder Extra Details as \"{0}\" \"{1}\" \"{2}\"", newModifyType, newTran1, confirmDelete), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1200
 testRunner.Then("I expect to be in the \"OLS01102\" Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Update Employee Details")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("OL_Onlines")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        public virtual void UpdateEmployeeDetails()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Update Employee Details", new string[] {
                        "winformsTest",
                        "OL_Onlines",
                        "CPU_AUTO",
                        "OL_SDM_StaticDetailMaintenance",
                        "FullSmokeTest"});
#line 1210
this.ScenarioSetup(scenarioInfo);
#line 1212
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1213
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1214
  testRunner.And("I search \"I0100012669\" in Static Details update Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table17.AddRow(new string[] {
                        "Action",
                        "C"});
            table17.AddRow(new string[] {
                        "Tran No",
                        "154"});
            table17.AddRow(new string[] {
                        "Employee ID",
                        "0001020301"});
            table17.AddRow(new string[] {
                        "Start Date",
                        "01012003"});
            table17.AddRow(new string[] {
                        "Preferred Name",
                        "Automation3"});
            table17.AddRow(new string[] {
                        "Birth Date",
                        "01011982"});
            table17.AddRow(new string[] {
                        "Business Unit",
                        "CTS"});
#line 1215
 testRunner.When("I update Employee Details \"employee id\" as below:", ((string)(null)), table17, "When ");
#line 1224
  testRunner.And("I go to the Enquiry system for \"I0100012669\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table18.AddRow(new string[] {
                        "HIN",
                        "I0100012669"});
            table18.AddRow(new string[] {
                        "Employee ID",
                        "0001020301"});
            table18.AddRow(new string[] {
                        "Preferred Name",
                        "AUTOMATION3"});
            table18.AddRow(new string[] {
                        "Business Unit",
                        "CTS"});
            table18.AddRow(new string[] {
                        "Employee Status",
                        "E"});
            table18.AddRow(new string[] {
                        "Leaver Code",
                        "EEE"});
            table18.AddRow(new string[] {
                        "Effective Date",
                        "12/07/2004"});
#line 1225
 testRunner.Then("In ENSESS01 I should see the holder Employee Details as below:", ((string)(null)), table18, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Update Confirmed and Unconfiemd Deceased (CD) state - From U to C and C to U with" +
            " Holder Type IND")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("19369")]
        [NUnit.Framework.TestCaseAttribute("Test1", "S", "I0130608574", "U", "CD", "1112", "ESTATE LATE GOFAL CIXCI IPQET", "C", "", "", "", "", "", "", "", "<Trans>", "ESTATE LATE GOFAL CIXCI IPQET", "2046", "Unconfirmed Deceased", "I0130608574", "DEC", "IPQET       GOFAL CIXCI", "ESTATE LATE GOFAL CIXCI IPQET", "", "", "", "", "57516", "", "", "0030608577", "Confirmed Deceased", "Y", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "Y", "N", "- Holder\'s Unconfirmed status set to Confirmed Deceased", null)]
        [NUnit.Framework.TestCaseAttribute("Test2", "S", "X0033414587", "U", "CD", "1113", "DR BUXF I\'QESTOPOL,", "C", "", "", "", "", "", "", "", "<Trans>", "DR BUXF I\'QESTOPOL,", "3122", "Unconfirmed Deceased", "X0033414587", "DEC", "IQESTOPOL   BUXF", "DR BUXF I\'QESTOPOL", "", "", "", "", "1226", "", "", "", "Confirmed Deceased", "Y", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "Y", "N", "- Holder\'s Unconfirmed status set to Confirmed Deceased", null)]
        [NUnit.Framework.TestCaseAttribute("Test3", "S", "I0030597036", "U", "CD", "1114", "ESTATE LATE KIBU RIMUE", "U", "", "", "", "", "", "", "", "<Trans>", "ESTATE LATE KIBU RIMUE", "3169", "Confirmed Deceased", "I0030597036", "DEC", "ISOCWECH    KIBU  RIMUE", "ESTATE LATE KIBU RIMUE ISOCWECH", "", "", "", "", "57516", "", "", "", "Unconfirmed Deceased", "Y", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "Y", "N", "- Holder\'s Confirmed status reversed to Unconfirmed status", null)]
        [NUnit.Framework.TestCaseAttribute("Test4", "S", "X0026808014", "U", "CD", "1115", "MR VUTCEIY EHFCIMR ISUCH,", "U", "", "", "", "", "", "", "", "<Trans>", "MR VUTCEIY EHFCIMR ISUCH,", "4105", "Confirmed Deceased", "X0026808014", "DEC", "ISUCH       VUTCEIEHFCIM", "MR VUTCEIY EHFCIMR ISUCH", "", "", "", "", "1226", "", "", "0002136478", "Unconfirmed Deceased", "Y", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "Y", "N", "- Holder\'s Confirmed status reversed to Unconfirmed status", null)]
        public virtual void UpdateConfirmedAndUnconfiemdDeceasedCDState_FromUToCAndCToUWithHolderTypeIND(
                    string test, 
                    string action, 
                    string updateOption, 
                    string action1, 
                    string updateOption1, 
                    string trans, 
                    string knownName1, 
                    string knownStatus1, 
                    string knownName2, 
                    string knownStatus2, 
                    string knownName3, 
                    string knownStatus3, 
                    string knownName4, 
                    string knownStatus4, 
                    string knownStatus5, 
                    string transNumber, 
                    string nameAndAddress, 
                    string postcode, 
                    string warnings, 
                    string holderIdentifier, 
                    string holderType, 
                    string holderNameKey, 
                    string deceasedHolderName, 
                    string holderOtherTaxCode, 
                    string dpid, 
                    string holderGroupCode, 
                    string variableField, 
                    string brokerCode, 
                    string fastRegister, 
                    string holderKeyModifier, 
                    string holderAlternateId, 
                    string warningsAfter, 
                    string array1Ln14, 
                    string array1Ln16, 
                    string hstStopTrade, 
                    string hvfFlag1, 
                    string hvfFlag2, 
                    string residencyInd, 
                    string mailUnclaimedDate, 
                    string arStatusDescription, 
                    string birthDate, 
                    string action2, 
                    string updateOption2, 
                    string confirm, 
                    string searchData, 
                    string systemInfoFree6, 
                    string systemInfoFree4, 
                    string systemInfoFree7, 
                    string systemInfoFree5, 
                    string array1, 
                    string hstAnnualReport, 
                    string actions, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "WES_AUTO",
                    "OL_SDM_StaticDetailMaintenance",
                    "19369"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Update Confirmed and Unconfiemd Deceased (CD) state - From U to C and C to U with" +
                    " Holder Type IND", @__tags);
#line 1393
this.ScenarioSetup(scenarioInfo);
#line 1396
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1397
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1398
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1399
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1400
  testRunner.And(string.Format("In OLS01102 I enter following details as the update option \"{0}\" \"{1}\"", action1, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "KnownName1",
                        "KnownStatus1",
                        "KnownName2",
                        "KnownStatus2",
                        "KnownName3",
                        "KnownStatus3",
                        "KnownName4",
                        "KnownStatus4",
                        "KnownName1",
                        "KnownStatus5",
                        "TransNumber",
                        "NameAndAddress",
                        "Postcode",
                        "Warnings",
                        "HolderIdentifier",
                        "HolderType",
                        "HolderNameKey"});
            table19.AddRow(new string[] {
                        string.Format("{0}", knownName1),
                        string.Format("{0}", knownStatus1),
                        string.Format("{0}", knownName2),
                        string.Format("{0}", knownStatus2),
                        string.Format("{0}", knownName3),
                        string.Format("{0}", knownStatus3),
                        string.Format("{0}", knownName4),
                        string.Format("{0}", knownStatus4),
                        string.Format("{0}", knownName1),
                        string.Format("{0}", knownStatus5),
                        string.Format("{0}", trans),
                        string.Format("{0}", knownName1),
                        string.Format("{0}", postcode),
                        string.Format("{0}", warnings),
                        string.Format("{0}", holderIdentifier),
                        string.Format("{0}", holderType),
                        string.Format("{0}", holderNameKey)});
#line 1401
  testRunner.And("In OLS06801 I enter or confirm the following details", ((string)(null)), table19, "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Actions",
                        "TransNumber",
                        "NameAndAddress",
                        "Postcode",
                        "HolderIdentifier",
                        "HolderType",
                        "DeceasedHolderName"});
            table20.AddRow(new string[] {
                        string.Format("{0}", actions),
                        string.Format("{0}", trans),
                        string.Format("{0}", nameAndAddress),
                        string.Format("{0}", postcode),
                        string.Format("{0}", holderIdentifier),
                        string.Format("{0}", holderType),
                        string.Format("{0}", deceasedHolderName)});
#line 1404
  testRunner.And("In OLS068CS I confirm the following details", ((string)(null)), table20, "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderNameKey",
                        "HolderIdentifier",
                        "HolderTypeCode",
                        "HnaLineCh1to30R",
                        "AusPostcode",
                        "HolderOtherTaxCode",
                        "Dpid",
                        "HolderGroupCode",
                        "VariableField",
                        "BrokerCode",
                        "FastRegister",
                        "HolderKeyModifier",
                        "HolderAlternateId",
                        "Warnings",
                        "Array1Ln14",
                        "Array1Ln16",
                        "HstStopTrade",
                        "HvfFlag1",
                        "HvfFlag2",
                        "ResidencyInd",
                        "MailUnclaimedDate",
                        "ArStatusDescription",
                        "BirthDate",
                        "Action",
                        "UpdateOption",
                        "Confirm",
                        "SearchData",
                        "SystemInfoFree6",
                        "SystemInfoFree4",
                        "SystemInfoFree7",
                        "SystemInfoFree5"});
            table21.AddRow(new string[] {
                        string.Format("{0}", holderNameKey),
                        string.Format("{0}", holderIdentifier),
                        string.Format("{0}", holderType),
                        string.Format("{0}", nameAndAddress),
                        string.Format("{0}", postcode),
                        string.Format("{0}", holderOtherTaxCode),
                        string.Format("{0}", dpid),
                        string.Format("{0}", holderGroupCode),
                        string.Format("{0}", variableField),
                        string.Format("{0}", brokerCode),
                        string.Format("{0}", fastRegister),
                        string.Format("{0}", holderKeyModifier),
                        string.Format("{0}", holderAlternateId),
                        string.Format("{0}", warningsAfter),
                        string.Format("{0}", array1Ln14),
                        string.Format("{0}", array1Ln16),
                        string.Format("{0}", hstStopTrade),
                        string.Format("{0}", hvfFlag1),
                        string.Format("{0}", hvfFlag2),
                        string.Format("{0}", residencyInd),
                        string.Format("{0}", mailUnclaimedDate),
                        string.Format("{0}", arStatusDescription),
                        string.Format("{0}", birthDate),
                        string.Format("{0}", action2),
                        string.Format("{0}", updateOption2),
                        string.Format("{0}", confirm),
                        string.Format("{0}", searchData),
                        string.Format("{0}", systemInfoFree6),
                        string.Format("{0}", systemInfoFree4),
                        string.Format("{0}", systemInfoFree7),
                        string.Format("{0}", systemInfoFree5)});
#line 1407
 testRunner.Then("In OLS01102 I confirm the following details", ((string)(null)), table21, "Then ");
#line 1410
    testRunner.When("I exit to main from online system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1411
 testRunner.And(string.Format("I go to the Enquiry system and Search {0}", updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderTypeCode",
                        "HnaLine",
                        "Array1",
                        "HstAnnualReport"});
            table22.AddRow(new string[] {
                        string.Format("{0}", holderType),
                        string.Format("{0}", knownName1),
                        string.Format("{0}", array1),
                        string.Format("{0}", hstAnnualReport)});
#line 1412
 testRunner.Then("In ENS01001 form I verify the following", ((string)(null)), table22, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Update Confirmed and Unconfiemd Deceased (CD) state - From U to C and C to U with" +
            " Holder Type JNT")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("19394")]
        [NUnit.Framework.TestCaseAttribute("Test5", "S", "X0008253251", "U", "CD", "1116", "1117", "MR AH CEJV +", "C", "MRS KZOKLAU KAAK-POU CEJV", "U", "C", "", "", "", "", "", "<Trans>", "MR AH CEJV +", "4115", "Unconfirmed Deceased", "X0008253251", "DEC", "AHCEJV", "MR AH CEJV", "", "", "", "", "1402", "", "", "", "Unconfirmed Deceased", "Confirmed Deceased", "Y", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "Y", "N", "- Holder\'s Unconfirmed status set to Confirmed Deceased", null)]
        [NUnit.Framework.TestCaseAttribute("Test6", "S", "X0008583846", "U", "CD", "1118", "1119", "MR VIACOXO RDOKWIR ROAVHIG +", "U", "TEST AUTOMATION", "C", "U", "", "", "", "", "", "<Trans>", "MR VIACOXO RDOKWIR ROAVHIG +", "5118", "Confirmed Deceased", "X0008583846", "DEC", "ROAVHIG     VIACOXRDOKWIROAVHI", "MR VIACOXO RDOKWIR ROAVHIG", "", "", "", "", "3383", "", "", "", "Unconfirmed Deceased", "Unconfirmed Deceased", "Y", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "Y", "N", "- Holder\'s Confirmed status reversed to Unconfirmed status", null)]
        public virtual void UpdateConfirmedAndUnconfiemdDeceasedCDState_FromUToCAndCToUWithHolderTypeJNT(
                    string test, 
                    string action, 
                    string updateOption, 
                    string action1, 
                    string updateOption1, 
                    string trans, 
                    string trans2, 
                    string knownName1, 
                    string knownStatus1, 
                    string knownName2, 
                    string knownStatus2, 
                    string seconHolStatus2, 
                    string knownName3, 
                    string knownStatus3, 
                    string knownName4, 
                    string knownStatus4, 
                    string knownStatus5, 
                    string transNumber, 
                    string nameAndAddress, 
                    string postcode, 
                    string warnings, 
                    string holderIdentifier, 
                    string holderType, 
                    string holderNameKey, 
                    string deceasedHolderName, 
                    string holderOtherTaxCode, 
                    string dpid, 
                    string holderGroupCode, 
                    string variableField, 
                    string brokerCode, 
                    string fastRegister, 
                    string holderKeyModifier, 
                    string holderAlternateId, 
                    string warningsAfter, 
                    string finalWarning, 
                    string array1Ln14, 
                    string array1Ln16, 
                    string hstStopTrade, 
                    string hvfFlag1, 
                    string hvfFlag2, 
                    string residencyInd, 
                    string mailUnclaimedDate, 
                    string arStatusDescription, 
                    string birthDate, 
                    string action2, 
                    string updateOption2, 
                    string confirm, 
                    string searchData, 
                    string systemInfoFree6, 
                    string systemInfoFree4, 
                    string systemInfoFree7, 
                    string systemInfoFree5, 
                    string array1, 
                    string hstAnnualReport, 
                    string actions, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "WES_AUTO",
                    "OL_SDM_StaticDetailMaintenance",
                    "19394"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Update Confirmed and Unconfiemd Deceased (CD) state - From U to C and C to U with" +
                    " Holder Type JNT", @__tags);
#line 1428
this.ScenarioSetup(scenarioInfo);
#line 1431
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1432
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1433
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1434
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1435
  testRunner.And(string.Format("In OLS01102 I enter following details as the update option \"{0}\" \"{1}\"", action1, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "KnownName1",
                        "KnownStatus1",
                        "KnownName2",
                        "KnownStatus2",
                        "KnownName3",
                        "KnownStatus3",
                        "KnownName4",
                        "KnownStatus4",
                        "KnownName1",
                        "KnownStatus5",
                        "TransNumber",
                        "NameAndAddress",
                        "Postcode",
                        "Warnings",
                        "HolderIdentifier",
                        "HolderType",
                        "HolderNameKey"});
            table23.AddRow(new string[] {
                        string.Format("{0}", knownName1),
                        string.Format("{0}", knownStatus1),
                        string.Format("{0}", knownName2),
                        string.Format("{0}", knownStatus2),
                        string.Format("{0}", knownName3),
                        string.Format("{0}", knownStatus3),
                        string.Format("{0}", knownName4),
                        string.Format("{0}", knownStatus4),
                        string.Format("{0}", knownName1),
                        string.Format("{0}", knownStatus5),
                        string.Format("{0}", trans),
                        string.Format("{0}", knownName1),
                        string.Format("{0}", postcode),
                        string.Format("{0}", warnings),
                        string.Format("{0}", holderIdentifier),
                        string.Format("{0}", holderType),
                        string.Format("{0}", holderNameKey)});
#line 1436
  testRunner.And("In OLS06801 I enter or confirm the following details", ((string)(null)), table23, "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Actions",
                        "TransNumber",
                        "NameAndAddress",
                        "Postcode",
                        "HolderIdentifier",
                        "HolderType",
                        "DeceasedHolderName"});
            table24.AddRow(new string[] {
                        string.Format("{0}", actions),
                        string.Format("{0}", trans),
                        string.Format("{0}", nameAndAddress),
                        string.Format("{0}", postcode),
                        string.Format("{0}", holderIdentifier),
                        string.Format("{0}", holderType),
                        string.Format("{0}", deceasedHolderName)});
#line 1439
  testRunner.And("In OLS068CS I confirm the following details", ((string)(null)), table24, "And ");
#line 1442
  testRunner.And(string.Format("In OLS01102 I enter following details as the update option \"{0}\" \"{1}\"", action1, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "KnownName1",
                        "KnownStatus1",
                        "KnownName2",
                        "KnownStatus2",
                        "KnownName3",
                        "KnownStatus3",
                        "KnownName4",
                        "KnownStatus4",
                        "KnownName1",
                        "KnownStatus5",
                        "TransNumber",
                        "NameAndAddress",
                        "Postcode",
                        "Warnings",
                        "HolderIdentifier",
                        "HolderType",
                        "HolderNameKey"});
            table25.AddRow(new string[] {
                        string.Format("{0}", knownName1),
                        string.Format("{0}", knownStatus1),
                        string.Format("{0}", knownName2),
                        string.Format("{0}", seconHolStatus2),
                        string.Format("{0}", knownName3),
                        string.Format("{0}", knownStatus3),
                        string.Format("{0}", knownName4),
                        string.Format("{0}", knownStatus4),
                        string.Format("{0}", knownName1),
                        string.Format("{0}", knownStatus5),
                        string.Format("{0}", trans2),
                        string.Format("{0}", knownName1),
                        string.Format("{0}", postcode),
                        string.Format("{0}", warningsAfter),
                        string.Format("{0}", holderIdentifier),
                        string.Format("{0}", holderType),
                        string.Format("{0}", holderNameKey)});
#line 1443
  testRunner.And("In OLS06801 I enter or confirm the following details for second JNT holder", ((string)(null)), table25, "And ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Actions",
                        "TransNumber",
                        "NameAndAddress",
                        "Postcode",
                        "HolderIdentifier",
                        "HolderType",
                        "DeceasedHolderName"});
            table26.AddRow(new string[] {
                        string.Format("{0}", actions),
                        string.Format("{0}", trans2),
                        string.Format("{0}", nameAndAddress),
                        string.Format("{0}", postcode),
                        string.Format("{0}", holderIdentifier),
                        string.Format("{0}", holderType),
                        string.Format("{0}", knownName2)});
#line 1446
  testRunner.And("In OLS068CS I confirm the following details", ((string)(null)), table26, "And ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderNameKey",
                        "HolderIdentifier",
                        "HolderTypeCode",
                        "HnaLineCh1to30R",
                        "AusPostcode",
                        "HolderOtherTaxCode",
                        "Dpid",
                        "HolderGroupCode",
                        "VariableField",
                        "BrokerCode",
                        "FastRegister",
                        "HolderKeyModifier",
                        "HolderAlternateId",
                        "Warnings",
                        "Array1Ln14",
                        "Array1Ln16",
                        "HstStopTrade",
                        "HvfFlag1",
                        "HvfFlag2",
                        "ResidencyInd",
                        "MailUnclaimedDate",
                        "ArStatusDescription",
                        "BirthDate",
                        "Action",
                        "UpdateOption",
                        "Confirm",
                        "SearchData",
                        "SystemInfoFree6",
                        "SystemInfoFree4",
                        "SystemInfoFree7",
                        "SystemInfoFree5"});
            table27.AddRow(new string[] {
                        string.Format("{0}", holderNameKey),
                        string.Format("{0}", holderIdentifier),
                        string.Format("{0}", holderType),
                        string.Format("{0}", nameAndAddress),
                        string.Format("{0}", postcode),
                        string.Format("{0}", holderOtherTaxCode),
                        string.Format("{0}", dpid),
                        string.Format("{0}", holderGroupCode),
                        string.Format("{0}", variableField),
                        string.Format("{0}", brokerCode),
                        string.Format("{0}", fastRegister),
                        string.Format("{0}", holderKeyModifier),
                        string.Format("{0}", holderAlternateId),
                        string.Format("{0}", finalWarning),
                        string.Format("{0}", array1Ln14),
                        string.Format("{0}", array1Ln16),
                        string.Format("{0}", hstStopTrade),
                        string.Format("{0}", hvfFlag1),
                        string.Format("{0}", hvfFlag2),
                        string.Format("{0}", residencyInd),
                        string.Format("{0}", mailUnclaimedDate),
                        string.Format("{0}", arStatusDescription),
                        string.Format("{0}", birthDate),
                        string.Format("{0}", action2),
                        string.Format("{0}", updateOption2),
                        string.Format("{0}", confirm),
                        string.Format("{0}", searchData),
                        string.Format("{0}", systemInfoFree6),
                        string.Format("{0}", systemInfoFree4),
                        string.Format("{0}", systemInfoFree7),
                        string.Format("{0}", systemInfoFree5)});
#line 1449
 testRunner.Then("In OLS01102 I confirm the following details", ((string)(null)), table27, "Then ");
#line 1452
    testRunner.When("I exit to main from online system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1453
 testRunner.And(string.Format("I go to the Enquiry system and Search {0}", updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "HolderTypeCode",
                        "HnaLine",
                        "Array1",
                        "HstAnnualReport"});
            table28.AddRow(new string[] {
                        string.Format("{0}", holderType),
                        string.Format("{0}", knownName1),
                        string.Format("{0}", array1),
                        string.Format("{0}", hstAnnualReport)});
#line 1454
 testRunner.Then("In ENS01001 form I verify the following", ((string)(null)), table28, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 20572: 01 - ZAF Taxpayer Details (ZA)  - Add , Change/Modify and Delete" +
            " ZAF taxpayer details")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("ANZ_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("20572")]
        [NUnit.Framework.TestCaseAttribute("S", "X0036508281", "U", "ZA", "I", "8004", "", "Y", "REL", "AUS", "TEST THE TRADING NAME FOR TEST", "TESTING THE BENEFICIAL NAME TE", "TESTING THE BENEFICIALADDRESS1", "TESTING THE BENEFICIALADDRESS2", "TESTING THE BENEFICIALADDRESS3", "TESTING THE BENEFICIALADDRESS4", "TESTING THE BENEFICIALADDRESS5", "6000", "1132254564887879564", "TFN", "65656565656565665665", "002", "01/01/1978", "9855 669335645646556", "APIINDUTIRL@TESTING.COM.AU", "TESTING THE POSTAL NAME TESTTT", "TSTING POSTAL ADDRESS LINE1", "TSTING POSTAL ADDRESS LINE2", "TSTING POSTAL ADDRESS LINE3", "TSTING POSTAL ADDRESS LINE4", "TSTING POSTAL ADDRESS LINE5", "6827", "C", "", "AUS", "UNC", "", "TEST DECLARATN\'S NAME TESTING", "BEN", "", "10/10/2014", "TEST UNDERTAKING NAME TESTING", "BEN", "", "20/10/2014", "11/07/2015", "C", "X0033189290", "N", "REJ", "New Trading Name", "New Beneficial Address1", "D", "8005", "8006", "Y", null)]
        [NUnit.Framework.TestCaseAttribute("S", "X0036528982", "U", "ZA", "B", "8807", "", "", "", "USA", "", "", "", "", "", "", "", "", "5556664", "TRN", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "TEST Dec", "BEN", "", "04/04/2015", "Test Under", "BEN", "", "01/01/2015", "11/07/2015", "M", "", "Y", "REL", "", "", "D", "8008", "8009", "Y", null)]
        public virtual void TestCase2057201_ZAFTaxpayerDetailsZA_AddChangeModifyAndDeleteZAFTaxpayerDetails(
                    string action, 
                    string updateOption, 
                    string action1, 
                    string updateOption1, 
                    string iNNatureOFPerson, 
                    string transNumber, 
                    string custodianReference, 
                    string intermediaryInd, 
                    string otherStatus, 
                    string taxCode, 
                    string tradingName1, 
                    string benAddrName, 
                    string benAddrLine1, 
                    string benAddrLine2, 
                    string benAddrLine3, 
                    string benAddrLine4, 
                    string benAddrLine5, 
                    string benAddrPC, 
                    string taxReference, 
                    string taxRefType, 
                    string iDReference, 
                    string iDReferenceType, 
                    string dateBirth, 
                    string phone, 
                    string email, 
                    string retName, 
                    string retLine1, 
                    string retLine2, 
                    string retLine3, 
                    string retLine4, 
                    string retLine5, 
                    string retAddrPC, 
                    string exemptionCode, 
                    string exemptionCodeDesc, 
                    string ctryOFIssue, 
                    string certStatus, 
                    string certStatusDesc, 
                    string decName, 
                    string decCapCode, 
                    string decCapacity, 
                    string decDate, 
                    string undName, 
                    string undCapCode, 
                    string undCapacity, 
                    string undDate, 
                    string sigDate, 
                    string action2, 
                    string newCustodianRef, 
                    string newIntermediaryInd, 
                    string newInternalStatus, 
                    string newTradingName, 
                    string newBenAdrLine1, 
                    string action3, 
                    string updateTransNumber, 
                    string delteTrans, 
                    string confirmDelete, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "ANZ_AUTO",
                    "OL_SDM_StaticDetailMaintenance",
                    "20572"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 20572: 01 - ZAF Taxpayer Details (ZA)  - Add , Change/Modify and Delete" +
                    " ZAF taxpayer details", @__tags);
#line 1468
  this.ScenarioSetup(scenarioInfo);
#line 1469
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1470
 testRunner.When("In SELCOY01 I select the company: \"ANZ_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1471
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1472
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1473
  testRunner.And(string.Format("In OLS01102 I enter following details as the update option \"{0}\" \"{1}\"", action1, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "INNatureOFPerson"});
            table29.AddRow(new string[] {
                        string.Format("{0}", iNNatureOFPerson)});
#line 1474
  testRunner.And("In OLS02901 I enter Nature Of Person as follows", ((string)(null)), table29, "And ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "CustodianReference",
                        "IntermediaryInd",
                        "OtherStatus",
                        "TaxCode",
                        "TradingName1",
                        "BenAddrName",
                        "BenAddrLine1",
                        "BenAddrLine2",
                        "BenAddrLine3",
                        "BenAddrLine4",
                        "BenAddrLine5",
                        "BenAddrPC",
                        "TaxReference",
                        "TaxRefType",
                        "IDReference",
                        "IDReferenceType",
                        "DateBirth",
                        "Phone",
                        "Email",
                        "RetName",
                        "RetLine1",
                        "RetLine2",
                        "RetLine3",
                        "RetLine4",
                        "RetLine5",
                        "RetAddrPC",
                        "ExemptionCode",
                        "ExemptionCodeDesc",
                        "CtryOFIssue",
                        "CertStatus",
                        "CertStatusDesc",
                        "DecName",
                        "DecCapCode",
                        "DecCapacity",
                        "DecDate",
                        "UndName",
                        "UndCapCode",
                        "UndCapacity",
                        "UndDate",
                        "SigDate"});
            table30.AddRow(new string[] {
                        string.Format("{0}", transNumber),
                        string.Format("{0}", custodianReference),
                        string.Format("{0}", intermediaryInd),
                        string.Format("{0}", otherStatus),
                        string.Format("{0}", taxCode),
                        string.Format("{0}", tradingName1),
                        string.Format("{0}", benAddrName),
                        string.Format("{0}", benAddrLine1),
                        string.Format("{0}", benAddrLine2),
                        string.Format("{0}", benAddrLine3),
                        string.Format("{0}", benAddrLine4),
                        string.Format("{0}", benAddrLine5),
                        string.Format("{0}", benAddrPC),
                        string.Format("{0}", taxReference),
                        string.Format("{0}", taxRefType),
                        string.Format("{0}", iDReference),
                        string.Format("{0}", iDReferenceType),
                        string.Format("{0}", dateBirth),
                        string.Format("{0}", phone),
                        string.Format("{0}", email),
                        string.Format("{0}", retName),
                        string.Format("{0}", retLine1),
                        string.Format("{0}", retLine2),
                        string.Format("{0}", retLine3),
                        string.Format("{0}", retLine4),
                        string.Format("{0}", retLine5),
                        string.Format("{0}", retAddrPC),
                        string.Format("{0}", exemptionCode),
                        string.Format("{0}", exemptionCodeDesc),
                        string.Format("{0}", ctryOFIssue),
                        string.Format("{0}", certStatus),
                        string.Format("{0}", certStatusDesc),
                        string.Format("{0}", decName),
                        string.Format("{0}", decCapCode),
                        string.Format("{0}", decCapacity),
                        string.Format("{0}", decDate),
                        string.Format("{0}", undName),
                        string.Format("{0}", undCapCode),
                        string.Format("{0}", undCapacity),
                        string.Format("{0}", undDate),
                        string.Format("{0}", sigDate)});
#line 1477
     testRunner.And("In OLS02901 I enter all the following details", ((string)(null)), table30, "And ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "TaxReference"});
            table31.AddRow(new string[] {
                        string.Format("{0}", taxReference)});
#line 1480
 testRunner.Then("In OLS02901 I verify TaxReference", ((string)(null)), table31, "Then ");
#line 1483
 testRunner.When(string.Format("In OLS02901 I enter \"{0}\"", action2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "UpdateTransNumber",
                        "NewCustodianRef",
                        "NewIntermediaryInd",
                        "NewInternalStatus",
                        "NewTradingName",
                        "NewBenAdrLine1"});
            table32.AddRow(new string[] {
                        string.Format("{0}", updateTransNumber),
                        string.Format("{0}", newCustodianRef),
                        string.Format("{0}", newIntermediaryInd),
                        string.Format("{0}", newInternalStatus),
                        string.Format("{0}", newTradingName),
                        string.Format("{0}", newBenAdrLine1)});
#line 1484
  testRunner.And("In OLS02901 I update all the following details", ((string)(null)), table32, "And ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "NewCustodianRef"});
            table33.AddRow(new string[] {
                        string.Format("{0}", newCustodianRef)});
#line 1487
    testRunner.Then("In OLS02901 I verify following", ((string)(null)), table33, "Then ");
#line 1490
     testRunner.When(string.Format("In OLS02901 I enter \"{0}\"", action3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1491
      testRunner.And(string.Format("In OLS02901 I confirm the deleteion with \"{0}\" \"{1}\"", delteTrans, confirmDelete), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1492
  testRunner.Then("I Verify No ZAF details available for the holder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 19607: 01 - IRL Taxpayer Details (IRL)  - Add , Change/Modify and Delet" +
            "e IRL taxpayer details")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("ANZ_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("19607")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        [NUnit.Framework.TestCaseAttribute("S", "I0010342449", "U", "IR", "IND", "8808", "X0008646694", "N", "POI", "AUS", "TEST MAINLING NAME TEST TEST T", "MAINLING ADDRESS LINE1 TESTING", "MAINLING ADDRESS LINE2 TESTING", "MAINLING ADDRESS LINE3 TESTING", "MAINLING ADDRESS LINE4 TESTING", "MAINLING ADDRESS LINE5 TESTING", "3000", "TEST BENEFICIARY NAME TESTING", "BENEFICIAL ADDRESS LINE1 TEST", "BENEFICIAL ADDRESS LINE2 TEST", "BENEFICIAL ADDRESS LINE3 TEST", "BENEFICIAL ADDRESS LINE4 TEST", "BENEFICIAL ADDRESS LINE5 TEST", "3141", "TAX RETURN NAME TESITNG TESTIN", "TAX RETURN ADDRESS LINE1 TEST", "TAX RETURN ADDRESS LINE2 TEST", "TAX RETURN ADDRESS LINE3 TEST", "TAX RETURN ADDRESS LINE4 TEST", "TAX RETURN ADDRESS LINE5 TEST", "3000", "123456789", "TFN", "01/01/1970", "TEST PREVIOUS NAME IND TESTING", "2020", "AUTHORISED SINGATORY TEST NAME", "IND", "09/05/2015", "12345678911111111111", "UNC", "8009", "C", "8810", "NEWPREVNAME", "SEC", null)]
        [NUnit.Framework.TestCaseAttribute("S", "X0049136331", "U", "IR", "SAF", "8812", "", "", "", "SDN", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "TESTTEST", "TRN", "", "", "2020", "AUTHORISED SINGATORY TEST NAME", "TRE", "31/03/2015", "12345678911111111111", "UNC", "8013", "M", "8814", "NEWPREVNAME", "AUT", null)]
        public virtual void TestCase1960701_IRLTaxpayerDetailsIRL_AddChangeModifyAndDeleteIRLTaxpayerDetails(
                    string action, 
                    string updateOption, 
                    string action1, 
                    string updateOption1, 
                    string enityType, 
                    string transNumber, 
                    string custodianReference, 
                    string intermediaryInd, 
                    string otherStatus, 
                    string taxCode, 
                    string mailAddrName, 
                    string mailAddrLine1, 
                    string mailAddrLine2, 
                    string mailAddrLine3, 
                    string mailAddrLine4, 
                    string mailAddrLine5, 
                    string mailAddrPostcode, 
                    string benAddrName, 
                    string benAddrLine1, 
                    string benAddrLine2, 
                    string benAddrLine3, 
                    string benAddrLine4, 
                    string benAddrLine5, 
                    string benAddrPC, 
                    string retName, 
                    string retLine1, 
                    string retLine2, 
                    string retLine3, 
                    string retLine4, 
                    string retLine5, 
                    string retAddrPC, 
                    string taxReference, 
                    string taxRefType, 
                    string dateBirth, 
                    string prevName, 
                    string dwtExpiryCcyy, 
                    string sigName, 
                    string sigCapType, 
                    string sigDate, 
                    string sigPhone, 
                    string certStatus, 
                    string updateTransNumber, 
                    string action2, 
                    string delteTrans, 
                    string newPrevName, 
                    string newSigCapType, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "ANZ_AUTO",
                    "OL_SDM_StaticDetailMaintenance",
                    "19607",
                    "FullSmokeTest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 19607: 01 - IRL Taxpayer Details (IRL)  - Add , Change/Modify and Delet" +
                    "e IRL taxpayer details", @__tags);
#line 1505
  this.ScenarioSetup(scenarioInfo);
#line 1506
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1507
 testRunner.When("In SELCOY01 I select the company: \"ANZ_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1508
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1509
  testRunner.And(string.Format("In OLS01101 I enter following details as the update option \"{0}\" \"{1}\"", action, updateOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1510
  testRunner.And(string.Format("In OLS01102 I enter following details as the update option \"{0}\" \"{1}\"", action1, updateOption1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1511
  testRunner.And(string.Format("In OLS02801 I enter Enity Type \"{0}\"", enityType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "CustodianReference",
                        "IntermediaryInd",
                        "OtherStatus",
                        "TaxCode",
                        "MailAddrName",
                        "MailAddrLine1",
                        "MailAddrLine2",
                        "MailAddrLine3",
                        "MailAddrLine4",
                        "MailAddrLine5",
                        "MailAddrPostcode",
                        "BenAddrName",
                        "BenAddrLine1",
                        "BenAddrLine2",
                        "BenAddrLine3",
                        "BenAddrLine4",
                        "BenAddrLine5",
                        "BenAddrPC",
                        "RetName",
                        "RetLine1",
                        "RetLine2",
                        "RetLine3",
                        "RetLine4",
                        "RetLine5",
                        "RetAddrPC",
                        "TaxReference",
                        "TaxRefType",
                        "DateBirth",
                        "PrevName",
                        "DwtExpiryCcyy",
                        "SigName",
                        "SigCapType",
                        "SigDate",
                        "SigPhone",
                        "CertFileRef",
                        "CertStatus",
                        "CertDwtRef"});
            table34.AddRow(new string[] {
                        string.Format("{0}", transNumber),
                        string.Format("{0}", custodianReference),
                        string.Format("{0}", intermediaryInd),
                        string.Format("{0}", otherStatus),
                        string.Format("{0}", taxCode),
                        string.Format("{0}", mailAddrName),
                        string.Format("{0}", mailAddrLine1),
                        string.Format("{0}", mailAddrLine2),
                        string.Format("{0}", mailAddrLine3),
                        string.Format("{0}", mailAddrLine4),
                        string.Format("{0}", mailAddrLine5),
                        string.Format("{0}", mailAddrPostcode),
                        string.Format("{0}", benAddrName),
                        string.Format("{0}", benAddrLine1),
                        string.Format("{0}", benAddrLine2),
                        string.Format("{0}", benAddrLine3),
                        string.Format("{0}", benAddrLine4),
                        string.Format("{0}", benAddrLine5),
                        string.Format("{0}", benAddrPC),
                        string.Format("{0}", retName),
                        string.Format("{0}", retLine1),
                        string.Format("{0}", retLine2),
                        string.Format("{0}", retLine3),
                        string.Format("{0}", retLine4),
                        string.Format("{0}", retLine5),
                        string.Format("{0}", retAddrPC),
                        string.Format("{0}", taxReference),
                        string.Format("{0}", taxRefType),
                        string.Format("{0}", dateBirth),
                        string.Format("{0}", prevName),
                        string.Format("{0}", dwtExpiryCcyy),
                        string.Format("{0}", sigName),
                        string.Format("{0}", sigCapType),
                        string.Format("{0}", sigDate),
                        string.Format("{0}", sigPhone),
                        "<CertFileRef>",
                        string.Format("{0}", certStatus),
                        "<CertDwtRef>"});
#line 1512
  testRunner.And("In OLS02801 I enter all the following details", ((string)(null)), table34, "And ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "TaxReference"});
            table35.AddRow(new string[] {
                        string.Format("{0}", taxReference)});
#line 1515
     testRunner.Then("In OLS02801 I verify TaxReference", ((string)(null)), table35, "Then ");
#line 1518
   testRunner.When(string.Format("In OLS02801 I enter \"{0}\"", action2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "UpdateTransNumber",
                        "NewPrevName",
                        "NewSigCapType"});
            table36.AddRow(new string[] {
                        string.Format("{0}", updateTransNumber),
                        string.Format("{0}", newPrevName),
                        string.Format("{0}", newSigCapType)});
#line 1519
  testRunner.And("In OLS02801 I update all the following details", ((string)(null)), table36, "And ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "NewPrevName",
                        "NewSigCapType"});
            table37.AddRow(new string[] {
                        string.Format("{0}", newPrevName),
                        string.Format("{0}", newSigCapType)});
#line 1522
 testRunner.Then("In OLS02801 I verify following after update", ((string)(null)), table37, "Then ");
#line 1525
 testRunner.When("In OLS02801 I enter \"D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1526
     testRunner.And(string.Format("In OLS02801 I confirm the deleteion with \"{0}\" \"Y\"", delteTrans), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1527
  testRunner.Then("I Verify No IRL details available for the holder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 19609: 02 - IRL Taxpayer Details (IR)-  Add 5 records to a holder for I" +
            "RL Taxpayer details")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("ANZ_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("19609")]
        [NUnit.Framework.CategoryAttribute("FullSmokeTest")]
        public virtual void TestCase1960902_IRLTaxpayerDetailsIR_Add5RecordsToAHolderForIRLTaxpayerDetails()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 19609: 02 - IRL Taxpayer Details (IR)-  Add 5 records to a holder for I" +
                    "RL Taxpayer details", new string[] {
                        "winformsTest",
                        "ANZ_AUTO",
                        "OL_SDM_StaticDetailMaintenance",
                        "19609",
                        "FullSmokeTest"});
#line 1541
  this.ScenarioSetup(scenarioInfo);
#line 1542
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1543
 testRunner.When("In SELCOY01 I select the company: \"ANZ_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1544
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1545
  testRunner.And("In OLS01101 I enter following details as the update option \"S\" \"X0056379754\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1546
  testRunner.And("In OLS01102 I enter following details as the update option \"U\" \"IR\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1547
  testRunner.And("In OLS02801 I enter Enity Type \"IND\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "CustodianReference",
                        "IntermediaryInd",
                        "OtherStatus",
                        "TaxCode",
                        "MailAddrName",
                        "MailAddrLine1",
                        "MailAddrLine2",
                        "MailAddrLine3",
                        "MailAddrLine4",
                        "MailAddrLine5",
                        "MailAddrPostcode",
                        "BenAddrName",
                        "BenAddrLine1",
                        "BenAddrLine2",
                        "BenAddrLine3",
                        "BenAddrLine4",
                        "BenAddrLine5",
                        "BenAddrPC",
                        "RetName",
                        "RetLine1",
                        "RetLine2",
                        "RetLine3",
                        "RetLine4",
                        "RetLine5",
                        "RetAddrPC",
                        "TaxReference",
                        "TaxRefType",
                        "DateBirth",
                        "PrevName",
                        "DwtExpiryCcyy",
                        "SigName",
                        "SigCapType",
                        "SigDate",
                        "SigPhone",
                        "CertFileRef",
                        "CertStatus",
                        "CertDwtRef"});
            table38.AddRow(new string[] {
                        "9001",
                        "X0008646694",
                        "N",
                        "POI",
                        "NZL",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "IND Entity",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "11111",
                        "IRD",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1548
  testRunner.And("In OLS02801 I enter all the following details", ((string)(null)), table38, "And ");
#line 1551
  testRunner.And("In OLS02801 I enter \"A\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1552
  testRunner.And("In OLS02801 I enter Enity Type \"COY\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "CustodianReference",
                        "IntermediaryInd",
                        "OtherStatus",
                        "TaxCode",
                        "MailAddrName",
                        "MailAddrLine1",
                        "MailAddrLine2",
                        "MailAddrLine3",
                        "MailAddrLine4",
                        "MailAddrLine5",
                        "MailAddrPostcode",
                        "BenAddrName",
                        "BenAddrLine1",
                        "BenAddrLine2",
                        "BenAddrLine3",
                        "BenAddrLine4",
                        "BenAddrLine5",
                        "BenAddrPC",
                        "RetName",
                        "RetLine1",
                        "RetLine2",
                        "RetLine3",
                        "RetLine4",
                        "RetLine5",
                        "RetAddrPC",
                        "TaxReference",
                        "TaxRefType",
                        "DateBirth",
                        "PrevName",
                        "DwtExpiryCcyy",
                        "SigName",
                        "SigCapType",
                        "SigDate",
                        "SigPhone",
                        "CertFileRef",
                        "CertStatus",
                        "CertDwtRef"});
            table39.AddRow(new string[] {
                        "9002",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Coy Entity",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "AUT",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1553
  testRunner.And("In OLS02801 I enter all the following details", ((string)(null)), table39, "And ");
#line 1556
  testRunner.And("In OLS02801 I enter \"A\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1557
  testRunner.And("In OLS02801 I enter Enity Type \"PRT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "CustodianReference",
                        "IntermediaryInd",
                        "OtherStatus",
                        "TaxCode",
                        "MailAddrName",
                        "MailAddrLine1",
                        "MailAddrLine2",
                        "MailAddrLine3",
                        "MailAddrLine4",
                        "MailAddrLine5",
                        "MailAddrPostcode",
                        "BenAddrName",
                        "BenAddrLine1",
                        "BenAddrLine2",
                        "BenAddrLine3",
                        "BenAddrLine4",
                        "BenAddrLine5",
                        "BenAddrPC",
                        "RetName",
                        "RetLine1",
                        "RetLine2",
                        "RetLine3",
                        "RetLine4",
                        "RetLine5",
                        "RetAddrPC",
                        "TaxReference",
                        "TaxRefType",
                        "DateBirth",
                        "PrevName",
                        "DwtExpiryCcyy",
                        "SigName",
                        "SigCapType",
                        "SigDate",
                        "SigPhone",
                        "CertFileRef",
                        "CertStatus",
                        "CertDwtRef"});
            table40.AddRow(new string[] {
                        "9003",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "PRT Entity",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "22222",
                        "IRD",
                        "",
                        "",
                        "",
                        "Test PRT",
                        "VPR",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1558
  testRunner.And("In OLS02801 I enter all the following details", ((string)(null)), table40, "And ");
#line 1561
  testRunner.And("In OLS02801 I enter \"A\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1562
  testRunner.And("In OLS02801 I enter Enity Type \"TST\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "CustodianReference",
                        "IntermediaryInd",
                        "OtherStatus",
                        "TaxCode",
                        "MailAddrName",
                        "MailAddrLine1",
                        "MailAddrLine2",
                        "MailAddrLine3",
                        "MailAddrLine4",
                        "MailAddrLine5",
                        "MailAddrPostcode",
                        "BenAddrName",
                        "BenAddrLine1",
                        "BenAddrLine2",
                        "BenAddrLine3",
                        "BenAddrLine4",
                        "BenAddrLine5",
                        "BenAddrPC",
                        "RetName",
                        "RetLine1",
                        "RetLine2",
                        "RetLine3",
                        "RetLine4",
                        "RetLine5",
                        "RetAddrPC",
                        "TaxReference",
                        "TaxRefType",
                        "DateBirth",
                        "PrevName",
                        "DwtExpiryCcyy",
                        "SigName",
                        "SigCapType",
                        "SigDate",
                        "SigPhone",
                        "CertFileRef",
                        "CertStatus",
                        "CertDwtRef"});
            table41.AddRow(new string[] {
                        "9004",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "TST Entity",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "33333",
                        "IRD",
                        "",
                        "",
                        "",
                        "Test TST",
                        "EXE",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1563
  testRunner.And("In OLS02801 I enter all the following details", ((string)(null)), table41, "And ");
#line 1566
  testRunner.And("In OLS02801 I enter \"A\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1567
  testRunner.And("In OLS02801 I enter Enity Type \"SAF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNumber",
                        "CustodianReference",
                        "IntermediaryInd",
                        "OtherStatus",
                        "TaxCode",
                        "MailAddrName",
                        "MailAddrLine1",
                        "MailAddrLine2",
                        "MailAddrLine3",
                        "MailAddrLine4",
                        "MailAddrLine5",
                        "MailAddrPostcode",
                        "BenAddrName",
                        "BenAddrLine1",
                        "BenAddrLine2",
                        "BenAddrLine3",
                        "BenAddrLine4",
                        "BenAddrLine5",
                        "BenAddrPC",
                        "RetName",
                        "RetLine1",
                        "RetLine2",
                        "RetLine3",
                        "RetLine4",
                        "RetLine5",
                        "RetAddrPC",
                        "TaxReference",
                        "TaxRefType",
                        "DateBirth",
                        "PrevName",
                        "DwtExpiryCcyy",
                        "SigName",
                        "SigCapType",
                        "SigDate",
                        "SigPhone",
                        "CertFileRef",
                        "CertStatus",
                        "CertDwtRef"});
            table42.AddRow(new string[] {
                        "9005",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "TST SAF",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "44444",
                        "IRD",
                        "",
                        "",
                        "",
                        "Test SAF",
                        "TRE",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1568
  testRunner.And("In OLS02801 I enter all the following details", ((string)(null)), table42, "And ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "CustodianReference",
                        "IntermediaryInd",
                        "OtherStatus",
                        "TaxCode",
                        "MailAddrName",
                        "MailAddrLine1",
                        "MailAddrLine2",
                        "MailAddrLine3",
                        "MailAddrLine4",
                        "MailAddrLine5",
                        "MailAddrPostcode",
                        "BenAddrName",
                        "BenAddrLine1",
                        "BenAddrLine2",
                        "BenAddrLine3",
                        "BenAddrLine4",
                        "BenAddrLine5",
                        "BenAddrPC",
                        "RetName",
                        "RetLine1",
                        "RetLine2",
                        "RetLine3",
                        "RetLine4",
                        "RetLine5",
                        "RetAddrPC",
                        "TaxReference",
                        "TaxRefType",
                        "DateBirth",
                        "PrevName",
                        "DwtExpiryCcyy",
                        "SigName",
                        "SigCapType",
                        "SigDate",
                        "SigPhone",
                        "CertFileRef",
                        "CertStatus",
                        "CertDwtRef"});
            table43.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "TST SAF",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Quoted",
                        "IRD",
                        "",
                        "",
                        "",
                        "TEST SAF",
                        "TRE",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1571
 testRunner.Then("In OLS02801 I verify following", ((string)(null)), table43, "Then ");
#line 1574
  testRunner.And("In OLS02801 I enter \"B\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "CustodianReference",
                        "IntermediaryInd",
                        "OtherStatus",
                        "TaxCode",
                        "MailAddrName",
                        "MailAddrLine1",
                        "MailAddrLine2",
                        "MailAddrLine3",
                        "MailAddrLine4",
                        "MailAddrLine5",
                        "MailAddrPostcode",
                        "BenAddrName",
                        "BenAddrLine1",
                        "BenAddrLine2",
                        "BenAddrLine3",
                        "BenAddrLine4",
                        "BenAddrLine5",
                        "BenAddrPC",
                        "RetName",
                        "RetLine1",
                        "RetLine2",
                        "RetLine3",
                        "RetLine4",
                        "RetLine5",
                        "RetAddrPC",
                        "TaxReference",
                        "TaxRefType",
                        "DateBirth",
                        "PrevName",
                        "DwtExpiryCcyy",
                        "SigName",
                        "SigCapType",
                        "SigDate",
                        "SigPhone",
                        "CertFileRef",
                        "CertStatus",
                        "CertDwtRef"});
            table44.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "TST ENTITY",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Quoted",
                        "IRD",
                        "",
                        "",
                        "",
                        "TEST TST",
                        "EXE",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1575
  testRunner.And("In OLS02801 I verify following", ((string)(null)), table44, "And ");
#line 1578
  testRunner.And("In OLS02801 I enter \"B\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "CustodianReference",
                        "IntermediaryInd",
                        "OtherStatus",
                        "TaxCode",
                        "MailAddrName",
                        "MailAddrLine1",
                        "MailAddrLine2",
                        "MailAddrLine3",
                        "MailAddrLine4",
                        "MailAddrLine5",
                        "MailAddrPostcode",
                        "BenAddrName",
                        "BenAddrLine1",
                        "BenAddrLine2",
                        "BenAddrLine3",
                        "BenAddrLine4",
                        "BenAddrLine5",
                        "BenAddrPC",
                        "RetName",
                        "RetLine1",
                        "RetLine2",
                        "RetLine3",
                        "RetLine4",
                        "RetLine5",
                        "RetAddrPC",
                        "TaxReference",
                        "TaxRefType",
                        "DateBirth",
                        "PrevName",
                        "DwtExpiryCcyy",
                        "SigName",
                        "SigCapType",
                        "SigDate",
                        "SigPhone",
                        "CertFileRef",
                        "CertStatus",
                        "CertDwtRef"});
            table45.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "PRT ENTITY",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Quoted",
                        "IRD",
                        "",
                        "",
                        "",
                        "TEST PRT",
                        "VPR",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1579
  testRunner.And("In OLS02801 I verify following", ((string)(null)), table45, "And ");
#line 1582
  testRunner.And("In OLS02801 I enter \"B\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "CustodianReference",
                        "IntermediaryInd",
                        "OtherStatus",
                        "TaxCode",
                        "MailAddrName",
                        "MailAddrLine1",
                        "MailAddrLine2",
                        "MailAddrLine3",
                        "MailAddrLine4",
                        "MailAddrLine5",
                        "MailAddrPostcode",
                        "BenAddrName",
                        "BenAddrLine1",
                        "BenAddrLine2",
                        "BenAddrLine3",
                        "BenAddrLine4",
                        "BenAddrLine5",
                        "BenAddrPC",
                        "RetName",
                        "RetLine1",
                        "RetLine2",
                        "RetLine3",
                        "RetLine4",
                        "RetLine5",
                        "RetAddrPC",
                        "TaxReference",
                        "TaxRefType",
                        "DateBirth",
                        "PrevName",
                        "DwtExpiryCcyy",
                        "SigName",
                        "SigCapType",
                        "SigDate",
                        "SigPhone",
                        "CertFileRef",
                        "CertStatus",
                        "CertDwtRef"});
            table46.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "COY ENTITY",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "AUT",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1583
  testRunner.And("In OLS02801 I verify following", ((string)(null)), table46, "And ");
#line 1586
  testRunner.And("In OLS02801 I enter \"B\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "CustodianReference",
                        "IntermediaryInd",
                        "OtherStatus",
                        "TaxCode",
                        "MailAddrName",
                        "MailAddrLine1",
                        "MailAddrLine2",
                        "MailAddrLine3",
                        "MailAddrLine4",
                        "MailAddrLine5",
                        "MailAddrPostcode",
                        "BenAddrName",
                        "BenAddrLine1",
                        "BenAddrLine2",
                        "BenAddrLine3",
                        "BenAddrLine4",
                        "BenAddrLine5",
                        "BenAddrPC",
                        "RetName",
                        "RetLine1",
                        "RetLine2",
                        "RetLine3",
                        "RetLine4",
                        "RetLine5",
                        "RetAddrPC",
                        "TaxReference",
                        "TaxRefType",
                        "DateBirth",
                        "PrevName",
                        "DwtExpiryCcyy",
                        "SigName",
                        "SigCapType",
                        "SigDate",
                        "SigPhone",
                        "CertFileRef",
                        "CertStatus",
                        "CertDwtRef"});
            table47.AddRow(new string[] {
                        "X0008646694",
                        "N",
                        "POI",
                        "NZL",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "IND ENTITY",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Quoted",
                        "IRD",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1587
  testRunner.And("In OLS02801 I verify following", ((string)(null)), table47, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 19594: 01 - US Taxpayer Details - Add, Change, Modify and Delete Invest" +
            "ors for CDI with Forms: W-9, W-8BEN, W-8BEN-E")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("19594")]
        public virtual void TestCase1959401_USTaxpayerDetails_AddChangeModifyAndDeleteInvestorsForCDIWithFormsW_9W_8BENW_8BEN_E()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 19594: 01 - US Taxpayer Details - Add, Change, Modify and Delete Invest" +
                    "ors for CDI with Forms: W-9, W-8BEN, W-8BEN-E", new string[] {
                        "winformsTest",
                        "WES_AUTO",
                        "OL_SDM_StaticDetailMaintenance",
                        "19594"});
#line 1595
  this.ScenarioSetup(scenarioInfo);
#line 1596
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1597
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1598
  testRunner.And("In housekeeping US Tax Reporting Obligation is set as \"C\" \"\" \"\" \"\" \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1599
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1600
  testRunner.And("In OLS01101 I enter following details as the update option \"S\" \"I0131550499\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1601
  testRunner.And("In OLS01102 I enter following details as the update option \"U\" \"UX\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1602
  testRunner.And("In OLS03102 I enter action \"A\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNbrI",
                        "InvAccountType",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "W8ExpiryDate",
                        "InvChapter3",
                        "InvChapter4",
                        "InvBirthDate",
                        "InvCountryIncorp",
                        "InvForeignTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException",
                        "InvWorstCaseInd",
                        "AddBen"});
            table48.AddRow(new string[] {
                        "9006",
                        "I",
                        "DR YUPOF XPOPGAH INV 1",
                        "03",
                        "99-1234567",
                        "U09",
                        "31/12/2015",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1603
  testRunner.And("In OLS03103 I continue with following", ((string)(null)), table48, "And ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "InvType",
                        "InvName",
                        "InvTinStatus",
                        "InvW8Exp",
                        "InvChpt3",
                        "InvChpt4"});
            table49.AddRow(new string[] {
                        "I",
                        "DR YUPOF XPOPGAH INV 1",
                        "03",
                        "31/12/2015",
                        "",
                        ""});
#line 1606
  testRunner.And("In OLS03102 I verfiy following for row \"1\"", ((string)(null)), table49, "And ");
#line 1609
  testRunner.And("In OLS03102 I enter action \"A\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNbrI",
                        "InvAccountType",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "W8ExpiryDate",
                        "InvChapter3",
                        "InvChapter4",
                        "InvBirthDate",
                        "InvCountryIncorp",
                        "InvForeignTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException",
                        "InvWorstCaseInd",
                        "AddBen"});
            table50.AddRow(new string[] {
                        "9007",
                        "E",
                        "DR YUPOF XPOPGAH INV 2",
                        "02",
                        "98-9874561",
                        "USA",
                        "31/12/2017",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1610
  testRunner.And("In OLS03103 I continue with following", ((string)(null)), table50, "And ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "InvType",
                        "InvName",
                        "InvTinStatus",
                        "InvW8Exp",
                        "InvChpt3",
                        "InvChpt4"});
            table51.AddRow(new string[] {
                        "E",
                        "DR YUPOF XPOPGAH INV 2",
                        "02",
                        "31/12/2017",
                        "",
                        ""});
#line 1613
  testRunner.And("In OLS03102 I verfiy following for row \"2\"", ((string)(null)), table51, "And ");
#line 1616
  testRunner.And("In OLS03102 I enter action \"A\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNbrI",
                        "InvAccountType",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "W8ExpiryDate",
                        "InvChapter3",
                        "InvChapter4",
                        "InvBirthDate",
                        "InvCountryIncorp",
                        "InvForeignTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException",
                        "InvWorstCaseInd",
                        "AddBen"});
            table52.AddRow(new string[] {
                        "9011",
                        "I",
                        "DR YUPOF XPOPGAH INV 3",
                        "12",
                        "123-65-9874",
                        "U09",
                        "31/12/2016",
                        "19",
                        "27",
                        "01/01/1995",
                        "USA",
                        "FATCA W8B TEST",
                        "PO BOX 363",
                        "NAQFQSEKMI AUS",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1617
  testRunner.And("In OLS03103 I continue with following", ((string)(null)), table52, "And ");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "InvType",
                        "InvName",
                        "InvTinStatus",
                        "InvW8Exp",
                        "InvChpt3",
                        "InvChpt4"});
            table53.AddRow(new string[] {
                        "I",
                        "DR YUPOF XPOPGAH INV 3",
                        "12",
                        "31/12/2016",
                        "19",
                        "27"});
#line 1620
  testRunner.And("In OLS03102 I verfiy following for row \"3\"", ((string)(null)), table53, "And ");
#line 1623
  testRunner.And("In OLS03102 I enter action \"A\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNbrI",
                        "InvAccountType",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "W8ExpiryDate",
                        "InvChapter3",
                        "InvChapter4",
                        "InvBirthDate",
                        "InvCountryIncorp",
                        "InvForeignTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException",
                        "InvWorstCaseInd",
                        "AddBen"});
            table54.AddRow(new string[] {
                        "9012",
                        "E",
                        "DR YUPOF XPOPGAH INV 4",
                        "18",
                        "99-7894562",
                        "NZL",
                        "31/12/2016",
                        "27",
                        "10",
                        "",
                        "USA",
                        "FATCA W8BE TEST",
                        "PO BOX 364",
                        "NAQFQSEKMI NSW",
                        "98Q96B",
                        "99999",
                        "SL",
                        "076",
                        "Y",
                        "",
                        ""});
#line 1624
  testRunner.And("In OLS03103 I continue with following", ((string)(null)), table54, "And ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "InvType",
                        "InvName",
                        "InvTinStatus",
                        "InvW8Exp",
                        "InvChpt3",
                        "InvChpt4"});
            table55.AddRow(new string[] {
                        "E",
                        "DR YUPOF XPOPGAH INV 4",
                        "18",
                        "31/12/2016",
                        "27",
                        "10"});
#line 1627
  testRunner.And("In OLS03102 I verfiy following for row \"4\"", ((string)(null)), table55, "And ");
#line 1630
  testRunner.And("I exit to main from online system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1632
  testRunner.And("I go to the Enquiry system and Search I0131550499", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1633
 testRunner.Then("In ENS01001 form I verify US Tax warning at position \"2\" value \"Holder Extra/US T" +
                    "ax present\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1634
  testRunner.And("In ENS01001 I enter action \"UT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "InvType1",
                        "InvName1",
                        "InvTinStatus1",
                        "InvW8Exp1",
                        "InvChpt31",
                        "InvChpt41",
                        "InvType2",
                        "InvName2",
                        "InvTinStatus2",
                        "InvW8Exp2",
                        "InvChpt32",
                        "InvChpt42",
                        "InvType3",
                        "InvName3",
                        "InvTinStatus3",
                        "InvW8Exp3",
                        "InvChpt33",
                        "InvChpt43",
                        "InvType4",
                        "InvName4",
                        "InvTinStatus4",
                        "InvW8Exp4",
                        "InvChpt34",
                        "InvChpt44"});
            table56.AddRow(new string[] {
                        "I",
                        "DR YUPOF XPOPGAH INV 1",
                        "3",
                        "31/12/2015",
                        "",
                        "",
                        "E",
                        "DR YUPOF XPOPGAH INV 2",
                        "2",
                        "31/12/2017",
                        "",
                        "",
                        "I",
                        "DR YUPOF XPOPGAH INV 3",
                        "12",
                        "31/12/2016",
                        "19",
                        "27",
                        "E",
                        "DR YUPOF XPOPGAH INV 4",
                        "18",
                        "31/12/2016",
                        "27",
                        "10"});
#line 1635
  testRunner.And("In  ENTUSA01 I verify the following investor details", ((string)(null)), table56, "And ");
#line 1638
  testRunner.And("In  ENTUSA01 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "JntAccountTyp",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "InvTinExpiryDate",
                        "InvChpt3",
                        "InvChpt4",
                        "InvBirthDate",
                        "InvCountry",
                        "InvTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException"});
            table57.AddRow(new string[] {
                        "I",
                        "DR YUPOF XPOPGAH INV 1",
                        "3",
                        "*****4567",
                        "U09",
                        "31/12/2015",
                        "",
                        "",
                        "No date",
                        "",
                        "Not Quoted",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1639
  testRunner.And("In ENTUSA03 I verify the following", ((string)(null)), table57, "And ");
#line 1642
  testRunner.And("IN ENTUSA03 I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1643
   testRunner.And("In  ENTUSA01 I enter action \"2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "JntAccountTyp",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "InvTinExpiryDate",
                        "InvChpt3",
                        "InvChpt4",
                        "InvBirthDate",
                        "InvCountry",
                        "InvTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException"});
            table58.AddRow(new string[] {
                        "E",
                        "DR YUPOF XPOPGAH INV 2",
                        "2",
                        "*****4561",
                        "USA",
                        "31/12/2017",
                        "",
                        "",
                        "No date",
                        "",
                        "Not Quoted",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1644
  testRunner.And("In ENTUSA03 I verify the following", ((string)(null)), table58, "And ");
#line 1647
  testRunner.And("IN ENTUSA03 I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1648
  testRunner.And("In  ENTUSA01 I enter action \"3\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "JntAccountTyp",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "InvTinExpiryDate",
                        "InvChpt3",
                        "InvChpt4",
                        "InvBirthDate",
                        "InvCountry",
                        "InvTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException"});
            table59.AddRow(new string[] {
                        "I",
                        "DR YUPOF XPOPGAH INV 3",
                        "12",
                        "*****9874",
                        "U09",
                        "31/12/2016",
                        "19",
                        "27",
                        "01/01/1995",
                        "USA",
                        "Quoted",
                        "PO BOX 363",
                        "NAQFQSEKMI AUS",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1649
  testRunner.And("In ENTUSA03 I verify the following", ((string)(null)), table59, "And ");
#line 1652
  testRunner.And("IN ENTUSA03 I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1653
   testRunner.And("In  ENTUSA01 I enter action \"4\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "JntAccountTyp",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "InvTinExpiryDate",
                        "InvChpt3",
                        "InvChpt4",
                        "InvBirthDate",
                        "InvCountry",
                        "InvTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException"});
            table60.AddRow(new string[] {
                        "E",
                        "DR YUPOF XPOPGAH INV 4",
                        "18",
                        "*****4562",
                        "NZL",
                        "31/12/2016",
                        "27",
                        "10",
                        "No date",
                        "USA",
                        "Quoted",
                        "PO BOX 364",
                        "NAQFQSEKMI NSW",
                        "98Q96B",
                        "99999",
                        "SL",
                        "076",
                        "Y"});
#line 1654
  testRunner.And("In ENTUSA03 I verify the following", ((string)(null)), table60, "And ");
#line 1657
  testRunner.And("I exit to main from enquiry system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1658
  testRunner.When("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1659
  testRunner.And("In OLS01101 I enter following details as the update option \"S\" \"I0131550499\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1660
  testRunner.And("In OLS01102 I enter following details as the update option \"U\" \"UX\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1661
  testRunner.And("In OLS03102 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1662
  testRunner.And("In OLS03103 I enter action \"C\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNbrI",
                        "InvAccountType",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "W8ExpiryDate",
                        "InvChapter3",
                        "InvChapter4",
                        "InvBirthDate",
                        "InvCountryIncorp",
                        "InvForeignTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException",
                        "InvWorstCaseInd",
                        "AddBen"});
            table61.AddRow(new string[] {
                        "9013",
                        "E",
                        "DR YUPOF XPOPG INV CHNG 1",
                        "01",
                        "98-2541341",
                        "USA",
                        "30/12/2016",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "PO BOX 367",
                        "NAQFQSEKMI GBR",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1663
  testRunner.And("In OLS03103 I continue with following", ((string)(null)), table61, "And ");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "InvType",
                        "InvName",
                        "InvTinStatus",
                        "InvW8Exp",
                        "InvChpt3",
                        "InvChpt4"});
            table62.AddRow(new string[] {
                        "E",
                        "DR YUPOF XPOPG INV CHNG 1",
                        "01",
                        "30/12/2016",
                        "",
                        ""});
#line 1666
  testRunner.And("In OLS03102 I verfiy following for row \"1\"", ((string)(null)), table62, "And ");
#line 1669
  testRunner.And("In OLS03102 I enter action \"2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1670
  testRunner.And("In OLS03103 I enter action \"M\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNbrI",
                        "InvAccountType",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "W8ExpiryDate",
                        "InvChapter3",
                        "InvChapter4",
                        "InvBirthDate",
                        "InvCountryIncorp",
                        "InvForeignTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException",
                        "InvWorstCaseInd",
                        "AddBen"});
            table63.AddRow(new string[] {
                        "9014",
                        "I",
                        "DR YUPOF XPOPG INV CHNG 2",
                        "04",
                        "213-54-3652",
                        "USA",
                        "30/12/2017",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "PO BOX 366",
                        "NAQFQSEKMI USA",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1671
  testRunner.And("In OLS03103 I continue with following", ((string)(null)), table63, "And ");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "InvType",
                        "InvName",
                        "InvTinStatus",
                        "InvW8Exp",
                        "InvChpt3",
                        "InvChpt4"});
            table64.AddRow(new string[] {
                        "I",
                        "DR YUPOF XPOPG INV CHNG 2",
                        "04",
                        "30/12/2017",
                        "",
                        ""});
#line 1674
  testRunner.And("In OLS03102 I verfiy following for row \"2\"", ((string)(null)), table64, "And ");
#line 1677
  testRunner.And("In OLS03102 I enter action \"3\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1678
  testRunner.And("In OLS03103 I enter action \"C\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNbrI",
                        "InvAccountType",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "W8ExpiryDate",
                        "InvChapter3",
                        "InvChapter4",
                        "InvBirthDate",
                        "InvCountryIncorp",
                        "InvForeignTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException",
                        "InvWorstCaseInd",
                        "AddBen"});
            table65.AddRow(new string[] {
                        "9015",
                        "I",
                        "DR YUPOF XPOPG INV CHNG 3",
                        "10",
                        "99-5246312",
                        "AUS",
                        "05/05/2016",
                        "19",
                        "27",
                        "02/02/1996",
                        "GBR",
                        "FATCA CHNG W8B",
                        "PO BOX 362",
                        "NAQFQSEKMI NSW",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1679
  testRunner.And("In OLS03103 I continue with following", ((string)(null)), table65, "And ");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "InvType",
                        "InvName",
                        "InvTinStatus",
                        "InvW8Exp",
                        "InvChpt3",
                        "InvChpt4"});
            table66.AddRow(new string[] {
                        "I",
                        "DR YUPOF XPOPG INV CHNG 3",
                        "10",
                        "05/05/2016",
                        "19",
                        "27"});
#line 1682
  testRunner.And("In OLS03102 I verfiy following for row \"3\"", ((string)(null)), table66, "And ");
#line 1685
   testRunner.And("In OLS03102 I enter action \"4\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1686
  testRunner.And("In OLS03103 I enter action \"M\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNbrI",
                        "InvAccountType",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "W8ExpiryDate",
                        "InvChapter3",
                        "InvChapter4",
                        "InvBirthDate",
                        "InvCountryIncorp",
                        "InvForeignTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException",
                        "InvWorstCaseInd",
                        "AddBen"});
            table67.AddRow(new string[] {
                        "9016",
                        "E",
                        "DR YUPOF XPOPG INV CHNG 4",
                        "19",
                        "98-7895412",
                        "U09",
                        "12/12/2017",
                        "10",
                        "08",
                        "",
                        "NZL",
                        "TEST W8B CHANGE",
                        "PO BOX 365",
                        "NAQFQSEKMI NZL",
                        "8124H8",
                        "00000",
                        "SP",
                        "036",
                        "",
                        "",
                        ""});
#line 1687
  testRunner.And("In OLS03103 I continue with following", ((string)(null)), table67, "And ");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "InvType",
                        "InvName",
                        "InvTinStatus",
                        "InvW8Exp",
                        "InvChpt3",
                        "InvChpt4"});
            table68.AddRow(new string[] {
                        "E",
                        "DR YUPOF XPOPG INV CHNG 4",
                        "19",
                        "12/12/2017",
                        "10",
                        "08"});
#line 1690
   testRunner.And("In OLS03102 I verfiy following for row \"4\"", ((string)(null)), table68, "And ");
#line 1693
  testRunner.And("I exit to main from online system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1694
  testRunner.And("I go to the Enquiry system and Search I0131550499", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1695
 testRunner.Then("In ENS01001 form I verify US Tax warning at position \"2\" value \"Holder Extra/US T" +
                    "ax present\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1696
  testRunner.And("In ENS01001 I enter action \"UT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "InvType1",
                        "InvName1",
                        "InvTinStatus1",
                        "InvW8Exp1",
                        "InvChpt31",
                        "InvChpt41",
                        "InvType2",
                        "InvName2",
                        "InvTinStatus2",
                        "InvW8Exp2",
                        "InvChpt32",
                        "InvChpt42",
                        "InvType3",
                        "InvName3",
                        "InvTinStatus3",
                        "InvW8Exp3",
                        "InvChpt33",
                        "InvChpt43",
                        "InvType4",
                        "InvName4",
                        "InvTinStatus4",
                        "InvW8Exp4",
                        "InvChpt34",
                        "InvChpt44"});
            table69.AddRow(new string[] {
                        "E",
                        "DR YUPOF XPOPG INV CHNG 1",
                        "1",
                        "30/12/2016",
                        "",
                        "",
                        "I",
                        "DR YUPOF XPOPG INV CHNG 2",
                        "4",
                        "30/12/2017",
                        "",
                        "",
                        "I",
                        "DR YUPOF XPOPG INV CHNG 3",
                        "10",
                        "05/05/2016",
                        "19",
                        "27",
                        "E",
                        "DR YUPOF XPOPG INV CHNG 4",
                        "19",
                        "12/12/2017",
                        "10",
                        "08"});
#line 1697
  testRunner.And("In  ENTUSA01 I verify the following investor details", ((string)(null)), table69, "And ");
#line 1700
  testRunner.And("In  ENTUSA01 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "JntAccountTyp",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "InvTinExpiryDate",
                        "InvChpt3",
                        "InvChpt4",
                        "InvBirthDate",
                        "InvCountry",
                        "InvTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException"});
            table70.AddRow(new string[] {
                        "E",
                        "DR YUPOF XPOPG INV CHNG 1",
                        "1",
                        "*****1341",
                        "USA",
                        "30/12/2016",
                        "",
                        "",
                        "No date",
                        "",
                        "Not Quoted",
                        "PO BOX 367",
                        "NAQFQSEKMI GBR",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1701
  testRunner.And("In ENTUSA03 I verify the following", ((string)(null)), table70, "And ");
#line 1704
  testRunner.And("IN ENTUSA03 I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1705
   testRunner.And("In  ENTUSA01 I enter action \"2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "JntAccountTyp",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "InvTinExpiryDate",
                        "InvChpt3",
                        "InvChpt4",
                        "InvBirthDate",
                        "InvCountry",
                        "InvTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException"});
            table71.AddRow(new string[] {
                        "I",
                        "DR YUPOF XPOPG INV CHNG 2",
                        "4",
                        "*****3652",
                        "USA",
                        "30/12/2017",
                        "",
                        "",
                        "No date",
                        "",
                        "Not Quoted",
                        "PO BOX 366",
                        "NAQFQSEKMI USA",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1706
  testRunner.And("In ENTUSA03 I verify the following", ((string)(null)), table71, "And ");
#line 1709
  testRunner.And("IN ENTUSA03 I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1710
  testRunner.And("In  ENTUSA01 I enter action \"3\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "JntAccountTyp",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "InvTinExpiryDate",
                        "InvChpt3",
                        "InvChpt4",
                        "InvBirthDate",
                        "InvCountry",
                        "InvTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException"});
            table72.AddRow(new string[] {
                        "I",
                        "DR YUPOF XPOPG INV CHNG 3",
                        "10",
                        "*****6312",
                        "AUS",
                        "05/05/2016",
                        "19",
                        "27",
                        "02/02/1996",
                        "GBR",
                        "Quoted",
                        "PO BOX 362",
                        "NAQFQSEKMI NSW",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1711
  testRunner.And("In ENTUSA03 I verify the following", ((string)(null)), table72, "And ");
#line 1714
  testRunner.And("IN ENTUSA03 I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1715
   testRunner.And("In  ENTUSA01 I enter action \"4\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "JntAccountTyp",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "InvTinExpiryDate",
                        "InvChpt3",
                        "InvChpt4",
                        "InvBirthDate",
                        "InvCountry",
                        "InvTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException"});
            table73.AddRow(new string[] {
                        "E",
                        "DR YUPOF XPOPG INV CHNG 4",
                        "19",
                        "*****5412",
                        "U09",
                        "12/12/2017",
                        "10",
                        "08",
                        "No date",
                        "NZL",
                        "Quoted",
                        "PO BOX 365",
                        "NAQFQSEKMI NZL",
                        "8124H8",
                        "00000",
                        "SP",
                        "036",
                        "Y"});
#line 1716
  testRunner.And("In ENTUSA03 I verify the following", ((string)(null)), table73, "And ");
#line 1719
  testRunner.And("I exit to main from enquiry system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1720
  testRunner.When("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1721
  testRunner.And("In OLS01101 I enter following details as the update option \"S\" \"I0131550499\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1722
  testRunner.And("In OLS01102 I enter following details as the update option \"U\" \"UX\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1723
  testRunner.And("In OLS03102 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1724
  testRunner.And("In OLS03103 I enter action \"D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1725
  testRunner.And("In OLS03103 I confirm deletion with TransactionNo \"9017\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1726
  testRunner.And("In OLS03102 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1727
  testRunner.And("In OLS03103 I enter action \"D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1728
  testRunner.And("In OLS03103 I confirm deletion with TransactionNo \"9050\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1729
  testRunner.And("In OLS03102 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1730
  testRunner.And("In OLS03103 I enter action \"D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1731
  testRunner.And("In OLS03103 I confirm deletion with TransactionNo \"9051\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1732
  testRunner.And("In OLS03102 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1733
  testRunner.And("In OLS03103 I enter action \"D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1734
  testRunner.And("In OLS03103 I confirm deletion with TransactionNo \"9052\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1735
  testRunner.And("I exit to main from online system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1736
  testRunner.And("I go to the Enquiry system and Search I0131550499", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1737
 testRunner.Then("In ENS01001 I enter action \"UT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "InvType1",
                        "InvName1",
                        "InvTinStatus1",
                        "InvW8Exp1",
                        "InvChpt31",
                        "InvChpt41",
                        "InvType2",
                        "InvName2",
                        "InvTinStatus2",
                        "InvW8Exp2",
                        "InvChpt32",
                        "InvChpt42",
                        "InvType3",
                        "InvName3",
                        "InvTinStatus3",
                        "InvW8Exp3",
                        "InvChpt33",
                        "InvChpt43",
                        "InvType4",
                        "InvName4",
                        "InvTinStatus4",
                        "InvW8Exp4",
                        "InvChpt34",
                        "InvChpt44"});
            table74.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1738
     testRunner.And("In  ENTUSA01 I verify the following investor details", ((string)(null)), table74, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 19687: 02 - US Taxpayer Details - Add, Change, Modify and Delete Invest" +
            "ors for Chapter 61 with Forms: W-8BEN-E, ECI, IMY & EXP")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("19687")]
        public virtual void TestCase1968702_USTaxpayerDetails_AddChangeModifyAndDeleteInvestorsForChapter61WithFormsW_8BEN_EECIIMYEXP()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 19687: 02 - US Taxpayer Details - Add, Change, Modify and Delete Invest" +
                    "ors for Chapter 61 with Forms: W-8BEN-E, ECI, IMY & EXP", new string[] {
                        "winformsTest",
                        "WES_AUTO",
                        "OL_SDM_StaticDetailMaintenance",
                        "19687"});
#line 1748
  this.ScenarioSetup(scenarioInfo);
#line 1749
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1750
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1751
  testRunner.And("In housekeeping US Tax Reporting Obligation is set as \"H\" \"\" \"\" \"\" \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1752
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1753
  testRunner.And("In OLS01101 I enter following details as the update option \"S\" \"X0001311271\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1754
  testRunner.And("In OLS01102 I enter following details as the update option \"U\" \"UX\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1755
  testRunner.And("In OLS03102 I enter action \"A\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNbrI",
                        "InvAccountType",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "W8ExpiryDate",
                        "InvChapter3",
                        "InvChapter4",
                        "InvBirthDate",
                        "InvCountryIncorp",
                        "InvForeignTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException",
                        "InvWorstCaseInd",
                        "AddBen"});
            table75.AddRow(new string[] {
                        "912332",
                        "",
                        "MR GIQNAXROJA NOMINEES INV01",
                        "18",
                        "99-1234567",
                        "NZL",
                        "31/12/2015",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1756
  testRunner.And("In OLS03103 I continue with following", ((string)(null)), table75, "And ");
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "InvType",
                        "InvName",
                        "InvTinStatus",
                        "InvW8Exp",
                        "InvChpt3",
                        "InvChpt4"});
            table76.AddRow(new string[] {
                        "",
                        "MR GIQNAXROJA NOMINEES INV01",
                        "18",
                        "31/12/2015",
                        "",
                        ""});
#line 1759
  testRunner.And("In OLS03102 I verfiy following for row \"1\"", ((string)(null)), table76, "And ");
#line 1762
  testRunner.And("In OLS03102 I enter action \"A\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNbrI",
                        "InvAccountType",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "W8ExpiryDate",
                        "InvChapter3",
                        "InvChapter4",
                        "InvBirthDate",
                        "InvCountryIncorp",
                        "InvForeignTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException",
                        "InvWorstCaseInd",
                        "AddBen"});
            table77.AddRow(new string[] {
                        "912333",
                        "",
                        "MR GIQNAXROJA NOMINEES INV02",
                        "13",
                        "99-7894562",
                        "U09",
                        "20/12/2016",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1763
  testRunner.And("In OLS03103 I continue with following", ((string)(null)), table77, "And ");
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "InvType",
                        "InvName",
                        "InvTinStatus",
                        "InvW8Exp",
                        "InvChpt3",
                        "InvChpt4"});
            table78.AddRow(new string[] {
                        "",
                        "MR GIQNAXROJA NOMINEES INV02",
                        "13",
                        "20/12/2016",
                        "",
                        ""});
#line 1766
  testRunner.And("In OLS03102 I verfiy following for row \"2\"", ((string)(null)), table78, "And ");
#line 1769
  testRunner.And("In OLS03102 I enter action \"A\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNbrI",
                        "InvAccountType",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "W8ExpiryDate",
                        "InvChapter3",
                        "InvChapter4",
                        "InvBirthDate",
                        "InvCountryIncorp",
                        "InvForeignTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException",
                        "InvWorstCaseInd",
                        "AddBen"});
            table79.AddRow(new string[] {
                        "912334",
                        "",
                        "MR GIQNAXROJA NOMINEES INV03",
                        "24",
                        "98-4561237",
                        "AUS",
                        "31/12/2017",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1770
  testRunner.And("In OLS03103 I continue with following", ((string)(null)), table79, "And ");
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        "InvType",
                        "InvName",
                        "InvTinStatus",
                        "InvW8Exp",
                        "InvChpt3",
                        "InvChpt4"});
            table80.AddRow(new string[] {
                        "",
                        "MR GIQNAXROJA NOMINEES INV03",
                        "24",
                        "31/12/2017",
                        "",
                        ""});
#line 1773
  testRunner.And("In OLS03102 I verfiy following for row \"3\"", ((string)(null)), table80, "And ");
#line 1776
  testRunner.And("In OLS03102 I enter action \"A\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNbrI",
                        "InvAccountType",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "W8ExpiryDate",
                        "InvChapter3",
                        "InvChapter4",
                        "InvBirthDate",
                        "InvCountryIncorp",
                        "InvForeignTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException",
                        "InvWorstCaseInd",
                        "AddBen"});
            table81.AddRow(new string[] {
                        "912335",
                        "",
                        "MR GIQNAXROJA NOMINEES INV04",
                        "14",
                        "99-9638527",
                        "U09",
                        "30/12/2018",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1777
  testRunner.And("In OLS03103 I continue with following", ((string)(null)), table81, "And ");
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        "InvType",
                        "InvName",
                        "InvTinStatus",
                        "InvW8Exp",
                        "InvChpt3",
                        "InvChpt4"});
            table82.AddRow(new string[] {
                        "",
                        "MR GIQNAXROJA NOMINEES INV04",
                        "14",
                        "30/12/2018",
                        "",
                        ""});
#line 1780
  testRunner.And("In OLS03102 I verfiy following for row \"4\"", ((string)(null)), table82, "And ");
#line 1783
  testRunner.And("I exit to main from online system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1785
  testRunner.And("I go to the Enquiry system and Search X0001311271", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1786
 testRunner.Then("In ENS01001 form I verify US Tax warning at position \"2\" value \"US Tax details pr" +
                    "esent\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1787
  testRunner.And("In ENS01001 I enter action \"UT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                        "InvType1",
                        "InvName1",
                        "InvTinStatus1",
                        "InvW8Exp1",
                        "InvChpt31",
                        "InvChpt41",
                        "InvType2",
                        "InvName2",
                        "InvTinStatus2",
                        "InvW8Exp2",
                        "InvChpt32",
                        "InvChpt42",
                        "InvType3",
                        "InvName3",
                        "InvTinStatus3",
                        "InvW8Exp3",
                        "InvChpt33",
                        "InvChpt43",
                        "InvType4",
                        "InvName4",
                        "InvTinStatus4",
                        "InvW8Exp4",
                        "InvChpt34",
                        "InvChpt44"});
            table83.AddRow(new string[] {
                        "",
                        "MR GIQNAXROJA NOMINEES INV01",
                        "18",
                        "31/12/2015",
                        "",
                        "",
                        "",
                        "MR GIQNAXROJA NOMINEES INV02",
                        "13",
                        "20/12/2016",
                        "",
                        "",
                        "",
                        "MR GIQNAXROJA NOMINEES INV03",
                        "24",
                        "31/12/2017",
                        "",
                        "",
                        "",
                        "MR GIQNAXROJA NOMINEES INV04",
                        "14",
                        "30/12/2018",
                        "",
                        ""});
#line 1788
  testRunner.And("In  ENTUSA01 I verify the following investor details", ((string)(null)), table83, "And ");
#line 1791
  testRunner.And("In  ENTUSA01 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        "JntAccountTyp",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "InvTinExpiryDate",
                        "InvChpt3",
                        "InvChpt4",
                        "InvBirthDate",
                        "InvCountry",
                        "InvTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException"});
            table84.AddRow(new string[] {
                        "",
                        "MR GIQNAXROJA NOMINEES INV01",
                        "18",
                        "*****4567",
                        "NZL",
                        "31/12/2015",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1792
  testRunner.And("In ENTUSA03 I verify the following", ((string)(null)), table84, "And ");
#line 1795
  testRunner.And("IN ENTUSA03 I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1796
   testRunner.And("In  ENTUSA01 I enter action \"2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        "JntAccountTyp",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "InvTinExpiryDate",
                        "InvChpt3",
                        "InvChpt4",
                        "InvBirthDate",
                        "InvCountry",
                        "InvTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException"});
            table85.AddRow(new string[] {
                        "",
                        "MR GIQNAXROJA NOMINEES INV02",
                        "13",
                        "*****4562",
                        "U09",
                        "20/12/2016",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1797
  testRunner.And("In ENTUSA03 I verify the following", ((string)(null)), table85, "And ");
#line 1800
  testRunner.And("IN ENTUSA03 I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1801
  testRunner.And("In  ENTUSA01 I enter action \"3\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        "JntAccountTyp",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "InvTinExpiryDate",
                        "InvChpt3",
                        "InvChpt4",
                        "InvBirthDate",
                        "InvCountry",
                        "InvTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException"});
            table86.AddRow(new string[] {
                        "",
                        "MR GIQNAXROJA NOMINEES INV03",
                        "24",
                        "*****1237",
                        "AUS",
                        "31/12/2017",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1802
  testRunner.And("In ENTUSA03 I verify the following", ((string)(null)), table86, "And ");
#line 1805
  testRunner.And("IN ENTUSA03 I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1806
   testRunner.And("In  ENTUSA01 I enter action \"4\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                        "JntAccountTyp",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "InvTinExpiryDate",
                        "InvChpt3",
                        "InvChpt4",
                        "InvBirthDate",
                        "InvCountry",
                        "InvTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException"});
            table87.AddRow(new string[] {
                        "",
                        "MR GIQNAXROJA NOMINEES INV04",
                        "14",
                        "*****8527",
                        "U09",
                        "30/12/2018",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1807
  testRunner.And("In ENTUSA03 I verify the following", ((string)(null)), table87, "And ");
#line 1810
  testRunner.And("I exit to main from enquiry system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1811
  testRunner.When("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1812
  testRunner.And("In OLS01101 I enter following details as the update option \"S\" \"X0001311271\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1813
  testRunner.And("In OLS01102 I enter following details as the update option \"U\" \"UX\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1814
  testRunner.And("In OLS03102 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1815
  testRunner.And("In OLS03103 I enter action \"C\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNbrI",
                        "InvAccountType",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "W8ExpiryDate",
                        "InvChapter3",
                        "InvChapter4",
                        "InvBirthDate",
                        "InvCountryIncorp",
                        "InvForeignTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException",
                        "InvWorstCaseInd",
                        "AddBen"});
            table88.AddRow(new string[] {
                        "912336",
                        "",
                        "MR GIQNAXROJA NOMINEES MOD01",
                        "17",
                        "98-7895443",
                        "W30",
                        "12/12/2017",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1816
  testRunner.And("In OLS03103 I continue with following", ((string)(null)), table88, "And ");
#line hidden
            TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                        "InvType",
                        "InvName",
                        "InvTinStatus",
                        "InvW8Exp",
                        "InvChpt3",
                        "InvChpt4"});
            table89.AddRow(new string[] {
                        "",
                        "MR GIQNAXROJA NOMINEES MOD01",
                        "17",
                        "12/12/2017",
                        "",
                        ""});
#line 1819
  testRunner.And("In OLS03102 I verfiy following for row \"1\"", ((string)(null)), table89, "And ");
#line 1822
  testRunner.And("In OLS03102 I enter action \"2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1823
  testRunner.And("In OLS03103 I enter action \"M\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table90 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNbrI",
                        "InvAccountType",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "W8ExpiryDate",
                        "InvChapter3",
                        "InvChapter4",
                        "InvBirthDate",
                        "InvCountryIncorp",
                        "InvForeignTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException",
                        "InvWorstCaseInd",
                        "AddBen"});
            table90.AddRow(new string[] {
                        "912337",
                        "",
                        "MR GIQNAXROJA NOMINEES MOD02",
                        "13",
                        "32-6547854",
                        "U09",
                        "30/12/2017",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1824
  testRunner.And("In OLS03103 I continue with following", ((string)(null)), table90, "And ");
#line hidden
            TechTalk.SpecFlow.Table table91 = new TechTalk.SpecFlow.Table(new string[] {
                        "InvType",
                        "InvName",
                        "InvTinStatus",
                        "InvW8Exp",
                        "InvChpt3",
                        "InvChpt4"});
            table91.AddRow(new string[] {
                        "",
                        "MR GIQNAXROJA NOMINEES MOD02",
                        "13",
                        "30/12/2017",
                        "",
                        ""});
#line 1827
  testRunner.And("In OLS03102 I verfiy following for row \"2\"", ((string)(null)), table91, "And ");
#line 1830
  testRunner.And("In OLS03102 I enter action \"3\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1831
  testRunner.And("In OLS03103 I enter action \"C\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table92 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNbrI",
                        "InvAccountType",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "W8ExpiryDate",
                        "InvChapter3",
                        "InvChapter4",
                        "InvBirthDate",
                        "InvCountryIncorp",
                        "InvForeignTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException",
                        "InvWorstCaseInd",
                        "AddBen"});
            table92.AddRow(new string[] {
                        "912338",
                        "",
                        "MR GIQNAXROJA NOMINEES MOD03",
                        "21",
                        "99-5214789",
                        "GBR",
                        "12/12/2015",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1832
  testRunner.And("In OLS03103 I continue with following", ((string)(null)), table92, "And ");
#line hidden
            TechTalk.SpecFlow.Table table93 = new TechTalk.SpecFlow.Table(new string[] {
                        "InvType",
                        "InvName",
                        "InvTinStatus",
                        "InvW8Exp",
                        "InvChpt3",
                        "InvChpt4"});
            table93.AddRow(new string[] {
                        "",
                        "MR GIQNAXROJA NOMINEES MOD03",
                        "21",
                        "12/12/2015",
                        "",
                        ""});
#line 1835
  testRunner.And("In OLS03102 I verfiy following for row \"3\"", ((string)(null)), table93, "And ");
#line 1838
   testRunner.And("In OLS03102 I enter action \"4\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1839
  testRunner.And("In OLS03103 I enter action \"M\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table94 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNbrI",
                        "InvAccountType",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "W8ExpiryDate",
                        "InvChapter3",
                        "InvChapter4",
                        "InvBirthDate",
                        "InvCountryIncorp",
                        "InvForeignTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException",
                        "InvWorstCaseInd",
                        "AddBen"});
            table94.AddRow(new string[] {
                        "912339",
                        "",
                        "MR GIQNAXROJA NOMINEES MOD04",
                        "14",
                        "58-7452178",
                        "U09",
                        "31/12/2019",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1840
  testRunner.And("In OLS03103 I continue with following", ((string)(null)), table94, "And ");
#line hidden
            TechTalk.SpecFlow.Table table95 = new TechTalk.SpecFlow.Table(new string[] {
                        "InvType",
                        "InvName",
                        "InvTinStatus",
                        "InvW8Exp",
                        "InvChpt3",
                        "InvChpt4"});
            table95.AddRow(new string[] {
                        "",
                        "MR GIQNAXROJA NOMINEES MOD04",
                        "14",
                        "31/12/2019",
                        "",
                        ""});
#line 1843
  testRunner.And("In OLS03102 I verfiy following for row \"4\"", ((string)(null)), table95, "And ");
#line 1846
  testRunner.And("I exit to main from online system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1847
  testRunner.And("I go to the Enquiry system and Search X0001311271", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1848
 testRunner.Then("In ENS01001 form I verify US Tax warning at position \"2\" value \"US Tax details pr" +
                    "esent\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1849
  testRunner.And("In ENS01001 I enter action \"UT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table96 = new TechTalk.SpecFlow.Table(new string[] {
                        "InvType1",
                        "InvName1",
                        "InvTinStatus1",
                        "InvW8Exp1",
                        "InvChpt31",
                        "InvChpt41",
                        "InvType2",
                        "InvName2",
                        "InvTinStatus2",
                        "InvW8Exp2",
                        "InvChpt32",
                        "InvChpt42",
                        "InvType3",
                        "InvName3",
                        "InvTinStatus3",
                        "InvW8Exp3",
                        "InvChpt33",
                        "InvChpt43",
                        "InvType4",
                        "InvName4",
                        "InvTinStatus4",
                        "InvW8Exp4",
                        "InvChpt34",
                        "InvChpt44"});
            table96.AddRow(new string[] {
                        "",
                        "MR GIQNAXROJA NOMINEES MOD01",
                        "17",
                        "12/12/2017",
                        "",
                        "",
                        "",
                        "MR GIQNAXROJA NOMINEES MOD02",
                        "13",
                        "30/12/2017",
                        "",
                        "",
                        "",
                        "MR GIQNAXROJA NOMINEES MOD03",
                        "21",
                        "12/12/2015",
                        "",
                        "",
                        "",
                        "MR GIQNAXROJA NOMINEES MOD04",
                        "14",
                        "31/12/2019",
                        "",
                        ""});
#line 1850
  testRunner.And("In  ENTUSA01 I verify the following investor details", ((string)(null)), table96, "And ");
#line 1853
  testRunner.And("In  ENTUSA01 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table97 = new TechTalk.SpecFlow.Table(new string[] {
                        "JntAccountTyp",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "InvTinExpiryDate",
                        "InvChpt3",
                        "InvChpt4",
                        "InvBirthDate",
                        "InvCountry",
                        "InvTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException"});
            table97.AddRow(new string[] {
                        "",
                        "MR GIQNAXROJA NOMINEES MOD01",
                        "17",
                        "*****5443",
                        "W30",
                        "12/12/2017",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1854
  testRunner.And("In ENTUSA03 I verify the following", ((string)(null)), table97, "And ");
#line 1857
   testRunner.And("IN ENTUSA03 I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1858
   testRunner.And("In  ENTUSA01 I enter action \"2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table98 = new TechTalk.SpecFlow.Table(new string[] {
                        "JntAccountTyp",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "InvTinExpiryDate",
                        "InvChpt3",
                        "InvChpt4",
                        "InvBirthDate",
                        "InvCountry",
                        "InvTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException"});
            table98.AddRow(new string[] {
                        "",
                        "MR GIQNAXROJA NOMINEES MOD02",
                        "13",
                        "*****7854",
                        "U09",
                        "30/12/2017",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1859
  testRunner.And("In ENTUSA03 I verify the following", ((string)(null)), table98, "And ");
#line 1862
  testRunner.And("IN ENTUSA03 I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1863
  testRunner.And("In  ENTUSA01 I enter action \"3\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table99 = new TechTalk.SpecFlow.Table(new string[] {
                        "JntAccountTyp",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "InvTinExpiryDate",
                        "InvChpt3",
                        "InvChpt4",
                        "InvBirthDate",
                        "InvCountry",
                        "InvTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException"});
            table99.AddRow(new string[] {
                        "",
                        "MR GIQNAXROJA NOMINEES MOD03",
                        "21",
                        "*****4789",
                        "GBR",
                        "12/12/2015",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1864
  testRunner.And("In ENTUSA03 I verify the following", ((string)(null)), table99, "And ");
#line 1867
  testRunner.And("IN ENTUSA03 I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1868
   testRunner.And("In  ENTUSA01 I enter action \"4\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table100 = new TechTalk.SpecFlow.Table(new string[] {
                        "JntAccountTyp",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "InvTinExpiryDate",
                        "InvChpt3",
                        "InvChpt4",
                        "InvBirthDate",
                        "InvCountry",
                        "InvTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException"});
            table100.AddRow(new string[] {
                        "",
                        "MR GIQNAXROJA NOMINEES MOD04",
                        "14",
                        "*****2178",
                        "U09",
                        "31/12/2019",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1869
  testRunner.And("In ENTUSA03 I verify the following", ((string)(null)), table100, "And ");
#line 1872
  testRunner.And("I exit to main from enquiry system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1873
  testRunner.When("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1874
  testRunner.And("In OLS01101 I enter following details as the update option \"S\" \"X0001311271\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1875
  testRunner.And("In OLS01102 I enter following details as the update option \"U\" \"UX\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1876
  testRunner.And("In OLS03102 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1877
  testRunner.And("In OLS03103 I enter action \"D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1878
  testRunner.And("In OLS03103 I confirm deletion with TransactionNo \"912340\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1879
  testRunner.And("In OLS03102 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1880
  testRunner.And("In OLS03103 I enter action \"D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1881
  testRunner.And("In OLS03103 I confirm deletion with TransactionNo \"912344\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1882
  testRunner.And("In OLS03102 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1883
  testRunner.And("In OLS03103 I enter action \"D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1884
  testRunner.And("In OLS03103 I confirm deletion with TransactionNo \"912342\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1885
  testRunner.And("In OLS03102 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1886
  testRunner.And("In OLS03103 I enter action \"D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1887
  testRunner.And("In OLS03103 I confirm deletion with TransactionNo \"912343\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1888
  testRunner.And("I exit to main from online system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1889
  testRunner.And("I go to the Enquiry system and Search X0001311271", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1890
 testRunner.Then("In ENS01001 I enter action \"UT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table101 = new TechTalk.SpecFlow.Table(new string[] {
                        "InvType1",
                        "InvName1",
                        "InvTinStatus1",
                        "InvW8Exp1",
                        "InvChpt31",
                        "InvChpt41",
                        "InvType2",
                        "InvName2",
                        "InvTinStatus2",
                        "InvW8Exp2",
                        "InvChpt32",
                        "InvChpt42",
                        "InvType3",
                        "InvName3",
                        "InvTinStatus3",
                        "InvW8Exp3",
                        "InvChpt33",
                        "InvChpt43",
                        "InvType4",
                        "InvName4",
                        "InvTinStatus4",
                        "InvW8Exp4",
                        "InvChpt34",
                        "InvChpt44"});
            table101.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 1891
     testRunner.And("In  ENTUSA01 I verify the following investor details", ((string)(null)), table101, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 21051: 04 - US Taxpayer Details - Add, Change, Modify and Delete Benefi" +
            "cial Owner (W-8ECI & W-8IMY) for CDI with Forms: W-8BEN-E & W-8IMY")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("21050")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("21051")]
        public virtual void TestCase2105104_USTaxpayerDetails_AddChangeModifyAndDeleteBeneficialOwnerW_8ECIW_8IMYForCDIWithFormsW_8BEN_EW_8IMY()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 21051: 04 - US Taxpayer Details - Add, Change, Modify and Delete Benefi" +
                    "cial Owner (W-8ECI & W-8IMY) for CDI with Forms: W-8BEN-E & W-8IMY", new string[] {
                        "winformsTest",
                        "WES_AUTO",
                        "OL_SDM_StaticDetailMaintenance",
                        "21050",
                        "winformsTest",
                        "WES_AUTO",
                        "OL_SDM_StaticDetailMaintenance",
                        "21051"});
#line 2003
  this.ScenarioSetup(scenarioInfo);
#line 2004
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2005
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 2006
  testRunner.And("In housekeeping US Tax Reporting Obligation is set as \"C\" \"\" \"\" \"\" \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2007
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2008
  testRunner.And("In OLS01101 I enter following details as the update option \"S\" \"X0014741054\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2009
  testRunner.And("In OLS01102 I enter following details as the update option \"U\" \"UX\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2010
  testRunner.And("In OLS03102 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2011
  testRunner.And("In OLS03103 I enter action \"C\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table102 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNbrI",
                        "InvAccountType",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "W8ExpiryDate",
                        "InvChapter3",
                        "InvChapter4",
                        "InvBirthDate",
                        "InvCountryIncorp",
                        "InvForeignTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException",
                        "InvWorstCaseInd",
                        "AddBen"});
            table102.AddRow(new string[] {
                        "912355",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Y"});
#line 2012
  testRunner.And("In OLS03103 I continue with following", ((string)(null)), table102, "And ");
#line 2015
  testRunner.And("In OLS03104 I enter action \"B\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table103 = new TechTalk.SpecFlow.Table(new string[] {
                        "CntAccountType",
                        "CntName",
                        "CntAddressLine1",
                        "CntAddressLine2",
                        "CntAddressLine3",
                        "CntAddressLine4",
                        "CntPostcode",
                        "Country",
                        "TinStatus",
                        "Ols03105CntTin",
                        "USTaxCode",
                        "Ols03105CntW8ExpDate",
                        "Ols03105CntChpt3",
                        "Ols03105CntChpt4",
                        "Ols03105CntDobIncorp",
                        "Ols03105CntCitizenship",
                        "Ols03105CntTaxIdentifier",
                        "Ols03105CntGiinP1",
                        "CntGiinP2",
                        "CntGiinP3",
                        "CntGiinP4",
                        "Ols03105CntGiinException",
                        "Action",
                        "Ols03105Confirm"});
            table103.AddRow(new string[] {
                        "E",
                        "DR JUMMOEW VINCOV BO01",
                        "3 JMASI STREET",
                        "JIASWIQVEZ",
                        "TAS",
                        "NEW YORK",
                        "3656",
                        "USA",
                        "13",
                        "98-7894563",
                        "U09",
                        "31/12/2015",
                        "10",
                        "",
                        "",
                        "USA",
                        "TEST FATCA",
                        "98Q96B",
                        "00000",
                        "BR",
                        "036",
                        "Y",
                        "",
                        ""});
#line 2016
  testRunner.And("In OLS03105 I continue with following", ((string)(null)), table103, "And ");
#line hidden
            TechTalk.SpecFlow.Table table104 = new TechTalk.SpecFlow.Table(new string[] {
                        "CntName",
                        "CntResCountry",
                        "CntCtznCountry",
                        "CntBen"});
            table104.AddRow(new string[] {
                        "DR JUMMOEW VINCOV BO01",
                        "USA",
                        "USA",
                        "Beneficial"});
#line 2019
  testRunner.And("In OLS03104 I verfiy following for row \"1\"", ((string)(null)), table104, "And ");
#line 2022
  testRunner.And("In OLS03104 I enter action \"U\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2023
  testRunner.And("In OLS03102 I enter action \"2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2024
  testRunner.And("In OLS03103 I enter action \"C\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table105 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNbrI",
                        "InvAccountType",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "W8ExpiryDate",
                        "InvChapter3",
                        "InvChapter4",
                        "InvBirthDate",
                        "InvCountryIncorp",
                        "InvForeignTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException",
                        "InvWorstCaseInd",
                        "AddBen"});
            table105.AddRow(new string[] {
                        "912356",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Y"});
#line 2025
  testRunner.And("In OLS03103 I continue with following", ((string)(null)), table105, "And ");
#line 2028
  testRunner.And("In OLS03104 I enter action \"B\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table106 = new TechTalk.SpecFlow.Table(new string[] {
                        "CntAccountType",
                        "CntName",
                        "CntAddressLine1",
                        "CntAddressLine2",
                        "CntAddressLine3",
                        "CntAddressLine4",
                        "CntPostcode",
                        "Country",
                        "TinStatus",
                        "Ols03105CntTin",
                        "USTaxCode",
                        "Ols03105CntW8ExpDate",
                        "Ols03105CntChpt3",
                        "Ols03105CntChpt4",
                        "Ols03105CntDobIncorp",
                        "Ols03105CntCitizenship",
                        "Ols03105CntTaxIdentifier",
                        "Ols03105CntGiinP1",
                        "CntGiinP2",
                        "CntGiinP3",
                        "CntGiinP4",
                        "Ols03105CntGiinException",
                        "Action",
                        "Ols03105Confirm"});
            table106.AddRow(new string[] {
                        "E",
                        "DR JUMMOEW VINCOV BO2",
                        "LORVEV VITMEOWU-BKUWX",
                        "5 JMASI STREET",
                        "NSW",
                        "AUS",
                        "3978",
                        "AUS",
                        "23",
                        "99-7894562",
                        "GBR",
                        "31/12/2016",
                        "12",
                        "7",
                        "",
                        "USA",
                        "FATCA TEST",
                        "98Q96B",
                        "00000",
                        "BR",
                        "036",
                        "Y",
                        "",
                        ""});
#line 2029
  testRunner.And("In OLS03105 I continue with following", ((string)(null)), table106, "And ");
#line hidden
            TechTalk.SpecFlow.Table table107 = new TechTalk.SpecFlow.Table(new string[] {
                        "CntName",
                        "CntResCountry",
                        "CntCtznCountry",
                        "CntBen"});
            table107.AddRow(new string[] {
                        "DR JUMMOEW VINCOV BO2",
                        "AUS",
                        "USA",
                        "Beneficial"});
#line 2032
  testRunner.And("In OLS03104 I verfiy following for row \"1\"", ((string)(null)), table107, "And ");
#line 2035
  testRunner.And("In OLS03104 I enter action \"U\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2036
  testRunner.And("I exit to main from online system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2037
  testRunner.And("I go to the Enquiry system and Search X0014741054", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2038
 testRunner.Then("In ENS01001 form I verify US Tax warning at position \"2\" value \"Holder Extra/US T" +
                    "ax present\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2039
  testRunner.And("In ENS01001 I enter action \"UT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table108 = new TechTalk.SpecFlow.Table(new string[] {
                        "InvType1",
                        "InvName1",
                        "InvTinStatus1",
                        "InvW8Exp1",
                        "InvChpt31",
                        "InvChpt41",
                        "InvType2",
                        "InvName2",
                        "InvTinStatus2",
                        "InvW8Exp2",
                        "InvChpt32",
                        "InvChpt42",
                        "InvType3",
                        "InvName3",
                        "InvTinStatus3",
                        "InvW8Exp3",
                        "InvChpt33",
                        "InvChpt43",
                        "InvType4",
                        "InvName4",
                        "InvTinStatus4",
                        "InvW8Exp4",
                        "InvChpt34",
                        "InvChpt44"});
            table108.AddRow(new string[] {
                        "",
                        "DR JUMMOEW VINCOV",
                        "18",
                        "31/12/2016",
                        "18",
                        "10",
                        "",
                        "LORVEV VITMEOWU-BKUWX",
                        "21",
                        "31/12/2017",
                        "12",
                        "08",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 2040
  testRunner.And("In  ENTUSA01 I verify the following investor details", ((string)(null)), table108, "And ");
#line 2043
  testRunner.And("In  ENTUSA01 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2044
  testRunner.And("In ENTUSA03 I enter \"C\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2045
     testRunner.And("In ENTUSA04 I enter \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table109 = new TechTalk.SpecFlow.Table(new string[] {
                        "CntName",
                        "CntAddressLine1",
                        "CntAddressLine2",
                        "CntAddressLine3",
                        "CntAddressLine4",
                        "CntPostcode",
                        "CntCountry",
                        "CntCitizenship",
                        "CntTaxIdentifier",
                        "CntTin",
                        "CntDobIncorp",
                        "CntTinStatus",
                        "CntChpt3",
                        "CntChpt4",
                        "CntUSTaxCode",
                        "CntW8ExpDate",
                        "CntGiinP1",
                        "CntGiinP2",
                        "CntGiinP3",
                        "CntGiinP4",
                        "CntGiinException"});
            table109.AddRow(new string[] {
                        "DR JUMMOEW VINCOV BO01",
                        "3 JMASI STREET",
                        "JIASWIQVEZ",
                        "TAS",
                        "NEW YORK",
                        "3656",
                        "USA",
                        "USA",
                        "Quoted",
                        "*****4563",
                        "No date",
                        "13",
                        "10",
                        "",
                        "U09",
                        "31/12/2015",
                        "98Q96B",
                        "00000",
                        "BR",
                        "036",
                        "Y"});
#line 2046
  testRunner.And("In ENTUSA05 I verify the following", ((string)(null)), table109, "And ");
#line 2049
   testRunner.And("I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2050
   testRunner.And("I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2051
   testRunner.And("IN ENTUSA03 I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2052
   testRunner.And("In  ENTUSA01 I enter action \"2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2053
   testRunner.And("In ENTUSA03 I enter \"C\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2054
     testRunner.And("In ENTUSA04 I enter \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table110 = new TechTalk.SpecFlow.Table(new string[] {
                        "CntName",
                        "CntAddressLine1",
                        "CntAddressLine2",
                        "CntAddressLine3",
                        "CntAddressLine4",
                        "CntPostcode",
                        "CntCountry",
                        "CntCitizenship",
                        "CntTaxIdentifier",
                        "CntTin",
                        "CntDobIncorp",
                        "CntTinStatus",
                        "CntChpt3",
                        "CntChpt4",
                        "CntUSTaxCode",
                        "CntW8ExpDate",
                        "CntGiinP1",
                        "CntGiinP2",
                        "CntGiinP3",
                        "CntGiinP4",
                        "CntGiinException"});
            table110.AddRow(new string[] {
                        "DR JUMMOEW VINCOV BO2",
                        "LORVEV VITMEOWU-BKUWX",
                        "5 JMASI STREET",
                        "NSW",
                        "AUS",
                        "3978",
                        "AUS",
                        "USA",
                        "Quoted",
                        "*****4562",
                        "No date",
                        "23",
                        "12",
                        "07",
                        "GBR",
                        "31/12/2016",
                        "98Q96B",
                        "00000",
                        "BR",
                        "036",
                        "Y"});
#line 2055
  testRunner.And("In ENTUSA05 I verify the following", ((string)(null)), table110, "And ");
#line 2058
  testRunner.And("I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2059
  testRunner.And("I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2060
  testRunner.And("IN ENTUSA03 I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2061
   testRunner.And("I exit to main from enquiry system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2062
  testRunner.When("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 2063
  testRunner.And("In OLS01101 I enter following details as the update option \"S\" \"X0014741054\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2064
  testRunner.And("In OLS01102 I enter following details as the update option \"U\" \"UX\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2065
  testRunner.And("In OLS03102 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2066
  testRunner.And("In OLS03103 I enter action \"C\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table111 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNbrI",
                        "InvAccountType",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "W8ExpiryDate",
                        "InvChapter3",
                        "InvChapter4",
                        "InvBirthDate",
                        "InvCountryIncorp",
                        "InvForeignTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException",
                        "InvWorstCaseInd",
                        "AddBen"});
            table111.AddRow(new string[] {
                        "912358",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Y"});
#line 2067
  testRunner.And("In OLS03103 I continue with following", ((string)(null)), table111, "And ");
#line 2070
  testRunner.And("In OLS03104 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2071
  testRunner.And("In OLS03105 I enter action \"C\" \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table112 = new TechTalk.SpecFlow.Table(new string[] {
                        "CntAccountType",
                        "CntName",
                        "CntAddressLine1",
                        "CntAddressLine2",
                        "CntAddressLine3",
                        "CntAddressLine4",
                        "CntPostcode",
                        "Country",
                        "TinStatus",
                        "Ols03105CntTin",
                        "USTaxCode",
                        "Ols03105CntW8ExpDate",
                        "Ols03105CntChpt3",
                        "Ols03105CntChpt4",
                        "Ols03105CntDobIncorp",
                        "Ols03105CntCitizenship",
                        "Ols03105CntTaxIdentifier",
                        "Ols03105CntGiinP1",
                        "CntGiinP2",
                        "CntGiinP3",
                        "CntGiinP4",
                        "Ols03105CntGiinException",
                        "Action",
                        "Ols03105Confirm"});
            table112.AddRow(new string[] {
                        "I",
                        "DR JUMMOEW VINCOV MOD01",
                        "C/- N N NEDRIT",
                        "NZZ 303",
                        "JIAZWIQVEZ",
                        "XUPISHUG",
                        "3034",
                        "AUS",
                        "13",
                        "58-7894562",
                        "U09",
                        "30/11/2015",
                        "8",
                        "",
                        "",
                        "AUS",
                        "TEST MOD FATCA",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 2072
  testRunner.And("In OLS03105 I continue with following", ((string)(null)), table112, "And ");
#line hidden
            TechTalk.SpecFlow.Table table113 = new TechTalk.SpecFlow.Table(new string[] {
                        "CntName",
                        "CntResCountry",
                        "CntCtznCountry",
                        "CntBen"});
            table113.AddRow(new string[] {
                        "DR JUMMOEW VINCOV MOD01",
                        "AUS",
                        "AUS",
                        "Beneficial"});
#line 2075
  testRunner.And("In OLS03104 I verfiy following for row \"1\"", ((string)(null)), table113, "And ");
#line 2078
  testRunner.And("In OLS03104 I enter action \"U\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2079
  testRunner.And("In OLS03102 I enter action \"2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2080
  testRunner.And("In OLS03103 I enter action \"C\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table114 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNbrI",
                        "InvAccountType",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "W8ExpiryDate",
                        "InvChapter3",
                        "InvChapter4",
                        "InvBirthDate",
                        "InvCountryIncorp",
                        "InvForeignTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException",
                        "InvWorstCaseInd",
                        "AddBen"});
            table114.AddRow(new string[] {
                        "912359",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Y"});
#line 2081
  testRunner.And("In OLS03103 I continue with following", ((string)(null)), table114, "And ");
#line 2084
  testRunner.And("In OLS03104 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2085
  testRunner.And("In OLS03105 I enter action \"M\" \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table115 = new TechTalk.SpecFlow.Table(new string[] {
                        "CntAccountType",
                        "CntName",
                        "CntAddressLine1",
                        "CntAddressLine2",
                        "CntAddressLine3",
                        "CntAddressLine4",
                        "CntPostcode",
                        "Country",
                        "TinStatus",
                        "Ols03105CntTin",
                        "USTaxCode",
                        "Ols03105CntW8ExpDate",
                        "Ols03105CntChpt3",
                        "Ols03105CntChpt4",
                        "Ols03105CntDobIncorp",
                        "Ols03105CntCitizenship",
                        "Ols03105CntTaxIdentifier",
                        "Ols03105CntGiinP1",
                        "CntGiinP2",
                        "CntGiinP3",
                        "CntGiinP4",
                        "Ols03105CntGiinException",
                        "Action",
                        "Ols03105Confirm"});
            table115.AddRow(new string[] {
                        "I",
                        "LORVEV VITMEOW MOD BO2",
                        "C/3 QESP MUPQ VE MMN",
                        "323 QIS STREET",
                        "RETP GUPTUOYFI",
                        "NSW",
                        "3876",
                        "NZL",
                        "26",
                        "78-9874563",
                        "AUS",
                        "12/12/2018",
                        "11",
                        "7",
                        "",
                        "USA",
                        "TEST MOD BO",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 2086
  testRunner.And("In OLS03105 I continue with following", ((string)(null)), table115, "And ");
#line hidden
            TechTalk.SpecFlow.Table table116 = new TechTalk.SpecFlow.Table(new string[] {
                        "CntName",
                        "CntResCountry",
                        "CntCtznCountry",
                        "CntBen"});
            table116.AddRow(new string[] {
                        "LORVEV VITMEOW MOD BO2",
                        "NZL",
                        "USA",
                        "Beneficial"});
#line 2089
  testRunner.And("In OLS03104 I verfiy following for row \"1\"", ((string)(null)), table116, "And ");
#line 2092
  testRunner.And("In OLS03104 I enter action \"U\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2093
  testRunner.And("I exit to main from online system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2094
  testRunner.And("I go to the Enquiry system and Search X0014741054", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2095
 testRunner.Then("In ENS01001 form I verify US Tax warning at position \"2\" value \"Holder Extra/US T" +
                    "ax present\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2096
  testRunner.And("In ENS01001 I enter action \"UT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2097
  testRunner.And("In  ENTUSA01 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2098
  testRunner.And("In ENTUSA03 I enter \"C\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2099
     testRunner.And("In ENTUSA04 I enter \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table117 = new TechTalk.SpecFlow.Table(new string[] {
                        "CntName",
                        "CntAddressLine1",
                        "CntAddressLine2",
                        "CntAddressLine3",
                        "CntAddressLine4",
                        "CntPostcode",
                        "CntCountry",
                        "CntCitizenship",
                        "CntTaxIdentifier",
                        "CntTin",
                        "CntDobIncorp",
                        "CntTinStatus",
                        "CntChpt3",
                        "CntChpt4",
                        "CntUSTaxCode",
                        "CntW8ExpDate",
                        "CntGiinP1",
                        "CntGiinP2",
                        "CntGiinP3",
                        "CntGiinP4",
                        "CntGiinException"});
            table117.AddRow(new string[] {
                        "DR JUMMOEW VINCOV MOD01",
                        "C/- N N NEDRIT",
                        "NZZ 303",
                        "JIAZWIQVEZ",
                        "XUPISHUG",
                        "3034",
                        "AUS",
                        "AUS",
                        "Quoted",
                        "*****4562",
                        "No date",
                        "13",
                        "08",
                        "",
                        "U09",
                        "30/11/2015",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 2100
  testRunner.And("In ENTUSA05 I verify the following", ((string)(null)), table117, "And ");
#line 2103
   testRunner.And("I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2104
   testRunner.And("I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2105
  testRunner.And("IN ENTUSA03 I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2106
  testRunner.And("In  ENTUSA01 I enter action \"2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2107
  testRunner.And("In ENTUSA03 I enter \"C\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2108
     testRunner.And("In ENTUSA04 I enter \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table118 = new TechTalk.SpecFlow.Table(new string[] {
                        "CntName",
                        "CntAddressLine1",
                        "CntAddressLine2",
                        "CntAddressLine3",
                        "CntAddressLine4",
                        "CntPostcode",
                        "CntCountry",
                        "CntCitizenship",
                        "CntTaxIdentifier",
                        "CntTin",
                        "CntDobIncorp",
                        "CntTinStatus",
                        "CntChpt3",
                        "CntChpt4",
                        "CntUSTaxCode",
                        "CntW8ExpDate",
                        "CntGiinP1",
                        "CntGiinP2",
                        "CntGiinP3",
                        "CntGiinP4",
                        "CntGiinException"});
            table118.AddRow(new string[] {
                        "LORVEV VITMEOW MOD BO2",
                        "C/3 QESP MUPQ VE MMN",
                        "323 QIS STREET",
                        "RETP GUPTUOYFI",
                        "NSW",
                        "3876",
                        "NZL",
                        "USA",
                        "Quoted",
                        "*****4563",
                        "No date",
                        "26",
                        "11",
                        "07",
                        "AUS",
                        "12/12/2018",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 2109
  testRunner.And("In ENTUSA05 I verify the following", ((string)(null)), table118, "And ");
#line 2112
  testRunner.And("I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2113
  testRunner.And("I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2114
  testRunner.And("IN ENTUSA03 I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2115
  testRunner.And("I exit to main from enquiry system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2116
  testRunner.When("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 2117
  testRunner.And("In OLS01101 I enter following details as the update option \"S\" \"X0014741054\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2118
  testRunner.And("In OLS01102 I enter following details as the update option \"U\" \"UX\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2119
  testRunner.And("In OLS03102 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2120
  testRunner.And("In OLS03103 I enter action \"C\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table119 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNbrI",
                        "InvAccountType",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "W8ExpiryDate",
                        "InvChapter3",
                        "InvChapter4",
                        "InvBirthDate",
                        "InvCountryIncorp",
                        "InvForeignTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException",
                        "InvWorstCaseInd",
                        "AddBen"});
            table119.AddRow(new string[] {
                        "912372",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Y"});
#line 2121
  testRunner.And("In OLS03103 I continue with following", ((string)(null)), table119, "And ");
#line 2124
  testRunner.And("In OLS03104 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2125
  testRunner.And("In OLS03105 I enter action \"D\" \"Y\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2126
  testRunner.And("In OLS03104 I enter action \"U\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2127
  testRunner.And("In OLS03102 I enter action \"2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2128
  testRunner.And("In OLS03103 I enter action \"C\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table120 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNbrI",
                        "InvAccountType",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "W8ExpiryDate",
                        "InvChapter3",
                        "InvChapter4",
                        "InvBirthDate",
                        "InvCountryIncorp",
                        "InvForeignTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException",
                        "InvWorstCaseInd",
                        "AddBen"});
            table120.AddRow(new string[] {
                        "912373",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Y"});
#line 2129
  testRunner.And("In OLS03103 I continue with following", ((string)(null)), table120, "And ");
#line 2132
  testRunner.And("In OLS03104 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2133
  testRunner.And("In OLS03105 I enter action \"D\" \"Y\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2134
  testRunner.And("In OLS03104 I enter action \"U\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2135
  testRunner.And("I exit to main from online system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2136
  testRunner.And("I go to the Enquiry system and Search X0014741054", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2137
 testRunner.Then("In ENS01001 form I verify US Tax warning at position \"2\" value \"Holder Extra/US T" +
                    "ax present\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2138
  testRunner.And("In ENS01001 I enter action \"UT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2139
  testRunner.And("In  ENTUSA01 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2140
  testRunner.And("In ENTUSA03 I enter \"C\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2141
  testRunner.And("I expect to see error with text \"No Controlling Person or Beneficial Owner\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2142
  testRunner.And("I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2143
  testRunner.And("In  ENTUSA01 I enter action \"2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2144
  testRunner.And("In ENTUSA03 I enter \"C\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2145
  testRunner.And("I expect to see error with text \"No Controlling Person or Beneficial Owner\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2146
  testRunner.And("I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 21054: 06 - US Taxpayer Details - Add, Change, Modify and Delete Contro" +
            "lling Persons for IGA with Form: SC-ENT")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("21054")]
        [NUnit.Framework.TestCaseAttribute("", "DR JUMMOEW VINCOV", "LORVEV VITMEOWU-BKUWX", "<VITMEOWU-BKUWX IQAP A/C>,", "3 JMASI STREET", "JIASWIQVEZ TAS", "3877", "GBR", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "REV SUXW ETNYIYQ", "GIXPIDF-AHOCOK", "14 VIZACJUDVG ROAD", "SUZESUZV WA", "WA", "3455", "NZL", null)]
        public virtual void TestCase2105406_USTaxpayerDetails_AddChangeModifyAndDeleteControllingPersonsForIGAWithFormSC_ENT(
                    string cntAccountType, 
                    string cntName, 
                    string cntAddressLine1, 
                    string cntAddressLine2, 
                    string cntAddressLine3, 
                    string cntAddressLine4, 
                    string cntPostcode, 
                    string country, 
                    string tinStatus, 
                    string ols03105CntTin, 
                    string uSTaxCode, 
                    string ols03105CntW8ExpDate, 
                    string ols03105CntChpt3, 
                    string ols03105CntChpt4, 
                    string ols03105CntDobIncorp, 
                    string ols03105CntCitizenship, 
                    string ols03105CntTaxIdentifier, 
                    string ols03105CntGiinP1, 
                    string cntGiinP2, 
                    string cntGiinP3, 
                    string cntGiinP4, 
                    string ols03105CntGiinException, 
                    string newCntName, 
                    string newCntAddressLine1, 
                    string newCntAddressLine2, 
                    string newCntAddressLine3, 
                    string newCntAddressLine4, 
                    string newCntPostcode, 
                    string newCountry, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "WES_AUTO",
                    "OL_SDM_StaticDetailMaintenance",
                    "21054"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 21054: 06 - US Taxpayer Details - Add, Change, Modify and Delete Contro" +
                    "lling Persons for IGA with Form: SC-ENT", @__tags);
#line 2155
  this.ScenarioSetup(scenarioInfo);
#line 2156
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2157
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 2158
  testRunner.And("In housekeeping US Tax Reporting Obligation is set as \"I\" \"98Q96B\" \"99999\" \"SL\" \"" +
                    "036\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2159
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2160
  testRunner.And("In OLS01101 I enter following details as the update option \"S\" \"I0131604602\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2161
  testRunner.And("In OLS01102 I enter following details as the update option \"U\" \"UX\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2162
  testRunner.And("In OLS03101 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2163
  testRunner.And("In OLS03103 I enter action \"C\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table121 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNbrI",
                        "InvAccountType",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "W8ExpiryDate",
                        "InvChapter3",
                        "InvChapter4",
                        "InvBirthDate",
                        "InvCountryIncorp",
                        "InvForeignTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException",
                        "InvWorstCaseInd",
                        "AddBen"});
            table121.AddRow(new string[] {
                        "912374",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Y"});
#line 2164
  testRunner.And("In OLS03103 I continue with following", ((string)(null)), table121, "And ");
#line 2167
  testRunner.And("In OLS03104 I enter action \"C\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table122 = new TechTalk.SpecFlow.Table(new string[] {
                        "CntAccountType",
                        "CntName",
                        "CntAddressLine1",
                        "CntAddressLine2",
                        "CntAddressLine3",
                        "CntAddressLine4",
                        "CntPostcode",
                        "Country",
                        "TinStatus",
                        "Ols03105CntTin",
                        "USTaxCode",
                        "Ols03105CntW8ExpDate",
                        "Ols03105CntChpt3",
                        "Ols03105CntChpt4",
                        "Ols03105CntDobIncorp",
                        "Ols03105CntCitizenship",
                        "Ols03105CntTaxIdentifier",
                        "Ols03105CntGiinP1",
                        "CntGiinP2",
                        "CntGiinP3",
                        "CntGiinP4",
                        "Ols03105CntGiinException"});
            table122.AddRow(new string[] {
                        "",
                        string.Format("{0}", cntName),
                        string.Format("{0}", cntAddressLine1),
                        string.Format("{0}", cntAddressLine2),
                        string.Format("{0}", cntAddressLine3),
                        string.Format("{0}", cntAddressLine4),
                        string.Format("{0}", cntPostcode),
                        string.Format("{0}", country),
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 2168
  testRunner.And("In OLS03105 I continue with following", ((string)(null)), table122, "And ");
#line hidden
            TechTalk.SpecFlow.Table table123 = new TechTalk.SpecFlow.Table(new string[] {
                        "CntName",
                        "CntResCountry",
                        "CntCtznCountry",
                        "CntBen"});
            table123.AddRow(new string[] {
                        string.Format("{0}", cntName),
                        string.Format("{0}", country),
                        "",
                        "Controlling"});
#line 2171
  testRunner.And("In OLS03104 I verfiy following for row \"1\"", ((string)(null)), table123, "And ");
#line 2174
  testRunner.And("In OLS03104 I enter action \"U\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2175
  testRunner.And("I exit to main from online system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2176
  testRunner.And("I go to the Enquiry system and Search I0131604602", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2177
  testRunner.Then("In ENS01001 form I verify US Tax warning at position \"3\" value \"Holder Extra/US T" +
                    "ax present\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2178
  testRunner.And("In ENS01001 I enter action \"UT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2179
  testRunner.And("In  ENTUSA01 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2180
  testRunner.And("In ENTUSA03 I enter \"C\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2181
     testRunner.And("In ENTUSA04 I enter \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table124 = new TechTalk.SpecFlow.Table(new string[] {
                        "CntName",
                        "CntAddressLine1",
                        "CntAddressLine2",
                        "CntAddressLine3",
                        "CntAddressLine4",
                        "CntPostcode",
                        "CntCountry",
                        "CntCitizenship",
                        "CntTaxIdentifier",
                        "CntTin",
                        "CntDobIncorp",
                        "CntTinStatus",
                        "CntChpt3",
                        "CntChpt4",
                        "CntUSTaxCode",
                        "CntW8ExpDate",
                        "CntGiinP1",
                        "CntGiinP2",
                        "CntGiinP3",
                        "CntGiinP4",
                        "CntGiinException"});
            table124.AddRow(new string[] {
                        string.Format("{0}", cntName),
                        string.Format("{0}", cntAddressLine1),
                        string.Format("{0}", cntAddressLine2),
                        string.Format("{0}", cntAddressLine3),
                        string.Format("{0}", cntAddressLine4),
                        string.Format("{0}", cntPostcode),
                        string.Format("{0}", country),
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 2182
  testRunner.And("In ENTUSA05 I verify the following", ((string)(null)), table124, "And ");
#line 2185
   testRunner.And("I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2186
   testRunner.And("I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2187
  testRunner.And("IN ENTUSA03 I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2188
     testRunner.And("I exit to main from enquiry system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2189
  testRunner.When("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 2190
  testRunner.And("In OLS01101 I enter following details as the update option \"S\" \"I0131604602\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2191
  testRunner.And("In OLS01102 I enter following details as the update option \"U\" \"UX\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2192
  testRunner.And("In OLS03101 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2193
  testRunner.And("In OLS03103 I enter action \"C\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table125 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNbrI",
                        "InvAccountType",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "W8ExpiryDate",
                        "InvChapter3",
                        "InvChapter4",
                        "InvBirthDate",
                        "InvCountryIncorp",
                        "InvForeignTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException",
                        "InvWorstCaseInd",
                        "AddBen"});
            table125.AddRow(new string[] {
                        "912375",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Y"});
#line 2194
  testRunner.And("In OLS03103 I continue with following", ((string)(null)), table125, "And ");
#line 2197
  testRunner.And("In OLS03104 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2198
  testRunner.And("In OLS03105 I enter action \"C\" \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table126 = new TechTalk.SpecFlow.Table(new string[] {
                        "CntAccountType",
                        "CntName",
                        "CntAddressLine1",
                        "CntAddressLine2",
                        "CntAddressLine3",
                        "CntAddressLine4",
                        "CntPostcode",
                        "Country",
                        "TinStatus",
                        "Ols03105CntTin",
                        "USTaxCode",
                        "Ols03105CntW8ExpDate",
                        "Ols03105CntChpt3",
                        "Ols03105CntChpt4",
                        "Ols03105CntDobIncorp",
                        "Ols03105CntCitizenship",
                        "Ols03105CntTaxIdentifier",
                        "Ols03105CntGiinP1",
                        "CntGiinP2",
                        "CntGiinP3",
                        "CntGiinP4",
                        "Ols03105CntGiinException"});
            table126.AddRow(new string[] {
                        "",
                        string.Format("{0}", newCntName),
                        string.Format("{0}", newCntAddressLine1),
                        string.Format("{0}", newCntAddressLine2),
                        string.Format("{0}", newCntAddressLine3),
                        string.Format("{0}", newCntAddressLine4),
                        string.Format("{0}", newCntPostcode),
                        string.Format("{0}", newCountry),
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 2199
  testRunner.And("In OLS03105 I continue with following", ((string)(null)), table126, "And ");
#line hidden
            TechTalk.SpecFlow.Table table127 = new TechTalk.SpecFlow.Table(new string[] {
                        "CntName",
                        "CntResCountry",
                        "CntCtznCountry",
                        "CntBen"});
            table127.AddRow(new string[] {
                        string.Format("{0}", newCntName),
                        string.Format("{0}", newCountry),
                        "",
                        "Controlling"});
#line 2202
  testRunner.And("In OLS03104 I verfiy following for row \"1\"", ((string)(null)), table127, "And ");
#line 2205
  testRunner.And("In OLS03104 I enter action \"U\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2206
  testRunner.And("I exit to main from online system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2207
  testRunner.And("I go to the Enquiry system and Search I0131604602", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2208
  testRunner.Then("In ENS01001 form I verify US Tax warning at position \"3\" value \"Holder Extra/US T" +
                    "ax present\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2209
  testRunner.And("In ENS01001 I enter action \"UT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2210
  testRunner.And("In  ENTUSA01 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2211
  testRunner.And("In ENTUSA03 I enter \"C\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2212
     testRunner.And("In ENTUSA04 I enter \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table128 = new TechTalk.SpecFlow.Table(new string[] {
                        "CntName",
                        "CntAddressLine1",
                        "CntAddressLine2",
                        "CntAddressLine3",
                        "CntAddressLine4",
                        "CntPostcode",
                        "CntCountry",
                        "CntCitizenship",
                        "CntTaxIdentifier",
                        "CntTin",
                        "CntDobIncorp",
                        "CntTinStatus",
                        "CntChpt3",
                        "CntChpt4",
                        "CntUSTaxCode",
                        "CntW8ExpDate",
                        "CntGiinP1",
                        "CntGiinP2",
                        "CntGiinP3",
                        "CntGiinP4",
                        "CntGiinException"});
            table128.AddRow(new string[] {
                        string.Format("{0}", newCntName),
                        string.Format("{0}", newCntAddressLine1),
                        string.Format("{0}", newCntAddressLine2),
                        string.Format("{0}", newCntAddressLine3),
                        string.Format("{0}", newCntAddressLine4),
                        string.Format("{0}", newCntPostcode),
                        string.Format("{0}", newCountry),
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 2213
  testRunner.And("In ENTUSA05 I verify the following", ((string)(null)), table128, "And ");
#line 2216
   testRunner.And("I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2217
   testRunner.And("I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2218
   testRunner.And("IN ENTUSA03 I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2219
   testRunner.And("I exit to main from enquiry system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2220
   testRunner.When("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 2221
  testRunner.And("In OLS01101 I enter following details as the update option \"S\" \"I0131604602\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2222
  testRunner.And("In OLS01102 I enter following details as the update option \"U\" \"UX\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2223
  testRunner.And("In OLS03101 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2224
  testRunner.And("In OLS03103 I enter action \"C\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table129 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNbrI",
                        "InvAccountType",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "W8ExpiryDate",
                        "InvChapter3",
                        "InvChapter4",
                        "InvBirthDate",
                        "InvCountryIncorp",
                        "InvForeignTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException",
                        "InvWorstCaseInd",
                        "AddBen"});
            table129.AddRow(new string[] {
                        "912376",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Y"});
#line 2225
  testRunner.And("In OLS03103 I continue with following", ((string)(null)), table129, "And ");
#line 2228
  testRunner.And("In OLS03104 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2229
  testRunner.And("In OLS03105 I enter action \"D\" \"Y\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2230
  testRunner.And("In OLS03104 I enter action \"U\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2231
  testRunner.And("I exit to main from online system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2232
  testRunner.And("I go to the Enquiry system and Search I0131604602", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2233
 testRunner.Then("In ENS01001 form I verify US Tax warning at position \"3\" value \"Holder Extra/US T" +
                    "ax present\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2234
  testRunner.And("In ENS01001 I enter action \"UT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2235
  testRunner.And("In  ENTUSA01 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2236
  testRunner.And("In ENTUSA03 I enter \"C\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2237
  testRunner.And("I expect to see error with text \"No Controlling Person or Beneficial Owner\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2238
  testRunner.And("I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 21052: 05 - US Taxpayer Details - Add, Change, Modify and Delete Contro" +
            "lling Persons for CDI with Form: W-8EXP Form")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("WES_AUTO")]
        [NUnit.Framework.CategoryAttribute("OL_SDM_StaticDetailMaintenance")]
        [NUnit.Framework.CategoryAttribute("21052")]
        [NUnit.Framework.TestCaseAttribute("", "DR JUMMOEW VINCOV", "LORVEV VITMEOWU-BKUWX", "VITMEOWU-BKUWX IQAP A/C>", "3 JMASI STREET", "JIASWIQVEZ TAS", "3877", "AUS", "", "99-7894645", "", "", "", "", "", "", "", "", "", "", "", "", "REV SUXW ETNYIYQ", "GIXPIDF-AHOCOK", "14 VIZACJUDVG ROAD", "SUZESUZV WA", "WA", "3455", "NZL", null)]
        public virtual void TestCase2105205_USTaxpayerDetails_AddChangeModifyAndDeleteControllingPersonsForCDIWithFormW_8EXPForm(
                    string cntAccountType, 
                    string cntName, 
                    string cntAddressLine1, 
                    string cntAddressLine2, 
                    string cntAddressLine3, 
                    string cntAddressLine4, 
                    string cntPostcode, 
                    string country, 
                    string tinStatus, 
                    string ols03105CntTin, 
                    string uSTaxCode, 
                    string ols03105CntW8ExpDate, 
                    string ols03105CntChpt3, 
                    string ols03105CntChpt4, 
                    string ols03105CntDobIncorp, 
                    string ols03105CntCitizenship, 
                    string ols03105CntTaxIdentifier, 
                    string ols03105CntGiinP1, 
                    string cntGiinP2, 
                    string cntGiinP3, 
                    string cntGiinP4, 
                    string ols03105CntGiinException, 
                    string newCntName, 
                    string newCntAddressLine1, 
                    string newCntAddressLine2, 
                    string newCntAddressLine3, 
                    string newCntAddressLine4, 
                    string newCntPostcode, 
                    string newCountry, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "WES_AUTO",
                    "OL_SDM_StaticDetailMaintenance",
                    "21052"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 21052: 05 - US Taxpayer Details - Add, Change, Modify and Delete Contro" +
                    "lling Persons for CDI with Form: W-8EXP Form", @__tags);
#line 2250
  this.ScenarioSetup(scenarioInfo);
#line 2251
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 2252
 testRunner.When("In SELCOY01 I select the company: \"WES_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 2253
  testRunner.And("In housekeeping US Tax Reporting Obligation is set as \"C\" \"\" \"\" \"\" \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2254
  testRunner.And("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2255
  testRunner.And("In OLS01101 I enter following details as the update option \"S\" \"I0131604769\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2256
  testRunner.And("In OLS01102 I enter following details as the update option \"U\" \"UX\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2257
  testRunner.And("In OLS03102 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2258
  testRunner.And("In OLS03103 I enter action \"C\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table130 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNbrI",
                        "InvAccountType",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "W8ExpiryDate",
                        "InvChapter3",
                        "InvChapter4",
                        "InvBirthDate",
                        "InvCountryIncorp",
                        "InvForeignTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException",
                        "InvWorstCaseInd",
                        "AddBen"});
            table130.AddRow(new string[] {
                        "912377",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Y"});
#line 2259
  testRunner.And("In OLS03103 I continue with following", ((string)(null)), table130, "And ");
#line 2262
  testRunner.And("In OLS03104 I enter action \"C\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table131 = new TechTalk.SpecFlow.Table(new string[] {
                        "CntAccountType",
                        "CntName",
                        "CntAddressLine1",
                        "CntAddressLine2",
                        "CntAddressLine3",
                        "CntAddressLine4",
                        "CntPostcode",
                        "Country",
                        "TinStatus",
                        "Ols03105CntTin",
                        "USTaxCode",
                        "Ols03105CntW8ExpDate",
                        "Ols03105CntChpt3",
                        "Ols03105CntChpt4",
                        "Ols03105CntDobIncorp",
                        "Ols03105CntCitizenship",
                        "Ols03105CntTaxIdentifier",
                        "Ols03105CntGiinP1",
                        "CntGiinP2",
                        "CntGiinP3",
                        "CntGiinP4",
                        "Ols03105CntGiinException"});
            table131.AddRow(new string[] {
                        "",
                        string.Format("{0}", cntName),
                        string.Format("{0}", cntAddressLine1),
                        string.Format("{0}", cntAddressLine2),
                        string.Format("{0}", cntAddressLine3),
                        string.Format("{0}", cntAddressLine4),
                        string.Format("{0}", cntPostcode),
                        string.Format("{0}", country),
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 2263
  testRunner.And("In OLS03105 I continue with following", ((string)(null)), table131, "And ");
#line hidden
            TechTalk.SpecFlow.Table table132 = new TechTalk.SpecFlow.Table(new string[] {
                        "CntName",
                        "CntResCountry",
                        "CntCtznCountry",
                        "CntBen"});
            table132.AddRow(new string[] {
                        string.Format("{0}", cntName),
                        string.Format("{0}", country),
                        "",
                        "Controlling"});
#line 2266
  testRunner.And("In OLS03104 I verfiy following for row \"1\"", ((string)(null)), table132, "And ");
#line 2269
  testRunner.And("In OLS03104 I enter action \"U\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2270
  testRunner.And("I exit to main from online system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2271
  testRunner.And("I go to the Enquiry system and Search I0131604769", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2272
  testRunner.Then("In ENS01001 form I verify US Tax warning at position \"3\" value \"Holder Extra/US T" +
                    "ax present\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2273
  testRunner.And("In ENS01001 I enter action \"UT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2274
  testRunner.And("In  ENTUSA01 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2275
  testRunner.And("In ENTUSA03 I enter \"C\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2276
     testRunner.And("In ENTUSA04 I enter \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table133 = new TechTalk.SpecFlow.Table(new string[] {
                        "CntName",
                        "CntAddressLine1",
                        "CntAddressLine2",
                        "CntAddressLine3",
                        "CntAddressLine4",
                        "CntPostcode",
                        "CntCountry",
                        "CntCitizenship",
                        "CntTaxIdentifier",
                        "CntTin",
                        "CntDobIncorp",
                        "CntTinStatus",
                        "CntChpt3",
                        "CntChpt4",
                        "CntUSTaxCode",
                        "CntW8ExpDate",
                        "CntGiinP1",
                        "CntGiinP2",
                        "CntGiinP3",
                        "CntGiinP4",
                        "CntGiinException"});
            table133.AddRow(new string[] {
                        string.Format("{0}", cntName),
                        string.Format("{0}", cntAddressLine1),
                        string.Format("{0}", cntAddressLine2),
                        string.Format("{0}", cntAddressLine3),
                        string.Format("{0}", cntAddressLine4),
                        string.Format("{0}", cntPostcode),
                        string.Format("{0}", country),
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 2277
  testRunner.And("In ENTUSA05 I verify the following", ((string)(null)), table133, "And ");
#line 2280
   testRunner.And("I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2281
   testRunner.And("I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2282
  testRunner.And("IN ENTUSA03 I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2283
     testRunner.And("I exit to main from enquiry system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2284
  testRunner.When("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 2285
  testRunner.And("In OLS01101 I enter following details as the update option \"S\" \"I0131604769\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2286
  testRunner.And("In OLS01102 I enter following details as the update option \"U\" \"UX\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2287
  testRunner.And("In OLS03102 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2288
  testRunner.And("In OLS03103 I enter action \"C\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table134 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNbrI",
                        "InvAccountType",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "W8ExpiryDate",
                        "InvChapter3",
                        "InvChapter4",
                        "InvBirthDate",
                        "InvCountryIncorp",
                        "InvForeignTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException",
                        "InvWorstCaseInd",
                        "AddBen"});
            table134.AddRow(new string[] {
                        "912378",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Y"});
#line 2289
  testRunner.And("In OLS03103 I continue with following", ((string)(null)), table134, "And ");
#line 2292
  testRunner.And("In OLS03104 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2293
  testRunner.And("In OLS03105 I enter action \"C\" \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table135 = new TechTalk.SpecFlow.Table(new string[] {
                        "CntAccountType",
                        "CntName",
                        "CntAddressLine1",
                        "CntAddressLine2",
                        "CntAddressLine3",
                        "CntAddressLine4",
                        "CntPostcode",
                        "Country",
                        "TinStatus",
                        "Ols03105CntTin",
                        "USTaxCode",
                        "Ols03105CntW8ExpDate",
                        "Ols03105CntChpt3",
                        "Ols03105CntChpt4",
                        "Ols03105CntDobIncorp",
                        "Ols03105CntCitizenship",
                        "Ols03105CntTaxIdentifier",
                        "Ols03105CntGiinP1",
                        "CntGiinP2",
                        "CntGiinP3",
                        "CntGiinP4",
                        "Ols03105CntGiinException"});
            table135.AddRow(new string[] {
                        "",
                        string.Format("{0}", newCntName),
                        string.Format("{0}", newCntAddressLine1),
                        string.Format("{0}", newCntAddressLine2),
                        string.Format("{0}", newCntAddressLine3),
                        string.Format("{0}", newCntAddressLine4),
                        string.Format("{0}", newCntPostcode),
                        string.Format("{0}", newCountry),
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 2294
  testRunner.And("In OLS03105 I continue with following", ((string)(null)), table135, "And ");
#line hidden
            TechTalk.SpecFlow.Table table136 = new TechTalk.SpecFlow.Table(new string[] {
                        "CntName",
                        "CntResCountry",
                        "CntCtznCountry",
                        "CntBen"});
            table136.AddRow(new string[] {
                        string.Format("{0}", newCntName),
                        string.Format("{0}", newCountry),
                        "",
                        "Controlling"});
#line 2297
  testRunner.And("In OLS03104 I verfiy following for row \"1\"", ((string)(null)), table136, "And ");
#line 2300
  testRunner.And("In OLS03104 I enter action \"U\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2301
  testRunner.And("I exit to main from online system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2302
  testRunner.And("I go to the Enquiry system and Search I0131604769", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2303
  testRunner.Then("In ENS01001 form I verify US Tax warning at position \"3\" value \"Holder Extra/US T" +
                    "ax present\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2304
  testRunner.And("In ENS01001 I enter action \"UT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2305
  testRunner.And("In  ENTUSA01 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2306
  testRunner.And("In ENTUSA03 I enter \"C\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2307
     testRunner.And("In ENTUSA04 I enter \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table137 = new TechTalk.SpecFlow.Table(new string[] {
                        "CntName",
                        "CntAddressLine1",
                        "CntAddressLine2",
                        "CntAddressLine3",
                        "CntAddressLine4",
                        "CntPostcode",
                        "CntCountry",
                        "CntCitizenship",
                        "CntTaxIdentifier",
                        "CntTin",
                        "CntDobIncorp",
                        "CntTinStatus",
                        "CntChpt3",
                        "CntChpt4",
                        "CntUSTaxCode",
                        "CntW8ExpDate",
                        "CntGiinP1",
                        "CntGiinP2",
                        "CntGiinP3",
                        "CntGiinP4",
                        "CntGiinException"});
            table137.AddRow(new string[] {
                        string.Format("{0}", newCntName),
                        string.Format("{0}", newCntAddressLine1),
                        string.Format("{0}", newCntAddressLine2),
                        string.Format("{0}", newCntAddressLine3),
                        string.Format("{0}", newCntAddressLine4),
                        string.Format("{0}", newCntPostcode),
                        string.Format("{0}", newCountry),
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 2308
  testRunner.And("In ENTUSA05 I verify the following", ((string)(null)), table137, "And ");
#line 2311
   testRunner.And("I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2312
   testRunner.And("I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2313
   testRunner.And("IN ENTUSA03 I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2314
   testRunner.And("I exit to main from enquiry system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2315
   testRunner.When("I go to the Static Details Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 2316
  testRunner.And("In OLS01101 I enter following details as the update option \"S\" \"I0131604769\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2317
  testRunner.And("In OLS01102 I enter following details as the update option \"U\" \"UX\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2318
  testRunner.And("In OLS03102 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2319
  testRunner.And("In OLS03103 I enter action \"C\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table138 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransNbrI",
                        "InvAccountType",
                        "InvName",
                        "InvTinStatus",
                        "InvTin",
                        "InvUSTaxCode",
                        "W8ExpiryDate",
                        "InvChapter3",
                        "InvChapter4",
                        "InvBirthDate",
                        "InvCountryIncorp",
                        "InvForeignTaxID",
                        "InvAddress1",
                        "InvAddress2",
                        "InvGiinP1",
                        "InvGiinP2",
                        "InvGiinP3",
                        "InvGiinP4",
                        "InvGiinException",
                        "InvWorstCaseInd",
                        "AddBen"});
            table138.AddRow(new string[] {
                        "912379",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Y"});
#line 2320
  testRunner.And("In OLS03103 I continue with following", ((string)(null)), table138, "And ");
#line 2323
  testRunner.And("In OLS03104 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2324
  testRunner.And("In OLS03105 I enter action \"D\" \"Y\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2325
  testRunner.And("In OLS03104 I enter action \"U\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2326
  testRunner.And("I exit to main from online system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2327
  testRunner.And("I go to the Enquiry system and Search I0131604769", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2328
 testRunner.Then("In ENS01001 form I verify US Tax warning at position \"3\" value \"Holder Extra/US T" +
                    "ax present\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 2329
  testRunner.And("In ENS01001 I enter action \"UT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2330
  testRunner.And("In  ENTUSA01 I enter action \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2331
  testRunner.And("In ENTUSA03 I enter \"C\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2332
  testRunner.And("I expect to see error with text \"No Controlling Person or Beneficial Owner\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 2333
  testRunner.And("I press ESC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
