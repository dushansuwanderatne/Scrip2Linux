// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SCRIPAU.Automation.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("EN_E_DisbursementOptions")]
    public partial class EN_E_DisbursementOptionsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "EN_E_DisbursementOptions.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "EN_E_DisbursementOptions", "Ensure EN_E_DisbursementOptions functionality covered", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17471: 02_Disbursement Types – DSR actions")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("CPU_AUTO")]
        [NUnit.Framework.CategoryAttribute("17471")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisbursementOptions")]
        public virtual void TestCase1747102_DisbursementTypesDSRActions()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17471: 02_Disbursement Types – DSR actions", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "CPU_AUTO",
                        "17471",
                        "EN_E_DisbursementOptions"});
#line 9
this.ScenarioSetup(scenarioInfo);
#line 11
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 12
 testRunner.When("In SELCOY01 I select the company: \"CPU_AUTO\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
  testRunner.And("I go to the Enquiry system for \"X0026378389\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "Action",
                        "DSR"});
            table1.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 14
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table1, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "HIN",
                        "X0026378389"});
            table2.AddRow(new string[] {
                        "Type",
                        "JNT"});
            table2.AddRow(new string[] {
                        "Key",
                        "YSONHESLT   KIFUP VIMY  NIXGAB"});
            table2.AddRow(new string[] {
                        "NameAddress1",
                        "MR KIFUP VIMY YSONHESLT +"});
            table2.AddRow(new string[] {
                        "NameAddress2",
                        "MRS RIMCEQIL KZUNABGO"});
            table2.AddRow(new string[] {
                        "PI",
                        "DC/AUD"});
            table2.AddRow(new string[] {
                        "Date",
                        "17/09/13"});
            table2.AddRow(new string[] {
                        "Method",
                        "Reinv"});
            table2.AddRow(new string[] {
                        "Reference",
                        "00701256"});
            table2.AddRow(new string[] {
                        "PaidAmount",
                        "16.10"});
            table2.AddRow(new string[] {
                        "PaidCurrency",
                        "AUD"});
            table2.AddRow(new string[] {
                        "BaseCurrency",
                        "AUD"});
            table2.AddRow(new string[] {
                        "Status",
                        "Presented"});
            table2.AddRow(new string[] {
                        "PressDate",
                        "17/09/13"});
            table2.AddRow(new string[] {
                        "PaymentAccount",
                        "SEP13"});
            table2.AddRow(new string[] {
                        "PayType",
                        "DIVIDEND"});
#line 18
 testRunner.Then("In ENSDIS01 I should see Disbursements details as below:", ((string)(null)), table2, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "Action",
                        "01"});
            table3.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 36
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table3, "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table4.AddRow(new string[] {
                        "HIN",
                        "X0026378389"});
            table4.AddRow(new string[] {
                        "PaymentCode",
                        "DIVP"});
            table4.AddRow(new string[] {
                        "ASXCAType",
                        "D"});
            table4.AddRow(new string[] {
                        "DivDesc",
                        "(DIVIDEND)"});
            table4.AddRow(new string[] {
                        "PaymentDate",
                        "17/09/2013"});
            table4.AddRow(new string[] {
                        "Source",
                        "D"});
            table4.AddRow(new string[] {
                        "PayAccount",
                        "SEP13"});
            table4.AddRow(new string[] {
                        "ReferenceNbr",
                        "701256"});
            table4.AddRow(new string[] {
                        "TaxCodeAUS",
                        ""});
            table4.AddRow(new string[] {
                        "TaxCode",
                        ""});
            table4.AddRow(new string[] {
                        "CalcCurrency",
                        "AUD"});
            table4.AddRow(new string[] {
                        "Gross",
                        "16.10"});
            table4.AddRow(new string[] {
                        "Net",
                        "16.10"});
            table4.AddRow(new string[] {
                        "PaidCurreny",
                        "AUD"});
            table4.AddRow(new string[] {
                        "PaymentDetail1",
                        "** Reinvestment Details **"});
            table4.AddRow(new string[] {
                        "PaymentDetail2",
                        "Cert #...: UNCERT\'D"});
            table4.AddRow(new string[] {
                        "PaymentDetail3",
                        "Reg......: VIC"});
            table4.AddRow(new string[] {
                        "PaymentDetail4",
                        "MONEY b/f:       0.00"});
            table4.AddRow(new string[] {
                        "PaymentDetail5",
                        "MONEY c/f:       6.36"});
            table4.AddRow(new string[] {
                        "PaymentDetail6",
                        "Allotted.:          1"});
            table4.AddRow(new string[] {
                        "PaymentDetail7",
                        "Price....:   9.740000"});
            table4.AddRow(new string[] {
                        "SubPayCode",
                        "DIVP"});
            table4.AddRow(new string[] {
                        "SubPaymentType",
                        "D"});
            table4.AddRow(new string[] {
                        "SubPayDesc",
                        "(DIVIDEND)"});
            table4.AddRow(new string[] {
                        "SubPayGross",
                        "16.10"});
            table4.AddRow(new string[] {
                        "SubPayTax",
                        ""});
            table4.AddRow(new string[] {
                        "SubPayNett",
                        "16.10"});
#line 40
 testRunner.Then("In ENSDIV02 I should see Dividend History Brief as below:", ((string)(null)), table4, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table5.AddRow(new string[] {
                        "Action",
                        "01"});
            table5.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 69
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table5, "When ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table6.AddRow(new string[] {
                        "HIN",
                        "X0026378389"});
            table6.AddRow(new string[] {
                        "PaymentCode",
                        "DIVP"});
            table6.AddRow(new string[] {
                        "Source",
                        "D"});
            table6.AddRow(new string[] {
                        "SubPayCode",
                        "DIVP"});
            table6.AddRow(new string[] {
                        "SubPaymentType",
                        "D"});
            table6.AddRow(new string[] {
                        "SubPayDesc",
                        "(DIVIDEND)"});
            table6.AddRow(new string[] {
                        "PaymentAccount",
                        "SEP13"});
            table6.AddRow(new string[] {
                        "PaymentDate",
                        "17/09/2013"});
            table6.AddRow(new string[] {
                        "ComponentDesc1",
                        "AUS Franking Credit"});
            table6.AddRow(new string[] {
                        "ComponentAmount1",
                        "1.38"});
            table6.AddRow(new string[] {
                        "ComponentDesc2",
                        "AUS Franked (Dividen"});
            table6.AddRow(new string[] {
                        "ComponentAmount2",
                        "3.22"});
            table6.AddRow(new string[] {
                        "ComponentDesc3",
                        "AUS Unfranked Foreig"});
            table6.AddRow(new string[] {
                        "ComponentAmount3",
                        "12.88"});
#line 73
 testRunner.Then("In ENSDIV03 I should see Dividend History Component as below:", ((string)(null)), table6, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table7.AddRow(new string[] {
                        "Action",
                        "CT"});
            table7.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 89
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table7, "When ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table8.AddRow(new string[] {
                        "HIN",
                        "X0026378389"});
            table8.AddRow(new string[] {
                        "PaymentCode",
                        "DIVP"});
            table8.AddRow(new string[] {
                        "Source",
                        "D"});
            table8.AddRow(new string[] {
                        "SubPayCode",
                        "DIVP"});
            table8.AddRow(new string[] {
                        "PaymentAccount",
                        "SEP13"});
            table8.AddRow(new string[] {
                        "SubPaymentType",
                        "D"});
            table8.AddRow(new string[] {
                        "SubPayDesc",
                        "(DIVIDEND)"});
            table8.AddRow(new string[] {
                        "SubPaymentAccount",
                        "SEP13"});
            table8.AddRow(new string[] {
                        "PaymentDate",
                        "17/09/2013"});
            table8.AddRow(new string[] {
                        "Class",
                        "FP"});
            table8.AddRow(new string[] {
                        "CatCode",
                        "5"});
            table8.AddRow(new string[] {
                        "ASXCode",
                        "CPU"});
            table8.AddRow(new string[] {
                        "DetailUnits",
                        "115"});
            table8.AddRow(new string[] {
                        "PaymentRate",
                        "0.14000000"});
#line 93
 testRunner.Then("In ENSDIV04 I should see Dividend Sub Payment Summary as below:", ((string)(null)), table8, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table9.AddRow(new string[] {
                        "Action",
                        "1"});
            table9.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 109
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table9, "When ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table10.AddRow(new string[] {
                        "HIN",
                        "X0026378389"});
            table10.AddRow(new string[] {
                        "PaymentCode",
                        "DIVP"});
            table10.AddRow(new string[] {
                        "Source",
                        "D"});
            table10.AddRow(new string[] {
                        "SubPayCode",
                        "DIVP"});
            table10.AddRow(new string[] {
                        "PaymentAccount",
                        "SEP13"});
            table10.AddRow(new string[] {
                        "SubPaymentType",
                        "D"});
            table10.AddRow(new string[] {
                        "SubPayDesc",
                        "(DIVIDEND)"});
            table10.AddRow(new string[] {
                        "Class",
                        "FP"});
            table10.AddRow(new string[] {
                        "CatCode",
                        "5"});
            table10.AddRow(new string[] {
                        "ASXCode",
                        "CPU"});
            table10.AddRow(new string[] {
                        "ComponentDesc1",
                        "AUS Franking Credit"});
            table10.AddRow(new string[] {
                        "ComponentAmount1",
                        "1.38"});
            table10.AddRow(new string[] {
                        "ComponentDesc2",
                        "AUS Franked (Dividen"});
            table10.AddRow(new string[] {
                        "ComponentAmount2",
                        "3.22"});
            table10.AddRow(new string[] {
                        "ComponentDesc3",
                        "AUS Unfranked Foreig"});
            table10.AddRow(new string[] {
                        "ComponentAmount3",
                        "12.88"});
#line 113
 testRunner.Then("In ENSDIV05 I should see Dividend History Class Components as below:", ((string)(null)), table10, "Then ");
#line 131
  testRunner.And("I close Winforms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17467: 01_Disbursement Types –actions")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("DIV_A")]
        [NUnit.Framework.CategoryAttribute("17467")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisbursementOptions")]
        [NUnit.Framework.TestCaseAttribute("DSC", "", "X0010703719", "06/06/16", "Chq", "00001458", "200.00", "AUD", "AUD", "Unpresented", "NBK01", "DIVIDEND", "0111", "D", "(DIVIDEND)", "22/05/2015", "D", "DV100", "2466", "AUD", "20000.00", "20000.00", "AUD", "** Paid directly by cheque **", "DIV1", "D", "(DIVIDEND)", "20000.00", "20000.00", "AUS Franked (Dividen", "20000.00", "FP", "2000", "10.00000000", "ORDINARY SECURITY", null)]
        [NUnit.Framework.TestCaseAttribute("DSF", "", "I0030012071", "06/06/16", "F/Chq", "00000578", "600.00", "JPY", "AUD", "Unpresented", "NBK01", "DIVIDEND", "0111", "D", "(DIVIDEND)", "22/05/2015", "D", "DV100", "533", "AUD", "60000.00", "60000.00", "JPY", "*** Paid by Foreign Cheque ***", "DIV1", "D", "(DIVIDEND)", "60000.00", "60000.00", "AUS Franked (Dividen", "60000.00", "FP", "6000", "10.00000000", "ORDINARY SECURITY", null)]
        [NUnit.Framework.TestCaseAttribute("DS", "", "I0030002911", "06/06/16", "Chq", "00000001", "1408.04", "GBP", "AUD", "Unpresented", "NBKG1", "DIVIDEND", "0111", "D", "(DIVIDEND)", "22/05/2015", "D", "DV100", "367", "AUD", "213340.00", "213340.00", "GBP", "*** Paid by Foreign Cheque ***", "DIV1", "D", "(DIVIDEND)", "213340.00", "213340.00", "AUS Franked (Dividen", "213340.00", "FP", "21334", "10.00000000", "ORDINARY SECURITY", null)]
        public virtual void TestCase1746701_DisbursementTypesActions(
                    string action, 
                    string locateArgument, 
                    string hIN, 
                    string date, 
                    string method, 
                    string reference, 
                    string paidAmount, 
                    string paidCurrency, 
                    string baseCurrency, 
                    string status, 
                    string paymentAccount, 
                    string payType, 
                    string paymentCode, 
                    string aSXCAType, 
                    string divDesc, 
                    string paymentDate, 
                    string source, 
                    string payAccount, 
                    string referenceNbr, 
                    string calcCurrency, 
                    string gross, 
                    string net, 
                    string paidCurreny, 
                    string paymentDetail1, 
                    string subPayCode, 
                    string subPaymentType, 
                    string subPayDesc, 
                    string subPayGross, 
                    string subPayNett, 
                    string componentDesc1, 
                    string componentAmount1, 
                    string @class, 
                    string detailUnits, 
                    string paymentRate, 
                    string classDesc, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "winformsTest",
                    "EnquiryTest",
                    "DIV_A",
                    "17467",
                    "EN_E_DisbursementOptions"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17467: 01_Disbursement Types –actions", @__tags);
#line 138
this.ScenarioSetup(scenarioInfo);
#line 140
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 141
 testRunner.When("In SELCOY01 I select the company: \"DIV_A\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 142
  testRunner.And(string.Format("I go to the Enquiry system and Search {0}", hIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 143
  testRunner.And(string.Format("I enter the following details as the locatActions \"{0}\"  \"{1}\"", action, locateArgument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 144
 testRunner.Then(string.Format("In ENSDIS01 I should see Disbursements details as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\" \"" +
                        "{5}\" \"{6}\" \"{7}\" \"{8}\"", date, method, reference, paidAmount, paidCurrency, baseCurrency, status, paymentAccount, payType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table11.AddRow(new string[] {
                        "Action",
                        "02"});
            table11.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 145
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table11, "When ");
#line 149
 testRunner.Then(string.Format("In ENSDIV02 I should see Dividend History Brief as\t\"{0}\"\t\"{1}\" \"{2}\" \"{3}\" \"{4}\" " +
                        "\"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\" \"{11}\" \"{12}\" \"{13}\" \"{14}\"\t\"{15}\" \"{16}\"", paymentCode, aSXCAType, divDesc, paymentDate, source, payAccount, referenceNbr, calcCurrency, gross, net, paidCurreny, paymentDetail1, subPayCode, subPaymentType, subPayDesc, subPayGross, subPayNett), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table12.AddRow(new string[] {
                        "Action",
                        "01"});
            table12.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 150
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table12, "When ");
#line 154
 testRunner.Then(string.Format("In ENSDIV03 I should see Dividend History Component as \"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{" +
                        "4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\"", paymentCode, source, subPayCode, subPaymentType, subPayDesc, payAccount, paymentDate, componentDesc1, componentAmount1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table13.AddRow(new string[] {
                        "Action",
                        "CT"});
            table13.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 155
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table13, "When ");
#line 159
 testRunner.Then(string.Format("In ENSDIV04 I should see Dividend Sub Payment Summary as \"{0}\" \"{1}\" \"{2}\" \"{3}\" " +
                        "\"{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\"", paymentCode, source, subPayCode, payAccount, subPaymentType, subPayDesc, paymentDate, @class, detailUnits, paymentRate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table14.AddRow(new string[] {
                        "Action",
                        "1"});
            table14.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 160
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table14, "When ");
#line 164
  testRunner.Then(string.Format("In ENSDIV05 I should see Dividend History Class Components as \"{0}\" \"{1}\" \"{2}\" \"" +
                        "{3}\" \"{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\"", paymentCode, source, subPayCode, payAccount, subPaymentType, subPayDesc, paymentDate, @class, classDesc, componentDesc1, componentAmount1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 165
  testRunner.And("I close Winforms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test Case 17471: 02_Disbursement Types – DSD actions")]
        [NUnit.Framework.CategoryAttribute("winformsTest")]
        [NUnit.Framework.CategoryAttribute("EnquiryTest")]
        [NUnit.Framework.CategoryAttribute("DIV_A")]
        [NUnit.Framework.CategoryAttribute("17471")]
        [NUnit.Framework.CategoryAttribute("EN_E_DisbursementOptions")]
        public virtual void TestCase1747102_DisbursementTypesDSDActions()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test Case 17471: 02_Disbursement Types – DSD actions", new string[] {
                        "winformsTest",
                        "EnquiryTest",
                        "DIV_A",
                        "17471",
                        "EN_E_DisbursementOptions"});
#line 178
this.ScenarioSetup(scenarioInfo);
#line 180
 testRunner.Given("I have connected to WinForms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 181
 testRunner.When("In SELCOY01 I select the company: \"DIV_A\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 182
  testRunner.And("I go to the Enquiry system for \"X0010703719\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table15.AddRow(new string[] {
                        "Action",
                        "DSD"});
            table15.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 183
  testRunner.And("I enter the following details as the Locate action:", ((string)(null)), table15, "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table16.AddRow(new string[] {
                        "HIN",
                        "X0010703719"});
            table16.AddRow(new string[] {
                        "Type",
                        "COY"});
            table16.AddRow(new string[] {
                        "Key",
                        "XE          NOZBERI&ASSOCIATES"});
            table16.AddRow(new string[] {
                        "NameAddress1",
                        "X E NOZBERI & ASSOCIATES PTY"});
            table16.AddRow(new string[] {
                        "NameAddress2",
                        "LTD,"});
            table16.AddRow(new string[] {
                        "PI",
                        ""});
            table16.AddRow(new string[] {
                        "Date",
                        "05/12/05"});
            table16.AddRow(new string[] {
                        "Method",
                        "D/Cr"});
            table16.AddRow(new string[] {
                        "Reference",
                        "00008738"});
            table16.AddRow(new string[] {
                        "PaidAmount",
                        "100.00"});
            table16.AddRow(new string[] {
                        "PaidCurrency",
                        "AUD"});
            table16.AddRow(new string[] {
                        "BaseCurrency",
                        "AUD"});
            table16.AddRow(new string[] {
                        "Status",
                        "Failed"});
            table16.AddRow(new string[] {
                        "PressDate",
                        "14/03/08"});
            table16.AddRow(new string[] {
                        "PaymentAccount",
                        "SAD03"});
            table16.AddRow(new string[] {
                        "PayType",
                        "DIVIDEND"});
#line 187
 testRunner.Then("In ENSDIS01 I should see Disbursements details as below:", ((string)(null)), table16, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table17.AddRow(new string[] {
                        "Action",
                        "01"});
            table17.AddRow(new string[] {
                        "Locate Argument",
                        ""});
#line 205
 testRunner.When("I enter the following details as the Locate action:", ((string)(null)), table17, "When ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table18.AddRow(new string[] {
                        "Name Key",
                        "XE          NOZBERI&ASSOCIATES"});
            table18.AddRow(new string[] {
                        "HIN",
                        "X0010703719"});
            table18.AddRow(new string[] {
                        "Name",
                        "X E NOZBERI & ASSOCIATES PTY"});
            table18.AddRow(new string[] {
                        "Address",
                        "LTD,"});
            table18.AddRow(new string[] {
                        "Pay Account Number",
                        "SAD03"});
            table18.AddRow(new string[] {
                        "Pay Account Desc",
                        "DECEMBER 2005 DIVIDEND TEST - DRP"});
            table18.AddRow(new string[] {
                        "Transaction Details1",
                        "00008738D           3342/00000022 14/03/08  DCRFM/DIRECT CREDIT FAILURE (MANUAL) " +
                            " P Dasari-------------(WINFRM)"});
            table18.AddRow(new string[] {
                        "Transaction Details2",
                        ""});
#line 209
 testRunner.Then("In ENS01011 I should see Manual Journal as below:", ((string)(null)), table18, "Then ");
#line 219
  testRunner.And("I close Winforms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
